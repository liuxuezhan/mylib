// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_MailProtocol.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ST_UpsertMail_Req_PB struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Removed   bool   `protobuf:"varint,2,opt,name=removed" json:"removed,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ST_UpsertMail_Req_PB) Reset()                    { *m = ST_UpsertMail_Req_PB{} }
func (m *ST_UpsertMail_Req_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UpsertMail_Req_PB) ProtoMessage()               {}
func (*ST_UpsertMail_Req_PB) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *ST_UpsertMail_Req_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_UpsertMail_Req_PB) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func (m *ST_UpsertMail_Req_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_UpsertMail_Req_PB) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ST_UpsertMail_Respon_PB struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *ST_UpsertMail_Respon_PB) Reset()                    { *m = ST_UpsertMail_Respon_PB{} }
func (m *ST_UpsertMail_Respon_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UpsertMail_Respon_PB) ProtoMessage()               {}
func (*ST_UpsertMail_Respon_PB) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *ST_UpsertMail_Respon_PB) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type ST_GetMail_Req_PB struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ST_GetMail_Req_PB) Reset()                    { *m = ST_GetMail_Req_PB{} }
func (m *ST_GetMail_Req_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GetMail_Req_PB) ProtoMessage()               {}
func (*ST_GetMail_Req_PB) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *ST_GetMail_Req_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ST_GetMail_Respon_PB struct {
	Result int32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ST_GetMail_Respon_PB) Reset()                    { *m = ST_GetMail_Respon_PB{} }
func (m *ST_GetMail_Respon_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GetMail_Respon_PB) ProtoMessage()               {}
func (*ST_GetMail_Respon_PB) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *ST_GetMail_Respon_PB) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *ST_GetMail_Respon_PB) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ST_UpsertMail_Req_PB)(nil), "proto_micro.ST_UpsertMail_Req_PB")
	proto.RegisterType((*ST_UpsertMail_Respon_PB)(nil), "proto_micro.ST_UpsertMail_Respon_PB")
	proto.RegisterType((*ST_GetMail_Req_PB)(nil), "proto_micro.ST_GetMail_Req_PB")
	proto.RegisterType((*ST_GetMail_Respon_PB)(nil), "proto_micro.ST_GetMail_Respon_PB")
}

func init() { proto.RegisterFile("MG_MailProtocol.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf5, 0x75, 0x8f, 0xf7,
	0x4d, 0xcc, 0xcc, 0x09, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x2b, 0x00, 0x31, 0x84,
	0xb8, 0xc1, 0x54, 0x7c, 0x6e, 0x66, 0x72, 0x51, 0xbe, 0x52, 0x11, 0x97, 0x48, 0x70, 0x48, 0x7c,
	0x68, 0x41, 0x71, 0x6a, 0x51, 0x09, 0x48, 0x6d, 0x7c, 0x50, 0x6a, 0x61, 0x7c, 0x80, 0x93, 0x10,
	0x1f, 0x17, 0x53, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4b, 0x10, 0x53, 0x66, 0x8a, 0x90,
	0x04, 0x17, 0x7b, 0x51, 0x6a, 0x6e, 0x7e, 0x59, 0x6a, 0x8a, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x47,
	0x10, 0x8c, 0x2b, 0x24, 0xc3, 0xc5, 0x59, 0x92, 0x99, 0x9b, 0x5a, 0x5c, 0x92, 0x98, 0x5b, 0x20,
	0xc1, 0x0c, 0xd6, 0x80, 0x10, 0x10, 0x12, 0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x51,
	0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x95, 0x0c, 0xb9, 0xc4, 0xd1, 0xed, 0x2c, 0x2e, 0xc8, 0xcf,
	0x03, 0x59, 0x2b, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a, 0x53, 0x02, 0xb6, 0x9a, 0x35, 0x08,
	0xca, 0x53, 0x52, 0xe6, 0x12, 0x0c, 0x0e, 0x89, 0x77, 0x4f, 0xc5, 0xe7, 0x46, 0x25, 0x27, 0xb0,
	0x5f, 0x10, 0x8a, 0x08, 0x18, 0x0a, 0x77, 0x1b, 0x13, 0xc2, 0x6d, 0x4e, 0xac, 0x1e, 0xcc, 0x0d,
	0x8c, 0x0c, 0x49, 0x6c, 0xe0, 0x30, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x2f, 0x4e,
	0x3a, 0x43, 0x01, 0x00, 0x00,
}
