// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_DBProtocol.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_User struct {
	AccountId      uint64                `protobuf:"varint,1,opt,name=AccountId" json:"AccountId,omitempty"`
	GoogleName     string                `protobuf:"bytes,2,opt,name=GoogleName" json:"GoogleName,omitempty"`
	FaceBookName   string                `protobuf:"bytes,3,opt,name=FaceBookName" json:"FaceBookName,omitempty"`
	TwitterName    string                `protobuf:"bytes,4,opt,name=TwitterName" json:"TwitterName,omitempty"`
	DeviceId       string                `protobuf:"bytes,5,opt,name=DeviceId" json:"DeviceId,omitempty"`
	GameCenterName string                `protobuf:"bytes,6,opt,name=GameCenterName" json:"GameCenterName,omitempty"`
	CmderName      string                `protobuf:"bytes,7,opt,name=CmderName" json:"CmderName,omitempty"`
	HeaderUrl      string                `protobuf:"bytes,8,opt,name=HeaderUrl" json:"HeaderUrl,omitempty"`
	Player         map[uint64]*PB_Player `protobuf:"bytes,9,rep,name=player" json:"player,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CurPlayerID    uint64                `protobuf:"varint,10,opt,name=CurPlayerID" json:"CurPlayerID,omitempty"`
}

func (m *PB_User) Reset()                    { *m = PB_User{} }
func (m *PB_User) String() string            { return proto.CompactTextString(m) }
func (*PB_User) ProtoMessage()               {}
func (*PB_User) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PB_User) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *PB_User) GetGoogleName() string {
	if m != nil {
		return m.GoogleName
	}
	return ""
}

func (m *PB_User) GetFaceBookName() string {
	if m != nil {
		return m.FaceBookName
	}
	return ""
}

func (m *PB_User) GetTwitterName() string {
	if m != nil {
		return m.TwitterName
	}
	return ""
}

func (m *PB_User) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *PB_User) GetGameCenterName() string {
	if m != nil {
		return m.GameCenterName
	}
	return ""
}

func (m *PB_User) GetCmderName() string {
	if m != nil {
		return m.CmderName
	}
	return ""
}

func (m *PB_User) GetHeaderUrl() string {
	if m != nil {
		return m.HeaderUrl
	}
	return ""
}

func (m *PB_User) GetPlayer() map[uint64]*PB_Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *PB_User) GetCurPlayerID() uint64 {
	if m != nil {
		return m.CurPlayerID
	}
	return 0
}

type PB_Player struct {
	ID            uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	AccountId     uint64 `protobuf:"varint,2,opt,name=AccountId" json:"AccountId,omitempty"`
	HeaderId      uint32 `protobuf:"varint,3,opt,name=HeaderId" json:"HeaderId,omitempty"`
	AvatarBoxID   uint32 `protobuf:"varint,4,opt,name=AvatarBoxID" json:"AvatarBoxID,omitempty"`
	MainCityLevel uint32 `protobuf:"varint,5,opt,name=MainCityLevel" json:"MainCityLevel,omitempty"`
	CreateTime    uint32 `protobuf:"varint,6,opt,name=CreateTime" json:"CreateTime,omitempty"`
	LastLoginTime uint32 `protobuf:"varint,7,opt,name=LastLoginTime" json:"LastLoginTime,omitempty"`
	Sid           uint32 `protobuf:"varint,8,opt,name=Sid" json:"Sid,omitempty"`
	CurrentSid    uint32 `protobuf:"varint,9,opt,name=CurrentSid" json:"CurrentSid,omitempty"`
	Name          string `protobuf:"bytes,10,opt,name=Name" json:"Name,omitempty"`
}

func (m *PB_Player) Reset()                    { *m = PB_Player{} }
func (m *PB_Player) String() string            { return proto.CompactTextString(m) }
func (*PB_Player) ProtoMessage()               {}
func (*PB_Player) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *PB_Player) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PB_Player) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *PB_Player) GetHeaderId() uint32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

func (m *PB_Player) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *PB_Player) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *PB_Player) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *PB_Player) GetLastLoginTime() uint32 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *PB_Player) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *PB_Player) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

func (m *PB_Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PB_ServerList struct {
	ID             uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=Status" json:"Status,omitempty"`
	ServerInitTime uint64 `protobuf:"varint,3,opt,name=ServerInitTime" json:"ServerInitTime,omitempty"`
	WhiteList      uint32 `protobuf:"varint,4,opt,name=WhiteList" json:"WhiteList,omitempty"`
	Online         uint32 `protobuf:"varint,5,opt,name=Online" json:"Online,omitempty"`
	SName          string `protobuf:"bytes,6,opt,name=SName" json:"SName,omitempty"`
	SAddr          string `protobuf:"bytes,7,opt,name=SAddr" json:"SAddr,omitempty"`
	CanMoveIn      string `protobuf:"bytes,8,opt,name=CanMoveIn" json:"CanMoveIn,omitempty"`
}

func (m *PB_ServerList) Reset()                    { *m = PB_ServerList{} }
func (m *PB_ServerList) String() string            { return proto.CompactTextString(m) }
func (*PB_ServerList) ProtoMessage()               {}
func (*PB_ServerList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *PB_ServerList) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PB_ServerList) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PB_ServerList) GetServerInitTime() uint64 {
	if m != nil {
		return m.ServerInitTime
	}
	return 0
}

func (m *PB_ServerList) GetWhiteList() uint32 {
	if m != nil {
		return m.WhiteList
	}
	return 0
}

func (m *PB_ServerList) GetOnline() uint32 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *PB_ServerList) GetSName() string {
	if m != nil {
		return m.SName
	}
	return ""
}

func (m *PB_ServerList) GetSAddr() string {
	if m != nil {
		return m.SAddr
	}
	return ""
}

func (m *PB_ServerList) GetCanMoveIn() string {
	if m != nil {
		return m.CanMoveIn
	}
	return ""
}

func init() {
	proto.RegisterType((*PB_User)(nil), "proto_micro.PB_User")
	proto.RegisterType((*PB_Player)(nil), "proto_micro.PB_Player")
	proto.RegisterType((*PB_ServerList)(nil), "proto_micro.PB_ServerList")
}

func init() { proto.RegisterFile("MG_DBProtocol.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb1, 0xdd, 0xa4, 0xcd, 0x04, 0x57, 0x68, 0x41, 0x95, 0x15, 0x21, 0x14, 0x45, 0x08,
	0xe5, 0x80, 0x72, 0x28, 0x97, 0x8a, 0x5b, 0x1c, 0x43, 0x6a, 0x29, 0x81, 0xe0, 0xb4, 0xe2, 0x18,
	0x2d, 0xf6, 0xa8, 0xac, 0xea, 0x78, 0xab, 0xcd, 0xc6, 0x90, 0x1b, 0xaf, 0xc3, 0x3b, 0xf0, 0x2e,
	0xbc, 0x0a, 0xda, 0xf1, 0xd6, 0x71, 0xc2, 0x29, 0x3b, 0xdf, 0xfc, 0x3b, 0xf1, 0xfe, 0xff, 0xc0,
	0xf3, 0xf9, 0x74, 0x15, 0x85, 0x0b, 0x25, 0xb5, 0x4c, 0x65, 0x3e, 0x7a, 0x30, 0x07, 0xd6, 0xa5,
	0x9f, 0xd5, 0x5a, 0xa4, 0x4a, 0x0e, 0xfe, 0x78, 0x70, 0xba, 0x08, 0x57, 0xb7, 0x1b, 0x54, 0xec,
	0x25, 0x74, 0xc6, 0x69, 0x2a, 0xb7, 0x85, 0x8e, 0xb3, 0xc0, 0xe9, 0x3b, 0xc3, 0x93, 0x64, 0x0f,
	0xd8, 0x2b, 0x80, 0xa9, 0x94, 0x77, 0x39, 0x7e, 0xe2, 0x6b, 0x0c, 0xdc, 0xbe, 0x33, 0xec, 0x24,
	0x0d, 0xc2, 0x06, 0xf0, 0xf4, 0x23, 0x4f, 0x31, 0x94, 0xf2, 0x9e, 0x14, 0x1e, 0x29, 0x0e, 0x18,
	0xeb, 0x43, 0xf7, 0xe6, 0x87, 0xd0, 0x1a, 0x15, 0x49, 0x4e, 0x48, 0xd2, 0x44, 0xac, 0x07, 0x67,
	0x11, 0x96, 0x22, 0xc5, 0x38, 0x0b, 0x5a, 0xd4, 0xae, 0x6b, 0xf6, 0x06, 0xce, 0xa7, 0x7c, 0x8d,
	0x13, 0x2c, 0x1e, 0x07, 0xb4, 0x49, 0x71, 0x44, 0xcd, 0x3b, 0x26, 0xeb, 0xcc, 0x4a, 0x4e, 0x49,
	0xb2, 0x07, 0xa6, 0x7b, 0x8d, 0x3c, 0x43, 0x75, 0xab, 0xf2, 0xe0, 0xac, 0xea, 0xd6, 0x80, 0x5d,
	0x41, 0xfb, 0x21, 0xe7, 0x3b, 0x54, 0x41, 0xa7, 0xef, 0x0d, 0xbb, 0x97, 0xfd, 0x51, 0xc3, 0xad,
	0x91, 0x75, 0x6a, 0xb4, 0x20, 0xc9, 0x87, 0x42, 0xab, 0x5d, 0x62, 0xf5, 0xe6, 0x6d, 0x93, 0xad,
	0xaa, 0x3a, 0x71, 0x14, 0x00, 0xf9, 0xd7, 0x44, 0xbd, 0x2f, 0xd0, 0x6d, 0x5c, 0x64, 0xcf, 0xc0,
	0xbb, 0xc7, 0x9d, 0x35, 0xda, 0x1c, 0xd9, 0x5b, 0x68, 0x95, 0x3c, 0xdf, 0x56, 0xee, 0x76, 0x2f,
	0x2f, 0x8e, 0xff, 0xbb, 0xba, 0x9d, 0x54, 0xa2, 0xf7, 0xee, 0x95, 0x33, 0xf8, 0xed, 0x42, 0xa7,
	0x6e, 0xb0, 0x73, 0x70, 0xe3, 0xc8, 0x0e, 0x74, 0xe3, 0xe8, 0x30, 0x50, 0xf7, 0x38, 0xd0, 0x1e,
	0x9c, 0x55, 0xef, 0x8e, 0x33, 0x0a, 0xcb, 0x4f, 0xea, 0xda, 0x3c, 0x66, 0x5c, 0x72, 0xcd, 0x55,
	0x28, 0x7f, 0xc6, 0x11, 0x05, 0xe5, 0x27, 0x4d, 0xc4, 0x5e, 0x83, 0x3f, 0xe7, 0xa2, 0x98, 0x08,
	0xbd, 0x9b, 0x61, 0x89, 0x39, 0xa5, 0xe5, 0x27, 0x87, 0xd0, 0x2c, 0xcd, 0x44, 0x21, 0xd7, 0x78,
	0x23, 0x6c, 0x5c, 0x7e, 0xd2, 0x20, 0x66, 0xca, 0x8c, 0x6f, 0xf4, 0x4c, 0xde, 0x89, 0x82, 0x24,
	0xa7, 0xd5, 0x94, 0x03, 0x68, 0x9c, 0x5a, 0x8a, 0x8c, 0xc2, 0xf2, 0x13, 0x73, 0xa4, 0xb9, 0x5b,
	0xa5, 0xb0, 0xd0, 0xa6, 0xd1, 0xb1, 0x73, 0x6b, 0xc2, 0x18, 0x9c, 0x50, 0xfa, 0x40, 0xf9, 0xd2,
	0x79, 0xf0, 0xd7, 0x01, 0x7f, 0x11, 0xae, 0x96, 0xa8, 0x4a, 0x54, 0x33, 0xb1, 0xd1, 0xff, 0xf9,
	0x75, 0x01, 0xed, 0xa5, 0xe6, 0x7a, 0xbb, 0x21, 0xb3, 0x5a, 0x89, 0xad, 0xcc, 0xe2, 0x55, 0xb7,
	0xe2, 0x42, 0x68, 0xfa, 0x4c, 0x8f, 0xee, 0x1c, 0x51, 0xe3, 0xf7, 0xd7, 0xef, 0x42, 0xa3, 0x19,
	0x6e, 0x3d, 0xdb, 0x03, 0x33, 0xfd, 0x73, 0x91, 0x8b, 0x02, 0xad, 0x55, 0xb6, 0x62, 0x2f, 0xa0,
	0xb5, 0x6c, 0x6c, 0x73, 0x55, 0x10, 0x1d, 0x67, 0x99, 0xb2, 0x0b, 0x5c, 0x15, 0xb4, 0xda, 0xbc,
	0x98, 0xcb, 0x12, 0xe3, 0xe2, 0x71, 0x79, 0x6b, 0x10, 0xb6, 0xae, 0xbd, 0x5f, 0xce, 0x93, 0x6f,
	0x6d, 0x5a, 0x9b, 0x77, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x7b, 0xa3, 0x69, 0xfe, 0x03,
	0x00, 0x00,
}
