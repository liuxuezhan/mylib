// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_GameDefine.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VectorType int32

const (
	VectorType_VT_CASH                    VectorType = 0
	VectorType_VT_ITEM                    VectorType = 2
	VectorType_VT_BUILDING                VectorType = 3
	VectorType_VT_UNIT                    VectorType = 4
	VectorType_VT_WORLD_ENTRY             VectorType = 5
	VectorType_VT_RESEARCH                VectorType = 6
	VectorType_VT_EXP                     VectorType = 7
	VectorType_VT_ACHIEVEMENT             VectorType = 8
	VectorType_VT_DROP                    VectorType = 9
	VectorType_VT_TELENT                  VectorType = 10
	VectorType_VT_STATUE_MATERIAL         VectorType = 11
	VectorType_VT_HERO                    VectorType = 12
	VectorType_VT_BUFF                    VectorType = 13
	VectorType_VT_RES_BOX                 VectorType = 14
	VectorType_VT_LEAGUE                  VectorType = 15
	VectorType_VT_COMMANDER_ITEM          VectorType = 16
	VectorType_VT_WALL                    VectorType = 17
	VectorType_VT_TRAP                    VectorType = 18
	VectorType_VT_BOX                     VectorType = 19
	VectorType_VT_BUBBLE                  VectorType = 20
	VectorType_VT_BUILDING_ACTION_COUNT   VectorType = 10000
	VectorType_VT_PRODUCTION_ACTION_COUNT VectorType = 10001
	VectorType_VT_WORLDMAP_ACTION_COUNT   VectorType = 10002
	VectorType_VT_RESEARCH_ACTION_COUNT   VectorType = 10003
	VectorType_VT_BUILDING_COUNT          VectorType = 10004
)

var VectorType_name = map[int32]string{
	0:     "VT_CASH",
	2:     "VT_ITEM",
	3:     "VT_BUILDING",
	4:     "VT_UNIT",
	5:     "VT_WORLD_ENTRY",
	6:     "VT_RESEARCH",
	7:     "VT_EXP",
	8:     "VT_ACHIEVEMENT",
	9:     "VT_DROP",
	10:    "VT_TELENT",
	11:    "VT_STATUE_MATERIAL",
	12:    "VT_HERO",
	13:    "VT_BUFF",
	14:    "VT_RES_BOX",
	15:    "VT_LEAGUE",
	16:    "VT_COMMANDER_ITEM",
	17:    "VT_WALL",
	18:    "VT_TRAP",
	19:    "VT_BOX",
	20:    "VT_BUBBLE",
	10000: "VT_BUILDING_ACTION_COUNT",
	10001: "VT_PRODUCTION_ACTION_COUNT",
	10002: "VT_WORLDMAP_ACTION_COUNT",
	10003: "VT_RESEARCH_ACTION_COUNT",
	10004: "VT_BUILDING_COUNT",
}
var VectorType_value = map[string]int32{
	"VT_CASH":                    0,
	"VT_ITEM":                    2,
	"VT_BUILDING":                3,
	"VT_UNIT":                    4,
	"VT_WORLD_ENTRY":             5,
	"VT_RESEARCH":                6,
	"VT_EXP":                     7,
	"VT_ACHIEVEMENT":             8,
	"VT_DROP":                    9,
	"VT_TELENT":                  10,
	"VT_STATUE_MATERIAL":         11,
	"VT_HERO":                    12,
	"VT_BUFF":                    13,
	"VT_RES_BOX":                 14,
	"VT_LEAGUE":                  15,
	"VT_COMMANDER_ITEM":          16,
	"VT_WALL":                    17,
	"VT_TRAP":                    18,
	"VT_BOX":                     19,
	"VT_BUBBLE":                  20,
	"VT_BUILDING_ACTION_COUNT":   10000,
	"VT_PRODUCTION_ACTION_COUNT": 10001,
	"VT_WORLDMAP_ACTION_COUNT":   10002,
	"VT_RESEARCH_ACTION_COUNT":   10003,
	"VT_BUILDING_COUNT":          10004,
}

func (x VectorType) String() string {
	return proto.EnumName(VectorType_name, int32(x))
}
func (VectorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type CashType int32

const (
	CashType_CASH_TYPE_1          CashType = 0
	CashType_CASH_TYPE_2          CashType = 2
	CashType_CASH_TYPE_3          CashType = 3
	CashType_CASH_TYPE_4          CashType = 4
	CashType_CASH_TYPE_5          CashType = 5
	CashType_CASH_TYPE_6          CashType = 6
	CashType_CASH_TYPE_STA        CashType = 7
	CashType_CASH_TYPE_ERG        CashType = 8
	CashType_CASH_TYPE_100        CashType = 100
	CashType_CASH_TYPE_EXPEDITION CashType = 9
	// 联盟积分
	CashType_CASH_TYPE_105 CashType = 105
)

var CashType_name = map[int32]string{
	0:   "CASH_TYPE_1",
	2:   "CASH_TYPE_2",
	3:   "CASH_TYPE_3",
	4:   "CASH_TYPE_4",
	5:   "CASH_TYPE_5",
	6:   "CASH_TYPE_6",
	7:   "CASH_TYPE_STA",
	8:   "CASH_TYPE_ERG",
	100: "CASH_TYPE_100",
	9:   "CASH_TYPE_EXPEDITION",
	105: "CASH_TYPE_105",
}
var CashType_value = map[string]int32{
	"CASH_TYPE_1":          0,
	"CASH_TYPE_2":          2,
	"CASH_TYPE_3":          3,
	"CASH_TYPE_4":          4,
	"CASH_TYPE_5":          5,
	"CASH_TYPE_6":          6,
	"CASH_TYPE_STA":        7,
	"CASH_TYPE_ERG":        8,
	"CASH_TYPE_100":        100,
	"CASH_TYPE_EXPEDITION": 9,
	"CASH_TYPE_105":        105,
}

func (x CashType) String() string {
	return proto.EnumName(CashType_name, int32(x))
}
func (CashType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

type ExpType int32

const (
	ExpType_ET_LAIRD ExpType = 0
	ExpType_ET_HERO  ExpType = 2
	ExpType_ET_VIP   ExpType = 3
)

var ExpType_name = map[int32]string{
	0: "ET_LAIRD",
	2: "ET_HERO",
	3: "ET_VIP",
}
var ExpType_value = map[string]int32{
	"ET_LAIRD": 0,
	"ET_HERO":  2,
	"ET_VIP":   3,
}

func (x ExpType) String() string {
	return proto.EnumName(ExpType_name, int32(x))
}
func (ExpType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

type MapStageType int32

const (
	MapStageType_MST_MARCH      MapStageType = 0
	MapStageType_MST_WORKING    MapStageType = 2
	MapStageType_MST_BACK       MapStageType = 3
	MapStageType_MST_WAITMASS   MapStageType = 4
	MapStageType_MST_WAITMARCH  MapStageType = 5
	MapStageType_MST_WAITBATTLE MapStageType = 6
)

var MapStageType_name = map[int32]string{
	0: "MST_MARCH",
	2: "MST_WORKING",
	3: "MST_BACK",
	4: "MST_WAITMASS",
	5: "MST_WAITMARCH",
	6: "MST_WAITBATTLE",
}
var MapStageType_value = map[string]int32{
	"MST_MARCH":      0,
	"MST_WORKING":    2,
	"MST_BACK":       3,
	"MST_WAITMASS":   4,
	"MST_WAITMARCH":  5,
	"MST_WAITBATTLE": 6,
}

func (x MapStageType) String() string {
	return proto.EnumName(MapStageType_name, int32(x))
}
func (MapStageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

type ActionType int32

const (
	// 建造行为
	ActionType_AT_BUILD_BEGIN ActionType = 0
	ActionType_AT_BUILD_EMPTY ActionType = 1
	// 建筑升级
	ActionType_AT_BUILD_LEVELUP  ActionType = 2
	ActionType_AT_BUILD_ACTIVATE ActionType = 3
	ActionType_AT_BUILD_END      ActionType = 100
	ActionType_AT_DURABLE        ActionType = 101
	// 生产行为
	ActionType_AT_PRODUCTION_BEGIN ActionType = 200
	// 训练士兵
	ActionType_AT_PRODUCTION_UNIT ActionType = 201
	ActionType_AT_PRODUCTION_CURE ActionType = 203
	// 制造陷阱
	ActionType_AT_PRODUCTION_PITFALL ActionType = 204
	// 制造雕像
	ActionType_AT_PRODUCTION_STATUE ActionType = 205
	// 地块解锁
	ActionType_AT_PRODUCTION_MAINCITY_EVENT ActionType = 206
	// 联盟宝箱
	ActionType_AT_PRODUCTION_LEAGUE_BOX ActionType = 207
	// 兵种升级
	ActionType_AT_PRODUCTION_LEVELUP ActionType = 208
	// 派遣任务
	ActionType_AT_PRODUCTION_DISPATCH_TASK ActionType = 209
	// 联盟任务
	ActionType_AT_PRODUCTION_LEAGUE_TASK ActionType = 210
	ActionType_AT_PRODUCTION_END         ActionType = 300
	// 非占用生产行为
	ActionType_AT_PRODUCTION_RESOURCE         ActionType = 350
	ActionType_AT_PRODUCTION_COLLECT_RESOURCE ActionType = 351
	ActionType_AT_PRODUCTION_HOSPITAL         ActionType = 352
	ActionType_AT_PRODUCTION_CITYINFO         ActionType = 353
	ActionType_AT_PRODUCTION_PRISON           ActionType = 354
	ActionType_AT_PRODUCTION_RULING           ActionType = 355
	ActionType_AT_PRODUCTION_RANKLIST         ActionType = 356
	ActionType_AT_PRODUCTION_BLACK_MARKET     ActionType = 357
	// 大地图行为 占用大地图行军队列
	ActionType_AT_WORLDMAP_BEGIN       ActionType = 400
	ActionType_AT_WORLDMAP_BESTATIONED ActionType = 401
	ActionType_AT_WORLDMAP_ATTCK       ActionType = 402
	ActionType_AT_WORLDMAP_COLLECT     ActionType = 403
	ActionType_AT_WORLDMAP_SPYINTO     ActionType = 404
	ActionType_AT_WORLDMAP_GARRISON    ActionType = 405
	ActionType_AT_WORLDMAP_ENTERCITY   ActionType = 406
	ActionType_AT_WORLDMAP_MASS        ActionType = 407
	ActionType_AT_WORLDMAP_JOINMASS    ActionType = 408
	ActionType_AT_WORLDMAP_TRANSPORT   ActionType = 409
	ActionType_AT_WORLDMAP_EXPLORE     ActionType = 410
	ActionType_AT_WORLDMAP_HERO_HOLD   ActionType = 411
	// 存储资源
	ActionType_AT_WORLDMAP_IN ActionType = 413
	// 取回资源
	ActionType_AT_WORLDMAP_OUT      ActionType = 414
	ActionType_AT_WORLDMAP_MACATTCK ActionType = 415
	ActionType_AT_WORLDMAP_END      ActionType = 499
	// 大地图行为 不占用大地图行军队列
	ActionType_AT_WORLDMAP_DETAIL                    ActionType = 450
	ActionType_AT_WORLDMAP_MOVEMAINCITY              ActionType = 452
	ActionType_AT_WORLDMAP_LEAGUEFLAG                ActionType = 453
	ActionType_AT_WORLDMAP_PICKBOX                   ActionType = 454
	ActionType_AT_WORLDMAP_PLAYERINFO                ActionType = 455
	ActionType_AT_WORLDMAP_MOVECITY_COMFIRM          ActionType = 456
	ActionType_AT_WORLDMAP_MOVECITY_CANCEL           ActionType = 457
	ActionType_AT_WORLDMAP_LEAGUEMANOR               ActionType = 458
	ActionType_AT_WORLDMAP_ACCELERATION              ActionType = 459
	ActionType_AT_WORLDMAP_BUILDLOCALBUILD_COMFIRE   ActionType = 460
	ActionType_AT_WORLDMAP_BUILDLOCALBUILD_CANCLE    ActionType = 461
	ActionType_AT_WORLDMAP_SPY                       ActionType = 462
	ActionType_AT_WORLDMAP_ADDBUF                    ActionType = 463
	ActionType_AT_WORLDMAP_CHECK_MY_FORT             ActionType = 464
	ActionType_AT_WORLDMAP_CHECK_MY_MINE             ActionType = 465
	ActionType_AT_WORLDMAP_LEAGUE_CITY_WAREHOUSE     ActionType = 466
	ActionType_AT_WORLDMAP_LEAGUE_CITY_DEFENCE_FORCE ActionType = 467
	ActionType_AT_WORLDMAP_LEAGUE_CITY_REINFORCE     ActionType = 468
	ActionType_AT_WORLDMAP_LEAGUE_MOVEMAINCITY       ActionType = 469
	// 王战相关
	ActionType_AT_WORLDMAP_KINGWAR_INFO      ActionType = 470
	ActionType_AT_WORLDMAP_KINGWAR_ATTCK     ActionType = 471
	ActionType_AT_WORLDMAP_KINGWAR_SPYINTO   ActionType = 472
	ActionType_AT_WORLDMAP_KINGWAR_MANAGER   ActionType = 473
	ActionType_AT_WORLDMAP_KINGWAR_FORCEINFO ActionType = 474
	// 跨服
	ActionType_AT_WORLDMAP_MOVE_SERVER ActionType = 480
	// 主城装扮
	ActionType_AT_MAINCITY_SKIN ActionType = 490
	// 科技研究行为
	ActionType_AT_RESEARCH_BEGIN ActionType = 500
	// 科技研究
	ActionType_AT_RESEARCH_START ActionType = 501
	ActionType_AT_RESEARCH_END   ActionType = 599
	// 装备车间行为
	ActionType_AT_EQUIP_FACTORY_BEGIN ActionType = 600
	ActionType_AT_EQUIP_FACTORY_MAKE  ActionType = 601
	ActionType_AT_EQUIP_FACTORY_END   ActionType = 699
	// 联盟领地相关行为
	ActionType_AT_LEAGUE_TERRITORY_LEAGUE_INFO              ActionType = 700
	ActionType_AT_LEAGUE_TERRITORY_FORTRESS_INFO            ActionType = 701
	ActionType_AT_LEAGUE_TERRITORY_FORTRESS_GARRISON        ActionType = 702
	ActionType_AT_LEAGUE_TERRITORY_WAREHOUSE_IN             ActionType = 703
	ActionType_AT_LEAGUE_TERRITORY_WAREHOUSE_OUT            ActionType = 704
	ActionType_AT_LEAGUE_TERRITORY_MINE_COLLECT             ActionType = 705
	ActionType_AT_LEAGUE_TERRITORY_FORTRESS_GARRISON_DIRECT ActionType = 706
	// MISC行为
	ActionType_AT_MISC_BEGIN                  ActionType = 1000
	ActionType_AT_MISC_BUILD_CANCEL           ActionType = 1001
	ActionType_AT_MISC_BUILD_DESTROY          ActionType = 1002
	ActionType_AT_MISC_SPEEDUP_CASH           ActionType = 1003
	ActionType_AT_MISC_SPEEDUP_ITEM           ActionType = 1004
	ActionType_AT_MISC_RECALL                 ActionType = 1005
	ActionType_AT_MISC_PRODUCTION_UNIT_CANCEL ActionType = 1006
	ActionType_AT_MISC_RESEARCH_RESET         ActionType = 1007
	ActionType_AT_MISC_WORLDMAP_BUILD         ActionType = 1008
	// 直接花钱建筑
	ActionType_AT_MISC_BUILD_EMPTY_CASH ActionType = 1009
	// 直接花钱升级建筑
	ActionType_AT_MISC_BUILD_LEVELUP_CASH ActionType = 1010
	// 请求帮助
	ActionType_AT_MISC_REQUEST_HELP ActionType = 1011
	// 全部帮助
	ActionType_AT_MISC_HELPALL ActionType = 1012
	// 取消集结
	ActionType_AT_MISC_CANCEL_MASS ActionType = 1013
	// 派遣英雄
	ActionType_AT_MISC_DISPATCH ActionType = 1014
	// 取消派遣英雄
	ActionType_AT_MISC_CANCEL_DISPATCH ActionType = 1015
	// 英雄事件奖励领取
	ActionType_AT_MISC_HEROEVENT ActionType = 1016
	// 直接花钱造兵
	ActionType_AT_MISC_PRODUCTION_UNIT_CASH ActionType = 1017
	ActionType_AT_MISC_USEITEMONHERO        ActionType = 1018
	ActionType_AT_MISC_SPEEDUP_FREE         ActionType = 1019
	ActionType_AT_MISC_PLAYER_INFO          ActionType = 1020
	ActionType_AT_MISC_MINE_INFO            ActionType = 1021
	ActionType_AT_MISC_FORT_INFO            ActionType = 1022
	ActionType_AT_MISC_IGNORERADAR          ActionType = 1023
	ActionType_AT_MISC_CLEARLEAGUEGIFT      ActionType = 1024
	ActionType_AT_MISC_CURE_CASH            ActionType = 1025
	ActionType_AT_MISC_RESEARCH_CASH        ActionType = 1026
	ActionType_AT_MISC_MOVEBUILDING         ActionType = 1027
	ActionType_AT_MISC_RECEIVEALLRESOURCE   ActionType = 1028
	ActionType_AT_MISC_MULTI_MINE_INFO      ActionType = 1029
	ActionType_AT_MISC_TALENT_LEVELUP       ActionType = 1030
	ActionType_AT_MISC_USE_SKILL            ActionType = 1031
	ActionType_AT_MISC_RESET_TALENT         ActionType = 1032
	ActionType_AT_MISC_TALENT_MAX           ActionType = 1033
	ActionType_AT_MISC_DAILY_AWARD          ActionType = 1034
	ActionType_AT_MISC_RECEIVE_UNITS        ActionType = 1035
	ActionType_AT_MISC_GETSHEREWARD         ActionType = 1036
	ActionType_AT_MISC_ABANDONING_TREATMENT ActionType = 1037
	ActionType_AT_MISC_READRADAR            ActionType = 1038
	ActionType_AT_MISC_HELPSINGLE           ActionType = 1039
	ActionType_AT_MISC_ONLINE_AWARD         ActionType = 1040
	ActionType_AT_MISC_PALACE_INFO          ActionType = 1041
	ActionType_AT_MISC_SHOWPALACE           ActionType = 1042
	ActionType_AT_MISC_SUPPLY               ActionType = 1043
	ActionType_AT_MISC_UPGRADE_UNIT_CASH    ActionType = 1044
	ActionType_AT_MISC_AIRDROP              ActionType = 1045
	ActionType_AT_MISC_TRAP_REMOVE          ActionType = 1046
	ActionType_AT_MISC_PUSH_MAP             ActionType = 1047
	ActionType_AT_MISC_STATUE_ENHANCE       ActionType = 1048
	ActionType_AT_MISC_FACTORY_COMPOSE      ActionType = 1049
	ActionType_AT_MISC_FACTORY_DECOMPOSE    ActionType = 1050
	ActionType_AT_MISC_FACTORY_RECEIVE      ActionType = 1051
	ActionType_AT_MISC_FACTORY_MAKE_CASH    ActionType = 1052
	ActionType_AT_MISC_BUILD_RECYCLING      ActionType = 1053
	ActionType_AT_MISC_BUILD_RECYCLING_LIST ActionType = 1054
	// 英雄驻扎
	ActionType_AT_MISC_HERO_DEFENSE ActionType = 1055
	// 建筑批量移动
	ActionType_AT_MISC_MOVEBUILDING_LIST ActionType = 1056
	// 天赋解锁
	ActionType_AT_MISC_TALENT_UNLOCK ActionType = 1057
	// 修复燃烧值
	ActionType_AT_MISC_MAIN_HP     ActionType = 1058
	ActionType_AT_MISC_CAMP_LEADER ActionType = 1059
	ActionType_AT_MISC_END         ActionType = 1100
)

var ActionType_name = map[int32]string{
	0:    "AT_BUILD_BEGIN",
	1:    "AT_BUILD_EMPTY",
	2:    "AT_BUILD_LEVELUP",
	3:    "AT_BUILD_ACTIVATE",
	100:  "AT_BUILD_END",
	101:  "AT_DURABLE",
	200:  "AT_PRODUCTION_BEGIN",
	201:  "AT_PRODUCTION_UNIT",
	203:  "AT_PRODUCTION_CURE",
	204:  "AT_PRODUCTION_PITFALL",
	205:  "AT_PRODUCTION_STATUE",
	206:  "AT_PRODUCTION_MAINCITY_EVENT",
	207:  "AT_PRODUCTION_LEAGUE_BOX",
	208:  "AT_PRODUCTION_LEVELUP",
	209:  "AT_PRODUCTION_DISPATCH_TASK",
	210:  "AT_PRODUCTION_LEAGUE_TASK",
	300:  "AT_PRODUCTION_END",
	350:  "AT_PRODUCTION_RESOURCE",
	351:  "AT_PRODUCTION_COLLECT_RESOURCE",
	352:  "AT_PRODUCTION_HOSPITAL",
	353:  "AT_PRODUCTION_CITYINFO",
	354:  "AT_PRODUCTION_PRISON",
	355:  "AT_PRODUCTION_RULING",
	356:  "AT_PRODUCTION_RANKLIST",
	357:  "AT_PRODUCTION_BLACK_MARKET",
	400:  "AT_WORLDMAP_BEGIN",
	401:  "AT_WORLDMAP_BESTATIONED",
	402:  "AT_WORLDMAP_ATTCK",
	403:  "AT_WORLDMAP_COLLECT",
	404:  "AT_WORLDMAP_SPYINTO",
	405:  "AT_WORLDMAP_GARRISON",
	406:  "AT_WORLDMAP_ENTERCITY",
	407:  "AT_WORLDMAP_MASS",
	408:  "AT_WORLDMAP_JOINMASS",
	409:  "AT_WORLDMAP_TRANSPORT",
	410:  "AT_WORLDMAP_EXPLORE",
	411:  "AT_WORLDMAP_HERO_HOLD",
	413:  "AT_WORLDMAP_IN",
	414:  "AT_WORLDMAP_OUT",
	415:  "AT_WORLDMAP_MACATTCK",
	499:  "AT_WORLDMAP_END",
	450:  "AT_WORLDMAP_DETAIL",
	452:  "AT_WORLDMAP_MOVEMAINCITY",
	453:  "AT_WORLDMAP_LEAGUEFLAG",
	454:  "AT_WORLDMAP_PICKBOX",
	455:  "AT_WORLDMAP_PLAYERINFO",
	456:  "AT_WORLDMAP_MOVECITY_COMFIRM",
	457:  "AT_WORLDMAP_MOVECITY_CANCEL",
	458:  "AT_WORLDMAP_LEAGUEMANOR",
	459:  "AT_WORLDMAP_ACCELERATION",
	460:  "AT_WORLDMAP_BUILDLOCALBUILD_COMFIRE",
	461:  "AT_WORLDMAP_BUILDLOCALBUILD_CANCLE",
	462:  "AT_WORLDMAP_SPY",
	463:  "AT_WORLDMAP_ADDBUF",
	464:  "AT_WORLDMAP_CHECK_MY_FORT",
	465:  "AT_WORLDMAP_CHECK_MY_MINE",
	466:  "AT_WORLDMAP_LEAGUE_CITY_WAREHOUSE",
	467:  "AT_WORLDMAP_LEAGUE_CITY_DEFENCE_FORCE",
	468:  "AT_WORLDMAP_LEAGUE_CITY_REINFORCE",
	469:  "AT_WORLDMAP_LEAGUE_MOVEMAINCITY",
	470:  "AT_WORLDMAP_KINGWAR_INFO",
	471:  "AT_WORLDMAP_KINGWAR_ATTCK",
	472:  "AT_WORLDMAP_KINGWAR_SPYINTO",
	473:  "AT_WORLDMAP_KINGWAR_MANAGER",
	474:  "AT_WORLDMAP_KINGWAR_FORCEINFO",
	480:  "AT_WORLDMAP_MOVE_SERVER",
	490:  "AT_MAINCITY_SKIN",
	500:  "AT_RESEARCH_BEGIN",
	501:  "AT_RESEARCH_START",
	599:  "AT_RESEARCH_END",
	600:  "AT_EQUIP_FACTORY_BEGIN",
	601:  "AT_EQUIP_FACTORY_MAKE",
	699:  "AT_EQUIP_FACTORY_END",
	700:  "AT_LEAGUE_TERRITORY_LEAGUE_INFO",
	701:  "AT_LEAGUE_TERRITORY_FORTRESS_INFO",
	702:  "AT_LEAGUE_TERRITORY_FORTRESS_GARRISON",
	703:  "AT_LEAGUE_TERRITORY_WAREHOUSE_IN",
	704:  "AT_LEAGUE_TERRITORY_WAREHOUSE_OUT",
	705:  "AT_LEAGUE_TERRITORY_MINE_COLLECT",
	706:  "AT_LEAGUE_TERRITORY_FORTRESS_GARRISON_DIRECT",
	1000: "AT_MISC_BEGIN",
	1001: "AT_MISC_BUILD_CANCEL",
	1002: "AT_MISC_BUILD_DESTROY",
	1003: "AT_MISC_SPEEDUP_CASH",
	1004: "AT_MISC_SPEEDUP_ITEM",
	1005: "AT_MISC_RECALL",
	1006: "AT_MISC_PRODUCTION_UNIT_CANCEL",
	1007: "AT_MISC_RESEARCH_RESET",
	1008: "AT_MISC_WORLDMAP_BUILD",
	1009: "AT_MISC_BUILD_EMPTY_CASH",
	1010: "AT_MISC_BUILD_LEVELUP_CASH",
	1011: "AT_MISC_REQUEST_HELP",
	1012: "AT_MISC_HELPALL",
	1013: "AT_MISC_CANCEL_MASS",
	1014: "AT_MISC_DISPATCH",
	1015: "AT_MISC_CANCEL_DISPATCH",
	1016: "AT_MISC_HEROEVENT",
	1017: "AT_MISC_PRODUCTION_UNIT_CASH",
	1018: "AT_MISC_USEITEMONHERO",
	1019: "AT_MISC_SPEEDUP_FREE",
	1020: "AT_MISC_PLAYER_INFO",
	1021: "AT_MISC_MINE_INFO",
	1022: "AT_MISC_FORT_INFO",
	1023: "AT_MISC_IGNORERADAR",
	1024: "AT_MISC_CLEARLEAGUEGIFT",
	1025: "AT_MISC_CURE_CASH",
	1026: "AT_MISC_RESEARCH_CASH",
	1027: "AT_MISC_MOVEBUILDING",
	1028: "AT_MISC_RECEIVEALLRESOURCE",
	1029: "AT_MISC_MULTI_MINE_INFO",
	1030: "AT_MISC_TALENT_LEVELUP",
	1031: "AT_MISC_USE_SKILL",
	1032: "AT_MISC_RESET_TALENT",
	1033: "AT_MISC_TALENT_MAX",
	1034: "AT_MISC_DAILY_AWARD",
	1035: "AT_MISC_RECEIVE_UNITS",
	1036: "AT_MISC_GETSHEREWARD",
	1037: "AT_MISC_ABANDONING_TREATMENT",
	1038: "AT_MISC_READRADAR",
	1039: "AT_MISC_HELPSINGLE",
	1040: "AT_MISC_ONLINE_AWARD",
	1041: "AT_MISC_PALACE_INFO",
	1042: "AT_MISC_SHOWPALACE",
	1043: "AT_MISC_SUPPLY",
	1044: "AT_MISC_UPGRADE_UNIT_CASH",
	1045: "AT_MISC_AIRDROP",
	1046: "AT_MISC_TRAP_REMOVE",
	1047: "AT_MISC_PUSH_MAP",
	1048: "AT_MISC_STATUE_ENHANCE",
	1049: "AT_MISC_FACTORY_COMPOSE",
	1050: "AT_MISC_FACTORY_DECOMPOSE",
	1051: "AT_MISC_FACTORY_RECEIVE",
	1052: "AT_MISC_FACTORY_MAKE_CASH",
	1053: "AT_MISC_BUILD_RECYCLING",
	1054: "AT_MISC_BUILD_RECYCLING_LIST",
	1055: "AT_MISC_HERO_DEFENSE",
	1056: "AT_MISC_MOVEBUILDING_LIST",
	1057: "AT_MISC_TALENT_UNLOCK",
	1058: "AT_MISC_MAIN_HP",
	1059: "AT_MISC_CAMP_LEADER",
	1100: "AT_MISC_END",
}
var ActionType_value = map[string]int32{
	"AT_BUILD_BEGIN":                               0,
	"AT_BUILD_EMPTY":                               1,
	"AT_BUILD_LEVELUP":                             2,
	"AT_BUILD_ACTIVATE":                            3,
	"AT_BUILD_END":                                 100,
	"AT_DURABLE":                                   101,
	"AT_PRODUCTION_BEGIN":                          200,
	"AT_PRODUCTION_UNIT":                           201,
	"AT_PRODUCTION_CURE":                           203,
	"AT_PRODUCTION_PITFALL":                        204,
	"AT_PRODUCTION_STATUE":                         205,
	"AT_PRODUCTION_MAINCITY_EVENT":                 206,
	"AT_PRODUCTION_LEAGUE_BOX":                     207,
	"AT_PRODUCTION_LEVELUP":                        208,
	"AT_PRODUCTION_DISPATCH_TASK":                  209,
	"AT_PRODUCTION_LEAGUE_TASK":                    210,
	"AT_PRODUCTION_END":                            300,
	"AT_PRODUCTION_RESOURCE":                       350,
	"AT_PRODUCTION_COLLECT_RESOURCE":               351,
	"AT_PRODUCTION_HOSPITAL":                       352,
	"AT_PRODUCTION_CITYINFO":                       353,
	"AT_PRODUCTION_PRISON":                         354,
	"AT_PRODUCTION_RULING":                         355,
	"AT_PRODUCTION_RANKLIST":                       356,
	"AT_PRODUCTION_BLACK_MARKET":                   357,
	"AT_WORLDMAP_BEGIN":                            400,
	"AT_WORLDMAP_BESTATIONED":                      401,
	"AT_WORLDMAP_ATTCK":                            402,
	"AT_WORLDMAP_COLLECT":                          403,
	"AT_WORLDMAP_SPYINTO":                          404,
	"AT_WORLDMAP_GARRISON":                         405,
	"AT_WORLDMAP_ENTERCITY":                        406,
	"AT_WORLDMAP_MASS":                             407,
	"AT_WORLDMAP_JOINMASS":                         408,
	"AT_WORLDMAP_TRANSPORT":                        409,
	"AT_WORLDMAP_EXPLORE":                          410,
	"AT_WORLDMAP_HERO_HOLD":                        411,
	"AT_WORLDMAP_IN":                               413,
	"AT_WORLDMAP_OUT":                              414,
	"AT_WORLDMAP_MACATTCK":                         415,
	"AT_WORLDMAP_END":                              499,
	"AT_WORLDMAP_DETAIL":                           450,
	"AT_WORLDMAP_MOVEMAINCITY":                     452,
	"AT_WORLDMAP_LEAGUEFLAG":                       453,
	"AT_WORLDMAP_PICKBOX":                          454,
	"AT_WORLDMAP_PLAYERINFO":                       455,
	"AT_WORLDMAP_MOVECITY_COMFIRM":                 456,
	"AT_WORLDMAP_MOVECITY_CANCEL":                  457,
	"AT_WORLDMAP_LEAGUEMANOR":                      458,
	"AT_WORLDMAP_ACCELERATION":                     459,
	"AT_WORLDMAP_BUILDLOCALBUILD_COMFIRE":          460,
	"AT_WORLDMAP_BUILDLOCALBUILD_CANCLE":           461,
	"AT_WORLDMAP_SPY":                              462,
	"AT_WORLDMAP_ADDBUF":                           463,
	"AT_WORLDMAP_CHECK_MY_FORT":                    464,
	"AT_WORLDMAP_CHECK_MY_MINE":                    465,
	"AT_WORLDMAP_LEAGUE_CITY_WAREHOUSE":            466,
	"AT_WORLDMAP_LEAGUE_CITY_DEFENCE_FORCE":        467,
	"AT_WORLDMAP_LEAGUE_CITY_REINFORCE":            468,
	"AT_WORLDMAP_LEAGUE_MOVEMAINCITY":              469,
	"AT_WORLDMAP_KINGWAR_INFO":                     470,
	"AT_WORLDMAP_KINGWAR_ATTCK":                    471,
	"AT_WORLDMAP_KINGWAR_SPYINTO":                  472,
	"AT_WORLDMAP_KINGWAR_MANAGER":                  473,
	"AT_WORLDMAP_KINGWAR_FORCEINFO":                474,
	"AT_WORLDMAP_MOVE_SERVER":                      480,
	"AT_MAINCITY_SKIN":                             490,
	"AT_RESEARCH_BEGIN":                            500,
	"AT_RESEARCH_START":                            501,
	"AT_RESEARCH_END":                              599,
	"AT_EQUIP_FACTORY_BEGIN":                       600,
	"AT_EQUIP_FACTORY_MAKE":                        601,
	"AT_EQUIP_FACTORY_END":                         699,
	"AT_LEAGUE_TERRITORY_LEAGUE_INFO":              700,
	"AT_LEAGUE_TERRITORY_FORTRESS_INFO":            701,
	"AT_LEAGUE_TERRITORY_FORTRESS_GARRISON":        702,
	"AT_LEAGUE_TERRITORY_WAREHOUSE_IN":             703,
	"AT_LEAGUE_TERRITORY_WAREHOUSE_OUT":            704,
	"AT_LEAGUE_TERRITORY_MINE_COLLECT":             705,
	"AT_LEAGUE_TERRITORY_FORTRESS_GARRISON_DIRECT": 706,
	"AT_MISC_BEGIN":                                1000,
	"AT_MISC_BUILD_CANCEL":                         1001,
	"AT_MISC_BUILD_DESTROY":                        1002,
	"AT_MISC_SPEEDUP_CASH":                         1003,
	"AT_MISC_SPEEDUP_ITEM":                         1004,
	"AT_MISC_RECALL":                               1005,
	"AT_MISC_PRODUCTION_UNIT_CANCEL":               1006,
	"AT_MISC_RESEARCH_RESET":                       1007,
	"AT_MISC_WORLDMAP_BUILD":                       1008,
	"AT_MISC_BUILD_EMPTY_CASH":                     1009,
	"AT_MISC_BUILD_LEVELUP_CASH":                   1010,
	"AT_MISC_REQUEST_HELP":                         1011,
	"AT_MISC_HELPALL":                              1012,
	"AT_MISC_CANCEL_MASS":                          1013,
	"AT_MISC_DISPATCH":                             1014,
	"AT_MISC_CANCEL_DISPATCH":                      1015,
	"AT_MISC_HEROEVENT":                            1016,
	"AT_MISC_PRODUCTION_UNIT_CASH":                 1017,
	"AT_MISC_USEITEMONHERO":                        1018,
	"AT_MISC_SPEEDUP_FREE":                         1019,
	"AT_MISC_PLAYER_INFO":                          1020,
	"AT_MISC_MINE_INFO":                            1021,
	"AT_MISC_FORT_INFO":                            1022,
	"AT_MISC_IGNORERADAR":                          1023,
	"AT_MISC_CLEARLEAGUEGIFT":                      1024,
	"AT_MISC_CURE_CASH":                            1025,
	"AT_MISC_RESEARCH_CASH":                        1026,
	"AT_MISC_MOVEBUILDING":                         1027,
	"AT_MISC_RECEIVEALLRESOURCE":                   1028,
	"AT_MISC_MULTI_MINE_INFO":                      1029,
	"AT_MISC_TALENT_LEVELUP":                       1030,
	"AT_MISC_USE_SKILL":                            1031,
	"AT_MISC_RESET_TALENT":                         1032,
	"AT_MISC_TALENT_MAX":                           1033,
	"AT_MISC_DAILY_AWARD":                          1034,
	"AT_MISC_RECEIVE_UNITS":                        1035,
	"AT_MISC_GETSHEREWARD":                         1036,
	"AT_MISC_ABANDONING_TREATMENT":                 1037,
	"AT_MISC_READRADAR":                            1038,
	"AT_MISC_HELPSINGLE":                           1039,
	"AT_MISC_ONLINE_AWARD":                         1040,
	"AT_MISC_PALACE_INFO":                          1041,
	"AT_MISC_SHOWPALACE":                           1042,
	"AT_MISC_SUPPLY":                               1043,
	"AT_MISC_UPGRADE_UNIT_CASH":                    1044,
	"AT_MISC_AIRDROP":                              1045,
	"AT_MISC_TRAP_REMOVE":                          1046,
	"AT_MISC_PUSH_MAP":                             1047,
	"AT_MISC_STATUE_ENHANCE":                       1048,
	"AT_MISC_FACTORY_COMPOSE":                      1049,
	"AT_MISC_FACTORY_DECOMPOSE":                    1050,
	"AT_MISC_FACTORY_RECEIVE":                      1051,
	"AT_MISC_FACTORY_MAKE_CASH":                    1052,
	"AT_MISC_BUILD_RECYCLING":                      1053,
	"AT_MISC_BUILD_RECYCLING_LIST":                 1054,
	"AT_MISC_HERO_DEFENSE":                         1055,
	"AT_MISC_MOVEBUILDING_LIST":                    1056,
	"AT_MISC_TALENT_UNLOCK":                        1057,
	"AT_MISC_MAIN_HP":                              1058,
	"AT_MISC_CAMP_LEADER":                          1059,
	"AT_MISC_END":                                  1100,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

type BuildingType int32

const (
	BuildingType_BT_BASE_STATION    BuildingType = 0
	BuildingType_BT_MILITARY        BuildingType = 200
	BuildingType_BT_MINE            BuildingType = 201
	BuildingType_BT_TRAINING_FIELD  BuildingType = 202
	BuildingType_BT_DEFENSE_CENTER  BuildingType = 203
	BuildingType_BT_RESEACH         BuildingType = 204
	BuildingType_BT_STOREHOUSE      BuildingType = 205
	BuildingType_BT_HOSPITAL        BuildingType = 206
	BuildingType_BT_PRISON          BuildingType = 207
	BuildingType_BT_ALTAR           BuildingType = 208
	BuildingType_BT_COMMAND         BuildingType = 209
	BuildingType_BT_MARKET          BuildingType = 210
	BuildingType_BT_LEAGUECENTER    BuildingType = 211
	BuildingType_BT_RADAR           BuildingType = 212
	BuildingType_BT_DIAMONDMINE     BuildingType = 213
	BuildingType_BT_AIRSHIP         BuildingType = 214
	BuildingType_BT_STATUE          BuildingType = 215
	BuildingType_BT_TAVERN          BuildingType = 216
	BuildingType_BT_EmergencyCenter BuildingType = 217
	BuildingType_BT_POWER_STATION   BuildingType = 218
	BuildingType_BT_Accessory       BuildingType = 219
	BuildingType_BT_EQUIP_FACTORY   BuildingType = 220
	BuildingType_BT_ROAD            BuildingType = 221
	BuildingType_BT_DECORATION      BuildingType = 222
	BuildingType_BT_DRAWCARD        BuildingType = 223
	BuildingType_BT_OTHER           BuildingType = 299
)

var BuildingType_name = map[int32]string{
	0:   "BT_BASE_STATION",
	200: "BT_MILITARY",
	201: "BT_MINE",
	202: "BT_TRAINING_FIELD",
	203: "BT_DEFENSE_CENTER",
	204: "BT_RESEACH",
	205: "BT_STOREHOUSE",
	206: "BT_HOSPITAL",
	207: "BT_PRISON",
	208: "BT_ALTAR",
	209: "BT_COMMAND",
	210: "BT_MARKET",
	211: "BT_LEAGUECENTER",
	212: "BT_RADAR",
	213: "BT_DIAMONDMINE",
	214: "BT_AIRSHIP",
	215: "BT_STATUE",
	216: "BT_TAVERN",
	217: "BT_EmergencyCenter",
	218: "BT_POWER_STATION",
	219: "BT_Accessory",
	220: "BT_EQUIP_FACTORY",
	221: "BT_ROAD",
	222: "BT_DECORATION",
	223: "BT_DRAWCARD",
	299: "BT_OTHER",
}
var BuildingType_value = map[string]int32{
	"BT_BASE_STATION":    0,
	"BT_MILITARY":        200,
	"BT_MINE":            201,
	"BT_TRAINING_FIELD":  202,
	"BT_DEFENSE_CENTER":  203,
	"BT_RESEACH":         204,
	"BT_STOREHOUSE":      205,
	"BT_HOSPITAL":        206,
	"BT_PRISON":          207,
	"BT_ALTAR":           208,
	"BT_COMMAND":         209,
	"BT_MARKET":          210,
	"BT_LEAGUECENTER":    211,
	"BT_RADAR":           212,
	"BT_DIAMONDMINE":     213,
	"BT_AIRSHIP":         214,
	"BT_STATUE":          215,
	"BT_TAVERN":          216,
	"BT_EmergencyCenter": 217,
	"BT_POWER_STATION":   218,
	"BT_Accessory":       219,
	"BT_EQUIP_FACTORY":   220,
	"BT_ROAD":            221,
	"BT_DECORATION":      222,
	"BT_DRAWCARD":        223,
	"BT_OTHER":           299,
}

func (x BuildingType) String() string {
	return proto.EnumName(BuildingType_name, int32(x))
}
func (BuildingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

type MailType int32

const (
	MailType_MT_COMMANDER         MailType = 0
	MailType_MT_SYSTEM            MailType = 2
	MailType_MT_UNION             MailType = 3
	MailType_MT_BATTLE            MailType = 4
	MailType_MT_DETECT            MailType = 5
	MailType_MT_MONSTER           MailType = 6
	MailType_MT_COLLECTION        MailType = 7
	MailType_MT_PERSONAL          MailType = 8
	MailType_MT_EARLYWARNING      MailType = 9
	MailType_MT_LEAGUE_TRANSPORT  MailType = 10
	MailType_MT_EVERYONE          MailType = 11
	MailType_MT_LEAGUE_INVITATION MailType = 12
	MailType_MT_LEAGUE_GROUP      MailType = 13
	MailType_MT_MONSTER_EX        MailType = 14
	MailType_MT_ACTIVITY          MailType = 15
	MailType_MT_MONSTER_ATK_CITY  MailType = 16
	MailType_MT_PRIVATE_CHAT      MailType = 100
)

var MailType_name = map[int32]string{
	0:   "MT_COMMANDER",
	2:   "MT_SYSTEM",
	3:   "MT_UNION",
	4:   "MT_BATTLE",
	5:   "MT_DETECT",
	6:   "MT_MONSTER",
	7:   "MT_COLLECTION",
	8:   "MT_PERSONAL",
	9:   "MT_EARLYWARNING",
	10:  "MT_LEAGUE_TRANSPORT",
	11:  "MT_EVERYONE",
	12:  "MT_LEAGUE_INVITATION",
	13:  "MT_LEAGUE_GROUP",
	14:  "MT_MONSTER_EX",
	15:  "MT_ACTIVITY",
	16:  "MT_MONSTER_ATK_CITY",
	100: "MT_PRIVATE_CHAT",
}
var MailType_value = map[string]int32{
	"MT_COMMANDER":         0,
	"MT_SYSTEM":            2,
	"MT_UNION":             3,
	"MT_BATTLE":            4,
	"MT_DETECT":            5,
	"MT_MONSTER":           6,
	"MT_COLLECTION":        7,
	"MT_PERSONAL":          8,
	"MT_EARLYWARNING":      9,
	"MT_LEAGUE_TRANSPORT":  10,
	"MT_EVERYONE":          11,
	"MT_LEAGUE_INVITATION": 12,
	"MT_LEAGUE_GROUP":      13,
	"MT_MONSTER_EX":        14,
	"MT_ACTIVITY":          15,
	"MT_MONSTER_ATK_CITY":  16,
	"MT_PRIVATE_CHAT":      100,
}

func (x MailType) String() string {
	return proto.EnumName(MailType_name, int32(x))
}
func (MailType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

// 世界地图条目类型
type WorldEntryType int32

const (
	WorldEntryType_WET_MAINCITY               WorldEntryType = 0
	WorldEntryType_WET_MINE_START             WorldEntryType = 200
	WorldEntryType_WET_MINE_METAL             WorldEntryType = 201
	WorldEntryType_WET_MINE_CRYSTAL           WorldEntryType = 202
	WorldEntryType_WET_MINE_GAS               WorldEntryType = 203
	WorldEntryType_WET_MINE_DEUTERIUM         WorldEntryType = 204
	WorldEntryType_WET_MINE_COKE              WorldEntryType = 205
	WorldEntryType_WET_MINE_GEM               WorldEntryType = 206
	WorldEntryType_WET_MINE_END               WorldEntryType = 299
	WorldEntryType_WET_WILDMONSTER            WorldEntryType = 300
	WorldEntryType_WET_MUTIWILDMONSTER        WorldEntryType = 301
	WorldEntryType_WET_WILDMONSTEREX          WorldEntryType = 302
	WorldEntryType_WET_SUMMON_MUTIWILDMONSTER WorldEntryType = 303
	WorldEntryType_WET_FORT                   WorldEntryType = 400
	WorldEntryType_WET_CITY                   WorldEntryType = 401
	WorldEntryType_WET_CAPITAL_CITY           WorldEntryType = 402
	WorldEntryType_WET_SMALL_MIRACLE          WorldEntryType = 403
	WorldEntryType_WET_BIG_MIRACLE            WorldEntryType = 404
	// 联盟堡垒
	WorldEntryType_WET_LEAGUE_Center WorldEntryType = 500
	// 联盟仓库
	WorldEntryType_WET_LEAGUE_Cashhouse WorldEntryType = 501
	// 联盟超级矿
	WorldEntryType_WET_LEAGUE_MultiCash WorldEntryType = 502
	WorldEntryType_WET_BESTATIONED      WorldEntryType = 600
	WorldEntryType_WET_WMTROOP          WorldEntryType = 601
	// 机械入侵
	WorldEntryType_WET_UNDERGROUNDPALACE WorldEntryType = 701
	WorldEntryType_WET_SUPPLEBOX         WorldEntryType = 900
)

var WorldEntryType_name = map[int32]string{
	0:   "WET_MAINCITY",
	200: "WET_MINE_START",
	201: "WET_MINE_METAL",
	202: "WET_MINE_CRYSTAL",
	203: "WET_MINE_GAS",
	204: "WET_MINE_DEUTERIUM",
	205: "WET_MINE_COKE",
	206: "WET_MINE_GEM",
	299: "WET_MINE_END",
	300: "WET_WILDMONSTER",
	301: "WET_MUTIWILDMONSTER",
	302: "WET_WILDMONSTEREX",
	303: "WET_SUMMON_MUTIWILDMONSTER",
	400: "WET_FORT",
	401: "WET_CITY",
	402: "WET_CAPITAL_CITY",
	403: "WET_SMALL_MIRACLE",
	404: "WET_BIG_MIRACLE",
	500: "WET_LEAGUE_Center",
	501: "WET_LEAGUE_Cashhouse",
	502: "WET_LEAGUE_MultiCash",
	600: "WET_BESTATIONED",
	601: "WET_WMTROOP",
	701: "WET_UNDERGROUNDPALACE",
	900: "WET_SUPPLEBOX",
}
var WorldEntryType_value = map[string]int32{
	"WET_MAINCITY":               0,
	"WET_MINE_START":             200,
	"WET_MINE_METAL":             201,
	"WET_MINE_CRYSTAL":           202,
	"WET_MINE_GAS":               203,
	"WET_MINE_DEUTERIUM":         204,
	"WET_MINE_COKE":              205,
	"WET_MINE_GEM":               206,
	"WET_MINE_END":               299,
	"WET_WILDMONSTER":            300,
	"WET_MUTIWILDMONSTER":        301,
	"WET_WILDMONSTEREX":          302,
	"WET_SUMMON_MUTIWILDMONSTER": 303,
	"WET_FORT":                   400,
	"WET_CITY":                   401,
	"WET_CAPITAL_CITY":           402,
	"WET_SMALL_MIRACLE":          403,
	"WET_BIG_MIRACLE":            404,
	"WET_LEAGUE_Center":          500,
	"WET_LEAGUE_Cashhouse":       501,
	"WET_LEAGUE_MultiCash":       502,
	"WET_BESTATIONED":            600,
	"WET_WMTROOP":                601,
	"WET_UNDERGROUNDPALACE":      701,
	"WET_SUPPLEBOX":              900,
}

func (x WorldEntryType) String() string {
	return proto.EnumName(WorldEntryType_name, int32(x))
}
func (WorldEntryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

type UnitType int32

const (
	UnitType_UT_SPECIAL_WALL     UnitType = 0
	UnitType_UT_SPECIAL_HERO     UnitType = 99
	UnitType_UT_NORMAL_BEGIN     UnitType = 100
	UnitType_UT_NORMAL_TANK      UnitType = 110
	UnitType_UT_NORMAL_BUBING    UnitType = 120
	UnitType_UT_NORMAL_JIJIA     UnitType = 130
	UnitType_UT_NORMAL_FEIJI     UnitType = 140
	UnitType_UT_NORMAL_END       UnitType = 199
	UnitType_UT_PITFALL_BEGIN    UnitType = 200
	UnitType_UT_PITFALL_DILEI    UnitType = 210
	UnitType_UT_PITFALL_BAOLEI   UnitType = 220
	UnitType_UT_PITFALL_XIANQUAN UnitType = 230
	UnitType_UT_PITFALL_DAODAN   UnitType = 240
	UnitType_UT_PITFALL_END      UnitType = 299
	UnitType_UT_WILD_MONSTER     UnitType = 300
)

var UnitType_name = map[int32]string{
	0:   "UT_SPECIAL_WALL",
	99:  "UT_SPECIAL_HERO",
	100: "UT_NORMAL_BEGIN",
	110: "UT_NORMAL_TANK",
	120: "UT_NORMAL_BUBING",
	130: "UT_NORMAL_JIJIA",
	140: "UT_NORMAL_FEIJI",
	199: "UT_NORMAL_END",
	200: "UT_PITFALL_BEGIN",
	210: "UT_PITFALL_DILEI",
	220: "UT_PITFALL_BAOLEI",
	230: "UT_PITFALL_XIANQUAN",
	240: "UT_PITFALL_DAODAN",
	299: "UT_PITFALL_END",
	300: "UT_WILD_MONSTER",
}
var UnitType_value = map[string]int32{
	"UT_SPECIAL_WALL":     0,
	"UT_SPECIAL_HERO":     99,
	"UT_NORMAL_BEGIN":     100,
	"UT_NORMAL_TANK":      110,
	"UT_NORMAL_BUBING":    120,
	"UT_NORMAL_JIJIA":     130,
	"UT_NORMAL_FEIJI":     140,
	"UT_NORMAL_END":       199,
	"UT_PITFALL_BEGIN":    200,
	"UT_PITFALL_DILEI":    210,
	"UT_PITFALL_BAOLEI":   220,
	"UT_PITFALL_XIANQUAN": 230,
	"UT_PITFALL_DAODAN":   240,
	"UT_PITFALL_END":      299,
	"UT_WILD_MONSTER":     300,
}

func (x UnitType) String() string {
	return proto.EnumName(UnitType_name, int32(x))
}
func (UnitType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

// 战斗单位在战斗时的类型，对应配置表UnitConfig中的UnitPosType字段
// 技能和效果的作用对象也是这个值
type UnitBattleType int32

const (
	// 定义的战斗单位类型，也可作为技能和效果的作用对象
	UnitBattleType_UBT_NOMAL_NONE   UnitBattleType = 0
	UnitBattleType_UBT_NOMAL_TANK   UnitBattleType = 1
	UnitBattleType_UBT_NOMAL_BUBING UnitBattleType = 2
	UnitBattleType_UBT_NOMAL_HUOPAO UnitBattleType = 3
	UnitBattleType_UBT_NOMAL_FEIJI  UnitBattleType = 4
	UnitBattleType_UBT_NOMAL_TRAP1  UnitBattleType = 5
	UnitBattleType_UBT_NOMAL_TRAP2  UnitBattleType = 6
	UnitBattleType_UBT_NOMAL_TRAP3  UnitBattleType = 7
	UnitBattleType_UBT_NOMAL_TRAP4  UnitBattleType = 8
	UnitBattleType_UBT_NOMAL_HERO   UnitBattleType = 9
	UnitBattleType_UBT_NOMAL_WALL   UnitBattleType = 10
	// 仅仅作为技能和效果的作用对象
	UnitBattleType_UBT_SPECIAL_BEGIN             UnitBattleType = 20
	UnitBattleType_UBT_SPECIAL_ALL_UNIT          UnitBattleType = 21
	UnitBattleType_UBT_SPECIAL_ALL_HERO          UnitBattleType = 22
	UnitBattleType_UBT_SPECIAL_ALL_TRAP          UnitBattleType = 23
	UnitBattleType_UBT_SPECIAL_ALL_OBJECT        UnitBattleType = 24
	UnitBattleType_UBT_SPECIAL_RANDON_UNIT       UnitBattleType = 25
	UnitBattleType_UBT_SPECIAL_RANDON_TWO_UNIT   UnitBattleType = 26
	UnitBattleType_UBT_SPECIAL_RANDON_THREE_UNIT UnitBattleType = 27
	UnitBattleType_UBT_SPECIAL_RANDON_TWO_HERO   UnitBattleType = 28
	UnitBattleType_UBT_SPECIAL_HERO_SELF         UnitBattleType = 29
)

var UnitBattleType_name = map[int32]string{
	0:  "UBT_NOMAL_NONE",
	1:  "UBT_NOMAL_TANK",
	2:  "UBT_NOMAL_BUBING",
	3:  "UBT_NOMAL_HUOPAO",
	4:  "UBT_NOMAL_FEIJI",
	5:  "UBT_NOMAL_TRAP1",
	6:  "UBT_NOMAL_TRAP2",
	7:  "UBT_NOMAL_TRAP3",
	8:  "UBT_NOMAL_TRAP4",
	9:  "UBT_NOMAL_HERO",
	10: "UBT_NOMAL_WALL",
	20: "UBT_SPECIAL_BEGIN",
	21: "UBT_SPECIAL_ALL_UNIT",
	22: "UBT_SPECIAL_ALL_HERO",
	23: "UBT_SPECIAL_ALL_TRAP",
	24: "UBT_SPECIAL_ALL_OBJECT",
	25: "UBT_SPECIAL_RANDON_UNIT",
	26: "UBT_SPECIAL_RANDON_TWO_UNIT",
	27: "UBT_SPECIAL_RANDON_THREE_UNIT",
	28: "UBT_SPECIAL_RANDON_TWO_HERO",
	29: "UBT_SPECIAL_HERO_SELF",
}
var UnitBattleType_value = map[string]int32{
	"UBT_NOMAL_NONE":                0,
	"UBT_NOMAL_TANK":                1,
	"UBT_NOMAL_BUBING":              2,
	"UBT_NOMAL_HUOPAO":              3,
	"UBT_NOMAL_FEIJI":               4,
	"UBT_NOMAL_TRAP1":               5,
	"UBT_NOMAL_TRAP2":               6,
	"UBT_NOMAL_TRAP3":               7,
	"UBT_NOMAL_TRAP4":               8,
	"UBT_NOMAL_HERO":                9,
	"UBT_NOMAL_WALL":                10,
	"UBT_SPECIAL_BEGIN":             20,
	"UBT_SPECIAL_ALL_UNIT":          21,
	"UBT_SPECIAL_ALL_HERO":          22,
	"UBT_SPECIAL_ALL_TRAP":          23,
	"UBT_SPECIAL_ALL_OBJECT":        24,
	"UBT_SPECIAL_RANDON_UNIT":       25,
	"UBT_SPECIAL_RANDON_TWO_UNIT":   26,
	"UBT_SPECIAL_RANDON_THREE_UNIT": 27,
	"UBT_SPECIAL_RANDON_TWO_HERO":   28,
	"UBT_SPECIAL_HERO_SELF":         29,
}

func (x UnitBattleType) String() string {
	return proto.EnumName(UnitBattleType_name, int32(x))
}
func (UnitBattleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

// action返回类型
type RetActionType int32

const (
	RetActionType_RAT_SUCCESS                        RetActionType = 0
	RetActionType_RAT_INTERNAL_ERROR                 RetActionType = 2
	RetActionType_RAT_TIME_ERROR                     RetActionType = 3
	RetActionType_RAT_CON_BUILDING_ERROR             RetActionType = 4
	RetActionType_RAT_CON_RESOURCE_ERROR             RetActionType = 5
	RetActionType_RAT_CON_ITEM_ERROR                 RetActionType = 6
	RetActionType_RAT_INPUT_ERROR                    RetActionType = 7
	RetActionType_RAT_COUNT_MAX                      RetActionType = 8
	RetActionType_RAT_LEVEL_MAX                      RetActionType = 9
	RetActionType_RAT_QUEUE_MAX                      RetActionType = 10
	RetActionType_RAT_WARCITY_LEVEL                  RetActionType = 11
	RetActionType_RAT_WARCITY_LID_NO                 RetActionType = 12
	RetActionType_RAT_WARCITY_LID_NUM                RetActionType = 13
	RetActionType_RAT_ADD_EXP_FAILED_HEROSTAR_LIMIT  RetActionType = 14
	RetActionType_RAT_ADD_EXP_FAILED_COMMANDER_LIMIT RetActionType = 15
	RetActionType_RAT_DISPATCH_HEROS_OVERFLOW        RetActionType = 16
	RetActionType_RAT_PITFALL_NUM                    RetActionType = 17
	RetActionType_RAT_HEROS_WORKING                  RetActionType = 18
	RetActionType_RAT_UNIT_NUM                       RetActionType = 19
	RetActionType_RAT_HIT_NUM                        RetActionType = 20
	RetActionType_RAT_STA_NUM                        RetActionType = 21
	RetActionType_RAT_ATT_MOM_LV                     RetActionType = 22
	RetActionType_RAT_NEW_BOOTCAP                    RetActionType = 23
	RetActionType_RAT_Keep_Mail_FAILED               RetActionType = 24
	RetActionType_RAT_BUILD_TIME                     RetActionType = 25
	RetActionType_RAT_LEAGUE_PERMISSION_DENIED       RetActionType = 26
)

var RetActionType_name = map[int32]string{
	0:  "RAT_SUCCESS",
	2:  "RAT_INTERNAL_ERROR",
	3:  "RAT_TIME_ERROR",
	4:  "RAT_CON_BUILDING_ERROR",
	5:  "RAT_CON_RESOURCE_ERROR",
	6:  "RAT_CON_ITEM_ERROR",
	7:  "RAT_INPUT_ERROR",
	8:  "RAT_COUNT_MAX",
	9:  "RAT_LEVEL_MAX",
	10: "RAT_QUEUE_MAX",
	11: "RAT_WARCITY_LEVEL",
	12: "RAT_WARCITY_LID_NO",
	13: "RAT_WARCITY_LID_NUM",
	14: "RAT_ADD_EXP_FAILED_HEROSTAR_LIMIT",
	15: "RAT_ADD_EXP_FAILED_COMMANDER_LIMIT",
	16: "RAT_DISPATCH_HEROS_OVERFLOW",
	17: "RAT_PITFALL_NUM",
	18: "RAT_HEROS_WORKING",
	19: "RAT_UNIT_NUM",
	20: "RAT_HIT_NUM",
	21: "RAT_STA_NUM",
	22: "RAT_ATT_MOM_LV",
	23: "RAT_NEW_BOOTCAP",
	24: "RAT_Keep_Mail_FAILED",
	25: "RAT_BUILD_TIME",
	26: "RAT_LEAGUE_PERMISSION_DENIED",
}
var RetActionType_value = map[string]int32{
	"RAT_SUCCESS":                        0,
	"RAT_INTERNAL_ERROR":                 2,
	"RAT_TIME_ERROR":                     3,
	"RAT_CON_BUILDING_ERROR":             4,
	"RAT_CON_RESOURCE_ERROR":             5,
	"RAT_CON_ITEM_ERROR":                 6,
	"RAT_INPUT_ERROR":                    7,
	"RAT_COUNT_MAX":                      8,
	"RAT_LEVEL_MAX":                      9,
	"RAT_QUEUE_MAX":                      10,
	"RAT_WARCITY_LEVEL":                  11,
	"RAT_WARCITY_LID_NO":                 12,
	"RAT_WARCITY_LID_NUM":                13,
	"RAT_ADD_EXP_FAILED_HEROSTAR_LIMIT":  14,
	"RAT_ADD_EXP_FAILED_COMMANDER_LIMIT": 15,
	"RAT_DISPATCH_HEROS_OVERFLOW":        16,
	"RAT_PITFALL_NUM":                    17,
	"RAT_HEROS_WORKING":                  18,
	"RAT_UNIT_NUM":                       19,
	"RAT_HIT_NUM":                        20,
	"RAT_STA_NUM":                        21,
	"RAT_ATT_MOM_LV":                     22,
	"RAT_NEW_BOOTCAP":                    23,
	"RAT_Keep_Mail_FAILED":               24,
	"RAT_BUILD_TIME":                     25,
	"RAT_LEAGUE_PERMISSION_DENIED":       26,
}

func (x RetActionType) String() string {
	return proto.EnumName(RetActionType_name, int32(x))
}
func (RetActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

// 聊天的返回类型
type RetChatType int32

const (
	RetChatType_RCT_UNKNOW                   RetChatType = 0
	RetChatType_RCT_SUCCESS                  RetChatType = 1
	RetChatType_RCT_MY_CHAT_TOTAL_MAX        RetChatType = 2
	RetChatType_RCT_DAY_CHAT_MAX             RetChatType = 3
	RetChatType_RCT_CHAT_TIME_INTERVAL       RetChatType = 4
	RetChatType_RCT_HAVE_FOLLOWED            RetChatType = 5
	RetChatType_RCT_FOLLOW_CHAT_TOTAL_MAX    RetChatType = 6
	RetChatType_RCT_CHAT_EXPIRED_OR_NO_EXIST RetChatType = 7
	RetChatType_RCT_HAVE_PRAISED             RetChatType = 8
	RetChatType_RCT_NOT_FOLLOWED             RetChatType = 9
	RetChatType_RCT_PRIVATE_CHAT_MAX         RetChatType = 10
	RetChatType_RCT_TARGET_PRIVATE_CHAT_MAX  RetChatType = 11
	RetChatType_RCT_MAIN_CITY_LIMIT          RetChatType = 12
	RetChatType_RCT_FORBID                   RetChatType = 13
	RetChatType_RCT_CONTENT_TOO_LONG         RetChatType = 14
)

var RetChatType_name = map[int32]string{
	0:  "RCT_UNKNOW",
	1:  "RCT_SUCCESS",
	2:  "RCT_MY_CHAT_TOTAL_MAX",
	3:  "RCT_DAY_CHAT_MAX",
	4:  "RCT_CHAT_TIME_INTERVAL",
	5:  "RCT_HAVE_FOLLOWED",
	6:  "RCT_FOLLOW_CHAT_TOTAL_MAX",
	7:  "RCT_CHAT_EXPIRED_OR_NO_EXIST",
	8:  "RCT_HAVE_PRAISED",
	9:  "RCT_NOT_FOLLOWED",
	10: "RCT_PRIVATE_CHAT_MAX",
	11: "RCT_TARGET_PRIVATE_CHAT_MAX",
	12: "RCT_MAIN_CITY_LIMIT",
	13: "RCT_FORBID",
	14: "RCT_CONTENT_TOO_LONG",
}
var RetChatType_value = map[string]int32{
	"RCT_UNKNOW":                   0,
	"RCT_SUCCESS":                  1,
	"RCT_MY_CHAT_TOTAL_MAX":        2,
	"RCT_DAY_CHAT_MAX":             3,
	"RCT_CHAT_TIME_INTERVAL":       4,
	"RCT_HAVE_FOLLOWED":            5,
	"RCT_FOLLOW_CHAT_TOTAL_MAX":    6,
	"RCT_CHAT_EXPIRED_OR_NO_EXIST": 7,
	"RCT_HAVE_PRAISED":             8,
	"RCT_NOT_FOLLOWED":             9,
	"RCT_PRIVATE_CHAT_MAX":         10,
	"RCT_TARGET_PRIVATE_CHAT_MAX":  11,
	"RCT_MAIN_CITY_LIMIT":          12,
	"RCT_FORBID":                   13,
	"RCT_CONTENT_TOO_LONG":         14,
}

func (x RetChatType) String() string {
	return proto.EnumName(RetChatType_name, int32(x))
}
func (RetChatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

// 聊天消息类型
type ChatContentType int32

const (
	ChatContentType_CCT_BEGIN         ChatContentType = 0
	ChatContentType_CCT_CONTEXT       ChatContentType = 1
	ChatContentType_CCT_BATTLE_REPORT ChatContentType = 2
	ChatContentType_CCT_POSITIN       ChatContentType = 3
	ChatContentType_CCT_MASS          ChatContentType = 4
	ChatContentType_CCT_VOICE         ChatContentType = 5
	ChatContentType_CCT_BIG_EMOJI     ChatContentType = 6
	ChatContentType_CCT_SYSTEM        ChatContentType = 7
	ChatContentType_CCT_PURCHASE      ChatContentType = 8
	ChatContentType_CCT_TIME_LINE_GAP ChatContentType = 9
	ChatContentType_CCT_SINGLE_CHAT   ChatContentType = 10
	ChatContentType_CCT_END           ChatContentType = 11
)

var ChatContentType_name = map[int32]string{
	0:  "CCT_BEGIN",
	1:  "CCT_CONTEXT",
	2:  "CCT_BATTLE_REPORT",
	3:  "CCT_POSITIN",
	4:  "CCT_MASS",
	5:  "CCT_VOICE",
	6:  "CCT_BIG_EMOJI",
	7:  "CCT_SYSTEM",
	8:  "CCT_PURCHASE",
	9:  "CCT_TIME_LINE_GAP",
	10: "CCT_SINGLE_CHAT",
	11: "CCT_END",
}
var ChatContentType_value = map[string]int32{
	"CCT_BEGIN":         0,
	"CCT_CONTEXT":       1,
	"CCT_BATTLE_REPORT": 2,
	"CCT_POSITIN":       3,
	"CCT_MASS":          4,
	"CCT_VOICE":         5,
	"CCT_BIG_EMOJI":     6,
	"CCT_SYSTEM":        7,
	"CCT_PURCHASE":      8,
	"CCT_TIME_LINE_GAP": 9,
	"CCT_SINGLE_CHAT":   10,
	"CCT_END":           11,
}

func (x ChatContentType) String() string {
	return proto.EnumName(ChatContentType_name, int32(x))
}
func (ChatContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

type ForbiddenChatType int32

const (
	ForbiddenChatType_FCT_WORLD_CHAT  ForbiddenChatType = 0
	ForbiddenChatType_FCT_ALL_CHAT    ForbiddenChatType = 1
	ForbiddenChatType_FCT_LEAGUE_CHAT ForbiddenChatType = 2
)

var ForbiddenChatType_name = map[int32]string{
	0: "FCT_WORLD_CHAT",
	1: "FCT_ALL_CHAT",
	2: "FCT_LEAGUE_CHAT",
}
var ForbiddenChatType_value = map[string]int32{
	"FCT_WORLD_CHAT":  0,
	"FCT_ALL_CHAT":    1,
	"FCT_LEAGUE_CHAT": 2,
}

func (x ForbiddenChatType) String() string {
	return proto.EnumName(ForbiddenChatType_name, int32(x))
}
func (ForbiddenChatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

type TipType int32

const (
	TipType_TT_NORMAL TipType = 0
)

var TipType_name = map[int32]string{
	0: "TT_NORMAL",
}
var TipType_value = map[string]int32{
	"TT_NORMAL": 0,
}

func (x TipType) String() string {
	return proto.EnumName(TipType_name, int32(x))
}
func (TipType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

// 联盟权限
type LeagueMemberLevel int32

const (
	LeagueMemberLevel_LeagueMemberLevel0   LeagueMemberLevel = 0
	LeagueMemberLevel_LeagueMemberLevel1   LeagueMemberLevel = 1
	LeagueMemberLevel_LeagueMemberLevel2   LeagueMemberLevel = 2
	LeagueMemberLevel_LeagueMemberLevel3   LeagueMemberLevel = 3
	LeagueMemberLevel_LeagueMemberLevel4   LeagueMemberLevel = 4
	LeagueMemberLevel_LeagueMemberLevel5   LeagueMemberLevel = 5
	LeagueMemberLevel_LeagueMemberLevelMax LeagueMemberLevel = 6
)

var LeagueMemberLevel_name = map[int32]string{
	0: "LeagueMemberLevel0",
	1: "LeagueMemberLevel1",
	2: "LeagueMemberLevel2",
	3: "LeagueMemberLevel3",
	4: "LeagueMemberLevel4",
	5: "LeagueMemberLevel5",
	6: "LeagueMemberLevelMax",
}
var LeagueMemberLevel_value = map[string]int32{
	"LeagueMemberLevel0":   0,
	"LeagueMemberLevel1":   1,
	"LeagueMemberLevel2":   2,
	"LeagueMemberLevel3":   3,
	"LeagueMemberLevel4":   4,
	"LeagueMemberLevel5":   5,
	"LeagueMemberLevelMax": 6,
}

func (x LeagueMemberLevel) String() string {
	return proto.EnumName(LeagueMemberLevel_name, int32(x))
}
func (LeagueMemberLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

type LeaguePermissionOperator int32

const (
	LeaguePermissionOperator_PromissionUp      LeaguePermissionOperator = 0
	LeaguePermissionOperator_KickOut           LeaguePermissionOperator = 2
	LeaguePermissionOperator_Abdicate          LeaguePermissionOperator = 3
	LeaguePermissionOperator_RecallLeagueOnwer LeaguePermissionOperator = 4
)

var LeaguePermissionOperator_name = map[int32]string{
	0: "PromissionUp",
	2: "KickOut",
	3: "Abdicate",
	4: "RecallLeagueOnwer",
}
var LeaguePermissionOperator_value = map[string]int32{
	"PromissionUp":      0,
	"KickOut":           2,
	"Abdicate":          3,
	"RecallLeagueOnwer": 4,
}

func (x LeaguePermissionOperator) String() string {
	return proto.EnumName(LeaguePermissionOperator_name, int32(x))
}
func (LeaguePermissionOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

type LeagueResult int32

const (
	LeagueResult_LeagueSuccess          LeagueResult = 0
	LeagueResult_LeagueNameExisted      LeagueResult = 1
	LeagueResult_LeagueShortNameExisted LeagueResult = 2
	LeagueResult_LeaqueIsFull           LeagueResult = 3
	LeagueResult_LeagueJoined           LeagueResult = 4
	LeagueResult_LeagueIsNotExist       LeagueResult = 5
	LeagueResult_LeaguePermissionDeny   LeagueResult = 6
	LeagueResult_LeagueParamsError      LeagueResult = 7
	LeagueResult_LeaguePermissionMax    LeagueResult = 8
	LeagueResult_LeagueIsNotMember      LeagueResult = 9
	LeagueResult_LeagueIsWarCity        LeagueResult = 10
	LeagueResult_LeagueLevelFull        LeagueResult = 11
	LeagueResult_LeagueTransferBattle   LeagueResult = 12
)

var LeagueResult_name = map[int32]string{
	0:  "LeagueSuccess",
	1:  "LeagueNameExisted",
	2:  "LeagueShortNameExisted",
	3:  "LeaqueIsFull",
	4:  "LeagueJoined",
	5:  "LeagueIsNotExist",
	6:  "LeaguePermissionDeny",
	7:  "LeagueParamsError",
	8:  "LeaguePermissionMax",
	9:  "LeagueIsNotMember",
	10: "LeagueIsWarCity",
	11: "LeagueLevelFull",
	12: "LeagueTransferBattle",
}
var LeagueResult_value = map[string]int32{
	"LeagueSuccess":          0,
	"LeagueNameExisted":      1,
	"LeagueShortNameExisted": 2,
	"LeaqueIsFull":           3,
	"LeagueJoined":           4,
	"LeagueIsNotExist":       5,
	"LeaguePermissionDeny":   6,
	"LeagueParamsError":      7,
	"LeaguePermissionMax":    8,
	"LeagueIsNotMember":      9,
	"LeagueIsWarCity":        10,
	"LeagueLevelFull":        11,
	"LeagueTransferBattle":   12,
}

func (x LeagueResult) String() string {
	return proto.EnumName(LeagueResult_name, int32(x))
}
func (LeagueResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

type ChatChannelType int32

const (
	ChatChannelType_CT_BEGIN      ChatChannelType = 0
	ChatChannelType_CT_WORLD      ChatChannelType = 1
	ChatChannelType_CT_ALLIANCE   ChatChannelType = 2
	ChatChannelType_CT_USER       ChatChannelType = 3
	ChatChannelType_CT_MULTI_MAIL ChatChannelType = 4
	ChatChannelType_CT_WORLD_WX   ChatChannelType = 5
	ChatChannelType_CT_END        ChatChannelType = 6
)

var ChatChannelType_name = map[int32]string{
	0: "CT_BEGIN",
	1: "CT_WORLD",
	2: "CT_ALLIANCE",
	3: "CT_USER",
	4: "CT_MULTI_MAIL",
	5: "CT_WORLD_WX",
	6: "CT_END",
}
var ChatChannelType_value = map[string]int32{
	"CT_BEGIN":      0,
	"CT_WORLD":      1,
	"CT_ALLIANCE":   2,
	"CT_USER":       3,
	"CT_MULTI_MAIL": 4,
	"CT_WORLD_WX":   5,
	"CT_END":        6,
}

func (x ChatChannelType) String() string {
	return proto.EnumName(ChatChannelType_name, int32(x))
}
func (ChatChannelType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

// 世界聊天频道内的子频道
type WorldChannelType int32

const (
	WorldChannelType_WCT_BEGIN     WorldChannelType = 0
	WorldChannelType_WCT_NEWEST    WorldChannelType = 1
	WorldChannelType_WCT_HOT       WorldChannelType = 2
	WorldChannelType_WCT_FOLLOW    WorldChannelType = 3
	WorldChannelType_WCT_MY_TOPICS WorldChannelType = 4
	WorldChannelType_WCT_END       WorldChannelType = 5
)

var WorldChannelType_name = map[int32]string{
	0: "WCT_BEGIN",
	1: "WCT_NEWEST",
	2: "WCT_HOT",
	3: "WCT_FOLLOW",
	4: "WCT_MY_TOPICS",
	5: "WCT_END",
}
var WorldChannelType_value = map[string]int32{
	"WCT_BEGIN":     0,
	"WCT_NEWEST":    1,
	"WCT_HOT":       2,
	"WCT_FOLLOW":    3,
	"WCT_MY_TOPICS": 4,
	"WCT_END":       5,
}

func (x WorldChannelType) String() string {
	return proto.EnumName(WorldChannelType_name, int32(x))
}
func (WorldChannelType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{19} }

type HeroStatus int32

const (
	HeroStatus_HS_BEGINE     HeroStatus = 0
	HeroStatus_HS_NORMAL     HeroStatus = 1
	HeroStatus_HS_IMPRISONED HeroStatus = 2
	HeroStatus_HS_DEATH      HeroStatus = 3
	HeroStatus_HS_MARCH      HeroStatus = 4
	HeroStatus_HS_DEFENSE    HeroStatus = 5
	HeroStatus_HS_END        HeroStatus = 6
)

var HeroStatus_name = map[int32]string{
	0: "HS_BEGINE",
	1: "HS_NORMAL",
	2: "HS_IMPRISONED",
	3: "HS_DEATH",
	4: "HS_MARCH",
	5: "HS_DEFENSE",
	6: "HS_END",
}
var HeroStatus_value = map[string]int32{
	"HS_BEGINE":     0,
	"HS_NORMAL":     1,
	"HS_IMPRISONED": 2,
	"HS_DEATH":      3,
	"HS_MARCH":      4,
	"HS_DEFENSE":    5,
	"HS_END":        6,
}

func (x HeroStatus) String() string {
	return proto.EnumName(HeroStatus_name, int32(x))
}
func (HeroStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{20} }

// 属性加成种类
type AtttibuteType int32

const (
	AtttibuteType_PSCash1                AtttibuteType = 0
	AtttibuteType_PSCash2                AtttibuteType = 2
	AtttibuteType_PSCash3                AtttibuteType = 3
	AtttibuteType_PSCash4                AtttibuteType = 4
	AtttibuteType_PSCash5                AtttibuteType = 5
	AtttibuteType_CSCash1                AtttibuteType = 6
	AtttibuteType_CSCash2                AtttibuteType = 7
	AtttibuteType_CSCash3                AtttibuteType = 8
	AtttibuteType_CSCash4                AtttibuteType = 9
	AtttibuteType_CSCash5                AtttibuteType = 10
	AtttibuteType_PTSource               AtttibuteType = 11
	AtttibuteType_Weight                 AtttibuteType = 12
	AtttibuteType_MonMarchTime           AtttibuteType = 13
	AtttibuteType_MarchTime              AtttibuteType = 14
	AtttibuteType_KillWounded            AtttibuteType = 15
	AtttibuteType_Power                  AtttibuteType = 16
	AtttibuteType_BuildSpeed             AtttibuteType = 17
	AtttibuteType_WoundedCount           AtttibuteType = 18
	AtttibuteType_CureSpeed              AtttibuteType = 19
	AtttibuteType_UnitCount              AtttibuteType = 20
	AtttibuteType_DefenderAttack         AtttibuteType = 21
	AtttibuteType_DefenderDefense        AtttibuteType = 22
	AtttibuteType_ToWounded              AtttibuteType = 23
	AtttibuteType_UnitSpeed              AtttibuteType = 24
	AtttibuteType_AttackTank             AtttibuteType = 25
	AtttibuteType_AttackBubing           AtttibuteType = 26
	AtttibuteType_AttackFeiji            AtttibuteType = 27
	AtttibuteType_AttackJijia            AtttibuteType = 28
	AtttibuteType_DefenseTank            AtttibuteType = 29
	AtttibuteType_DefenseBubing          AtttibuteType = 30
	AtttibuteType_DefenseFeiji           AtttibuteType = 31
	AtttibuteType_DefenseJijia           AtttibuteType = 32
	AtttibuteType_HPTank                 AtttibuteType = 33
	AtttibuteType_HPBubing               AtttibuteType = 34
	AtttibuteType_HPFeiji                AtttibuteType = 35
	AtttibuteType_HPJijia                AtttibuteType = 36
	AtttibuteType_ArmyCount              AtttibuteType = 37
	AtttibuteType_RideCount              AtttibuteType = 38
	AtttibuteType_TankSpeed              AtttibuteType = 39
	AtttibuteType_FeijiSpeed             AtttibuteType = 40
	AtttibuteType_JijiaSpeed             AtttibuteType = 41
	AtttibuteType_BubingSpeed            AtttibuteType = 42
	AtttibuteType_TrapSpeed              AtttibuteType = 43
	AtttibuteType_ShieldDurable          AtttibuteType = 44
	AtttibuteType_AttackTrap             AtttibuteType = 45
	AtttibuteType_TrapNumber             AtttibuteType = 46
	AtttibuteType_AggregationSpeed       AtttibuteType = 47
	AtttibuteType_TransactionTax         AtttibuteType = 50
	AtttibuteType_ArmyCount2             AtttibuteType = 51
	AtttibuteType_ResSpeed               AtttibuteType = 52
	AtttibuteType_SiegeAttack            AtttibuteType = 53
	AtttibuteType_ResourcePS             AtttibuteType = 54
	AtttibuteType_ResourceCS             AtttibuteType = 55
	AtttibuteType_TrapHP                 AtttibuteType = 56
	AtttibuteType_PowerLimit             AtttibuteType = 57
	AtttibuteType_GroupHP                AtttibuteType = 58
	AtttibuteType_GroupDefense           AtttibuteType = 59
	AtttibuteType_GroupAttack            AtttibuteType = 60
	AtttibuteType_DefenderHP             AtttibuteType = 61
	AtttibuteType_AttackATK              AtttibuteType = 62
	AtttibuteType_AttackDEF              AtttibuteType = 63
	AtttibuteType_AttackHP               AtttibuteType = 64
	AtttibuteType_AttackcityATK          AtttibuteType = 65
	AtttibuteType_AttackcityDEF          AtttibuteType = 66
	AtttibuteType_AttackcityHP           AtttibuteType = 67
	AtttibuteType_BuildResourceReduce    AtttibuteType = 68
	AtttibuteType_ResearchResourceReduce AtttibuteType = 69
	AtttibuteType_CureResourceReduce     AtttibuteType = 70
	AtttibuteType_TrapResourceReduce     AtttibuteType = 71
	AtttibuteType_CtrapResourceReduce    AtttibuteType = 72
	AtttibuteType_GemGetProbability      AtttibuteType = 73
	AtttibuteType_BubingTrainReduce      AtttibuteType = 74
	AtttibuteType_TankTrainReduce        AtttibuteType = 75
	AtttibuteType_JijiaTrainReduce       AtttibuteType = 76
	AtttibuteType_FeijiTrainReduce       AtttibuteType = 77
	AtttibuteType_CollectionMarchTime    AtttibuteType = 78
	AtttibuteType_MonAttack              AtttibuteType = 79
	AtttibuteType_WoundedCount2          AtttibuteType = 80
	AtttibuteType_PowerReduce            AtttibuteType = 81
	AtttibuteType_FangkongT2Reduce       AtttibuteType = 82
	AtttibuteType_CibaoT2Reduce          AtttibuteType = 83
	AtttibuteType_FanTankT2Reduce        AtttibuteType = 84
	AtttibuteType_DiaobaoT2Reduce        AtttibuteType = 85
	AtttibuteType_FangkongT3Reduce       AtttibuteType = 86
	AtttibuteType_CibaoT3Reduce          AtttibuteType = 87
	AtttibuteType_FanTankT3Reduce        AtttibuteType = 88
	AtttibuteType_DiaobaoT3Reduce        AtttibuteType = 89
	AtttibuteType_FangkongT4Reduce       AtttibuteType = 90
	AtttibuteType_CibaoT4Reduce          AtttibuteType = 91
	AtttibuteType_FanTankT4Reduce        AtttibuteType = 92
	AtttibuteType_DiaobaoT4Reduce        AtttibuteType = 93
	AtttibuteType_BubingT2Reduce         AtttibuteType = 94
	AtttibuteType_TankT2Reduce           AtttibuteType = 95
	AtttibuteType_JijiaT2Reduce          AtttibuteType = 96
	AtttibuteType_FeijiT2Reduce          AtttibuteType = 97
	AtttibuteType_BubingT3Reduce         AtttibuteType = 98
	AtttibuteType_TankT3Reduce           AtttibuteType = 99
	AtttibuteType_JijiaT3Reduce          AtttibuteType = 100
	AtttibuteType_FeijiT3Reduce          AtttibuteType = 101
	AtttibuteType_BubingT4Reduce         AtttibuteType = 102
	AtttibuteType_TankT4Reduce           AtttibuteType = 103
	AtttibuteType_JijiaT4Reduce          AtttibuteType = 104
	AtttibuteType_FeijiT4Reduce          AtttibuteType = 105
	AtttibuteType_HeroAttack             AtttibuteType = 106
	AtttibuteType_HeroSpeed              AtttibuteType = 107
	AtttibuteType_EquipMakeSpeed         AtttibuteType = 108
	AtttibuteType_CommanderExpAdd        AtttibuteType = 109
	AtttibuteType_MilitaryDamage         AtttibuteType = 110
	AtttibuteType_HuntDamge              AtttibuteType = 111
	AtttibuteType_WallDef                AtttibuteType = 112
	AtttibuteType_AbsHitLevelBubing      AtttibuteType = 113
	AtttibuteType_AbsHitLevelTank        AtttibuteType = 114
	AtttibuteType_AbsHitLevelFeiji       AtttibuteType = 115
	AtttibuteType_AbsHitLevelHuoPao      AtttibuteType = 116
	AtttibuteType_AbsDodgeLevelBubing    AtttibuteType = 117
	AtttibuteType_AbsDodgeLevelTank      AtttibuteType = 118
	AtttibuteType_AbsDodgeLevelFeiji     AtttibuteType = 119
	AtttibuteType_AbsDodgeLevelHuoPao    AtttibuteType = 120
	AtttibuteType_AbsBaoJiLevelBubing    AtttibuteType = 121
	AtttibuteType_AbsBaoJiLevelTank      AtttibuteType = 122
	AtttibuteType_AbsBaoJiLevelFeiji     AtttibuteType = 123
	AtttibuteType_AbsBaoJiLevelHuoPao    AtttibuteType = 124
	AtttibuteType_AbsKangBaoLevelBubing  AtttibuteType = 125
	AtttibuteType_AbsKangBaoLevelTank    AtttibuteType = 126
	AtttibuteType_AbsKangBaoLevelFeiji   AtttibuteType = 127
	AtttibuteType_AbsKangBaoLevelHuoPao  AtttibuteType = 128
	AtttibuteType_AbsHitLevelGroup       AtttibuteType = 129
	AtttibuteType_AbsDodgeLevelGroup     AtttibuteType = 130
	AtttibuteType_AbsBaoJiLevelGroup     AtttibuteType = 131
	AtttibuteType_AbsKangBaoLevelGroup   AtttibuteType = 132
	AtttibuteType_PerHitLevelBubing      AtttibuteType = 133
	AtttibuteType_PerHitLevelTank        AtttibuteType = 134
	AtttibuteType_PerHitLevelFeiji       AtttibuteType = 135
	AtttibuteType_PerHitLevelHuoPao      AtttibuteType = 136
	AtttibuteType_PerDodgeLevelBubing    AtttibuteType = 137
	AtttibuteType_PerDodgeLevelTank      AtttibuteType = 138
	AtttibuteType_PerDodgeLevelFeiji     AtttibuteType = 139
	AtttibuteType_PerDodgeLevelHuoPao    AtttibuteType = 140
	AtttibuteType_PerBaoJiLevelBubing    AtttibuteType = 141
	AtttibuteType_PerBaoJiLevelTank      AtttibuteType = 142
	AtttibuteType_PerBaoJiLevelFeiji     AtttibuteType = 143
	AtttibuteType_PerBaoJiLevelHuoPao    AtttibuteType = 144
	AtttibuteType_PerKangBaoLevelBubing  AtttibuteType = 145
	AtttibuteType_PerKangBaoLevelTank    AtttibuteType = 146
	AtttibuteType_PerKangBaoLevelFeiji   AtttibuteType = 147
	AtttibuteType_PerKangBaoLevelHuoPao  AtttibuteType = 148
	AtttibuteType_PerHitLevelGroup       AtttibuteType = 149
	AtttibuteType_PerDodgeLevelGroup     AtttibuteType = 150
	AtttibuteType_PerBaoJiLevelGroup     AtttibuteType = 151
	AtttibuteType_PerKangBaoLevelGroup   AtttibuteType = 152
	AtttibuteType_HitRateBubing          AtttibuteType = 153
	AtttibuteType_HitRateTank            AtttibuteType = 154
	AtttibuteType_HitRateFeiji           AtttibuteType = 155
	AtttibuteType_HitRateHuoPao          AtttibuteType = 156
	AtttibuteType_BaoJiRateBubing        AtttibuteType = 157
	AtttibuteType_BaoJiRateTank          AtttibuteType = 158
	AtttibuteType_BaoJiRateFeiji         AtttibuteType = 159
	AtttibuteType_BaoJiRateHuoPao        AtttibuteType = 160
	AtttibuteType_HitRateGroup           AtttibuteType = 161
	AtttibuteType_BaoJiRateGroup         AtttibuteType = 162
	AtttibuteType_HunterMonsDef          AtttibuteType = 163
	AtttibuteType_HunterMonsLife         AtttibuteType = 164
	AtttibuteType_HunterMonsAtk          AtttibuteType = 165
	AtttibuteType_HunterMonsDemage       AtttibuteType = 166
	AtttibuteType_GroupHP2               AtttibuteType = 167
	AtttibuteType_GroupHP3               AtttibuteType = 168
	AtttibuteType_GroupDefense2          AtttibuteType = 169
	AtttibuteType_GroupDefense3          AtttibuteType = 170
	AtttibuteType_GroupAttack2           AtttibuteType = 171
	AtttibuteType_GroupAttack3           AtttibuteType = 172
	AtttibuteType_ArmyCount3             AtttibuteType = 173
	AtttibuteType_ArmyCount4             AtttibuteType = 174
	AtttibuteType_BossRed                AtttibuteType = 175
	AtttibuteType_MonAtt                 AtttibuteType = 176
	AtttibuteType_MonDef                 AtttibuteType = 177
	AtttibuteType_MonHp                  AtttibuteType = 178
	AtttibuteType_MonDam                 AtttibuteType = 179
	AtttibuteType_MonRed                 AtttibuteType = 180
	AtttibuteType_DemageRise             AtttibuteType = 181
	AtttibuteType_HurtRed                AtttibuteType = 182
	AtttibuteType_BubingT5Reduce         AtttibuteType = 183
	AtttibuteType_TankT5Reduce           AtttibuteType = 184
	AtttibuteType_JijiaT5Reduce          AtttibuteType = 185
	AtttibuteType_FeijiT5Reduce          AtttibuteType = 186
	AtttibuteType_UnionMember            AtttibuteType = 1001
	AtttibuteType_UnionHelp              AtttibuteType = 1002
	AtttibuteType_MaxAggregation         AtttibuteType = 1003
	AtttibuteType_DiamondMine            AtttibuteType = 1004
	AtttibuteType_Reinforcement          AtttibuteType = 1005
	AtttibuteType_CityCapacity           AtttibuteType = 1006
	AtttibuteType_CityDurability         AtttibuteType = 1007
	AtttibuteType_CityMonster            AtttibuteType = 1008
	AtttibuteType_CityReinforcement      AtttibuteType = 1009
	AtttibuteType_UnionHelpTime          AtttibuteType = 1010
	AtttibuteType_GetTheResources        AtttibuteType = 2001
	AtttibuteType_Recall                 AtttibuteType = 2002
	AtttibuteType_ArmyLimit              AtttibuteType = 2003
	AtttibuteType_Repair                 AtttibuteType = 2004
	AtttibuteType_PowerObtain            AtttibuteType = 2005
	AtttibuteType_GatherIncrease         AtttibuteType = 2006
	AtttibuteType_MMReward               AtttibuteType = 2007
	AtttibuteType_FreeTime               AtttibuteType = 5000
	AtttibuteType_Talent1                AtttibuteType = 100001
	AtttibuteType_Talent2                AtttibuteType = 100002
	AtttibuteType_Talent3                AtttibuteType = 100003
	AtttibuteType_Talent4                AtttibuteType = 100004
	AtttibuteType_Talent5                AtttibuteType = 100005
	AtttibuteType_Talent6                AtttibuteType = 100006
	AtttibuteType_Talent7                AtttibuteType = 100007
	AtttibuteType_Talent8                AtttibuteType = 100008
	AtttibuteType_Talent9                AtttibuteType = 100009
	AtttibuteType_Talent10               AtttibuteType = 100010
	AtttibuteType_Talent11               AtttibuteType = 100011
	AtttibuteType_Talent12               AtttibuteType = 100012
	AtttibuteType_Talent13               AtttibuteType = 100013
	AtttibuteType_Talent14               AtttibuteType = 100014
	AtttibuteType_Talent15               AtttibuteType = 100015
	AtttibuteType_Talent16               AtttibuteType = 100016
	// 以上效果中部队相关效果均为英雄所在部队生效，集结无效
	AtttibuteType_BuBingT2           AtttibuteType = 10022
	AtttibuteType_BuBingT3           AtttibuteType = 10023
	AtttibuteType_BuBingT4           AtttibuteType = 10024
	AtttibuteType_BuBingT5           AtttibuteType = 10025
	AtttibuteType_TankT2             AtttibuteType = 10012
	AtttibuteType_TankT3             AtttibuteType = 10013
	AtttibuteType_TankT4             AtttibuteType = 10014
	AtttibuteType_TankT5             AtttibuteType = 10015
	AtttibuteType_JiJiaT2            AtttibuteType = 10032
	AtttibuteType_JiJiaT3            AtttibuteType = 10033
	AtttibuteType_JiJiaT4            AtttibuteType = 10034
	AtttibuteType_JiJiaT5            AtttibuteType = 10035
	AtttibuteType_FeiJiT5            AtttibuteType = 10041
	AtttibuteType_FeiJiT2            AtttibuteType = 10042
	AtttibuteType_FeiJiT3            AtttibuteType = 10043
	AtttibuteType_FeiJiT4            AtttibuteType = 10044
	AtttibuteType_FangkongT2         AtttibuteType = 10045
	AtttibuteType_FangkongT3         AtttibuteType = 10046
	AtttibuteType_FangkongT4         AtttibuteType = 10047
	AtttibuteType_CibaoT2            AtttibuteType = 10048
	AtttibuteType_CibaoT3            AtttibuteType = 10049
	AtttibuteType_CibaoT4            AtttibuteType = 10050
	AtttibuteType_FanTankT2          AtttibuteType = 10051
	AtttibuteType_FanTankT3          AtttibuteType = 10052
	AtttibuteType_FanTankT4          AtttibuteType = 10053
	AtttibuteType_DiaobaoT2          AtttibuteType = 10054
	AtttibuteType_DiaobaoT3          AtttibuteType = 10055
	AtttibuteType_DiaobaoT4          AtttibuteType = 10056
	AtttibuteType_AttMonsLevel       AtttibuteType = 10057
	AtttibuteType_AttMonsCount       AtttibuteType = 10058
	AtttibuteType_ResSpeedReduce     AtttibuteType = 5001
	AtttibuteType_BuildSpeedReduce   AtttibuteType = 5002
	AtttibuteType_MarchTimeReduce    AtttibuteType = 5003
	AtttibuteType_ResourcePSReduce   AtttibuteType = 5004
	AtttibuteType_UnitSpeedReduce    AtttibuteType = 5005
	AtttibuteType_PSCash2Reduce      AtttibuteType = 5006
	AtttibuteType_GroupAttackReduce  AtttibuteType = 5007
	AtttibuteType_GroupDefenseReduce AtttibuteType = 5008
	AtttibuteType_GroupHPReduce      AtttibuteType = 5009
)

var AtttibuteType_name = map[int32]string{
	0:      "PSCash1",
	2:      "PSCash2",
	3:      "PSCash3",
	4:      "PSCash4",
	5:      "PSCash5",
	6:      "CSCash1",
	7:      "CSCash2",
	8:      "CSCash3",
	9:      "CSCash4",
	10:     "CSCash5",
	11:     "PTSource",
	12:     "Weight",
	13:     "MonMarchTime",
	14:     "MarchTime",
	15:     "KillWounded",
	16:     "Power",
	17:     "BuildSpeed",
	18:     "WoundedCount",
	19:     "CureSpeed",
	20:     "UnitCount",
	21:     "DefenderAttack",
	22:     "DefenderDefense",
	23:     "ToWounded",
	24:     "UnitSpeed",
	25:     "AttackTank",
	26:     "AttackBubing",
	27:     "AttackFeiji",
	28:     "AttackJijia",
	29:     "DefenseTank",
	30:     "DefenseBubing",
	31:     "DefenseFeiji",
	32:     "DefenseJijia",
	33:     "HPTank",
	34:     "HPBubing",
	35:     "HPFeiji",
	36:     "HPJijia",
	37:     "ArmyCount",
	38:     "RideCount",
	39:     "TankSpeed",
	40:     "FeijiSpeed",
	41:     "JijiaSpeed",
	42:     "BubingSpeed",
	43:     "TrapSpeed",
	44:     "ShieldDurable",
	45:     "AttackTrap",
	46:     "TrapNumber",
	47:     "AggregationSpeed",
	50:     "TransactionTax",
	51:     "ArmyCount2",
	52:     "ResSpeed",
	53:     "SiegeAttack",
	54:     "ResourcePS",
	55:     "ResourceCS",
	56:     "TrapHP",
	57:     "PowerLimit",
	58:     "GroupHP",
	59:     "GroupDefense",
	60:     "GroupAttack",
	61:     "DefenderHP",
	62:     "AttackATK",
	63:     "AttackDEF",
	64:     "AttackHP",
	65:     "AttackcityATK",
	66:     "AttackcityDEF",
	67:     "AttackcityHP",
	68:     "BuildResourceReduce",
	69:     "ResearchResourceReduce",
	70:     "CureResourceReduce",
	71:     "TrapResourceReduce",
	72:     "CtrapResourceReduce",
	73:     "GemGetProbability",
	74:     "BubingTrainReduce",
	75:     "TankTrainReduce",
	76:     "JijiaTrainReduce",
	77:     "FeijiTrainReduce",
	78:     "CollectionMarchTime",
	79:     "MonAttack",
	80:     "WoundedCount2",
	81:     "PowerReduce",
	82:     "FangkongT2Reduce",
	83:     "CibaoT2Reduce",
	84:     "FanTankT2Reduce",
	85:     "DiaobaoT2Reduce",
	86:     "FangkongT3Reduce",
	87:     "CibaoT3Reduce",
	88:     "FanTankT3Reduce",
	89:     "DiaobaoT3Reduce",
	90:     "FangkongT4Reduce",
	91:     "CibaoT4Reduce",
	92:     "FanTankT4Reduce",
	93:     "DiaobaoT4Reduce",
	94:     "BubingT2Reduce",
	95:     "TankT2Reduce",
	96:     "JijiaT2Reduce",
	97:     "FeijiT2Reduce",
	98:     "BubingT3Reduce",
	99:     "TankT3Reduce",
	100:    "JijiaT3Reduce",
	101:    "FeijiT3Reduce",
	102:    "BubingT4Reduce",
	103:    "TankT4Reduce",
	104:    "JijiaT4Reduce",
	105:    "FeijiT4Reduce",
	106:    "HeroAttack",
	107:    "HeroSpeed",
	108:    "EquipMakeSpeed",
	109:    "CommanderExpAdd",
	110:    "MilitaryDamage",
	111:    "HuntDamge",
	112:    "WallDef",
	113:    "AbsHitLevelBubing",
	114:    "AbsHitLevelTank",
	115:    "AbsHitLevelFeiji",
	116:    "AbsHitLevelHuoPao",
	117:    "AbsDodgeLevelBubing",
	118:    "AbsDodgeLevelTank",
	119:    "AbsDodgeLevelFeiji",
	120:    "AbsDodgeLevelHuoPao",
	121:    "AbsBaoJiLevelBubing",
	122:    "AbsBaoJiLevelTank",
	123:    "AbsBaoJiLevelFeiji",
	124:    "AbsBaoJiLevelHuoPao",
	125:    "AbsKangBaoLevelBubing",
	126:    "AbsKangBaoLevelTank",
	127:    "AbsKangBaoLevelFeiji",
	128:    "AbsKangBaoLevelHuoPao",
	129:    "AbsHitLevelGroup",
	130:    "AbsDodgeLevelGroup",
	131:    "AbsBaoJiLevelGroup",
	132:    "AbsKangBaoLevelGroup",
	133:    "PerHitLevelBubing",
	134:    "PerHitLevelTank",
	135:    "PerHitLevelFeiji",
	136:    "PerHitLevelHuoPao",
	137:    "PerDodgeLevelBubing",
	138:    "PerDodgeLevelTank",
	139:    "PerDodgeLevelFeiji",
	140:    "PerDodgeLevelHuoPao",
	141:    "PerBaoJiLevelBubing",
	142:    "PerBaoJiLevelTank",
	143:    "PerBaoJiLevelFeiji",
	144:    "PerBaoJiLevelHuoPao",
	145:    "PerKangBaoLevelBubing",
	146:    "PerKangBaoLevelTank",
	147:    "PerKangBaoLevelFeiji",
	148:    "PerKangBaoLevelHuoPao",
	149:    "PerHitLevelGroup",
	150:    "PerDodgeLevelGroup",
	151:    "PerBaoJiLevelGroup",
	152:    "PerKangBaoLevelGroup",
	153:    "HitRateBubing",
	154:    "HitRateTank",
	155:    "HitRateFeiji",
	156:    "HitRateHuoPao",
	157:    "BaoJiRateBubing",
	158:    "BaoJiRateTank",
	159:    "BaoJiRateFeiji",
	160:    "BaoJiRateHuoPao",
	161:    "HitRateGroup",
	162:    "BaoJiRateGroup",
	163:    "HunterMonsDef",
	164:    "HunterMonsLife",
	165:    "HunterMonsAtk",
	166:    "HunterMonsDemage",
	167:    "GroupHP2",
	168:    "GroupHP3",
	169:    "GroupDefense2",
	170:    "GroupDefense3",
	171:    "GroupAttack2",
	172:    "GroupAttack3",
	173:    "ArmyCount3",
	174:    "ArmyCount4",
	175:    "BossRed",
	176:    "MonAtt",
	177:    "MonDef",
	178:    "MonHp",
	179:    "MonDam",
	180:    "MonRed",
	181:    "DemageRise",
	182:    "HurtRed",
	183:    "BubingT5Reduce",
	184:    "TankT5Reduce",
	185:    "JijiaT5Reduce",
	186:    "FeijiT5Reduce",
	1001:   "UnionMember",
	1002:   "UnionHelp",
	1003:   "MaxAggregation",
	1004:   "DiamondMine",
	1005:   "Reinforcement",
	1006:   "CityCapacity",
	1007:   "CityDurability",
	1008:   "CityMonster",
	1009:   "CityReinforcement",
	1010:   "UnionHelpTime",
	2001:   "GetTheResources",
	2002:   "Recall",
	2003:   "ArmyLimit",
	2004:   "Repair",
	2005:   "PowerObtain",
	2006:   "GatherIncrease",
	2007:   "MMReward",
	5000:   "FreeTime",
	100001: "Talent1",
	100002: "Talent2",
	100003: "Talent3",
	100004: "Talent4",
	100005: "Talent5",
	100006: "Talent6",
	100007: "Talent7",
	100008: "Talent8",
	100009: "Talent9",
	100010: "Talent10",
	100011: "Talent11",
	100012: "Talent12",
	100013: "Talent13",
	100014: "Talent14",
	100015: "Talent15",
	100016: "Talent16",
	10022:  "BuBingT2",
	10023:  "BuBingT3",
	10024:  "BuBingT4",
	10025:  "BuBingT5",
	10012:  "TankT2",
	10013:  "TankT3",
	10014:  "TankT4",
	10015:  "TankT5",
	10032:  "JiJiaT2",
	10033:  "JiJiaT3",
	10034:  "JiJiaT4",
	10035:  "JiJiaT5",
	10041:  "FeiJiT5",
	10042:  "FeiJiT2",
	10043:  "FeiJiT3",
	10044:  "FeiJiT4",
	10045:  "FangkongT2",
	10046:  "FangkongT3",
	10047:  "FangkongT4",
	10048:  "CibaoT2",
	10049:  "CibaoT3",
	10050:  "CibaoT4",
	10051:  "FanTankT2",
	10052:  "FanTankT3",
	10053:  "FanTankT4",
	10054:  "DiaobaoT2",
	10055:  "DiaobaoT3",
	10056:  "DiaobaoT4",
	10057:  "AttMonsLevel",
	10058:  "AttMonsCount",
	5001:   "ResSpeedReduce",
	5002:   "BuildSpeedReduce",
	5003:   "MarchTimeReduce",
	5004:   "ResourcePSReduce",
	5005:   "UnitSpeedReduce",
	5006:   "PSCash2Reduce",
	5007:   "GroupAttackReduce",
	5008:   "GroupDefenseReduce",
	5009:   "GroupHPReduce",
}
var AtttibuteType_value = map[string]int32{
	"PSCash1":                0,
	"PSCash2":                2,
	"PSCash3":                3,
	"PSCash4":                4,
	"PSCash5":                5,
	"CSCash1":                6,
	"CSCash2":                7,
	"CSCash3":                8,
	"CSCash4":                9,
	"CSCash5":                10,
	"PTSource":               11,
	"Weight":                 12,
	"MonMarchTime":           13,
	"MarchTime":              14,
	"KillWounded":            15,
	"Power":                  16,
	"BuildSpeed":             17,
	"WoundedCount":           18,
	"CureSpeed":              19,
	"UnitCount":              20,
	"DefenderAttack":         21,
	"DefenderDefense":        22,
	"ToWounded":              23,
	"UnitSpeed":              24,
	"AttackTank":             25,
	"AttackBubing":           26,
	"AttackFeiji":            27,
	"AttackJijia":            28,
	"DefenseTank":            29,
	"DefenseBubing":          30,
	"DefenseFeiji":           31,
	"DefenseJijia":           32,
	"HPTank":                 33,
	"HPBubing":               34,
	"HPFeiji":                35,
	"HPJijia":                36,
	"ArmyCount":              37,
	"RideCount":              38,
	"TankSpeed":              39,
	"FeijiSpeed":             40,
	"JijiaSpeed":             41,
	"BubingSpeed":            42,
	"TrapSpeed":              43,
	"ShieldDurable":          44,
	"AttackTrap":             45,
	"TrapNumber":             46,
	"AggregationSpeed":       47,
	"TransactionTax":         50,
	"ArmyCount2":             51,
	"ResSpeed":               52,
	"SiegeAttack":            53,
	"ResourcePS":             54,
	"ResourceCS":             55,
	"TrapHP":                 56,
	"PowerLimit":             57,
	"GroupHP":                58,
	"GroupDefense":           59,
	"GroupAttack":            60,
	"DefenderHP":             61,
	"AttackATK":              62,
	"AttackDEF":              63,
	"AttackHP":               64,
	"AttackcityATK":          65,
	"AttackcityDEF":          66,
	"AttackcityHP":           67,
	"BuildResourceReduce":    68,
	"ResearchResourceReduce": 69,
	"CureResourceReduce":     70,
	"TrapResourceReduce":     71,
	"CtrapResourceReduce":    72,
	"GemGetProbability":      73,
	"BubingTrainReduce":      74,
	"TankTrainReduce":        75,
	"JijiaTrainReduce":       76,
	"FeijiTrainReduce":       77,
	"CollectionMarchTime":    78,
	"MonAttack":              79,
	"WoundedCount2":          80,
	"PowerReduce":            81,
	"FangkongT2Reduce":       82,
	"CibaoT2Reduce":          83,
	"FanTankT2Reduce":        84,
	"DiaobaoT2Reduce":        85,
	"FangkongT3Reduce":       86,
	"CibaoT3Reduce":          87,
	"FanTankT3Reduce":        88,
	"DiaobaoT3Reduce":        89,
	"FangkongT4Reduce":       90,
	"CibaoT4Reduce":          91,
	"FanTankT4Reduce":        92,
	"DiaobaoT4Reduce":        93,
	"BubingT2Reduce":         94,
	"TankT2Reduce":           95,
	"JijiaT2Reduce":          96,
	"FeijiT2Reduce":          97,
	"BubingT3Reduce":         98,
	"TankT3Reduce":           99,
	"JijiaT3Reduce":          100,
	"FeijiT3Reduce":          101,
	"BubingT4Reduce":         102,
	"TankT4Reduce":           103,
	"JijiaT4Reduce":          104,
	"FeijiT4Reduce":          105,
	"HeroAttack":             106,
	"HeroSpeed":              107,
	"EquipMakeSpeed":         108,
	"CommanderExpAdd":        109,
	"MilitaryDamage":         110,
	"HuntDamge":              111,
	"WallDef":                112,
	"AbsHitLevelBubing":      113,
	"AbsHitLevelTank":        114,
	"AbsHitLevelFeiji":       115,
	"AbsHitLevelHuoPao":      116,
	"AbsDodgeLevelBubing":    117,
	"AbsDodgeLevelTank":      118,
	"AbsDodgeLevelFeiji":     119,
	"AbsDodgeLevelHuoPao":    120,
	"AbsBaoJiLevelBubing":    121,
	"AbsBaoJiLevelTank":      122,
	"AbsBaoJiLevelFeiji":     123,
	"AbsBaoJiLevelHuoPao":    124,
	"AbsKangBaoLevelBubing":  125,
	"AbsKangBaoLevelTank":    126,
	"AbsKangBaoLevelFeiji":   127,
	"AbsKangBaoLevelHuoPao":  128,
	"AbsHitLevelGroup":       129,
	"AbsDodgeLevelGroup":     130,
	"AbsBaoJiLevelGroup":     131,
	"AbsKangBaoLevelGroup":   132,
	"PerHitLevelBubing":      133,
	"PerHitLevelTank":        134,
	"PerHitLevelFeiji":       135,
	"PerHitLevelHuoPao":      136,
	"PerDodgeLevelBubing":    137,
	"PerDodgeLevelTank":      138,
	"PerDodgeLevelFeiji":     139,
	"PerDodgeLevelHuoPao":    140,
	"PerBaoJiLevelBubing":    141,
	"PerBaoJiLevelTank":      142,
	"PerBaoJiLevelFeiji":     143,
	"PerBaoJiLevelHuoPao":    144,
	"PerKangBaoLevelBubing":  145,
	"PerKangBaoLevelTank":    146,
	"PerKangBaoLevelFeiji":   147,
	"PerKangBaoLevelHuoPao":  148,
	"PerHitLevelGroup":       149,
	"PerDodgeLevelGroup":     150,
	"PerBaoJiLevelGroup":     151,
	"PerKangBaoLevelGroup":   152,
	"HitRateBubing":          153,
	"HitRateTank":            154,
	"HitRateFeiji":           155,
	"HitRateHuoPao":          156,
	"BaoJiRateBubing":        157,
	"BaoJiRateTank":          158,
	"BaoJiRateFeiji":         159,
	"BaoJiRateHuoPao":        160,
	"HitRateGroup":           161,
	"BaoJiRateGroup":         162,
	"HunterMonsDef":          163,
	"HunterMonsLife":         164,
	"HunterMonsAtk":          165,
	"HunterMonsDemage":       166,
	"GroupHP2":               167,
	"GroupHP3":               168,
	"GroupDefense2":          169,
	"GroupDefense3":          170,
	"GroupAttack2":           171,
	"GroupAttack3":           172,
	"ArmyCount3":             173,
	"ArmyCount4":             174,
	"BossRed":                175,
	"MonAtt":                 176,
	"MonDef":                 177,
	"MonHp":                  178,
	"MonDam":                 179,
	"MonRed":                 180,
	"DemageRise":             181,
	"HurtRed":                182,
	"BubingT5Reduce":         183,
	"TankT5Reduce":           184,
	"JijiaT5Reduce":          185,
	"FeijiT5Reduce":          186,
	"UnionMember":            1001,
	"UnionHelp":              1002,
	"MaxAggregation":         1003,
	"DiamondMine":            1004,
	"Reinforcement":          1005,
	"CityCapacity":           1006,
	"CityDurability":         1007,
	"CityMonster":            1008,
	"CityReinforcement":      1009,
	"UnionHelpTime":          1010,
	"GetTheResources":        2001,
	"Recall":                 2002,
	"ArmyLimit":              2003,
	"Repair":                 2004,
	"PowerObtain":            2005,
	"GatherIncrease":         2006,
	"MMReward":               2007,
	"FreeTime":               5000,
	"Talent1":                100001,
	"Talent2":                100002,
	"Talent3":                100003,
	"Talent4":                100004,
	"Talent5":                100005,
	"Talent6":                100006,
	"Talent7":                100007,
	"Talent8":                100008,
	"Talent9":                100009,
	"Talent10":               100010,
	"Talent11":               100011,
	"Talent12":               100012,
	"Talent13":               100013,
	"Talent14":               100014,
	"Talent15":               100015,
	"Talent16":               100016,
	"BuBingT2":               10022,
	"BuBingT3":               10023,
	"BuBingT4":               10024,
	"BuBingT5":               10025,
	"TankT2":                 10012,
	"TankT3":                 10013,
	"TankT4":                 10014,
	"TankT5":                 10015,
	"JiJiaT2":                10032,
	"JiJiaT3":                10033,
	"JiJiaT4":                10034,
	"JiJiaT5":                10035,
	"FeiJiT5":                10041,
	"FeiJiT2":                10042,
	"FeiJiT3":                10043,
	"FeiJiT4":                10044,
	"FangkongT2":             10045,
	"FangkongT3":             10046,
	"FangkongT4":             10047,
	"CibaoT2":                10048,
	"CibaoT3":                10049,
	"CibaoT4":                10050,
	"FanTankT2":              10051,
	"FanTankT3":              10052,
	"FanTankT4":              10053,
	"DiaobaoT2":              10054,
	"DiaobaoT3":              10055,
	"DiaobaoT4":              10056,
	"AttMonsLevel":           10057,
	"AttMonsCount":           10058,
	"ResSpeedReduce":         5001,
	"BuildSpeedReduce":       5002,
	"MarchTimeReduce":        5003,
	"ResourcePSReduce":       5004,
	"UnitSpeedReduce":        5005,
	"PSCash2Reduce":          5006,
	"GroupAttackReduce":      5007,
	"GroupDefenseReduce":     5008,
	"GroupHPReduce":          5009,
}

func (x AtttibuteType) String() string {
	return proto.EnumName(AtttibuteType_name, int32(x))
}
func (AtttibuteType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{21} }

// 属性加成来源
type AttributeSource int32

const (
	AttributeSource_Research          AttributeSource = 0
	AttributeSource_Hero              AttributeSource = 2
	AttributeSource_Item              AttributeSource = 3
	AttributeSource_League            AttributeSource = 4
	AttributeSource_Talent            AttributeSource = 5
	AttributeSource_HeroTalent        AttributeSource = 6
	AttributeSource_City              AttributeSource = 7
	AttributeSource_Statue            AttributeSource = 8
	AttributeSource_PowerStation      AttributeSource = 9
	AttributeSource_VIP               AttributeSource = 10
	AttributeSource_Title             AttributeSource = 11
	AttributeSource_ServerBuff        AttributeSource = 12
	AttributeSource_CityNormal        AttributeSource = 13
	AttributeSource_CommanderEquip    AttributeSource = 14
	AttributeSource_Activity          AttributeSource = 15
	AttributeSource_CommanderImprison AttributeSource = 16
	AttributeSource_KillCommander     AttributeSource = 17
	AttributeSource_MainCitySkin      AttributeSource = 18
	AttributeSource_SubscribeGift     AttributeSource = 19
	AttributeSource_LeagueCenter      AttributeSource = 20
	AttributeSource_WarHappening      AttributeSource = 21
	AttributeSource_LeagueTitle       AttributeSource = 22
	AttributeSource_TBServerBuff      AttributeSource = 23
	AttributeSource_TBMiracleWarBuff  AttributeSource = 24
	AttributeSource_ASBuffTitle       AttributeSource = 25
)

var AttributeSource_name = map[int32]string{
	0:  "Research",
	2:  "Hero",
	3:  "Item",
	4:  "League",
	5:  "Talent",
	6:  "HeroTalent",
	7:  "City",
	8:  "Statue",
	9:  "PowerStation",
	10: "VIP",
	11: "Title",
	12: "ServerBuff",
	13: "CityNormal",
	14: "CommanderEquip",
	15: "Activity",
	16: "CommanderImprison",
	17: "KillCommander",
	18: "MainCitySkin",
	19: "SubscribeGift",
	20: "LeagueCenter",
	21: "WarHappening",
	22: "LeagueTitle",
	23: "TBServerBuff",
	24: "TBMiracleWarBuff",
	25: "ASBuffTitle",
}
var AttributeSource_value = map[string]int32{
	"Research":          0,
	"Hero":              2,
	"Item":              3,
	"League":            4,
	"Talent":            5,
	"HeroTalent":        6,
	"City":              7,
	"Statue":            8,
	"PowerStation":      9,
	"VIP":               10,
	"Title":             11,
	"ServerBuff":        12,
	"CityNormal":        13,
	"CommanderEquip":    14,
	"Activity":          15,
	"CommanderImprison": 16,
	"KillCommander":     17,
	"MainCitySkin":      18,
	"SubscribeGift":     19,
	"LeagueCenter":      20,
	"WarHappening":      21,
	"LeagueTitle":       22,
	"TBServerBuff":      23,
	"TBMiracleWarBuff":  24,
	"ASBuffTitle":       25,
}

func (x AttributeSource) String() string {
	return proto.EnumName(AttributeSource_name, int32(x))
}
func (AttributeSource) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{22} }

// 物品大类型
type ItemMainType int32

const (
	ItemMainType_IMT_RESOURCE           ItemMainType = 0
	ItemMainType_IMT_BATTLE             ItemMainType = 2
	ItemMainType_IMT_BUFF               ItemMainType = 3
	ItemMainType_IMT_HERO_FRAGMENT      ItemMainType = 4
	ItemMainType_IMT_MAINCITY           ItemMainType = 5
	ItemMainType_IMT_LEAGUEGIFT         ItemMainType = 6
	ItemMainType_IMT_SPECIALGIFT        ItemMainType = 7
	ItemMainType_IMT_OTHER              ItemMainType = 8
	ItemMainType_IMT_DROPPACK           ItemMainType = 12
	ItemMainType_IMT_SUPPLY             ItemMainType = 15
	ItemMainType_IMT_HERO_EQUIPMENT     ItemMainType = 16
	ItemMainType_IMT_COMMANDER_EQUIP    ItemMainType = 17
	ItemMainType_IMT_COMMANDER_MATERIAL ItemMainType = 18
	ItemMainType_IMT_HERO               ItemMainType = 19
)

var ItemMainType_name = map[int32]string{
	0:  "IMT_RESOURCE",
	2:  "IMT_BATTLE",
	3:  "IMT_BUFF",
	4:  "IMT_HERO_FRAGMENT",
	5:  "IMT_MAINCITY",
	6:  "IMT_LEAGUEGIFT",
	7:  "IMT_SPECIALGIFT",
	8:  "IMT_OTHER",
	12: "IMT_DROPPACK",
	15: "IMT_SUPPLY",
	16: "IMT_HERO_EQUIPMENT",
	17: "IMT_COMMANDER_EQUIP",
	18: "IMT_COMMANDER_MATERIAL",
	19: "IMT_HERO",
}
var ItemMainType_value = map[string]int32{
	"IMT_RESOURCE":           0,
	"IMT_BATTLE":             2,
	"IMT_BUFF":               3,
	"IMT_HERO_FRAGMENT":      4,
	"IMT_MAINCITY":           5,
	"IMT_LEAGUEGIFT":         6,
	"IMT_SPECIALGIFT":        7,
	"IMT_OTHER":              8,
	"IMT_DROPPACK":           12,
	"IMT_SUPPLY":             15,
	"IMT_HERO_EQUIPMENT":     16,
	"IMT_COMMANDER_EQUIP":    17,
	"IMT_COMMANDER_MATERIAL": 18,
	"IMT_HERO":               19,
}

func (x ItemMainType) String() string {
	return proto.EnumName(ItemMainType_name, int32(x))
}
func (ItemMainType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{23} }

// 物品小类型
type ItemSubType int32

const (
	ItemSubType_IST_RESOURCE                      ItemSubType = 0
	ItemSubType_IST_RESOURCE_RANDOM               ItemSubType = 102
	ItemSubType_IST_RESOURCE_CHOOSE_RES           ItemSubType = 103
	ItemSubType_IST_RESOURCE_CHOOSE_ITEM          ItemSubType = 104
	ItemSubType_IST_BATTLE_MOVECITY_RANDOM        ItemSubType = 201
	ItemSubType_IST_BATTLE_MOVECITY_ADVANCE       ItemSubType = 202
	ItemSubType_IST_BATTLE_MOVECITY_ALLIANCE      ItemSubType = 203
	ItemSubType_IST_BATTLE_SHIELD                 ItemSubType = 204
	ItemSubType_IST_BATTLE_FOG_OF_WAR             ItemSubType = 205
	ItemSubType_IST_BATTLE_SPEEDUP_MARCH          ItemSubType = 206
	ItemSubType_IST_BATTLE_TROOP_ENLARGE          ItemSubType = 207
	ItemSubType_IST_BATTLE_RETREAT_MASS           ItemSubType = 208
	ItemSubType_IST_BATTLE_RETREAT_MARCH          ItemSubType = 209
	ItemSubType_IST_BATTLE_ADD_ATTACK             ItemSubType = 210
	ItemSubType_IST_BATTLE_ADD_DEFEND             ItemSubType = 211
	ItemSubType_IST_BATTLE_ADD_LIFE               ItemSubType = 212
	ItemSubType_IST_BATTLE_SPEEDUP_MASS           ItemSubType = 213
	ItemSubType_IST_BUFF_RESOURCE                 ItemSubType = 301
	ItemSubType_IST_BUFF_BUILD_QUEUE              ItemSubType = 302
	ItemSubType_IST_BUFF_VIP                      ItemSubType = 303
	ItemSubType_IST_BUFF_SPEEDUP_GATHER           ItemSubType = 304
	ItemSubType_IST_BUFF_RESOURCE_COKE            ItemSubType = 305
	ItemSubType_IST_BUFF_RESOURCE_GAS             ItemSubType = 306
	ItemSubType_IST_BUFF_RESOURCE_DEUTERIUM       ItemSubType = 307
	ItemSubType_IST_BUFF_RESOURCE_METAL           ItemSubType = 308
	ItemSubType_IST_BUFF_RESOURCE_CRYSTAL         ItemSubType = 309
	ItemSubType_IST_EQUIP_JACKET                  ItemSubType = 401
	ItemSubType_IST_EQUIP_TROUSER                 ItemSubType = 402
	ItemSubType_IST_EQUIP_HEAD                    ItemSubType = 403
	ItemSubType_IST_EQUIP_BELT                    ItemSubType = 404
	ItemSubType_IST_EQUIP_SHOES                   ItemSubType = 405
	ItemSubType_IST_EQUIP_ACCESSORY               ItemSubType = 406
	ItemSubType_IST_EQUIP_MATERIAL                ItemSubType = 410
	ItemSubType_IST_HDEADER_BOX                   ItemSubType = 411
	ItemSubType_IST_MAINCITY_SPEEDUP_COMMON       ItemSubType = 501
	ItemSubType_IST_MAINCITY_SPEEDUP_BUILD        ItemSubType = 502
	ItemSubType_IST_MAINCITY_SPEEDUP_PRODUCT_UNIT ItemSubType = 503
	ItemSubType_IST_MAINCITY_SPEEDUP_TECH         ItemSubType = 504
	ItemSubType_IST_MAINCITY_SPEEDUP_HOSPITAL     ItemSubType = 505
	ItemSubType_IST_MAINCITY_LEAGUE_BUILD_RECOVER ItemSubType = 506
	ItemSubType_IST_MAINCITY_SKILL_RESET          ItemSubType = 507
	ItemSubType_IST_MAINCITY_CHANGE_NAME          ItemSubType = 508
	ItemSubType_IST_MAINCITY_CHANGE_ICON          ItemSubType = 509
	ItemSubType_IST_MAINCITY_ADD_MAINCITY_DEFEND  ItemSubType = 510
	ItemSubType_IST_MAINCITY_TRUMPET_LITTLE       ItemSubType = 511
	ItemSubType_IST_MAINCITY_HERO_ADDEXP          ItemSubType = 512
	ItemSubType_IST_MAINCITY_HERO_RESPAWN         ItemSubType = 513
	ItemSubType_IST_MAINCITY_REPAIRDURABLE        ItemSubType = 514
	ItemSubType_IST_MAINCITY_COMMANDER_ADDEXP     ItemSubType = 515
	ItemSubType_IST_MAINCITY_HERO_DISPATCH        ItemSubType = 516
	ItemSubType_IST_MAINCITY_HERO_REFECTION       ItemSubType = 517
	ItemSubType_IST_MAINCITY_ALTER_NICK_NAME      ItemSubType = 518
	ItemSubType_IST_MAINCITY_ADD_ENERGY           ItemSubType = 519
	ItemSubType_IST_MAINCITY_CHANGE_MAINCITY_SKIN ItemSubType = 520
	ItemSubType_IST_MAINCITY_SPEEDUP_FACOTRY      ItemSubType = 521
	ItemSubType_IST_MAINCITY_ADD_UNIT             ItemSubType = 522
	ItemSubType_IST_MAINCITY_COMMANDER_HEAD       ItemSubType = 523
	ItemSubType_IST_MAINCTTY_COMMANDER_MODEL      ItemSubType = 524
	ItemSubType_IST_MAINCTTY_ADD_REWARD           ItemSubType = 525
	ItemSubType_IST_MAINCTTY_LEAGUE_TASK_RESET    ItemSubType = 526
	ItemSubType_IST_MAINCTTY_SUMMON_MONSTER       ItemSubType = 527
	ItemSubType_IST_MAINCITY_UNIT_CAPABILITY      ItemSubType = 528
	ItemSubType_IST_HERO_FRAGMENT                 ItemSubType = 601
	ItemSubType_IST_HERO_BLUE_PRINT               ItemSubType = 602
	ItemSubType_IST_HERO_BLUE_PRINT_FRAGMENT      ItemSubType = 603
	// 第二建筑队列时间
	ItemSubType_IST_MAINCTTY_BUILD_SN ItemSubType = 604
	// 耐久恢复
	ItemSubType_IST_MAINCITY_SPEEDUP_Durable ItemSubType = 605
)

var ItemSubType_name = map[int32]string{
	0:   "IST_RESOURCE",
	102: "IST_RESOURCE_RANDOM",
	103: "IST_RESOURCE_CHOOSE_RES",
	104: "IST_RESOURCE_CHOOSE_ITEM",
	201: "IST_BATTLE_MOVECITY_RANDOM",
	202: "IST_BATTLE_MOVECITY_ADVANCE",
	203: "IST_BATTLE_MOVECITY_ALLIANCE",
	204: "IST_BATTLE_SHIELD",
	205: "IST_BATTLE_FOG_OF_WAR",
	206: "IST_BATTLE_SPEEDUP_MARCH",
	207: "IST_BATTLE_TROOP_ENLARGE",
	208: "IST_BATTLE_RETREAT_MASS",
	209: "IST_BATTLE_RETREAT_MARCH",
	210: "IST_BATTLE_ADD_ATTACK",
	211: "IST_BATTLE_ADD_DEFEND",
	212: "IST_BATTLE_ADD_LIFE",
	213: "IST_BATTLE_SPEEDUP_MASS",
	301: "IST_BUFF_RESOURCE",
	302: "IST_BUFF_BUILD_QUEUE",
	303: "IST_BUFF_VIP",
	304: "IST_BUFF_SPEEDUP_GATHER",
	305: "IST_BUFF_RESOURCE_COKE",
	306: "IST_BUFF_RESOURCE_GAS",
	307: "IST_BUFF_RESOURCE_DEUTERIUM",
	308: "IST_BUFF_RESOURCE_METAL",
	309: "IST_BUFF_RESOURCE_CRYSTAL",
	401: "IST_EQUIP_JACKET",
	402: "IST_EQUIP_TROUSER",
	403: "IST_EQUIP_HEAD",
	404: "IST_EQUIP_BELT",
	405: "IST_EQUIP_SHOES",
	406: "IST_EQUIP_ACCESSORY",
	410: "IST_EQUIP_MATERIAL",
	411: "IST_HDEADER_BOX",
	501: "IST_MAINCITY_SPEEDUP_COMMON",
	502: "IST_MAINCITY_SPEEDUP_BUILD",
	503: "IST_MAINCITY_SPEEDUP_PRODUCT_UNIT",
	504: "IST_MAINCITY_SPEEDUP_TECH",
	505: "IST_MAINCITY_SPEEDUP_HOSPITAL",
	506: "IST_MAINCITY_LEAGUE_BUILD_RECOVER",
	507: "IST_MAINCITY_SKILL_RESET",
	508: "IST_MAINCITY_CHANGE_NAME",
	509: "IST_MAINCITY_CHANGE_ICON",
	510: "IST_MAINCITY_ADD_MAINCITY_DEFEND",
	511: "IST_MAINCITY_TRUMPET_LITTLE",
	512: "IST_MAINCITY_HERO_ADDEXP",
	513: "IST_MAINCITY_HERO_RESPAWN",
	514: "IST_MAINCITY_REPAIRDURABLE",
	515: "IST_MAINCITY_COMMANDER_ADDEXP",
	516: "IST_MAINCITY_HERO_DISPATCH",
	517: "IST_MAINCITY_HERO_REFECTION",
	518: "IST_MAINCITY_ALTER_NICK_NAME",
	519: "IST_MAINCITY_ADD_ENERGY",
	520: "IST_MAINCITY_CHANGE_MAINCITY_SKIN",
	521: "IST_MAINCITY_SPEEDUP_FACOTRY",
	522: "IST_MAINCITY_ADD_UNIT",
	523: "IST_MAINCITY_COMMANDER_HEAD",
	524: "IST_MAINCTTY_COMMANDER_MODEL",
	525: "IST_MAINCTTY_ADD_REWARD",
	526: "IST_MAINCTTY_LEAGUE_TASK_RESET",
	527: "IST_MAINCTTY_SUMMON_MONSTER",
	528: "IST_MAINCITY_UNIT_CAPABILITY",
	601: "IST_HERO_FRAGMENT",
	602: "IST_HERO_BLUE_PRINT",
	603: "IST_HERO_BLUE_PRINT_FRAGMENT",
	604: "IST_MAINCTTY_BUILD_SN",
	605: "IST_MAINCITY_SPEEDUP_Durable",
}
var ItemSubType_value = map[string]int32{
	"IST_RESOURCE":                      0,
	"IST_RESOURCE_RANDOM":               102,
	"IST_RESOURCE_CHOOSE_RES":           103,
	"IST_RESOURCE_CHOOSE_ITEM":          104,
	"IST_BATTLE_MOVECITY_RANDOM":        201,
	"IST_BATTLE_MOVECITY_ADVANCE":       202,
	"IST_BATTLE_MOVECITY_ALLIANCE":      203,
	"IST_BATTLE_SHIELD":                 204,
	"IST_BATTLE_FOG_OF_WAR":             205,
	"IST_BATTLE_SPEEDUP_MARCH":          206,
	"IST_BATTLE_TROOP_ENLARGE":          207,
	"IST_BATTLE_RETREAT_MASS":           208,
	"IST_BATTLE_RETREAT_MARCH":          209,
	"IST_BATTLE_ADD_ATTACK":             210,
	"IST_BATTLE_ADD_DEFEND":             211,
	"IST_BATTLE_ADD_LIFE":               212,
	"IST_BATTLE_SPEEDUP_MASS":           213,
	"IST_BUFF_RESOURCE":                 301,
	"IST_BUFF_BUILD_QUEUE":              302,
	"IST_BUFF_VIP":                      303,
	"IST_BUFF_SPEEDUP_GATHER":           304,
	"IST_BUFF_RESOURCE_COKE":            305,
	"IST_BUFF_RESOURCE_GAS":             306,
	"IST_BUFF_RESOURCE_DEUTERIUM":       307,
	"IST_BUFF_RESOURCE_METAL":           308,
	"IST_BUFF_RESOURCE_CRYSTAL":         309,
	"IST_EQUIP_JACKET":                  401,
	"IST_EQUIP_TROUSER":                 402,
	"IST_EQUIP_HEAD":                    403,
	"IST_EQUIP_BELT":                    404,
	"IST_EQUIP_SHOES":                   405,
	"IST_EQUIP_ACCESSORY":               406,
	"IST_EQUIP_MATERIAL":                410,
	"IST_HDEADER_BOX":                   411,
	"IST_MAINCITY_SPEEDUP_COMMON":       501,
	"IST_MAINCITY_SPEEDUP_BUILD":        502,
	"IST_MAINCITY_SPEEDUP_PRODUCT_UNIT": 503,
	"IST_MAINCITY_SPEEDUP_TECH":         504,
	"IST_MAINCITY_SPEEDUP_HOSPITAL":     505,
	"IST_MAINCITY_LEAGUE_BUILD_RECOVER": 506,
	"IST_MAINCITY_SKILL_RESET":          507,
	"IST_MAINCITY_CHANGE_NAME":          508,
	"IST_MAINCITY_CHANGE_ICON":          509,
	"IST_MAINCITY_ADD_MAINCITY_DEFEND":  510,
	"IST_MAINCITY_TRUMPET_LITTLE":       511,
	"IST_MAINCITY_HERO_ADDEXP":          512,
	"IST_MAINCITY_HERO_RESPAWN":         513,
	"IST_MAINCITY_REPAIRDURABLE":        514,
	"IST_MAINCITY_COMMANDER_ADDEXP":     515,
	"IST_MAINCITY_HERO_DISPATCH":        516,
	"IST_MAINCITY_HERO_REFECTION":       517,
	"IST_MAINCITY_ALTER_NICK_NAME":      518,
	"IST_MAINCITY_ADD_ENERGY":           519,
	"IST_MAINCITY_CHANGE_MAINCITY_SKIN": 520,
	"IST_MAINCITY_SPEEDUP_FACOTRY":      521,
	"IST_MAINCITY_ADD_UNIT":             522,
	"IST_MAINCITY_COMMANDER_HEAD":       523,
	"IST_MAINCTTY_COMMANDER_MODEL":      524,
	"IST_MAINCTTY_ADD_REWARD":           525,
	"IST_MAINCTTY_LEAGUE_TASK_RESET":    526,
	"IST_MAINCTTY_SUMMON_MONSTER":       527,
	"IST_MAINCITY_UNIT_CAPABILITY":      528,
	"IST_HERO_FRAGMENT":                 601,
	"IST_HERO_BLUE_PRINT":               602,
	"IST_HERO_BLUE_PRINT_FRAGMENT":      603,
	"IST_MAINCTTY_BUILD_SN":             604,
	"IST_MAINCITY_SPEEDUP_Durable":      605,
}

func (x ItemSubType) String() string {
	return proto.EnumName(ItemSubType_name, int32(x))
}
func (ItemSubType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{24} }

type SpyType int32

const (
	SpyType_ST_INITIATIVE_RESOURCE             SpyType = 0
	SpyType_ST_INITIATIVE_VAGUE_TOTAL_UNIT     SpyType = 2
	SpyType_ST_INITIATIVE_VAGUE_PITFALL        SpyType = 3
	SpyType_ST_INITIATIVE_VAGUE_UNIT           SpyType = 4
	SpyType_ST_INITIATIVE_VAGUE_TOTAL_GARRISON SpyType = 5
	SpyType_ST_INITIATIVE_GARRISON_COMMANDER   SpyType = 6
	SpyType_ST_INITIATIVE_SHIELD               SpyType = 7
	SpyType_ST_INITIATIVE_LORDSINFO            SpyType = 8
	SpyType_ST_INITIATIVE_VAGUE_GARRISON       SpyType = 9
	SpyType_ST_INITIATIVE_UNIT                 SpyType = 10
	SpyType_ST_INITIATIVE_PITFALL              SpyType = 11
	SpyType_ST_INITIATIVE_GARRISON             SpyType = 12
	SpyType_ST_INITIATIVE_TECH                 SpyType = 13
	SpyType_ST_INITIATIVE_EQUIP                SpyType = 14
	SpyType_ST_PASSIVE_COMMANDER               SpyType = 15
	SpyType_ST_PASSIVE_ATTACK_TYPE             SpyType = 16
	SpyType_ST_PASSIVE_ARRIVE_TIME             SpyType = 17
	SpyType_ST_PASSIVE_START_TILE              SpyType = 18
	SpyType_ST_PASSIVE_VAGUE_TOTAL_UNIT        SpyType = 19
	SpyType_ST_PASSIVE_MAINCITY_LEVEL          SpyType = 20
	SpyType_ST_PASSIVE_VAGUE_UNIT              SpyType = 21
	SpyType_ST_PASSIVE_UNIT                    SpyType = 22
	SpyType_ST_PASSIVE_HEROINFO                SpyType = 23
	SpyType_ST_PASSIVE_TECH                    SpyType = 24
	SpyType_ST_PASSIVE_EQUIP                   SpyType = 25
	SpyType_ST_PASSIVE_TAGETINFO               SpyType = 26
	SpyType_ST_INITIATIVE_STATUE               SpyType = 27
	SpyType_ST_PASSIVE_STATUE                  SpyType = 28
	SpyType_ST_INITIATIVE_VAGUE_TOTAL_PITFALL  SpyType = 29
	SpyType_ST_PASSIVE_TOTAL_UNIT              SpyType = 30
)

var SpyType_name = map[int32]string{
	0:  "ST_INITIATIVE_RESOURCE",
	2:  "ST_INITIATIVE_VAGUE_TOTAL_UNIT",
	3:  "ST_INITIATIVE_VAGUE_PITFALL",
	4:  "ST_INITIATIVE_VAGUE_UNIT",
	5:  "ST_INITIATIVE_VAGUE_TOTAL_GARRISON",
	6:  "ST_INITIATIVE_GARRISON_COMMANDER",
	7:  "ST_INITIATIVE_SHIELD",
	8:  "ST_INITIATIVE_LORDSINFO",
	9:  "ST_INITIATIVE_VAGUE_GARRISON",
	10: "ST_INITIATIVE_UNIT",
	11: "ST_INITIATIVE_PITFALL",
	12: "ST_INITIATIVE_GARRISON",
	13: "ST_INITIATIVE_TECH",
	14: "ST_INITIATIVE_EQUIP",
	15: "ST_PASSIVE_COMMANDER",
	16: "ST_PASSIVE_ATTACK_TYPE",
	17: "ST_PASSIVE_ARRIVE_TIME",
	18: "ST_PASSIVE_START_TILE",
	19: "ST_PASSIVE_VAGUE_TOTAL_UNIT",
	20: "ST_PASSIVE_MAINCITY_LEVEL",
	21: "ST_PASSIVE_VAGUE_UNIT",
	22: "ST_PASSIVE_UNIT",
	23: "ST_PASSIVE_HEROINFO",
	24: "ST_PASSIVE_TECH",
	25: "ST_PASSIVE_EQUIP",
	26: "ST_PASSIVE_TAGETINFO",
	27: "ST_INITIATIVE_STATUE",
	28: "ST_PASSIVE_STATUE",
	29: "ST_INITIATIVE_VAGUE_TOTAL_PITFALL",
	30: "ST_PASSIVE_TOTAL_UNIT",
}
var SpyType_value = map[string]int32{
	"ST_INITIATIVE_RESOURCE":             0,
	"ST_INITIATIVE_VAGUE_TOTAL_UNIT":     2,
	"ST_INITIATIVE_VAGUE_PITFALL":        3,
	"ST_INITIATIVE_VAGUE_UNIT":           4,
	"ST_INITIATIVE_VAGUE_TOTAL_GARRISON": 5,
	"ST_INITIATIVE_GARRISON_COMMANDER":   6,
	"ST_INITIATIVE_SHIELD":               7,
	"ST_INITIATIVE_LORDSINFO":            8,
	"ST_INITIATIVE_VAGUE_GARRISON":       9,
	"ST_INITIATIVE_UNIT":                 10,
	"ST_INITIATIVE_PITFALL":              11,
	"ST_INITIATIVE_GARRISON":             12,
	"ST_INITIATIVE_TECH":                 13,
	"ST_INITIATIVE_EQUIP":                14,
	"ST_PASSIVE_COMMANDER":               15,
	"ST_PASSIVE_ATTACK_TYPE":             16,
	"ST_PASSIVE_ARRIVE_TIME":             17,
	"ST_PASSIVE_START_TILE":              18,
	"ST_PASSIVE_VAGUE_TOTAL_UNIT":        19,
	"ST_PASSIVE_MAINCITY_LEVEL":          20,
	"ST_PASSIVE_VAGUE_UNIT":              21,
	"ST_PASSIVE_UNIT":                    22,
	"ST_PASSIVE_HEROINFO":                23,
	"ST_PASSIVE_TECH":                    24,
	"ST_PASSIVE_EQUIP":                   25,
	"ST_PASSIVE_TAGETINFO":               26,
	"ST_INITIATIVE_STATUE":               27,
	"ST_PASSIVE_STATUE":                  28,
	"ST_INITIATIVE_VAGUE_TOTAL_PITFALL":  29,
	"ST_PASSIVE_TOTAL_UNIT":              30,
}

func (x SpyType) String() string {
	return proto.EnumName(SpyType_name, int32(x))
}
func (SpyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{25} }

// --------------指挥官装备相关--------------//
// 部位
type EquipPosType int32

const (
	EquipPosType_EPT_JACKET           EquipPosType = 0
	EquipPosType_EPT_TROUSER          EquipPosType = 2
	EquipPosType_EPT_HEAD             EquipPosType = 3
	EquipPosType_EPT_BELT             EquipPosType = 4
	EquipPosType_EPT_SHOES            EquipPosType = 5
	EquipPosType_EPT_ACCESSORY_FIRST  EquipPosType = 6
	EquipPosType_EPT_ACCESSORY_SECOND EquipPosType = 7
	EquipPosType_EPT_ACCESSORY_THIRD  EquipPosType = 8
)

var EquipPosType_name = map[int32]string{
	0: "EPT_JACKET",
	2: "EPT_TROUSER",
	3: "EPT_HEAD",
	4: "EPT_BELT",
	5: "EPT_SHOES",
	6: "EPT_ACCESSORY_FIRST",
	7: "EPT_ACCESSORY_SECOND",
	8: "EPT_ACCESSORY_THIRD",
}
var EquipPosType_value = map[string]int32{
	"EPT_JACKET":           0,
	"EPT_TROUSER":          2,
	"EPT_HEAD":             3,
	"EPT_BELT":             4,
	"EPT_SHOES":            5,
	"EPT_ACCESSORY_FIRST":  6,
	"EPT_ACCESSORY_SECOND": 7,
	"EPT_ACCESSORY_THIRD":  8,
}

func (x EquipPosType) String() string {
	return proto.EnumName(EquipPosType_name, int32(x))
}
func (EquipPosType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{26} }

// 品质
type EquipQualityType int32

const (
	EquipQualityType_EQT_WHITE  EquipQualityType = 0
	EquipQualityType_EQT_GREEN  EquipQualityType = 2
	EquipQualityType_EQT_BULE   EquipQualityType = 3
	EquipQualityType_EQT_PURPLE EquipQualityType = 4
	EquipQualityType_EQT_GOLD   EquipQualityType = 5
)

var EquipQualityType_name = map[int32]string{
	0: "EQT_WHITE",
	2: "EQT_GREEN",
	3: "EQT_BULE",
	4: "EQT_PURPLE",
	5: "EQT_GOLD",
}
var EquipQualityType_value = map[string]int32{
	"EQT_WHITE":  0,
	"EQT_GREEN":  2,
	"EQT_BULE":   3,
	"EQT_PURPLE": 4,
	"EQT_GOLD":   5,
}

func (x EquipQualityType) String() string {
	return proto.EnumName(EquipQualityType_name, int32(x))
}
func (EquipQualityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{27} }

// 指挥官装备状态
type CommanderEquipState int32

const (
	CommanderEquipState_CES_WAER    CommanderEquipState = 0
	CommanderEquipState_CES_TAKEOFF CommanderEquipState = 2
)

var CommanderEquipState_name = map[int32]string{
	0: "CES_WAER",
	2: "CES_TAKEOFF",
}
var CommanderEquipState_value = map[string]int32{
	"CES_WAER":    0,
	"CES_TAKEOFF": 2,
}

func (x CommanderEquipState) String() string {
	return proto.EnumName(CommanderEquipState_name, int32(x))
}
func (CommanderEquipState) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{28} }

// 联盟状态类型
type LeagueStausType int32

const (
	LeagueStausType_LST_PLAYER_JOIN          LeagueStausType = 0
	LeagueStausType_LST_PLAYER_QUIT          LeagueStausType = 2
	LeagueStausType_LST_PLAYER_LEVEL_CHANGED LeagueStausType = 3
	LeagueStausType_LST_CREATE_LEAGUE        LeagueStausType = 4
	LeagueStausType_LST_PLAYER_KICK_OUT      LeagueStausType = 5
	LeagueStausType_LST_OWNER_RECALL         LeagueStausType = 6
	LeagueStausType_LST_BUFF_TITLE           LeagueStausType = 7
)

var LeagueStausType_name = map[int32]string{
	0: "LST_PLAYER_JOIN",
	2: "LST_PLAYER_QUIT",
	3: "LST_PLAYER_LEVEL_CHANGED",
	4: "LST_CREATE_LEAGUE",
	5: "LST_PLAYER_KICK_OUT",
	6: "LST_OWNER_RECALL",
	7: "LST_BUFF_TITLE",
}
var LeagueStausType_value = map[string]int32{
	"LST_PLAYER_JOIN":          0,
	"LST_PLAYER_QUIT":          2,
	"LST_PLAYER_LEVEL_CHANGED": 3,
	"LST_CREATE_LEAGUE":        4,
	"LST_PLAYER_KICK_OUT":      5,
	"LST_OWNER_RECALL":         6,
	"LST_BUFF_TITLE":           7,
}

func (x LeagueStausType) String() string {
	return proto.EnumName(LeagueStausType_name, int32(x))
}
func (LeagueStausType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{29} }

// 任务状态
type DispatchTaskStatus int32

const (
	DispatchTaskStatus_DTS_NOT_RECEIVED DispatchTaskStatus = 0
	DispatchTaskStatus_DTS_WORKING      DispatchTaskStatus = 2
	DispatchTaskStatus_DTS_CAN_REWARD   DispatchTaskStatus = 3
	DispatchTaskStatus_DTS_FINISHED     DispatchTaskStatus = 4
)

var DispatchTaskStatus_name = map[int32]string{
	0: "DTS_NOT_RECEIVED",
	2: "DTS_WORKING",
	3: "DTS_CAN_REWARD",
	4: "DTS_FINISHED",
}
var DispatchTaskStatus_value = map[string]int32{
	"DTS_NOT_RECEIVED": 0,
	"DTS_WORKING":      2,
	"DTS_CAN_REWARD":   3,
	"DTS_FINISHED":     4,
}

func (x DispatchTaskStatus) String() string {
	return proto.EnumName(DispatchTaskStatus_name, int32(x))
}
func (DispatchTaskStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{30} }

// 雕像状态
type StatueStatus int32

const (
	StatueStatus_SS_BUILD_BUILDING StatueStatus = 0
	StatueStatus_SS_BUILD_FINISHED StatueStatus = 2
	StatueStatus_SS_BUILD_PLACED   StatueStatus = 3
)

var StatueStatus_name = map[int32]string{
	0: "SS_BUILD_BUILDING",
	2: "SS_BUILD_FINISHED",
	3: "SS_BUILD_PLACED",
}
var StatueStatus_value = map[string]int32{
	"SS_BUILD_BUILDING": 0,
	"SS_BUILD_FINISHED": 2,
	"SS_BUILD_PLACED":   3,
}

func (x StatueStatus) String() string {
	return proto.EnumName(StatueStatus_name, int32(x))
}
func (StatueStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{31} }

// 雕像操作
type StatueOp int32

const (
	StatueOp_SO_CALLBACK  StatueOp = 0
	StatueOp_SO_MOVE      StatueOp = 3
	StatueOp_SO_CONVERT   StatueOp = 4
	StatueOp_SO_OPEN      StatueOp = 5
	StatueOp_SO_ENHANCE   StatueOp = 6
	StatueOp_SO_DECOMPOSE StatueOp = 7
)

var StatueOp_name = map[int32]string{
	0: "SO_CALLBACK",
	3: "SO_MOVE",
	4: "SO_CONVERT",
	5: "SO_OPEN",
	6: "SO_ENHANCE",
	7: "SO_DECOMPOSE",
}
var StatueOp_value = map[string]int32{
	"SO_CALLBACK":  0,
	"SO_MOVE":      3,
	"SO_CONVERT":   4,
	"SO_OPEN":      5,
	"SO_ENHANCE":   6,
	"SO_DECOMPOSE": 7,
}

func (x StatueOp) String() string {
	return proto.EnumName(StatueOp_name, int32(x))
}
func (StatueOp) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{32} }

// 礼包子类型
type GiftSubType int32

const (
	GiftSubType_GST_NOMAL     GiftSubType = 0
	GiftSubType_GST_MONTH     GiftSubType = 2
	GiftSubType_GST_BMARKET   GiftSubType = 3
	GiftSubType_GST_RANDOM    GiftSubType = 4
	GiftSubType_GST_BOON      GiftSubType = 5
	GiftSubType_GST_KICKFACE  GiftSubType = 6
	GiftSubType_GST_INGOT     GiftSubType = 7
	GiftSubType_GST_BOON_V    GiftSubType = 8
	GiftSubType_GST_SUBSCRIBE GiftSubType = 9
	GiftSubType_GST_VIP       GiftSubType = 10
	// 活动礼包
	GiftSubType_GST_Activity  GiftSubType = 11
	GiftSubType_GST_PayUnlock GiftSubType = 12
)

var GiftSubType_name = map[int32]string{
	0:  "GST_NOMAL",
	2:  "GST_MONTH",
	3:  "GST_BMARKET",
	4:  "GST_RANDOM",
	5:  "GST_BOON",
	6:  "GST_KICKFACE",
	7:  "GST_INGOT",
	8:  "GST_BOON_V",
	9:  "GST_SUBSCRIBE",
	10: "GST_VIP",
	11: "GST_Activity",
	12: "GST_PayUnlock",
}
var GiftSubType_value = map[string]int32{
	"GST_NOMAL":     0,
	"GST_MONTH":     2,
	"GST_BMARKET":   3,
	"GST_RANDOM":    4,
	"GST_BOON":      5,
	"GST_KICKFACE":  6,
	"GST_INGOT":     7,
	"GST_BOON_V":    8,
	"GST_SUBSCRIBE": 9,
	"GST_VIP":       10,
	"GST_Activity":  11,
	"GST_PayUnlock": 12,
}

func (x GiftSubType) String() string {
	return proto.EnumName(GiftSubType_name, int32(x))
}
func (GiftSubType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{33} }

// 触发的礼包条件类型
type GiftConditionType int32

const (
	GiftConditionType_GCT_KEEP_PAY         GiftConditionType = 0
	GiftConditionType_GCT_KEEP_NO_PAY      GiftConditionType = 2
	GiftConditionType_GCT_VIP_LEVEL        GiftConditionType = 3
	GiftConditionType_GCT_COMMANDER_LEVEL  GiftConditionType = 4
	GiftConditionType_GCT_MAINCITY_LEVEL   GiftConditionType = 5
	GiftConditionType_GCT_OPEN_SERVER_TIME GiftConditionType = 6
	GiftConditionType_GCT_OPEN_ACTIVITY    GiftConditionType = 7
	GiftConditionType_GCT_LOOP_MONTH_DAY   GiftConditionType = 8
	GiftConditionType_GCT_LOOP_WEEK_DAY    GiftConditionType = 9
	GiftConditionType_GCT_LOSS_COUNT       GiftConditionType = 10
	GiftConditionType_GCT_OFFLINE_TIME     GiftConditionType = 11
	GiftConditionType_GCT_FIR_GET_HERO     GiftConditionType = 12
	GiftConditionType_GCT_UPTO_STARLV      GiftConditionType = 13
	GiftConditionType_GCT_POWER_LOSE       GiftConditionType = 14
	GiftConditionType_GCT_EQUIP_QUALITY    GiftConditionType = 15
	GiftConditionType_GCT_TXDS_STAGE_END   GiftConditionType = 16
	GiftConditionType_GCT_LABEL            GiftConditionType = 17
	GiftConditionType_GCT_LoginDay         GiftConditionType = 18
)

var GiftConditionType_name = map[int32]string{
	0:  "GCT_KEEP_PAY",
	2:  "GCT_KEEP_NO_PAY",
	3:  "GCT_VIP_LEVEL",
	4:  "GCT_COMMANDER_LEVEL",
	5:  "GCT_MAINCITY_LEVEL",
	6:  "GCT_OPEN_SERVER_TIME",
	7:  "GCT_OPEN_ACTIVITY",
	8:  "GCT_LOOP_MONTH_DAY",
	9:  "GCT_LOOP_WEEK_DAY",
	10: "GCT_LOSS_COUNT",
	11: "GCT_OFFLINE_TIME",
	12: "GCT_FIR_GET_HERO",
	13: "GCT_UPTO_STARLV",
	14: "GCT_POWER_LOSE",
	15: "GCT_EQUIP_QUALITY",
	16: "GCT_TXDS_STAGE_END",
	17: "GCT_LABEL",
	18: "GCT_LoginDay",
}
var GiftConditionType_value = map[string]int32{
	"GCT_KEEP_PAY":         0,
	"GCT_KEEP_NO_PAY":      2,
	"GCT_VIP_LEVEL":        3,
	"GCT_COMMANDER_LEVEL":  4,
	"GCT_MAINCITY_LEVEL":   5,
	"GCT_OPEN_SERVER_TIME": 6,
	"GCT_OPEN_ACTIVITY":    7,
	"GCT_LOOP_MONTH_DAY":   8,
	"GCT_LOOP_WEEK_DAY":    9,
	"GCT_LOSS_COUNT":       10,
	"GCT_OFFLINE_TIME":     11,
	"GCT_FIR_GET_HERO":     12,
	"GCT_UPTO_STARLV":      13,
	"GCT_POWER_LOSE":       14,
	"GCT_EQUIP_QUALITY":    15,
	"GCT_TXDS_STAGE_END":   16,
	"GCT_LABEL":            17,
	"GCT_LoginDay":         18,
}

func (x GiftConditionType) String() string {
	return proto.EnumName(GiftConditionType_name, int32(x))
}
func (GiftConditionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{34} }

// 活动映射类型
type ActivityMapingType int32

const (
	// ////没定义ID的活动//////
	ActivityMapingType_AMT_MIRACLE_WAR ActivityMapingType = 0
	// ////已自身定义了ID的活动//////
	ActivityMapingType_AMT_KILL_EVEN ActivityMapingType = 100004
)

var ActivityMapingType_name = map[int32]string{
	0:      "AMT_MIRACLE_WAR",
	100004: "AMT_KILL_EVEN",
}
var ActivityMapingType_value = map[string]int32{
	"AMT_MIRACLE_WAR": 0,
	"AMT_KILL_EVEN":   100004,
}

func (x ActivityMapingType) String() string {
	return proto.EnumName(ActivityMapingType_name, int32(x))
}
func (ActivityMapingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{35} }

// 客户端请求服务器翻译类型
type TranslateType int32

const (
	TranslateType_TT_CHAT_TITLE    TranslateType = 0
	TranslateType_TT_CHAT_ENTRY    TranslateType = 2
	TranslateType_TT_YOUMI_MESSAGE TranslateType = 3
)

var TranslateType_name = map[int32]string{
	0: "TT_CHAT_TITLE",
	2: "TT_CHAT_ENTRY",
	3: "TT_YOUMI_MESSAGE",
}
var TranslateType_value = map[string]int32{
	"TT_CHAT_TITLE":    0,
	"TT_CHAT_ENTRY":    2,
	"TT_YOUMI_MESSAGE": 3,
}

func (x TranslateType) String() string {
	return proto.EnumName(TranslateType_name, int32(x))
}
func (TranslateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{36} }

// 系统聊天类型
type SystemChatType int32

const (
	SystemChatType_SCT_PERMISSION_UP      SystemChatType = 0
	SystemChatType_SCT_PERMISSION_DOWN    SystemChatType = 2
	SystemChatType_SCT_OCCUPY_LEAGUE_CITY SystemChatType = 3
	SystemChatType_SCT_OPEN_LEAGUE_GIFT   SystemChatType = 4
	SystemChatType_SCT_EXIT_LEAGUE        SystemChatType = 5
	SystemChatType_SCT_JION_LEAGUE        SystemChatType = 6
	SystemChatType_SCT_POWER              SystemChatType = 7
	SystemChatType_SCT_TEXT               SystemChatType = 8
	SystemChatType_SCT_CREATE_LEAGUE      SystemChatType = 9
)

var SystemChatType_name = map[int32]string{
	0: "SCT_PERMISSION_UP",
	2: "SCT_PERMISSION_DOWN",
	3: "SCT_OCCUPY_LEAGUE_CITY",
	4: "SCT_OPEN_LEAGUE_GIFT",
	5: "SCT_EXIT_LEAGUE",
	6: "SCT_JION_LEAGUE",
	7: "SCT_POWER",
	8: "SCT_TEXT",
	9: "SCT_CREATE_LEAGUE",
}
var SystemChatType_value = map[string]int32{
	"SCT_PERMISSION_UP":      0,
	"SCT_PERMISSION_DOWN":    2,
	"SCT_OCCUPY_LEAGUE_CITY": 3,
	"SCT_OPEN_LEAGUE_GIFT":   4,
	"SCT_EXIT_LEAGUE":        5,
	"SCT_JION_LEAGUE":        6,
	"SCT_POWER":              7,
	"SCT_TEXT":               8,
	"SCT_CREATE_LEAGUE":      9,
}

func (x SystemChatType) String() string {
	return proto.EnumName(SystemChatType_name, int32(x))
}
func (SystemChatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{37} }

// 修改角色名称
type SetCharNameReturnValue int32

const (
	SetCharNameReturnValue_SCNRV_SUCCEEDED       SetCharNameReturnValue = 0
	SetCharNameReturnValue_SCNRV_INPUT_ERROR     SetCharNameReturnValue = 2
	SetCharNameReturnValue_SCNRV_LENGTH_ERROR    SetCharNameReturnValue = 3
	SetCharNameReturnValue_SCNRV_INPUT_NOT_VALID SetCharNameReturnValue = 4
	SetCharNameReturnValue_SCNRV_EXISTS_ERROR    SetCharNameReturnValue = 5
	SetCharNameReturnValue_SCNRV_CONDITION_ERROR SetCharNameReturnValue = 6
)

var SetCharNameReturnValue_name = map[int32]string{
	0: "SCNRV_SUCCEEDED",
	2: "SCNRV_INPUT_ERROR",
	3: "SCNRV_LENGTH_ERROR",
	4: "SCNRV_INPUT_NOT_VALID",
	5: "SCNRV_EXISTS_ERROR",
	6: "SCNRV_CONDITION_ERROR",
}
var SetCharNameReturnValue_value = map[string]int32{
	"SCNRV_SUCCEEDED":       0,
	"SCNRV_INPUT_ERROR":     2,
	"SCNRV_LENGTH_ERROR":    3,
	"SCNRV_INPUT_NOT_VALID": 4,
	"SCNRV_EXISTS_ERROR":    5,
	"SCNRV_CONDITION_ERROR": 6,
}

func (x SetCharNameReturnValue) String() string {
	return proto.EnumName(SetCharNameReturnValue_name, int32(x))
}
func (SetCharNameReturnValue) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{38} }

type WorldDataStatus int32

const (
	WorldDataStatus_WDS_Normal   WorldDataStatus = 0
	WorldDataStatus_WDS_Work     WorldDataStatus = 1
	WorldDataStatus_WDS_Bootcap  WorldDataStatus = 2
	WorldDataStatus_WDS_Burning  WorldDataStatus = 4
	WorldDataStatus_WDS_Battle   WorldDataStatus = 8
	WorldDataStatus_WDS_Delete   WorldDataStatus = 16
	WorldDataStatus_WDS_Blackout WorldDataStatus = 32
	WorldDataStatus_WDS_DelHp    WorldDataStatus = 64
)

var WorldDataStatus_name = map[int32]string{
	0:  "WDS_Normal",
	1:  "WDS_Work",
	2:  "WDS_Bootcap",
	4:  "WDS_Burning",
	8:  "WDS_Battle",
	16: "WDS_Delete",
	32: "WDS_Blackout",
	64: "WDS_DelHp",
}
var WorldDataStatus_value = map[string]int32{
	"WDS_Normal":   0,
	"WDS_Work":     1,
	"WDS_Bootcap":  2,
	"WDS_Burning":  4,
	"WDS_Battle":   8,
	"WDS_Delete":   16,
	"WDS_Blackout": 32,
	"WDS_DelHp":    64,
}

func (x WorldDataStatus) String() string {
	return proto.EnumName(WorldDataStatus_name, int32(x))
}
func (WorldDataStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{39} }

type StrollHeroType int32

const (
	StrollHeroType_SHT_Nothing          StrollHeroType = 0
	StrollHeroType_SHT_LeagueAmbassador StrollHeroType = 2
)

var StrollHeroType_name = map[int32]string{
	0: "SHT_Nothing",
	2: "SHT_LeagueAmbassador",
}
var StrollHeroType_value = map[string]int32{
	"SHT_Nothing":          0,
	"SHT_LeagueAmbassador": 2,
}

func (x StrollHeroType) String() string {
	return proto.EnumName(StrollHeroType_name, int32(x))
}
func (StrollHeroType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{40} }

type StrollHeroResult int32

const (
	StrollHeroResult_SHR_Succeeded           StrollHeroResult = 0
	StrollHeroResult_SHR_DoNothing           StrollHeroResult = 2
	StrollHeroResult_SHR_InvalidParameter    StrollHeroResult = 3
	StrollHeroResult_SHR_InternalServerError StrollHeroResult = 4
)

var StrollHeroResult_name = map[int32]string{
	0: "SHR_Succeeded",
	2: "SHR_DoNothing",
	3: "SHR_InvalidParameter",
	4: "SHR_InternalServerError",
}
var StrollHeroResult_value = map[string]int32{
	"SHR_Succeeded":           0,
	"SHR_DoNothing":           2,
	"SHR_InvalidParameter":    3,
	"SHR_InternalServerError": 4,
}

func (x StrollHeroResult) String() string {
	return proto.EnumName(StrollHeroResult_name, int32(x))
}
func (StrollHeroResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{41} }

// 联盟旗帜类型
type LeagueFlagType int32

const (
	LeagueFlagType_LFT_FLAG_COLOR      LeagueFlagType = 0
	LeagueFlagType_LFT_FLAG_BACKGROUND LeagueFlagType = 2
	LeagueFlagType_LFT_FLAG_ICON       LeagueFlagType = 3
)

var LeagueFlagType_name = map[int32]string{
	0: "LFT_FLAG_COLOR",
	2: "LFT_FLAG_BACKGROUND",
	3: "LFT_FLAG_ICON",
}
var LeagueFlagType_value = map[string]int32{
	"LFT_FLAG_COLOR":      0,
	"LFT_FLAG_BACKGROUND": 2,
	"LFT_FLAG_ICON":       3,
}

func (x LeagueFlagType) String() string {
	return proto.EnumName(LeagueFlagType_name, int32(x))
}
func (LeagueFlagType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{42} }

// 用户名存在性检查
type UserNameExistsResult int32

const (
	UserNameExistsResult_INVALID_ARGUMENTS     UserNameExistsResult = 0
	UserNameExistsResult_INTERNAL_SERVER_ERROR UserNameExistsResult = 2
	UserNameExistsResult_EXISTS                UserNameExistsResult = 3
	UserNameExistsResult_NOT_EXISTS            UserNameExistsResult = 4
)

var UserNameExistsResult_name = map[int32]string{
	0: "INVALID_ARGUMENTS",
	2: "INTERNAL_SERVER_ERROR",
	3: "EXISTS",
	4: "NOT_EXISTS",
}
var UserNameExistsResult_value = map[string]int32{
	"INVALID_ARGUMENTS":     0,
	"INTERNAL_SERVER_ERROR": 2,
	"EXISTS":                3,
	"NOT_EXISTS":            4,
}

func (x UserNameExistsResult) String() string {
	return proto.EnumName(UserNameExistsResult_name, int32(x))
}
func (UserNameExistsResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{43} }

// 推送消息类型
type PushMsgType int32

const (
	PushMsgType_PMT_UserBuildingFinish PushMsgType = 0
	PushMsgType_PMT_UserStatuaFinish   PushMsgType = 2
	PushMsgType_PMT_UserTrapFinish     PushMsgType = 3
	PushMsgType_PMT_UserUnitFinish     PushMsgType = 4
	PushMsgType_PMT_UserBeSpied        PushMsgType = 5
	PushMsgType_PMT_UserBeAttacted     PushMsgType = 6
	PushMsgType_PMT_UserBeMassed       PushMsgType = 7
	PushMsgType_PMT_blackoutInvalid    PushMsgType = 8
	PushMsgType_PMT_UserShieldExpire   PushMsgType = 9
	PushMsgType_PMT_LeagueMass         PushMsgType = 10
	PushMsgType_PMT_LeagueBeMass       PushMsgType = 11
	PushMsgType_PMT_CityBeSpied        PushMsgType = 12
	PushMsgType_PMT_CityBeAttacked     PushMsgType = 13
	PushMsgType_PMT_CityBeMass         PushMsgType = 14
	PushMsgType_PMT_CollectUnitBack    PushMsgType = 15
	PushMsgType_PMT_TransportUnitBack  PushMsgType = 16
	PushMsgType_PMT_MassUnitBack       PushMsgType = 17
	PushMsgType_PMT_GarrisonUnitBack   PushMsgType = 18
	PushMsgType_PMT_BestationedBack    PushMsgType = 19
	PushMsgType_PMT_HeroImprison       PushMsgType = 20
	PushMsgType_PMT_HeroKilled         PushMsgType = 21
	PushMsgType_PMT_HeroRelease        PushMsgType = 22
	PushMsgType_PMT_HeroSave           PushMsgType = 23
	PushMsgType_PMT_CommanderMsg       PushMsgType = 24
	PushMsgType_PMT_ActivityOpen       PushMsgType = 25
	PushMsgType_PMT_PowerMax           PushMsgType = 26
	PushMsgType_PMT_BlackMarket        PushMsgType = 27
	PushMsgType_PMT_MiracleWarStart    PushMsgType = 28
)

var PushMsgType_name = map[int32]string{
	0:  "PMT_UserBuildingFinish",
	2:  "PMT_UserStatuaFinish",
	3:  "PMT_UserTrapFinish",
	4:  "PMT_UserUnitFinish",
	5:  "PMT_UserBeSpied",
	6:  "PMT_UserBeAttacted",
	7:  "PMT_UserBeMassed",
	8:  "PMT_blackoutInvalid",
	9:  "PMT_UserShieldExpire",
	10: "PMT_LeagueMass",
	11: "PMT_LeagueBeMass",
	12: "PMT_CityBeSpied",
	13: "PMT_CityBeAttacked",
	14: "PMT_CityBeMass",
	15: "PMT_CollectUnitBack",
	16: "PMT_TransportUnitBack",
	17: "PMT_MassUnitBack",
	18: "PMT_GarrisonUnitBack",
	19: "PMT_BestationedBack",
	20: "PMT_HeroImprison",
	21: "PMT_HeroKilled",
	22: "PMT_HeroRelease",
	23: "PMT_HeroSave",
	24: "PMT_CommanderMsg",
	25: "PMT_ActivityOpen",
	26: "PMT_PowerMax",
	27: "PMT_BlackMarket",
	28: "PMT_MiracleWarStart",
}
var PushMsgType_value = map[string]int32{
	"PMT_UserBuildingFinish": 0,
	"PMT_UserStatuaFinish":   2,
	"PMT_UserTrapFinish":     3,
	"PMT_UserUnitFinish":     4,
	"PMT_UserBeSpied":        5,
	"PMT_UserBeAttacted":     6,
	"PMT_UserBeMassed":       7,
	"PMT_blackoutInvalid":    8,
	"PMT_UserShieldExpire":   9,
	"PMT_LeagueMass":         10,
	"PMT_LeagueBeMass":       11,
	"PMT_CityBeSpied":        12,
	"PMT_CityBeAttacked":     13,
	"PMT_CityBeMass":         14,
	"PMT_CollectUnitBack":    15,
	"PMT_TransportUnitBack":  16,
	"PMT_MassUnitBack":       17,
	"PMT_GarrisonUnitBack":   18,
	"PMT_BestationedBack":    19,
	"PMT_HeroImprison":       20,
	"PMT_HeroKilled":         21,
	"PMT_HeroRelease":        22,
	"PMT_HeroSave":           23,
	"PMT_CommanderMsg":       24,
	"PMT_ActivityOpen":       25,
	"PMT_PowerMax":           26,
	"PMT_BlackMarket":        27,
	"PMT_MiracleWarStart":    28,
}

func (x PushMsgType) String() string {
	return proto.EnumName(PushMsgType_name, int32(x))
}
func (PushMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{44} }

// 登陆类型
type LoginType int32

const (
	LoginType_LT_Visitor    LoginType = 0
	LoginType_LT_Google     LoginType = 2
	LoginType_LT_FaceBook   LoginType = 3
	LoginType_LT_Twitter    LoginType = 4
	LoginType_LT_GameCenter LoginType = 5
)

var LoginType_name = map[int32]string{
	0: "LT_Visitor",
	2: "LT_Google",
	3: "LT_FaceBook",
	4: "LT_Twitter",
	5: "LT_GameCenter",
}
var LoginType_value = map[string]int32{
	"LT_Visitor":    0,
	"LT_Google":     2,
	"LT_FaceBook":   3,
	"LT_Twitter":    4,
	"LT_GameCenter": 5,
}

func (x LoginType) String() string {
	return proto.EnumName(LoginType_name, int32(x))
}
func (LoginType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{45} }

type LoginReCode int32

const (
	LoginReCode_LRC_Ok                  LoginReCode = 0
	LoginReCode_LRC_Token_Verify_Failed LoginReCode = 2
	LoginReCode_LRC_Unknow              LoginReCode = 3
	LoginReCode_LRC_FORBID              LoginReCode = 4
	LoginReCode_LRC_Server_Upgrading    LoginReCode = 5
	LoginReCode_LRC_Server_Offline      LoginReCode = 6
)

var LoginReCode_name = map[int32]string{
	0: "LRC_Ok",
	2: "LRC_Token_Verify_Failed",
	3: "LRC_Unknow",
	4: "LRC_FORBID",
	5: "LRC_Server_Upgrading",
	6: "LRC_Server_Offline",
}
var LoginReCode_value = map[string]int32{
	"LRC_Ok":                  0,
	"LRC_Token_Verify_Failed": 2,
	"LRC_Unknow":              3,
	"LRC_FORBID":              4,
	"LRC_Server_Upgrading":    5,
	"LRC_Server_Offline":      6,
}

func (x LoginReCode) String() string {
	return proto.EnumName(LoginReCode_name, int32(x))
}
func (LoginReCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{46} }

type EveryoneMailConditionType int32

const (
	EveryoneMailConditionType_EMCT_VipLevel      EveryoneMailConditionType = 0
	EveryoneMailConditionType_EMCT_Channel       EveryoneMailConditionType = 2
	EveryoneMailConditionType_EMCT_MainCityLevel EveryoneMailConditionType = 3
	EveryoneMailConditionType_EMCT_CreateTime    EveryoneMailConditionType = 4
	EveryoneMailConditionType_EMCT_LeagueId      EveryoneMailConditionType = 5
	EveryoneMailConditionType_EMCT_ServerID      EveryoneMailConditionType = 6
	EveryoneMailConditionType_EMCT_ExpireTime    EveryoneMailConditionType = 7
	EveryoneMailConditionType_EMCT_Uid           EveryoneMailConditionType = 8
	EveryoneMailConditionType_EMCT_RegionId      EveryoneMailConditionType = 9
)

var EveryoneMailConditionType_name = map[int32]string{
	0: "EMCT_VipLevel",
	2: "EMCT_Channel",
	3: "EMCT_MainCityLevel",
	4: "EMCT_CreateTime",
	5: "EMCT_LeagueId",
	6: "EMCT_ServerID",
	7: "EMCT_ExpireTime",
	8: "EMCT_Uid",
	9: "EMCT_RegionId",
}
var EveryoneMailConditionType_value = map[string]int32{
	"EMCT_VipLevel":      0,
	"EMCT_Channel":       2,
	"EMCT_MainCityLevel": 3,
	"EMCT_CreateTime":    4,
	"EMCT_LeagueId":      5,
	"EMCT_ServerID":      6,
	"EMCT_ExpireTime":    7,
	"EMCT_Uid":           8,
	"EMCT_RegionId":      9,
}

func (x EveryoneMailConditionType) String() string {
	return proto.EnumName(EveryoneMailConditionType_name, int32(x))
}
func (EveryoneMailConditionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{47} }

type EveryoneMailType int32

const (
	EveryoneMailType_EMT_All    EveryoneMailType = 0
	EveryoneMailType_EMT_Person EveryoneMailType = 2
)

var EveryoneMailType_name = map[int32]string{
	0: "EMT_All",
	2: "EMT_Person",
}
var EveryoneMailType_value = map[string]int32{
	"EMT_All":    0,
	"EMT_Person": 2,
}

func (x EveryoneMailType) String() string {
	return proto.EnumName(EveryoneMailType_name, int32(x))
}
func (EveryoneMailType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{48} }

type ChangeServerRetCode int32

const (
	ChangeServerRetCode_CSRC_OK                       ChangeServerRetCode = 0
	ChangeServerRetCode_CSRC_In_Protect               ChangeServerRetCode = 2
	ChangeServerRetCode_CSRC_Sid_Err                  ChangeServerRetCode = 3
	ChangeServerRetCode_CSRC_Unknow                   ChangeServerRetCode = 4
	ChangeServerRetCode_CSRC_Uid_Err                  ChangeServerRetCode = 5
	ChangeServerRetCode_CSRC_Has_League               ChangeServerRetCode = 6
	ChangeServerRetCode_CSRC_Bestationed              ChangeServerRetCode = 7
	ChangeServerRetCode_CSRC_Attack                   ChangeServerRetCode = 8
	ChangeServerRetCode_CSRC_SpyInto                  ChangeServerRetCode = 9
	ChangeServerRetCode_CSRC_Garrison                 ChangeServerRetCode = 10
	ChangeServerRetCode_CSRC_Mass                     ChangeServerRetCode = 11
	ChangeServerRetCode_CSRC_Transport                ChangeServerRetCode = 12
	ChangeServerRetCode_CSRC_Collect                  ChangeServerRetCode = 13
	ChangeServerRetCode_CSRC_HasPrisoner              ChangeServerRetCode = 14
	ChangeServerRetCode_CSRC_HeroImprison             ChangeServerRetCode = 15
	ChangeServerRetCode_CSRC_Position_Err             ChangeServerRetCode = 16
	ChangeServerRetCode_CSRC_UserName_Exist           ChangeServerRetCode = 17
	ChangeServerRetCode_CSRC_Item_Count               ChangeServerRetCode = 18
	ChangeServerRetCode_CSRC_Server_Power_Limit       ChangeServerRetCode = 19
	ChangeServerRetCode_CSRC_Star_Pioneer_Power_Limit ChangeServerRetCode = 20
	ChangeServerRetCode_CSRC_Role_Count               ChangeServerRetCode = 21
	ChangeServerRetCode_CSRC_Resouce_Limit            ChangeServerRetCode = 22
	ChangeServerRetCode_CSRC_Local_Server_TimeStatue  ChangeServerRetCode = 23
	ChangeServerRetCode_CSRC_Des_Server_TimeStatue    ChangeServerRetCode = 24
	ChangeServerRetCode_CSRC_In_cd                    ChangeServerRetCode = 25
	ChangeServerRetCode_CSRC_MainCity_Level           ChangeServerRetCode = 26
	ChangeServerRetCode_CSRC_Server_Not_Open          ChangeServerRetCode = 27
	ChangeServerRetCode_CSRC_Global_Action            ChangeServerRetCode = 28
	ChangeServerRetCode_CSRC_Transfer_Battle_Stage    ChangeServerRetCode = 29
	ChangeServerRetCode_CSRC_WarHappening             ChangeServerRetCode = 30
)

var ChangeServerRetCode_name = map[int32]string{
	0:  "CSRC_OK",
	2:  "CSRC_In_Protect",
	3:  "CSRC_Sid_Err",
	4:  "CSRC_Unknow",
	5:  "CSRC_Uid_Err",
	6:  "CSRC_Has_League",
	7:  "CSRC_Bestationed",
	8:  "CSRC_Attack",
	9:  "CSRC_SpyInto",
	10: "CSRC_Garrison",
	11: "CSRC_Mass",
	12: "CSRC_Transport",
	13: "CSRC_Collect",
	14: "CSRC_HasPrisoner",
	15: "CSRC_HeroImprison",
	16: "CSRC_Position_Err",
	17: "CSRC_UserName_Exist",
	18: "CSRC_Item_Count",
	19: "CSRC_Server_Power_Limit",
	20: "CSRC_Star_Pioneer_Power_Limit",
	21: "CSRC_Role_Count",
	22: "CSRC_Resouce_Limit",
	23: "CSRC_Local_Server_TimeStatue",
	24: "CSRC_Des_Server_TimeStatue",
	25: "CSRC_In_cd",
	26: "CSRC_MainCity_Level",
	27: "CSRC_Server_Not_Open",
	28: "CSRC_Global_Action",
	29: "CSRC_Transfer_Battle_Stage",
	30: "CSRC_WarHappening",
}
var ChangeServerRetCode_value = map[string]int32{
	"CSRC_OK":                       0,
	"CSRC_In_Protect":               2,
	"CSRC_Sid_Err":                  3,
	"CSRC_Unknow":                   4,
	"CSRC_Uid_Err":                  5,
	"CSRC_Has_League":               6,
	"CSRC_Bestationed":              7,
	"CSRC_Attack":                   8,
	"CSRC_SpyInto":                  9,
	"CSRC_Garrison":                 10,
	"CSRC_Mass":                     11,
	"CSRC_Transport":                12,
	"CSRC_Collect":                  13,
	"CSRC_HasPrisoner":              14,
	"CSRC_HeroImprison":             15,
	"CSRC_Position_Err":             16,
	"CSRC_UserName_Exist":           17,
	"CSRC_Item_Count":               18,
	"CSRC_Server_Power_Limit":       19,
	"CSRC_Star_Pioneer_Power_Limit": 20,
	"CSRC_Role_Count":               21,
	"CSRC_Resouce_Limit":            22,
	"CSRC_Local_Server_TimeStatue":  23,
	"CSRC_Des_Server_TimeStatue":    24,
	"CSRC_In_cd":                    25,
	"CSRC_MainCity_Level":           26,
	"CSRC_Server_Not_Open":          27,
	"CSRC_Global_Action":            28,
	"CSRC_Transfer_Battle_Stage":    29,
	"CSRC_WarHappening":             30,
}

func (x ChangeServerRetCode) String() string {
	return proto.EnumName(ChangeServerRetCode_name, int32(x))
}
func (ChangeServerRetCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{49} }

type ActivityType int32

const (
	ActivityType_Individual   ActivityType = 0
	ActivityType_Hell         ActivityType = 2
	ActivityType_Day          ActivityType = 3
	ActivityType_LeagueCity   ActivityType = 4
	ActivityType_Slaughter    ActivityType = 7
	ActivityType_Buff_1       ActivityType = 8
	ActivityType_Buff_2       ActivityType = 9
	ActivityType_SpawnMine    ActivityType = 10
	ActivityType_SpwanUnit    ActivityType = 11
	ActivityType_LeagueCup    ActivityType = 12
	ActivityType_SevenDayTask ActivityType = 13
	ActivityType_CityWarAward ActivityType = 14
	ActivityType_Drop         ActivityType = 16
	ActivityType_Exchange     ActivityType = 17
)

var ActivityType_name = map[int32]string{
	0:  "Individual",
	2:  "Hell",
	3:  "Day",
	4:  "LeagueCity",
	7:  "Slaughter",
	8:  "Buff_1",
	9:  "Buff_2",
	10: "SpawnMine",
	11: "SpwanUnit",
	12: "LeagueCup",
	13: "SevenDayTask",
	14: "CityWarAward",
	16: "Drop",
	17: "Exchange",
}
var ActivityType_value = map[string]int32{
	"Individual":   0,
	"Hell":         2,
	"Day":          3,
	"LeagueCity":   4,
	"Slaughter":    7,
	"Buff_1":       8,
	"Buff_2":       9,
	"SpawnMine":    10,
	"SpwanUnit":    11,
	"LeagueCup":    12,
	"SevenDayTask": 13,
	"CityWarAward": 14,
	"Drop":         16,
	"Exchange":     17,
}

func (x ActivityType) String() string {
	return proto.EnumName(ActivityType_name, int32(x))
}
func (ActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{50} }

type ActivityStage int32

const (
	ActivityStage_AS_NoticeStage     ActivityStage = 0
	ActivityStage_AS_PrepareStage    ActivityStage = 1
	ActivityStage_AS_ProcessingStage ActivityStage = 2
	ActivityStage_AS_RewerdStage     ActivityStage = 3
	ActivityStage_AS_StopStaget      ActivityStage = 4
	ActivityStage_AS_JionStage       ActivityStage = 5
	ActivityStage_AS_InitStage       ActivityStage = 99
	ActivityStage_AS_OffStage        ActivityStage = 6
)

var ActivityStage_name = map[int32]string{
	0:  "AS_NoticeStage",
	1:  "AS_PrepareStage",
	2:  "AS_ProcessingStage",
	3:  "AS_RewerdStage",
	4:  "AS_StopStaget",
	5:  "AS_JionStage",
	99: "AS_InitStage",
	6:  "AS_OffStage",
}
var ActivityStage_value = map[string]int32{
	"AS_NoticeStage":     0,
	"AS_PrepareStage":    1,
	"AS_ProcessingStage": 2,
	"AS_RewerdStage":     3,
	"AS_StopStaget":      4,
	"AS_JionStage":       5,
	"AS_InitStage":       99,
	"AS_OffStage":        6,
}

func (x ActivityStage) String() string {
	return proto.EnumName(ActivityStage_name, int32(x))
}
func (ActivityStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{51} }

type ServerStatus int32

const (
	ServerStatus_SST_Normal    ServerStatus = 0
	ServerStatus_SST_Upgrading ServerStatus = 2
	ServerStatus_SST_Offline   ServerStatus = 3
)

var ServerStatus_name = map[int32]string{
	0: "SST_Normal",
	2: "SST_Upgrading",
	3: "SST_Offline",
}
var ServerStatus_value = map[string]int32{
	"SST_Normal":    0,
	"SST_Upgrading": 2,
	"SST_Offline":   3,
}

func (x ServerStatus) String() string {
	return proto.EnumName(ServerStatus_name, int32(x))
}
func (ServerStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{52} }

// 王战阶段类型
type MiracleWarStage int32

const (
	MiracleWarStage_MWS_UnOpenStage  MiracleWarStage = 0
	MiracleWarStage_MWS_PrepareStage MiracleWarStage = 2
	MiracleWarStage_MWS_ProtectStage MiracleWarStage = 3
	MiracleWarStage_MWS_FightStage   MiracleWarStage = 4
	MiracleWarStage_MWS_WaitStage    MiracleWarStage = 5
)

var MiracleWarStage_name = map[int32]string{
	0: "MWS_UnOpenStage",
	2: "MWS_PrepareStage",
	3: "MWS_ProtectStage",
	4: "MWS_FightStage",
	5: "MWS_WaitStage",
}
var MiracleWarStage_value = map[string]int32{
	"MWS_UnOpenStage":  0,
	"MWS_PrepareStage": 2,
	"MWS_ProtectStage": 3,
	"MWS_FightStage":   4,
	"MWS_WaitStage":    5,
}

func (x MiracleWarStage) String() string {
	return proto.EnumName(MiracleWarStage_name, int32(x))
}
func (MiracleWarStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{53} }

// 城市争霸阶段类型
type CityWarStage int32

const (
	CityWarStage_CWS_UnOpenStage  CityWarStage = 0
	CityWarStage_CWS_FightStage   CityWarStage = 2
	CityWarStage_CWS_ProtectStage CityWarStage = 3
	// 等待保护阶段
	CityWarStage_CWS_ProtectStage0 CityWarStage = 4
	CityWarStage_CWS_EndStage      CityWarStage = 5
)

var CityWarStage_name = map[int32]string{
	0: "CWS_UnOpenStage",
	2: "CWS_FightStage",
	3: "CWS_ProtectStage",
	4: "CWS_ProtectStage0",
	5: "CWS_EndStage",
}
var CityWarStage_value = map[string]int32{
	"CWS_UnOpenStage":   0,
	"CWS_FightStage":    2,
	"CWS_ProtectStage":  3,
	"CWS_ProtectStage0": 4,
	"CWS_EndStage":      5,
}

func (x CityWarStage) String() string {
	return proto.EnumName(CityWarStage_name, int32(x))
}
func (CityWarStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{54} }

// 王战头衔权限
type MiracleWarTitleRight int32

const (
	MiracleWarTitleRight_AppointTitle MiracleWarTitleRight = 0
	MiracleWarTitleRight_Gift         MiracleWarTitleRight = 2
	MiracleWarTitleRight_Buff         MiracleWarTitleRight = 3
	MiracleWarTitleRight_ReleaseAll   MiracleWarTitleRight = 4
	MiracleWarTitleRight_Notice       MiracleWarTitleRight = 5
)

var MiracleWarTitleRight_name = map[int32]string{
	0: "AppointTitle",
	2: "Gift",
	3: "Buff",
	4: "ReleaseAll",
	5: "Notice",
}
var MiracleWarTitleRight_value = map[string]int32{
	"AppointTitle": 0,
	"Gift":         2,
	"Buff":         3,
	"ReleaseAll":   4,
	"Notice":       5,
}

func (x MiracleWarTitleRight) String() string {
	return proto.EnumName(MiracleWarTitleRight_name, int32(x))
}
func (MiracleWarTitleRight) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{55} }

type MiracleTitle int32

const (
	MiracleTitle_Title1  MiracleTitle = 0
	MiracleTitle_Title2  MiracleTitle = 90000002
	MiracleTitle_Title3  MiracleTitle = 90000003
	MiracleTitle_Title4  MiracleTitle = 90000004
	MiracleTitle_Title5  MiracleTitle = 90000005
	MiracleTitle_Title6  MiracleTitle = 90000006
	MiracleTitle_Title7  MiracleTitle = 90000007
	MiracleTitle_Title8  MiracleTitle = 90000008
	MiracleTitle_Title9  MiracleTitle = 90000009
	MiracleTitle_Title10 MiracleTitle = 90000010
	MiracleTitle_Title11 MiracleTitle = 90000011
	MiracleTitle_Title12 MiracleTitle = 90000012
	MiracleTitle_Title13 MiracleTitle = 90000013
	MiracleTitle_Title14 MiracleTitle = 90000014
	MiracleTitle_Title15 MiracleTitle = 90000015
	MiracleTitle_Title16 MiracleTitle = 90000016
	MiracleTitle_Title17 MiracleTitle = 90000017
	MiracleTitle_Title18 MiracleTitle = 90000018
	MiracleTitle_Title19 MiracleTitle = 90000019
)

var MiracleTitle_name = map[int32]string{
	0:        "Title1",
	90000002: "Title2",
	90000003: "Title3",
	90000004: "Title4",
	90000005: "Title5",
	90000006: "Title6",
	90000007: "Title7",
	90000008: "Title8",
	90000009: "Title9",
	90000010: "Title10",
	90000011: "Title11",
	90000012: "Title12",
	90000013: "Title13",
	90000014: "Title14",
	90000015: "Title15",
	90000016: "Title16",
	90000017: "Title17",
	90000018: "Title18",
	90000019: "Title19",
}
var MiracleTitle_value = map[string]int32{
	"Title1":  0,
	"Title2":  90000002,
	"Title3":  90000003,
	"Title4":  90000004,
	"Title5":  90000005,
	"Title6":  90000006,
	"Title7":  90000007,
	"Title8":  90000008,
	"Title9":  90000009,
	"Title10": 90000010,
	"Title11": 90000011,
	"Title12": 90000012,
	"Title13": 90000013,
	"Title14": 90000014,
	"Title15": 90000015,
	"Title16": 90000016,
	"Title17": 90000017,
	"Title18": 90000018,
	"Title19": 90000019,
}

func (x MiracleTitle) String() string {
	return proto.EnumName(MiracleTitle_name, int32(x))
}
func (MiracleTitle) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{56} }

// 账号绑定结果
type AccountBindResult int32

const (
	AccountBindResult_BindResultOK          AccountBindResult = 0
	AccountBindResult_BindResultTokenError  AccountBindResult = 2
	AccountBindResult_BindResultBindedError AccountBindResult = 3
	AccountBindResult_BindResultLogicError  AccountBindResult = 4
)

var AccountBindResult_name = map[int32]string{
	0: "BindResultOK",
	2: "BindResultTokenError",
	3: "BindResultBindedError",
	4: "BindResultLogicError",
}
var AccountBindResult_value = map[string]int32{
	"BindResultOK":          0,
	"BindResultTokenError":  2,
	"BindResultBindedError": 3,
	"BindResultLogicError":  4,
}

func (x AccountBindResult) String() string {
	return proto.EnumName(AccountBindResult_name, int32(x))
}
func (AccountBindResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{57} }

// 账户绑定查询结果
type AccountBindQueryResult int32

const (
	AccountBindQueryResult_QueryResultNotBound      AccountBindQueryResult = 0
	AccountBindQueryResult_QueryResultBound         AccountBindQueryResult = 1
	AccountBindQueryResult_QueryResultInternalError AccountBindQueryResult = 2
	AccountBindQueryResult_QueryResultBoundWithSelf AccountBindQueryResult = 3
)

var AccountBindQueryResult_name = map[int32]string{
	0: "QueryResultNotBound",
	1: "QueryResultBound",
	2: "QueryResultInternalError",
	3: "QueryResultBoundWithSelf",
}
var AccountBindQueryResult_value = map[string]int32{
	"QueryResultNotBound":      0,
	"QueryResultBound":         1,
	"QueryResultInternalError": 2,
	"QueryResultBoundWithSelf": 3,
}

func (x AccountBindQueryResult) String() string {
	return proto.EnumName(AccountBindQueryResult_name, int32(x))
}
func (AccountBindQueryResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{58} }

// 账户切换结果
type AccountSwitchResult int32

const (
	AccountSwitchResult_SwitchResultFailed        AccountSwitchResult = 0
	AccountSwitchResult_SwitchResultSucceed       AccountSwitchResult = 1
	AccountSwitchResult_SwitchResultInternalError AccountSwitchResult = 2
)

var AccountSwitchResult_name = map[int32]string{
	0: "SwitchResultFailed",
	1: "SwitchResultSucceed",
	2: "SwitchResultInternalError",
}
var AccountSwitchResult_value = map[string]int32{
	"SwitchResultFailed":        0,
	"SwitchResultSucceed":       1,
	"SwitchResultInternalError": 2,
}

func (x AccountSwitchResult) String() string {
	return proto.EnumName(AccountSwitchResult_name, int32(x))
}
func (AccountSwitchResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{59} }

// 邮件来源类型
type MailSourceType int32

const (
	MailSourceType_MST_Default              MailSourceType = 0
	MailSourceType_MST_GM                   MailSourceType = 1
	MailSourceType_MST_IBS                  MailSourceType = 2
	MailSourceType_MST_League               MailSourceType = 3
	MailSourceType_MST_Hero                 MailSourceType = 4
	MailSourceType_MST_GiftPack             MailSourceType = 5
	MailSourceType_MST_Other                MailSourceType = 6
	MailSourceType_MST_ActivityReward       MailSourceType = 7
	MailSourceType_MST_LeagueDevoteDayRank  MailSourceType = 8
	MailSourceType_MST_TitleNofity          MailSourceType = 9
	MailSourceType_MST_LeagueDevoteWeekRank MailSourceType = 10
	MailSourceType_MST_LeagueTechLv         MailSourceType = 11
)

var MailSourceType_name = map[int32]string{
	0:  "MST_Default",
	1:  "MST_GM",
	2:  "MST_IBS",
	3:  "MST_League",
	4:  "MST_Hero",
	5:  "MST_GiftPack",
	6:  "MST_Other",
	7:  "MST_ActivityReward",
	8:  "MST_LeagueDevoteDayRank",
	9:  "MST_TitleNofity",
	10: "MST_LeagueDevoteWeekRank",
	11: "MST_LeagueTechLv",
}
var MailSourceType_value = map[string]int32{
	"MST_Default":              0,
	"MST_GM":                   1,
	"MST_IBS":                  2,
	"MST_League":               3,
	"MST_Hero":                 4,
	"MST_GiftPack":             5,
	"MST_Other":                6,
	"MST_ActivityReward":       7,
	"MST_LeagueDevoteDayRank":  8,
	"MST_TitleNofity":          9,
	"MST_LeagueDevoteWeekRank": 10,
	"MST_LeagueTechLv":         11,
}

func (x MailSourceType) String() string {
	return proto.EnumName(MailSourceType_name, int32(x))
}
func (MailSourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{60} }

// 首次引导类型
type FirstTutorialType int32

const (
	FirstTutorialType_FTT_ARM_CURE            FirstTutorialType = 0
	FirstTutorialType_FTT_LEAGUE_JOIN         FirstTutorialType = 101
	FirstTutorialType_FTT_USER_RENAME         FirstTutorialType = 102
	FirstTutorialType_FTT_JOIN_LEAGUE         FirstTutorialType = 103
	FirstTutorialType_FTT_CREATE_LEAGUE       FirstTutorialType = 104
	FirstTutorialType_FTT_TUTORIAL_COMPLETION FirstTutorialType = 105
	FirstTutorialType_FTT_SEVEN_DAY_CHALLENGE FirstTutorialType = 106
	FirstTutorialType_FTT_CHANGE_NAME         FirstTutorialType = 107
	FirstTutorialType_FTT_TECH                FirstTutorialType = 108
	FirstTutorialType_FTT_TALENT              FirstTutorialType = 109
	FirstTutorialType_FTT_BIG_MAP             FirstTutorialType = 110
	FirstTutorialType_FTT_LEAGUE_BOX          FirstTutorialType = 111
	FirstTutorialType_FTT_WELCOME_REWARD      FirstTutorialType = 112
)

var FirstTutorialType_name = map[int32]string{
	0:   "FTT_ARM_CURE",
	101: "FTT_LEAGUE_JOIN",
	102: "FTT_USER_RENAME",
	103: "FTT_JOIN_LEAGUE",
	104: "FTT_CREATE_LEAGUE",
	105: "FTT_TUTORIAL_COMPLETION",
	106: "FTT_SEVEN_DAY_CHALLENGE",
	107: "FTT_CHANGE_NAME",
	108: "FTT_TECH",
	109: "FTT_TALENT",
	110: "FTT_BIG_MAP",
	111: "FTT_LEAGUE_BOX",
	112: "FTT_WELCOME_REWARD",
}
var FirstTutorialType_value = map[string]int32{
	"FTT_ARM_CURE":            0,
	"FTT_LEAGUE_JOIN":         101,
	"FTT_USER_RENAME":         102,
	"FTT_JOIN_LEAGUE":         103,
	"FTT_CREATE_LEAGUE":       104,
	"FTT_TUTORIAL_COMPLETION": 105,
	"FTT_SEVEN_DAY_CHALLENGE": 106,
	"FTT_CHANGE_NAME":         107,
	"FTT_TECH":                108,
	"FTT_TALENT":              109,
	"FTT_BIG_MAP":             110,
	"FTT_LEAGUE_BOX":          111,
	"FTT_WELCOME_REWARD":      112,
}

func (x FirstTutorialType) String() string {
	return proto.EnumName(FirstTutorialType_name, int32(x))
}
func (FirstTutorialType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{61} }

type ChallengeConditionType int32

const (
	ChallengeConditionType_CCT_CostCash       ChallengeConditionType = 0
	ChallengeConditionType_CCT_CostItem       ChallengeConditionType = 2
	ChallengeConditionType_CCT_MainCityLevel  ChallengeConditionType = 3
	ChallengeConditionType_CCT_CollectResorce ChallengeConditionType = 4
	ChallengeConditionType_CCT_ReceiveUnit    ChallengeConditionType = 5
	ChallengeConditionType_CCT_DispatchTask   ChallengeConditionType = 6
	ChallengeConditionType_CCT_OnlieGiftPack  ChallengeConditionType = 7
	ChallengeConditionType_CCT_CommenderLevel ChallengeConditionType = 8
	ChallengeConditionType_CCT_BuildingPower  ChallengeConditionType = 9
	ChallengeConditionType_CCT_ResearchPower  ChallengeConditionType = 10
	ChallengeConditionType_CCT_KillMonster    ChallengeConditionType = 11
	ChallengeConditionType_CCT_BlackMarket    ChallengeConditionType = 12
	ChallengeConditionType_CCT_Supply         ChallengeConditionType = 13
	ChallengeConditionType_CCT_Statue         ChallengeConditionType = 14
)

var ChallengeConditionType_name = map[int32]string{
	0:  "CCT_CostCash",
	2:  "CCT_CostItem",
	3:  "CCT_MainCityLevel",
	4:  "CCT_CollectResorce",
	5:  "CCT_ReceiveUnit",
	6:  "CCT_DispatchTask",
	7:  "CCT_OnlieGiftPack",
	8:  "CCT_CommenderLevel",
	9:  "CCT_BuildingPower",
	10: "CCT_ResearchPower",
	11: "CCT_KillMonster",
	12: "CCT_BlackMarket",
	13: "CCT_Supply",
	14: "CCT_Statue",
}
var ChallengeConditionType_value = map[string]int32{
	"CCT_CostCash":       0,
	"CCT_CostItem":       2,
	"CCT_MainCityLevel":  3,
	"CCT_CollectResorce": 4,
	"CCT_ReceiveUnit":    5,
	"CCT_DispatchTask":   6,
	"CCT_OnlieGiftPack":  7,
	"CCT_CommenderLevel": 8,
	"CCT_BuildingPower":  9,
	"CCT_ResearchPower":  10,
	"CCT_KillMonster":    11,
	"CCT_BlackMarket":    12,
	"CCT_Supply":         13,
	"CCT_Statue":         14,
}

func (x ChallengeConditionType) String() string {
	return proto.EnumName(ChallengeConditionType_name, int32(x))
}
func (ChallengeConditionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{62} }

type ChallengeTaskStatus int32

const (
	ChallengeTaskStatus_CTS_UnStart   ChallengeTaskStatus = 0
	ChallengeTaskStatus_CTS_Start     ChallengeTaskStatus = 2
	ChallengeTaskStatus_CTS_Finish    ChallengeTaskStatus = 3
	ChallengeTaskStatus_CTS_GetReward ChallengeTaskStatus = 4
)

var ChallengeTaskStatus_name = map[int32]string{
	0: "CTS_UnStart",
	2: "CTS_Start",
	3: "CTS_Finish",
	4: "CTS_GetReward",
}
var ChallengeTaskStatus_value = map[string]int32{
	"CTS_UnStart":   0,
	"CTS_Start":     2,
	"CTS_Finish":    3,
	"CTS_GetReward": 4,
}

func (x ChallengeTaskStatus) String() string {
	return proto.EnumName(ChallengeTaskStatus_name, int32(x))
}
func (ChallengeTaskStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{63} }

type CityStage int32

const (
	CityStage_CS_Normal  CityStage = 0
	CityStage_CS_Attack  CityStage = 1
	CityStage_CS_Capture CityStage = 2
)

var CityStage_name = map[int32]string{
	0: "CS_Normal",
	1: "CS_Attack",
	2: "CS_Capture",
}
var CityStage_value = map[string]int32{
	"CS_Normal":  0,
	"CS_Attack":  1,
	"CS_Capture": 2,
}

func (x CityStage) String() string {
	return proto.EnumName(CityStage_name, int32(x))
}
func (CityStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{64} }

type ActivityDataType int32

const (
	ActivityDataType_ADT_Create    ActivityDataType = 0
	ActivityDataType_ADT_Update    ActivityDataType = 1
	ActivityDataType_ADT_Detail    ActivityDataType = 2
	ActivityDataType_ADT_Full      ActivityDataType = 3
	ActivityDataType_ADT_ScUser    ActivityDataType = 4
	ActivityDataType_ADT_BeginJion ActivityDataType = 5
	ActivityDataType_ADT_Join      ActivityDataType = 6
)

var ActivityDataType_name = map[int32]string{
	0: "ADT_Create",
	1: "ADT_Update",
	2: "ADT_Detail",
	3: "ADT_Full",
	4: "ADT_ScUser",
	5: "ADT_BeginJion",
	6: "ADT_Join",
}
var ActivityDataType_value = map[string]int32{
	"ADT_Create":    0,
	"ADT_Update":    1,
	"ADT_Detail":    2,
	"ADT_Full":      3,
	"ADT_ScUser":    4,
	"ADT_BeginJion": 5,
	"ADT_Join":      6,
}

func (x ActivityDataType) String() string {
	return proto.EnumName(ActivityDataType_name, int32(x))
}
func (ActivityDataType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{65} }

type ActivityFlags int32

const (
	ActivityFlags_AF_Refresh       ActivityFlags = 0
	ActivityFlags_AF_Broadcast     ActivityFlags = 2
	ActivityFlags_AF_OneTopList    ActivityFlags = 4
	ActivityFlags_AF_LevelNoReward ActivityFlags = 8
)

var ActivityFlags_name = map[int32]string{
	0: "AF_Refresh",
	2: "AF_Broadcast",
	4: "AF_OneTopList",
	8: "AF_LevelNoReward",
}
var ActivityFlags_value = map[string]int32{
	"AF_Refresh":       0,
	"AF_Broadcast":     2,
	"AF_OneTopList":    4,
	"AF_LevelNoReward": 8,
}

func (x ActivityFlags) String() string {
	return proto.EnumName(ActivityFlags_name, int32(x))
}
func (ActivityFlags) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{66} }

type ActivityLogicType int32

const (
	ActivityLogicType_ALT_None           ActivityLogicType = 0
	ActivityLogicType_ALT_Normal         ActivityLogicType = 1
	ActivityLogicType_ALT_Buff           ActivityLogicType = 2
	ActivityLogicType_ALT_Spawn          ActivityLogicType = 3
	ActivityLogicType_ALT_League         ActivityLogicType = 4
	ActivityLogicType_ALT_Drop           ActivityLogicType = 5
	ActivityLogicType_ALT_Exchange       ActivityLogicType = 6
	ActivityLogicType_ALT_UserTaskRank   ActivityLogicType = 10
	ActivityLogicType_ALT_LeagueTaskRank ActivityLogicType = 11
	ActivityLogicType_ALT_DailyTask      ActivityLogicType = 12
)

var ActivityLogicType_name = map[int32]string{
	0:  "ALT_None",
	1:  "ALT_Normal",
	2:  "ALT_Buff",
	3:  "ALT_Spawn",
	4:  "ALT_League",
	5:  "ALT_Drop",
	6:  "ALT_Exchange",
	10: "ALT_UserTaskRank",
	11: "ALT_LeagueTaskRank",
	12: "ALT_DailyTask",
}
var ActivityLogicType_value = map[string]int32{
	"ALT_None":           0,
	"ALT_Normal":         1,
	"ALT_Buff":           2,
	"ALT_Spawn":          3,
	"ALT_League":         4,
	"ALT_Drop":           5,
	"ALT_Exchange":       6,
	"ALT_UserTaskRank":   10,
	"ALT_LeagueTaskRank": 11,
	"ALT_DailyTask":      12,
}

func (x ActivityLogicType) String() string {
	return proto.EnumName(ActivityLogicType_name, int32(x))
}
func (ActivityLogicType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{67} }

type ActivityOpenType int32

const (
	ActivityOpenType_AOT_Auto ActivityOpenType = 0
	ActivityOpenType_AOT_Date ActivityOpenType = 1
	ActivityOpenType_AOT_GM   ActivityOpenType = 2
	ActivityOpenType_AOT_Stop ActivityOpenType = 3
)

var ActivityOpenType_name = map[int32]string{
	0: "AOT_Auto",
	1: "AOT_Date",
	2: "AOT_GM",
	3: "AOT_Stop",
}
var ActivityOpenType_value = map[string]int32{
	"AOT_Auto": 0,
	"AOT_Date": 1,
	"AOT_GM":   2,
	"AOT_Stop": 3,
}

func (x ActivityOpenType) String() string {
	return proto.EnumName(ActivityOpenType_name, int32(x))
}
func (ActivityOpenType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{68} }

type ActivityTaskType int32

const (
	ActivityTaskType_ATT_ProductBuBing    ActivityTaskType = 0
	ActivityTaskType_ATT_ProductTank      ActivityTaskType = 2
	ActivityTaskType_ATT_ProductFeiji     ActivityTaskType = 3
	ActivityTaskType_ATT_ProductJijia     ActivityTaskType = 4
	ActivityTaskType_ATT_ProductPitfall   ActivityTaskType = 5
	ActivityTaskType_ATT_LeagueHelp       ActivityTaskType = 6
	ActivityTaskType_ATT_LeagueTech       ActivityTaskType = 7
	ActivityTaskType_ATT_Research         ActivityTaskType = 8
	ActivityTaskType_ATT_BuildingUpgrade  ActivityTaskType = 9
	ActivityTaskType_ATT_KillMonster      ActivityTaskType = 10
	ActivityTaskType_ATT_CollectMetal     ActivityTaskType = 11
	ActivityTaskType_ATT_CollectGas       ActivityTaskType = 12
	ActivityTaskType_ATT_CollectCoke      ActivityTaskType = 13
	ActivityTaskType_ATT_CollectCrystal   ActivityTaskType = 14
	ActivityTaskType_ATT_CollectDeuterium ActivityTaskType = 15
	ActivityTaskType_ATT_BlackMarket      ActivityTaskType = 16
	ActivityTaskType_ATT_Supply           ActivityTaskType = 17
	ActivityTaskType_ATT_MapList          ActivityTaskType = 18
	ActivityTaskType_ATT_DispatchTask     ActivityTaskType = 19
	ActivityTaskType_ATT_UseHeroExpItem   ActivityTaskType = 20
	ActivityTaskType_ATT_CureUnit         ActivityTaskType = 21
	ActivityTaskType_ATT_AttackMonster    ActivityTaskType = 22
	ActivityTaskType_ATT_LeagueTask       ActivityTaskType = 23
)

var ActivityTaskType_name = map[int32]string{
	0:  "ATT_ProductBuBing",
	2:  "ATT_ProductTank",
	3:  "ATT_ProductFeiji",
	4:  "ATT_ProductJijia",
	5:  "ATT_ProductPitfall",
	6:  "ATT_LeagueHelp",
	7:  "ATT_LeagueTech",
	8:  "ATT_Research",
	9:  "ATT_BuildingUpgrade",
	10: "ATT_KillMonster",
	11: "ATT_CollectMetal",
	12: "ATT_CollectGas",
	13: "ATT_CollectCoke",
	14: "ATT_CollectCrystal",
	15: "ATT_CollectDeuterium",
	16: "ATT_BlackMarket",
	17: "ATT_Supply",
	18: "ATT_MapList",
	19: "ATT_DispatchTask",
	20: "ATT_UseHeroExpItem",
	21: "ATT_CureUnit",
	22: "ATT_AttackMonster",
	23: "ATT_LeagueTask",
}
var ActivityTaskType_value = map[string]int32{
	"ATT_ProductBuBing":    0,
	"ATT_ProductTank":      2,
	"ATT_ProductFeiji":     3,
	"ATT_ProductJijia":     4,
	"ATT_ProductPitfall":   5,
	"ATT_LeagueHelp":       6,
	"ATT_LeagueTech":       7,
	"ATT_Research":         8,
	"ATT_BuildingUpgrade":  9,
	"ATT_KillMonster":      10,
	"ATT_CollectMetal":     11,
	"ATT_CollectGas":       12,
	"ATT_CollectCoke":      13,
	"ATT_CollectCrystal":   14,
	"ATT_CollectDeuterium": 15,
	"ATT_BlackMarket":      16,
	"ATT_Supply":           17,
	"ATT_MapList":          18,
	"ATT_DispatchTask":     19,
	"ATT_UseHeroExpItem":   20,
	"ATT_CureUnit":         21,
	"ATT_AttackMonster":    22,
	"ATT_LeagueTask":       23,
}

func (x ActivityTaskType) String() string {
	return proto.EnumName(ActivityTaskType_name, int32(x))
}
func (ActivityTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{69} }

type OfflineEventType int32

const (
	OfflineEventType_OET_Bootcap      OfflineEventType = 0
	OfflineEventType_OET_Burnring     OfflineEventType = 2
	OfflineEventType_OET_Blackout     OfflineEventType = 3
	OfflineEventType_OET_MainCitySkin OfflineEventType = 4
	OfflineEventType_OET_Prison       OfflineEventType = 5
	OfflineEventType_OET_LocalAction  OfflineEventType = 6
)

var OfflineEventType_name = map[int32]string{
	0: "OET_Bootcap",
	2: "OET_Burnring",
	3: "OET_Blackout",
	4: "OET_MainCitySkin",
	5: "OET_Prison",
	6: "OET_LocalAction",
}
var OfflineEventType_value = map[string]int32{
	"OET_Bootcap":      0,
	"OET_Burnring":     2,
	"OET_Blackout":     3,
	"OET_MainCitySkin": 4,
	"OET_Prison":       5,
	"OET_LocalAction":  6,
}

func (x OfflineEventType) String() string {
	return proto.EnumName(OfflineEventType_name, int32(x))
}
func (OfflineEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{70} }

type RefreshCondType int32

const (
	RefreshCondType_RCT_Activity       RefreshCondType = 0
	RefreshCondType_RCT_TransferBattle RefreshCondType = 2
)

var RefreshCondType_name = map[int32]string{
	0: "RCT_Activity",
	2: "RCT_TransferBattle",
}
var RefreshCondType_value = map[string]int32{
	"RCT_Activity":       0,
	"RCT_TransferBattle": 2,
}

func (x RefreshCondType) String() string {
	return proto.EnumName(RefreshCondType_name, int32(x))
}
func (RefreshCondType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{71} }

type UnitSpecialLogic int32

const (
	UnitSpecialLogic_USL_Normal UnitSpecialLogic = 0
	UnitSpecialLogic_USL_Probe  UnitSpecialLogic = 1
)

var UnitSpecialLogic_name = map[int32]string{
	0: "USL_Normal",
	1: "USL_Probe",
}
var UnitSpecialLogic_value = map[string]int32{
	"USL_Normal": 0,
	"USL_Probe":  1,
}

func (x UnitSpecialLogic) String() string {
	return proto.EnumName(UnitSpecialLogic_name, int32(x))
}
func (UnitSpecialLogic) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{72} }

type BoonLogicType int32

const (
	BoonLogicType_BLT_PayFirst     BoonLogicType = 0
	BoonLogicType_BLT_PaySecond    BoonLogicType = 2
	BoonLogicType_BLT_TimeDuration BoonLogicType = 3
	BoonLogicType_BLT_DailyBoon    BoonLogicType = 4
	BoonLogicType_BLT_Funding      BoonLogicType = 5
	BoonLogicType_BLT_SignIn       BoonLogicType = 6
	BoonLogicType_BLT_Online       BoonLogicType = 7
	BoonLogicType_BLT_LevelUp      BoonLogicType = 8
	// 礼包活动开始
	BoonLogicType_BLT_Activity_Start     BoonLogicType = 10
	BoonLogicType_BLT_CumulativeGiftback BoonLogicType = 11
	// 礼包活动结束
	BoonLogicType_BLT_Activity_End BoonLogicType = 100
)

var BoonLogicType_name = map[int32]string{
	0:   "BLT_PayFirst",
	2:   "BLT_PaySecond",
	3:   "BLT_TimeDuration",
	4:   "BLT_DailyBoon",
	5:   "BLT_Funding",
	6:   "BLT_SignIn",
	7:   "BLT_Online",
	8:   "BLT_LevelUp",
	10:  "BLT_Activity_Start",
	11:  "BLT_CumulativeGiftback",
	100: "BLT_Activity_End",
}
var BoonLogicType_value = map[string]int32{
	"BLT_PayFirst":           0,
	"BLT_PaySecond":          2,
	"BLT_TimeDuration":       3,
	"BLT_DailyBoon":          4,
	"BLT_Funding":            5,
	"BLT_SignIn":             6,
	"BLT_Online":             7,
	"BLT_LevelUp":            8,
	"BLT_Activity_Start":     10,
	"BLT_CumulativeGiftback": 11,
	"BLT_Activity_End":       100,
}

func (x BoonLogicType) String() string {
	return proto.EnumName(BoonLogicType_name, int32(x))
}
func (BoonLogicType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{73} }

type BoonFundType int32

const (
	BoonFundType_BFT_CityLevel BoonFundType = 0
)

var BoonFundType_name = map[int32]string{
	0: "BFT_CityLevel",
}
var BoonFundType_value = map[string]int32{
	"BFT_CityLevel": 0,
}

func (x BoonFundType) String() string {
	return proto.EnumName(BoonFundType_name, int32(x))
}
func (BoonFundType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{74} }

type BoonDailyType int32

const (
	BoonDailyType_BDT_Free BoonDailyType = 0
	BoonDailyType_BDT_Buy  BoonDailyType = 1
	BoonDailyType_BDT_Buff BoonDailyType = 2
)

var BoonDailyType_name = map[int32]string{
	0: "BDT_Free",
	1: "BDT_Buy",
	2: "BDT_Buff",
}
var BoonDailyType_value = map[string]int32{
	"BDT_Free": 0,
	"BDT_Buy":  1,
	"BDT_Buff": 2,
}

func (x BoonDailyType) String() string {
	return proto.EnumName(BoonDailyType_name, int32(x))
}
func (BoonDailyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{75} }

// 四段参数
type ChapterTaskType int32

const (
	ChapterTaskType_CTT_Building            ChapterTaskType = 0
	ChapterTaskType_CTT_FightMonster        ChapterTaskType = 2
	ChapterTaskType_CTT_Airship             ChapterTaskType = 3
	ChapterTaskType_CTT_HeroLevel           ChapterTaskType = 4
	ChapterTaskType_CTT_Tech                ChapterTaskType = 5
	ChapterTaskType_CTT_TrainUnits          ChapterTaskType = 6
	ChapterTaskType_CTT_UnLockLand          ChapterTaskType = 7
	ChapterTaskType_CTT_SendTask            ChapterTaskType = 8
	ChapterTaskType_CTT_HeroTalent          ChapterTaskType = 9
	ChapterTaskType_CTT_JoinLeague          ChapterTaskType = 10
	ChapterTaskType_CTT_HelpLeague          ChapterTaskType = 11
	ChapterTaskType_CTT_DonateLeague        ChapterTaskType = 12
	ChapterTaskType_CTT_LeagueBox           ChapterTaskType = 13
	ChapterTaskType_CTT_AttackMonster       ChapterTaskType = 14
	ChapterTaskType_CTT_HERORecruit         ChapterTaskType = 15
	ChapterTaskType_CTT_HEROSTAR            ChapterTaskType = 16
	ChapterTaskType_CTT_HERORANK            ChapterTaskType = 17
	ChapterTaskType_CTT_PRODUCEEQUIP        ChapterTaskType = 18
	ChapterTaskType_CTT_HEROSKILL           ChapterTaskType = 19
	ChapterTaskType_CTT_CommanderLevel      ChapterTaskType = 20
	ChapterTaskType_CTT_ChangeName          ChapterTaskType = 21
	ChapterTaskType_CTT_PushmapReward       ChapterTaskType = 22
	ChapterTaskType_CTT_HERONum             ChapterTaskType = 23
	ChapterTaskType_CTT_ResCollect          ChapterTaskType = 24
	ChapterTaskType_CTT_UseResItem          ChapterTaskType = 25
	ChapterTaskType_CTT_AttackPlayer        ChapterTaskType = 26
	ChapterTaskType_CTT_KillSmallMonster    ChapterTaskType = 27
	ChapterTaskType_CTT_ResProduction       ChapterTaskType = 28
	ChapterTaskType_CTT_ResBuildingNum      ChapterTaskType = 29
	ChapterTaskType_CTT_KillSmallMonsterNum ChapterTaskType = 30
	ChapterTaskType_CTT_LeagueTaskNum       ChapterTaskType = 31
)

var ChapterTaskType_name = map[int32]string{
	0:  "CTT_Building",
	2:  "CTT_FightMonster",
	3:  "CTT_Airship",
	4:  "CTT_HeroLevel",
	5:  "CTT_Tech",
	6:  "CTT_TrainUnits",
	7:  "CTT_UnLockLand",
	8:  "CTT_SendTask",
	9:  "CTT_HeroTalent",
	10: "CTT_JoinLeague",
	11: "CTT_HelpLeague",
	12: "CTT_DonateLeague",
	13: "CTT_LeagueBox",
	14: "CTT_AttackMonster",
	15: "CTT_HERORecruit",
	16: "CTT_HEROSTAR",
	17: "CTT_HERORANK",
	18: "CTT_PRODUCEEQUIP",
	19: "CTT_HEROSKILL",
	20: "CTT_CommanderLevel",
	21: "CTT_ChangeName",
	22: "CTT_PushmapReward",
	23: "CTT_HERONum",
	24: "CTT_ResCollect",
	25: "CTT_UseResItem",
	26: "CTT_AttackPlayer",
	27: "CTT_KillSmallMonster",
	28: "CTT_ResProduction",
	29: "CTT_ResBuildingNum",
	30: "CTT_KillSmallMonsterNum",
	31: "CTT_LeagueTaskNum",
}
var ChapterTaskType_value = map[string]int32{
	"CTT_Building":            0,
	"CTT_FightMonster":        2,
	"CTT_Airship":             3,
	"CTT_HeroLevel":           4,
	"CTT_Tech":                5,
	"CTT_TrainUnits":          6,
	"CTT_UnLockLand":          7,
	"CTT_SendTask":            8,
	"CTT_HeroTalent":          9,
	"CTT_JoinLeague":          10,
	"CTT_HelpLeague":          11,
	"CTT_DonateLeague":        12,
	"CTT_LeagueBox":           13,
	"CTT_AttackMonster":       14,
	"CTT_HERORecruit":         15,
	"CTT_HEROSTAR":            16,
	"CTT_HERORANK":            17,
	"CTT_PRODUCEEQUIP":        18,
	"CTT_HEROSKILL":           19,
	"CTT_CommanderLevel":      20,
	"CTT_ChangeName":          21,
	"CTT_PushmapReward":       22,
	"CTT_HERONum":             23,
	"CTT_ResCollect":          24,
	"CTT_UseResItem":          25,
	"CTT_AttackPlayer":        26,
	"CTT_KillSmallMonster":    27,
	"CTT_ResProduction":       28,
	"CTT_ResBuildingNum":      29,
	"CTT_KillSmallMonsterNum": 30,
	"CTT_LeagueTaskNum":       31,
}

func (x ChapterTaskType) String() string {
	return proto.EnumName(ChapterTaskType_name, int32(x))
}
func (ChapterTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{76} }

// 预警类型
type EarlyWarningType int32

const (
	EarlyWarningType_EWT_NONE  EarlyWarningType = 0
	EarlyWarningType_EWT_RED   EarlyWarningType = 1
	EarlyWarningType_EWT_GREEN EarlyWarningType = 2
)

var EarlyWarningType_name = map[int32]string{
	0: "EWT_NONE",
	1: "EWT_RED",
	2: "EWT_GREEN",
}
var EarlyWarningType_value = map[string]int32{
	"EWT_NONE":  0,
	"EWT_RED":   1,
	"EWT_GREEN": 2,
}

func (x EarlyWarningType) String() string {
	return proto.EnumName(EarlyWarningType_name, int32(x))
}
func (EarlyWarningType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{77} }

// 英雄属性类别
type HeroBranchType int32

const (
	HeroBranchType_HBT_ATTACK  HeroBranchType = 0
	HeroBranchType_HBT_DEFENCE HeroBranchType = 1
	HeroBranchType_HBT_HP      HeroBranchType = 2
	HeroBranchType_HBT_ARMY    HeroBranchType = 3
)

var HeroBranchType_name = map[int32]string{
	0: "HBT_ATTACK",
	1: "HBT_DEFENCE",
	2: "HBT_HP",
	3: "HBT_ARMY",
}
var HeroBranchType_value = map[string]int32{
	"HBT_ATTACK":  0,
	"HBT_DEFENCE": 1,
	"HBT_HP":      2,
	"HBT_ARMY":    3,
}

func (x HeroBranchType) String() string {
	return proto.EnumName(HeroBranchType_name, int32(x))
}
func (HeroBranchType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{78} }

// //////新战斗系统////////
// 战斗BUFF加成属性
type FightBuffAttibute int32

const (
	FightBuffAttibute_NomalDamage      FightBuffAttibute = 0
	FightBuffAttibute_EnemyHDefDamage  FightBuffAttibute = 2
	FightBuffAttibute_EnemyHHpDamage   FightBuffAttibute = 3
	FightBuffAttibute_SelfLHpDamage    FightBuffAttibute = 4
	FightBuffAttibute_RecoveryCurHp    FightBuffAttibute = 5
	FightBuffAttibute_ReduceHpRound    FightBuffAttibute = 6
	FightBuffAttibute_ReduceDef        FightBuffAttibute = 7
	FightBuffAttibute_ReduceAtt        FightBuffAttibute = 8
	FightBuffAttibute_IncreaseFightAtt FightBuffAttibute = 9
	FightBuffAttibute_IncreaseFightDef FightBuffAttibute = 10
	FightBuffAttibute_Dizzy            FightBuffAttibute = 11
	FightBuffAttibute_ClearDebuff      FightBuffAttibute = 12
	FightBuffAttibute_Clearbuff        FightBuffAttibute = 13
	FightBuffAttibute_IncreaseDamge    FightBuffAttibute = 14
	FightBuffAttibute_ReduceDamge      FightBuffAttibute = 15
	FightBuffAttibute_AttConversion    FightBuffAttibute = 16
	FightBuffAttibute_AttRear          FightBuffAttibute = 17
	FightBuffAttibute_IgnoreDef        FightBuffAttibute = 18
	FightBuffAttibute_EneNum           FightBuffAttibute = 19
	FightBuffAttibute_UnitnumDamage    FightBuffAttibute = 20
	FightBuffAttibute_SummonTroops     FightBuffAttibute = 21
	FightBuffAttibute_NumDamage        FightBuffAttibute = 22
	FightBuffAttibute_DamageShield     FightBuffAttibute = 23
	FightBuffAttibute_ExtraDamage      FightBuffAttibute = 24
	FightBuffAttibute_NumCompare       FightBuffAttibute = 25
	FightBuffAttibute_Dotdamage        FightBuffAttibute = 26
	FightBuffAttibute_HotTreatment     FightBuffAttibute = 27
)

var FightBuffAttibute_name = map[int32]string{
	0:  "NomalDamage",
	2:  "EnemyHDefDamage",
	3:  "EnemyHHpDamage",
	4:  "SelfLHpDamage",
	5:  "RecoveryCurHp",
	6:  "ReduceHpRound",
	7:  "ReduceDef",
	8:  "ReduceAtt",
	9:  "IncreaseFightAtt",
	10: "IncreaseFightDef",
	11: "Dizzy",
	12: "ClearDebuff",
	13: "Clearbuff",
	14: "IncreaseDamge",
	15: "ReduceDamge",
	16: "AttConversion",
	17: "AttRear",
	18: "IgnoreDef",
	19: "EneNum",
	20: "UnitnumDamage",
	21: "SummonTroops",
	22: "NumDamage",
	23: "DamageShield",
	24: "ExtraDamage",
	25: "NumCompare",
	26: "Dotdamage",
	27: "HotTreatment",
}
var FightBuffAttibute_value = map[string]int32{
	"NomalDamage":      0,
	"EnemyHDefDamage":  2,
	"EnemyHHpDamage":   3,
	"SelfLHpDamage":    4,
	"RecoveryCurHp":    5,
	"ReduceHpRound":    6,
	"ReduceDef":        7,
	"ReduceAtt":        8,
	"IncreaseFightAtt": 9,
	"IncreaseFightDef": 10,
	"Dizzy":            11,
	"ClearDebuff":      12,
	"Clearbuff":        13,
	"IncreaseDamge":    14,
	"ReduceDamge":      15,
	"AttConversion":    16,
	"AttRear":          17,
	"IgnoreDef":        18,
	"EneNum":           19,
	"UnitnumDamage":    20,
	"SummonTroops":     21,
	"NumDamage":        22,
	"DamageShield":     23,
	"ExtraDamage":      24,
	"NumCompare":       25,
	"Dotdamage":        26,
	"HotTreatment":     27,
}

func (x FightBuffAttibute) String() string {
	return proto.EnumName(FightBuffAttibute_name, int32(x))
}
func (FightBuffAttibute) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{79} }

// 战斗BUFF类型
type FightBuffType int32

const (
	FightBuffType_Good    FightBuffType = 0
	FightBuffType_Bad     FightBuffType = 2
	FightBuffType_Damge   FightBuffType = 3
	FightBuffType_Dot     FightBuffType = 4
	FightBuffType_Special FightBuffType = 5
)

var FightBuffType_name = map[int32]string{
	0: "Good",
	2: "Bad",
	3: "Damge",
	4: "Dot",
	5: "Special",
}
var FightBuffType_value = map[string]int32{
	"Good":    0,
	"Bad":     2,
	"Damge":   3,
	"Dot":     4,
	"Special": 5,
}

func (x FightBuffType) String() string {
	return proto.EnumName(FightBuffType_name, int32(x))
}
func (FightBuffType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{80} }

// 技能主类型
type SkillMainType int32

const (
	SkillMainType_ST_ACTIVE_FIGHT SkillMainType = 0
	SkillMainType_ST_PASSIVE      SkillMainType = 2
)

var SkillMainType_name = map[int32]string{
	0: "ST_ACTIVE_FIGHT",
	2: "ST_PASSIVE",
}
var SkillMainType_value = map[string]int32{
	"ST_ACTIVE_FIGHT": 0,
	"ST_PASSIVE":      2,
}

func (x SkillMainType) String() string {
	return proto.EnumName(SkillMainType_name, int32(x))
}
func (SkillMainType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{81} }

// 被动技能子类型
type SkillSubType int32

const (
	SkillSubType_ST_PASSIVE_FIGHT      SkillSubType = 0
	SkillSubType_ST_PASSIVE_MARCH      SkillSubType = 3
	SkillSubType_ST_PASSIVE_GLOBAL     SkillSubType = 4
	SkillSubType_ST_PASSIVE_BUFF       SkillSubType = 5
	SkillSubType_ST_PASSIVE_AFTERFIGHT SkillSubType = 6
)

var SkillSubType_name = map[int32]string{
	0: "ST_PASSIVE_FIGHT",
	3: "ST_PASSIVE_MARCH",
	4: "ST_PASSIVE_GLOBAL",
	5: "ST_PASSIVE_BUFF",
	6: "ST_PASSIVE_AFTERFIGHT",
}
var SkillSubType_value = map[string]int32{
	"ST_PASSIVE_FIGHT":      0,
	"ST_PASSIVE_MARCH":      3,
	"ST_PASSIVE_GLOBAL":     4,
	"ST_PASSIVE_BUFF":       5,
	"ST_PASSIVE_AFTERFIGHT": 6,
}

func (x SkillSubType) String() string {
	return proto.EnumName(SkillSubType_name, int32(x))
}
func (SkillSubType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{82} }

// 技能逻辑类型
type SkillLogicType int32

const (
	SkillLogicType_SLT_ALL     SkillLogicType = 0
	SkillLogicType_SLT_ATTACK  SkillLogicType = 1
	SkillLogicType_SLT_TALENT  SkillLogicType = 2
	SkillLogicType_SLT_REGULAR SkillLogicType = 3
)

var SkillLogicType_name = map[int32]string{
	0: "SLT_ALL",
	1: "SLT_ATTACK",
	2: "SLT_TALENT",
	3: "SLT_REGULAR",
}
var SkillLogicType_value = map[string]int32{
	"SLT_ALL":     0,
	"SLT_ATTACK":  1,
	"SLT_TALENT":  2,
	"SLT_REGULAR": 3,
}

func (x SkillLogicType) String() string {
	return proto.EnumName(SkillLogicType_name, int32(x))
}
func (SkillLogicType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{83} }

// 战斗回合阶段（暂定）
type FightStageType int32

const (
	FightStageType_FST_PREPARE     FightStageType = 0
	FightStageType_FST_START       FightStageType = 2
	FightStageType_FST_ATTACT_HERO FightStageType = 3
	FightStageType_FST_ATTACT_TRAP FightStageType = 4
	FightStageType_FST_ATTACT_UNIT FightStageType = 5
	FightStageType_FST_END         FightStageType = 6
)

var FightStageType_name = map[int32]string{
	0: "FST_PREPARE",
	2: "FST_START",
	3: "FST_ATTACT_HERO",
	4: "FST_ATTACT_TRAP",
	5: "FST_ATTACT_UNIT",
	6: "FST_END",
}
var FightStageType_value = map[string]int32{
	"FST_PREPARE":     0,
	"FST_START":       2,
	"FST_ATTACT_HERO": 3,
	"FST_ATTACT_TRAP": 4,
	"FST_ATTACT_UNIT": 5,
	"FST_END":         6,
}

func (x FightStageType) String() string {
	return proto.EnumName(FightStageType_name, int32(x))
}
func (FightStageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{84} }

// 对象攻击阶段（暂定）
type AttckStageType int32

const (
	AttckStageType_AST_PREPARE    AttckStageType = 0
	AttckStageType_AST_USE_SKILL  AttckStageType = 2
	AttckStageType_AST_PROC_BUFF  AttckStageType = 3
	AttckStageType_AST_CAL_DAMAGE AttckStageType = 4
)

var AttckStageType_name = map[int32]string{
	0: "AST_PREPARE",
	2: "AST_USE_SKILL",
	3: "AST_PROC_BUFF",
	4: "AST_CAL_DAMAGE",
}
var AttckStageType_value = map[string]int32{
	"AST_PREPARE":    0,
	"AST_USE_SKILL":  2,
	"AST_PROC_BUFF":  3,
	"AST_CAL_DAMAGE": 4,
}

func (x AttckStageType) String() string {
	return proto.EnumName(AttckStageType_name, int32(x))
}
func (AttckStageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{85} }

// 军团位置
type CorpsPos int32

const (
	CorpsPos_CP_FRONT  CorpsPos = 0
	CorpsPos_CP_MIDDLE CorpsPos = 2
	CorpsPos_CP_Behind CorpsPos = 3
	CorpsPos_CP_SKY    CorpsPos = 4
)

var CorpsPos_name = map[int32]string{
	0: "CP_FRONT",
	2: "CP_MIDDLE",
	3: "CP_Behind",
	4: "CP_SKY",
}
var CorpsPos_value = map[string]int32{
	"CP_FRONT":  0,
	"CP_MIDDLE": 2,
	"CP_Behind": 3,
	"CP_SKY":    4,
}

func (x CorpsPos) String() string {
	return proto.EnumName(CorpsPos_name, int32(x))
}
func (CorpsPos) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{86} }

// 卡池商店类型
type CardPoolShopType int32

const (
	CardPoolShopType_CPST_Normal CardPoolShopType = 0
	CardPoolShopType_CPST_High   CardPoolShopType = 2
)

var CardPoolShopType_name = map[int32]string{
	0: "CPST_Normal",
	2: "CPST_High",
}
var CardPoolShopType_value = map[string]int32{
	"CPST_Normal": 0,
	"CPST_High":   2,
}

func (x CardPoolShopType) String() string {
	return proto.EnumName(CardPoolShopType_name, int32(x))
}
func (CardPoolShopType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{87} }

// 抽卡类型
type CardPoolTakeType int32

const (
	CardPoolTakeType_CPTT_One  CardPoolTakeType = 0
	CardPoolTakeType_CPPTT_Ten CardPoolTakeType = 2
)

var CardPoolTakeType_name = map[int32]string{
	0: "CPTT_One",
	2: "CPPTT_Ten",
}
var CardPoolTakeType_value = map[string]int32{
	"CPTT_One":  0,
	"CPPTT_Ten": 2,
}

func (x CardPoolTakeType) String() string {
	return proto.EnumName(CardPoolTakeType_name, int32(x))
}
func (CardPoolTakeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{88} }

// 黑市触发枚举
type MarketCondType int32

const (
	MarketCondType_MCT_SpeedItem  MarketCondType = 0
	MarketCondType_MCT_StartTech  MarketCondType = 2
	MarketCondType_MCT_FinishTech MarketCondType = 3
	MarketCondType_MCT_TrainUnit  MarketCondType = 4
	MarketCondType_MCT_AttackWild MarketCondType = 5
	MarketCondType_MCT_DefeatWild MarketCondType = 6
)

var MarketCondType_name = map[int32]string{
	0: "MCT_SpeedItem",
	2: "MCT_StartTech",
	3: "MCT_FinishTech",
	4: "MCT_TrainUnit",
	5: "MCT_AttackWild",
	6: "MCT_DefeatWild",
}
var MarketCondType_value = map[string]int32{
	"MCT_SpeedItem":  0,
	"MCT_StartTech":  2,
	"MCT_FinishTech": 3,
	"MCT_TrainUnit":  4,
	"MCT_AttackWild": 5,
	"MCT_DefeatWild": 6,
}

func (x MarketCondType) String() string {
	return proto.EnumName(MarketCondType_name, int32(x))
}
func (MarketCondType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{89} }

// 联盟杯任务类型
type LeagueTaskType int32

const (
	LeagueTaskType_LTT_PowerUp    LeagueTaskType = 0
	LeagueTaskType_LTT_UserAction LeagueTaskType = 2
	LeagueTaskType_LTT_UserGather LeagueTaskType = 3
	LeagueTaskType_LTT_UserCost   LeagueTaskType = 4
	LeagueTaskType_LTT_UserPVP    LeagueTaskType = 5
)

var LeagueTaskType_name = map[int32]string{
	0: "LTT_PowerUp",
	2: "LTT_UserAction",
	3: "LTT_UserGather",
	4: "LTT_UserCost",
	5: "LTT_UserPVP",
}
var LeagueTaskType_value = map[string]int32{
	"LTT_PowerUp":    0,
	"LTT_UserAction": 2,
	"LTT_UserGather": 3,
	"LTT_UserCost":   4,
	"LTT_UserPVP":    5,
}

func (x LeagueTaskType) String() string {
	return proto.EnumName(LeagueTaskType_name, int32(x))
}
func (LeagueTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{90} }

// 任务类型(战力提升)
type PowerUpType int32

const (
	PowerUpType_PUT_Tech  PowerUpType = 0
	PowerUpType_PUT_Train PowerUpType = 2
	PowerUpType_PUT_Build PowerUpType = 3
	PowerUpType_PUT_Task  PowerUpType = 4
	PowerUpType_PUT_Any   PowerUpType = 5
)

var PowerUpType_name = map[int32]string{
	0: "PUT_Tech",
	2: "PUT_Train",
	3: "PUT_Build",
	4: "PUT_Task",
	5: "PUT_Any",
}
var PowerUpType_value = map[string]int32{
	"PUT_Tech":  0,
	"PUT_Train": 2,
	"PUT_Build": 3,
	"PUT_Task":  4,
	"PUT_Any":   5,
}

func (x PowerUpType) String() string {
	return proto.EnumName(PowerUpType_name, int32(x))
}
func (PowerUpType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{91} }

// 任务类型(玩家行为)
type UserActionType int32

const (
	UserActionType_UAT_TaskFinish    UserActionType = 0
	UserActionType_UAT_Activity      UserActionType = 2
	UserActionType_UAT_Dungeon       UserActionType = 3
	UserActionType_UAT_Monster       UserActionType = 4
	UserActionType_UAT_Train         UserActionType = 5
	UserActionType_UAT_Tech          UserActionType = 6
	UserActionType_UAT_Build         UserActionType = 7
	UserActionType_UAT_Craft         UserActionType = 8
	UserActionType_UAT_Market        UserActionType = 9
	UserActionType_UAT_Purchase      UserActionType = 10
	UserActionType_UAT_LeagueBox     UserActionType = 11
	UserActionType_UAT_CardDraw      UserActionType = 12
	UserActionType_UAT_LeagueHelp    UserActionType = 13
	UserActionType_UAT_PlaceStatue   UserActionType = 14
	UserActionType_UAT_AttackMonster UserActionType = 15
)

var UserActionType_name = map[int32]string{
	0:  "UAT_TaskFinish",
	2:  "UAT_Activity",
	3:  "UAT_Dungeon",
	4:  "UAT_Monster",
	5:  "UAT_Train",
	6:  "UAT_Tech",
	7:  "UAT_Build",
	8:  "UAT_Craft",
	9:  "UAT_Market",
	10: "UAT_Purchase",
	11: "UAT_LeagueBox",
	12: "UAT_CardDraw",
	13: "UAT_LeagueHelp",
	14: "UAT_PlaceStatue",
	15: "UAT_AttackMonster",
}
var UserActionType_value = map[string]int32{
	"UAT_TaskFinish":    0,
	"UAT_Activity":      2,
	"UAT_Dungeon":       3,
	"UAT_Monster":       4,
	"UAT_Train":         5,
	"UAT_Tech":          6,
	"UAT_Build":         7,
	"UAT_Craft":         8,
	"UAT_Market":        9,
	"UAT_Purchase":      10,
	"UAT_LeagueBox":     11,
	"UAT_CardDraw":      12,
	"UAT_LeagueHelp":    13,
	"UAT_PlaceStatue":   14,
	"UAT_AttackMonster": 15,
}

func (x UserActionType) String() string {
	return proto.EnumName(UserActionType_name, int32(x))
}
func (UserActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{92} }

// 任务类型(消耗)
type UserCostType int32

const (
	UserCostType_UCT_SpeedItem  UserCostType = 0
	UserCostType_UCT_LeagueCoin UserCostType = 51
	UserCostType_UCT_ArmyRank   UserCostType = 52
	UserCostType_UCT_Experience UserCostType = 53
	UserCostType_UCT_GemCost    UserCostType = 54
)

var UserCostType_name = map[int32]string{
	0:  "UCT_SpeedItem",
	51: "UCT_LeagueCoin",
	52: "UCT_ArmyRank",
	53: "UCT_Experience",
	54: "UCT_GemCost",
}
var UserCostType_value = map[string]int32{
	"UCT_SpeedItem":  0,
	"UCT_LeagueCoin": 51,
	"UCT_ArmyRank":   52,
	"UCT_Experience": 53,
	"UCT_GemCost":    54,
}

func (x UserCostType) String() string {
	return proto.EnumName(UserCostType_name, int32(x))
}
func (UserCostType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{93} }

// 任务类型(PVP)
type UserPvpType int32

const (
	UserPvpType_UPT_Capture  UserPvpType = 0
	UserPvpType_UPT_KillUnit UserPvpType = 2
)

var UserPvpType_name = map[int32]string{
	0: "UPT_Capture",
	2: "UPT_KillUnit",
}
var UserPvpType_value = map[string]int32{
	"UPT_Capture":  0,
	"UPT_KillUnit": 2,
}

func (x UserPvpType) String() string {
	return proto.EnumName(UserPvpType_name, int32(x))
}
func (UserPvpType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{94} }

// 活动上分类型
type ActivityScoreType int32

const (
	ActivityScoreType_AST_Train    ActivityScoreType = 0
	ActivityScoreType_AST_Gather   ActivityScoreType = 2
	ActivityScoreType_AST_Building ActivityScoreType = 3
	ActivityScoreType_AST_Research ActivityScoreType = 4
	ActivityScoreType_AST_Monster  ActivityScoreType = 5
	// AST_KillUnit = 6;	// [OLD]
	ActivityScoreType_AST_Capture    ActivityScoreType = 7
	ActivityScoreType_AST_KillUnit   ActivityScoreType = 8
	ActivityScoreType_AST_TaskFinish ActivityScoreType = 9
	ActivityScoreType_AST_WarCity    ActivityScoreType = 10
	ActivityScoreType_AST_AttackMon  ActivityScoreType = 11
	ActivityScoreType_AST_UpdateUnin ActivityScoreType = 13
	ActivityScoreType_AST_ItemUnin   ActivityScoreType = 14
	ActivityScoreType_AST_SpeedUP    ActivityScoreType = 15
	ActivityScoreType_AST_Cash100    ActivityScoreType = 16
)

var ActivityScoreType_name = map[int32]string{
	0:  "AST_Train",
	2:  "AST_Gather",
	3:  "AST_Building",
	4:  "AST_Research",
	5:  "AST_Monster",
	7:  "AST_Capture",
	8:  "AST_KillUnit",
	9:  "AST_TaskFinish",
	10: "AST_WarCity",
	11: "AST_AttackMon",
	13: "AST_UpdateUnin",
	14: "AST_ItemUnin",
	15: "AST_SpeedUP",
	16: "AST_Cash100",
}
var ActivityScoreType_value = map[string]int32{
	"AST_Train":      0,
	"AST_Gather":     2,
	"AST_Building":   3,
	"AST_Research":   4,
	"AST_Monster":    5,
	"AST_Capture":    7,
	"AST_KillUnit":   8,
	"AST_TaskFinish": 9,
	"AST_WarCity":    10,
	"AST_AttackMon":  11,
	"AST_UpdateUnin": 13,
	"AST_ItemUnin":   14,
	"AST_SpeedUP":    15,
	"AST_Cash100":    16,
}

func (x ActivityScoreType) String() string {
	return proto.EnumName(ActivityScoreType_name, int32(x))
}
func (ActivityScoreType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{95} }

// 游戏任务类型
type GameTaskType int32

const (
	GameTaskType_GTT_Dispatch    GameTaskType = 0
	GameTaskType_GTT_LeagueCup   GameTaskType = 2
	GameTaskType_GTT_Chapter     GameTaskType = 3
	GameTaskType_GTT_ActPoint    GameTaskType = 4
	GameTaskType_GTT_Achievement GameTaskType = 5
	GameTaskType_GTT_LeagueTask  GameTaskType = 6
)

var GameTaskType_name = map[int32]string{
	0: "GTT_Dispatch",
	2: "GTT_LeagueCup",
	3: "GTT_Chapter",
	4: "GTT_ActPoint",
	5: "GTT_Achievement",
	6: "GTT_LeagueTask",
}
var GameTaskType_value = map[string]int32{
	"GTT_Dispatch":    0,
	"GTT_LeagueCup":   2,
	"GTT_Chapter":     3,
	"GTT_ActPoint":    4,
	"GTT_Achievement": 5,
	"GTT_LeagueTask":  6,
}

func (x GameTaskType) String() string {
	return proto.EnumName(GameTaskType_name, int32(x))
}
func (GameTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{96} }

// 七日活动类型
type SevenTaskType int32

const (
	// 建筑战力提升
	SevenTaskType_STT_BuildingPower SevenTaskType = 0
	// 科研战力提升
	SevenTaskType_STT_TechPower SevenTaskType = 2
	// 通过关卡次数
	SevenTaskType_STT_MapList SevenTaskType = 4
	// 击杀野怪
	SevenTaskType_STT_Monster SevenTaskType = 5
	// 完成活力任务
	SevenTaskType_STT_ActivityTask SevenTaskType = 6
	// 联盟帮助次数
	SevenTaskType_STT_LeagueHelp SevenTaskType = 7
	// 在线奖励
	SevenTaskType_STT_OnlieGiftPack SevenTaskType = 8
	// 黑市兑换
	SevenTaskType_STT_BlackMarket SevenTaskType = 9
	// 联盟宝箱开启
	SevenTaskType_STT_LeagueBoxOpen SevenTaskType = 10
	// 联盟宝箱帮助
	SevenTaskType_STT_LeagueBoxHelp SevenTaskType = 11
	// 派遣任务
	SevenTaskType_STT_DispatchTask SevenTaskType = 12
	// 锻造装备
	SevenTaskType_STT_ProductEquip SevenTaskType = 13
	// 多人野怪
	SevenTaskType_STT_MuliMonster SevenTaskType = 14
	// 后勤补给
	SevenTaskType_STT_Supply SevenTaskType = 15
	// 抽卡
	SevenTaskType_STT_TakeCard SevenTaskType = 16
	// 采集 （第二个参数 1：金属， 2：晶体， 3：瓦斯， 4：重氢， 5:可乐，）
	SevenTaskType_STT_Gather SevenTaskType = 17
	// 训练士兵
	SevenTaskType_STT_Train SevenTaskType = 18
	// 击杀士兵
	SevenTaskType_STT_KillUnit SevenTaskType = 19
	// 消耗资源 （第二个参数 1：金属， 2：晶体， 3：瓦斯， 4：重氢， 5:可乐， 100:钻石）
	SevenTaskType_STT_CostCash SevenTaskType = 20
	// 加速时间 ( 第二参数 1：总加速时长， 2：建造加速时长，3：科研加速时长， 4：训练加速，5：医疗加速 )
	SevenTaskType_STT_SpeedTime SevenTaskType = 21
	// 英雄 （第二个参数 1： 数量， 2: 等级数量， 3: 星级数量， 4:品质数量）
	SevenTaskType_STT_Hore SevenTaskType = 22
	// 建筑等级 （第二个参数， 建筑类型 MG_GameDefine.proto 文件中定义 BuildingType）
	SevenTaskType_STT_BuildingLevel SevenTaskType = 23
	// 科研次数
	SevenTaskType_STT_TechCount SevenTaskType = 24
	// 建筑次数
	SevenTaskType_STT_BuildingCount SevenTaskType = 25
	// 攻打野怪
	SevenTaskType_STT_AttackMonster SevenTaskType = 26
	// 攻打多人怪
	SevenTaskType_STT_AttackMultiMon SevenTaskType = 27
	// 联盟任务
	SevenTaskType_STT_LeagueTask SevenTaskType = 28
	// 击杀小野怪
	SevenTaskType_STT_WILDMONSTEREX SevenTaskType = 29
	// 科研
	SevenTaskType_STT_Tech SevenTaskType = 30
	// 训练增加战力
	SevenTaskType_STT_Train_Power SevenTaskType = 31
)

var SevenTaskType_name = map[int32]string{
	0:  "STT_BuildingPower",
	2:  "STT_TechPower",
	4:  "STT_MapList",
	5:  "STT_Monster",
	6:  "STT_ActivityTask",
	7:  "STT_LeagueHelp",
	8:  "STT_OnlieGiftPack",
	9:  "STT_BlackMarket",
	10: "STT_LeagueBoxOpen",
	11: "STT_LeagueBoxHelp",
	12: "STT_DispatchTask",
	13: "STT_ProductEquip",
	14: "STT_MuliMonster",
	15: "STT_Supply",
	16: "STT_TakeCard",
	17: "STT_Gather",
	18: "STT_Train",
	19: "STT_KillUnit",
	20: "STT_CostCash",
	21: "STT_SpeedTime",
	22: "STT_Hore",
	23: "STT_BuildingLevel",
	24: "STT_TechCount",
	25: "STT_BuildingCount",
	26: "STT_AttackMonster",
	27: "STT_AttackMultiMon",
	28: "STT_LeagueTask",
	29: "STT_WILDMONSTEREX",
	30: "STT_Tech",
	31: "STT_Train_Power",
}
var SevenTaskType_value = map[string]int32{
	"STT_BuildingPower":  0,
	"STT_TechPower":      2,
	"STT_MapList":        4,
	"STT_Monster":        5,
	"STT_ActivityTask":   6,
	"STT_LeagueHelp":     7,
	"STT_OnlieGiftPack":  8,
	"STT_BlackMarket":    9,
	"STT_LeagueBoxOpen":  10,
	"STT_LeagueBoxHelp":  11,
	"STT_DispatchTask":   12,
	"STT_ProductEquip":   13,
	"STT_MuliMonster":    14,
	"STT_Supply":         15,
	"STT_TakeCard":       16,
	"STT_Gather":         17,
	"STT_Train":          18,
	"STT_KillUnit":       19,
	"STT_CostCash":       20,
	"STT_SpeedTime":      21,
	"STT_Hore":           22,
	"STT_BuildingLevel":  23,
	"STT_TechCount":      24,
	"STT_BuildingCount":  25,
	"STT_AttackMonster":  26,
	"STT_AttackMultiMon": 27,
	"STT_LeagueTask":     28,
	"STT_WILDMONSTEREX":  29,
	"STT_Tech":           30,
	"STT_Train_Power":    31,
}

func (x SevenTaskType) String() string {
	return proto.EnumName(SevenTaskType_name, int32(x))
}
func (SevenTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{97} }

type DailyTaskType int32

const (
	DailyTaskType_STT_GatherAnyRes        DailyTaskType = 0
	DailyTaskType_STT_GatherSpecifyRes    DailyTaskType = 2
	DailyTaskType_STT_TrainAnyUnit        DailyTaskType = 3
	DailyTaskType_STT_TrainTUnit          DailyTaskType = 4
	DailyTaskType_STT_TrainSpecifyTUnit   DailyTaskType = 5
	DailyTaskType_STT_UpPowerByTrain      DailyTaskType = 6
	DailyTaskType_STT_UseSpeedForTrain    DailyTaskType = 7
	DailyTaskType_STT_UseSpeedForBuilding DailyTaskType = 8
	DailyTaskType_STT_UseSpeedForResearch DailyTaskType = 9
	DailyTaskType_STT_KillAlphaTms        DailyTaskType = 10
	DailyTaskType_STT_KillMachineMonster  DailyTaskType = 11
	DailyTaskType_STT_HitMachineMonster   DailyTaskType = 12
	DailyTaskType_STT_ConsumeTL           DailyTaskType = 13
	DailyTaskType_STT_DarkMarketBuy       DailyTaskType = 14
	DailyTaskType_STT_UpPowerByBuilding   DailyTaskType = 15
	DailyTaskType_STT_UpPowerByResearch   DailyTaskType = 16
	DailyTaskType_STT_UseGem              DailyTaskType = 17
	DailyTaskType_STT_OpenLeagueBox       DailyTaskType = 18
	DailyTaskType_STT_HelpLeagueBox       DailyTaskType = 19
	DailyTaskType_STT_HelpLeague          DailyTaskType = 20
	DailyTaskType_STT_GetLeagueGift       DailyTaskType = 21
	DailyTaskType_STT_KillMachineCenter   DailyTaskType = 22
	DailyTaskType_STT_UseAnySpeed         DailyTaskType = 23
	DailyTaskType_STT_FightPowerUp        DailyTaskType = 24
)

var DailyTaskType_name = map[int32]string{
	0:  "STT_GatherAnyRes",
	2:  "STT_GatherSpecifyRes",
	3:  "STT_TrainAnyUnit",
	4:  "STT_TrainTUnit",
	5:  "STT_TrainSpecifyTUnit",
	6:  "STT_UpPowerByTrain",
	7:  "STT_UseSpeedForTrain",
	8:  "STT_UseSpeedForBuilding",
	9:  "STT_UseSpeedForResearch",
	10: "STT_KillAlphaTms",
	11: "STT_KillMachineMonster",
	12: "STT_HitMachineMonster",
	13: "STT_ConsumeTL",
	14: "STT_DarkMarketBuy",
	15: "STT_UpPowerByBuilding",
	16: "STT_UpPowerByResearch",
	17: "STT_UseGem",
	18: "STT_OpenLeagueBox",
	19: "STT_HelpLeagueBox",
	20: "STT_HelpLeague",
	21: "STT_GetLeagueGift",
	22: "STT_KillMachineCenter",
	23: "STT_UseAnySpeed",
	24: "STT_FightPowerUp",
}
var DailyTaskType_value = map[string]int32{
	"STT_GatherAnyRes":        0,
	"STT_GatherSpecifyRes":    2,
	"STT_TrainAnyUnit":        3,
	"STT_TrainTUnit":          4,
	"STT_TrainSpecifyTUnit":   5,
	"STT_UpPowerByTrain":      6,
	"STT_UseSpeedForTrain":    7,
	"STT_UseSpeedForBuilding": 8,
	"STT_UseSpeedForResearch": 9,
	"STT_KillAlphaTms":        10,
	"STT_KillMachineMonster":  11,
	"STT_HitMachineMonster":   12,
	"STT_ConsumeTL":           13,
	"STT_DarkMarketBuy":       14,
	"STT_UpPowerByBuilding":   15,
	"STT_UpPowerByResearch":   16,
	"STT_UseGem":              17,
	"STT_OpenLeagueBox":       18,
	"STT_HelpLeagueBox":       19,
	"STT_HelpLeague":          20,
	"STT_GetLeagueGift":       21,
	"STT_KillMachineCenter":   22,
	"STT_UseAnySpeed":         23,
	"STT_FightPowerUp":        24,
}

func (x DailyTaskType) String() string {
	return proto.EnumName(DailyTaskType_name, int32(x))
}
func (DailyTaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{98} }

// 城市争霸目标类型
type CityWarTargetType int32

const (
	CityWarTargetType_GWTT_City    CityWarTargetType = 0
	CityWarTargetType_GWTT_Inside  CityWarTargetType = 2
	CityWarTargetType_GWTT_Outside CityWarTargetType = 3
)

var CityWarTargetType_name = map[int32]string{
	0: "GWTT_City",
	2: "GWTT_Inside",
	3: "GWTT_Outside",
}
var CityWarTargetType_value = map[string]int32{
	"GWTT_City":    0,
	"GWTT_Inside":  2,
	"GWTT_Outside": 3,
}

func (x CityWarTargetType) String() string {
	return proto.EnumName(CityWarTargetType_name, int32(x))
}
func (CityWarTargetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{99} }

// 掉落活动类型
type DropActivityType int32

const (
	DropActivityType_DAT_KillMonster     DropActivityType = 0
	DropActivityType_DAT_AttackMonster   DropActivityType = 2
	DropActivityType_DAT_KillMuliMonster DropActivityType = 3
	DropActivityType_DAT_AttackMainCity  DropActivityType = 4
	DropActivityType_DAT_Gather          DropActivityType = 5
	DropActivityType_DAT_MapList         DropActivityType = 6
	DropActivityType_DAT_Supply          DropActivityType = 7
	DropActivityType_DAT_OnlineReward    DropActivityType = 8
	DropActivityType_DAT_Collect         DropActivityType = 9
)

var DropActivityType_name = map[int32]string{
	0: "DAT_KillMonster",
	2: "DAT_AttackMonster",
	3: "DAT_KillMuliMonster",
	4: "DAT_AttackMainCity",
	5: "DAT_Gather",
	6: "DAT_MapList",
	7: "DAT_Supply",
	8: "DAT_OnlineReward",
	9: "DAT_Collect",
}
var DropActivityType_value = map[string]int32{
	"DAT_KillMonster":     0,
	"DAT_AttackMonster":   2,
	"DAT_KillMuliMonster": 3,
	"DAT_AttackMainCity":  4,
	"DAT_Gather":          5,
	"DAT_MapList":         6,
	"DAT_Supply":          7,
	"DAT_OnlineReward":    8,
	"DAT_Collect":         9,
}

func (x DropActivityType) String() string {
	return proto.EnumName(DropActivityType_name, int32(x))
}
func (DropActivityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{100} }

// 联盟任务状态
type LeagueTaskStatus int32

const (
	LeagueTaskStatus_LTS_PROCESSING    LeagueTaskStatus = 0
	LeagueTaskStatus_LTS_CAN_GET_AWARD LeagueTaskStatus = 2
	LeagueTaskStatus_LTS_CAN_START     LeagueTaskStatus = 3
	LeagueTaskStatus_LTS_NOT_START     LeagueTaskStatus = 4
)

var LeagueTaskStatus_name = map[int32]string{
	0: "LTS_PROCESSING",
	2: "LTS_CAN_GET_AWARD",
	3: "LTS_CAN_START",
	4: "LTS_NOT_START",
}
var LeagueTaskStatus_value = map[string]int32{
	"LTS_PROCESSING":    0,
	"LTS_CAN_GET_AWARD": 2,
	"LTS_CAN_START":     3,
	"LTS_NOT_START":     4,
}

func (x LeagueTaskStatus) String() string {
	return proto.EnumName(LeagueTaskStatus_name, int32(x))
}
func (LeagueTaskStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{101} }

// 最强执政官活动类型
type StrongestCommanderType int32

const (
	StrongestCommanderType_SCT_Collection       StrongestCommanderType = 0
	StrongestCommanderType_SCT_Tech             StrongestCommanderType = 2
	StrongestCommanderType_SCT_Building         StrongestCommanderType = 3
	StrongestCommanderType_SCT_Train            StrongestCommanderType = 4
	StrongestCommanderType_SCT_UpgradeUnit      StrongestCommanderType = 5
	StrongestCommanderType_SCT_KillUnit         StrongestCommanderType = 6
	StrongestCommanderType_SCT_KillMonsterEx    StrongestCommanderType = 7
	StrongestCommanderType_SCT_Power            StrongestCommanderType = 8
	StrongestCommanderType_SCT_AttackMonster    StrongestCommanderType = 9
	StrongestCommanderType_SCT_KillMonster      StrongestCommanderType = 10
	StrongestCommanderType_SCT_KillMultiMonster StrongestCommanderType = 11
	StrongestCommanderType_SCT_TrainUnitType    StrongestCommanderType = 12
	StrongestCommanderType_SCT_BeKilledUnit     StrongestCommanderType = 13
	StrongestCommanderType_SCT_OccupyMiracle    StrongestCommanderType = 14
)

var StrongestCommanderType_name = map[int32]string{
	0:  "SCT_Collection",
	2:  "SCT_Tech",
	3:  "SCT_Building",
	4:  "SCT_Train",
	5:  "SCT_UpgradeUnit",
	6:  "SCT_KillUnit",
	7:  "SCT_KillMonsterEx",
	8:  "SCT_Power",
	9:  "SCT_AttackMonster",
	10: "SCT_KillMonster",
	11: "SCT_KillMultiMonster",
	12: "SCT_TrainUnitType",
	13: "SCT_BeKilledUnit",
	14: "SCT_OccupyMiracle",
}
var StrongestCommanderType_value = map[string]int32{
	"SCT_Collection":       0,
	"SCT_Tech":             2,
	"SCT_Building":         3,
	"SCT_Train":            4,
	"SCT_UpgradeUnit":      5,
	"SCT_KillUnit":         6,
	"SCT_KillMonsterEx":    7,
	"SCT_Power":            8,
	"SCT_AttackMonster":    9,
	"SCT_KillMonster":      10,
	"SCT_KillMultiMonster": 11,
	"SCT_TrainUnitType":    12,
	"SCT_BeKilledUnit":     13,
	"SCT_OccupyMiracle":    14,
}

func (x StrongestCommanderType) String() string {
	return proto.EnumName(StrongestCommanderType_name, int32(x))
}
func (StrongestCommanderType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{102} }

// 远征商店道具类型
type ExpeditionShopItemType int32

const (
	ExpeditionShopItemType_ESIT_SPECIAL ExpeditionShopItemType = 0
	ExpeditionShopItemType_ESIT_NORMAL  ExpeditionShopItemType = 2
	ExpeditionShopItemType_ESIT_FIXED1  ExpeditionShopItemType = 3
	ExpeditionShopItemType_ESIT_FIXED2  ExpeditionShopItemType = 4
)

var ExpeditionShopItemType_name = map[int32]string{
	0: "ESIT_SPECIAL",
	2: "ESIT_NORMAL",
	3: "ESIT_FIXED1",
	4: "ESIT_FIXED2",
}
var ExpeditionShopItemType_value = map[string]int32{
	"ESIT_SPECIAL": 0,
	"ESIT_NORMAL":  2,
	"ESIT_FIXED1":  3,
	"ESIT_FIXED2":  4,
}

func (x ExpeditionShopItemType) String() string {
	return proto.EnumName(ExpeditionShopItemType_name, int32(x))
}
func (ExpeditionShopItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{103} }

// 天下大势条目类型
type WorldSituationEntryType int32

const (
	WorldSituationEntryType_WSET_SERVER WorldSituationEntryType = 0
	WorldSituationEntryType_WSET_RANK   WorldSituationEntryType = 2
	WorldSituationEntryType_WSET_LEAGUE WorldSituationEntryType = 3
)

var WorldSituationEntryType_name = map[int32]string{
	0: "WSET_SERVER",
	2: "WSET_RANK",
	3: "WSET_LEAGUE",
}
var WorldSituationEntryType_value = map[string]int32{
	"WSET_SERVER": 0,
	"WSET_RANK":   2,
	"WSET_LEAGUE": 3,
}

func (x WorldSituationEntryType) String() string {
	return proto.EnumName(WorldSituationEntryType_name, int32(x))
}
func (WorldSituationEntryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{104} }

// 天下大势条目子类型
type WorldSituationEntrySubType int32

const (
	WorldSituationEntrySubType_WSEST_SERVER_KILL_WILDMONSTEREX   WorldSituationEntrySubType = 0
	WorldSituationEntrySubType_WSEST_SERVER_KILL_WILDMONSTER     WorldSituationEntrySubType = 2
	WorldSituationEntrySubType_WSEST_SERVER_KILL_MUTIWILDMONSTER WorldSituationEntrySubType = 3
	WorldSituationEntrySubType_WSEST_SERVER_COLLECT_RESOURCE     WorldSituationEntrySubType = 4
	WorldSituationEntrySubType_WSEST_SERVER_MAINCITY_LEVEL       WorldSituationEntrySubType = 5
	WorldSituationEntrySubType_WSEST_SERVER_LEAGUE               WorldSituationEntrySubType = 6
	WorldSituationEntrySubType_WSEST_RANK_USER_POWER             WorldSituationEntrySubType = 7
	WorldSituationEntrySubType_WSEST_RANK_LEAGUE_POWER           WorldSituationEntrySubType = 8
	WorldSituationEntrySubType_WSEST_LEAGUE_CONQUER_CITY         WorldSituationEntrySubType = 9
	WorldSituationEntrySubType_WSEST_LEAGUE_KILL_MUTIWILDMONSTER WorldSituationEntrySubType = 10
	WorldSituationEntrySubType_WSEST_LEAGUE_KILL_WILDMONSTER     WorldSituationEntrySubType = 11
	WorldSituationEntrySubType_WSEST_LEAGUE_CONQUER_MIRACLE      WorldSituationEntrySubType = 12
)

var WorldSituationEntrySubType_name = map[int32]string{
	0:  "WSEST_SERVER_KILL_WILDMONSTEREX",
	2:  "WSEST_SERVER_KILL_WILDMONSTER",
	3:  "WSEST_SERVER_KILL_MUTIWILDMONSTER",
	4:  "WSEST_SERVER_COLLECT_RESOURCE",
	5:  "WSEST_SERVER_MAINCITY_LEVEL",
	6:  "WSEST_SERVER_LEAGUE",
	7:  "WSEST_RANK_USER_POWER",
	8:  "WSEST_RANK_LEAGUE_POWER",
	9:  "WSEST_LEAGUE_CONQUER_CITY",
	10: "WSEST_LEAGUE_KILL_MUTIWILDMONSTER",
	11: "WSEST_LEAGUE_KILL_WILDMONSTER",
	12: "WSEST_LEAGUE_CONQUER_MIRACLE",
}
var WorldSituationEntrySubType_value = map[string]int32{
	"WSEST_SERVER_KILL_WILDMONSTEREX":   0,
	"WSEST_SERVER_KILL_WILDMONSTER":     2,
	"WSEST_SERVER_KILL_MUTIWILDMONSTER": 3,
	"WSEST_SERVER_COLLECT_RESOURCE":     4,
	"WSEST_SERVER_MAINCITY_LEVEL":       5,
	"WSEST_SERVER_LEAGUE":               6,
	"WSEST_RANK_USER_POWER":             7,
	"WSEST_RANK_LEAGUE_POWER":           8,
	"WSEST_LEAGUE_CONQUER_CITY":         9,
	"WSEST_LEAGUE_KILL_MUTIWILDMONSTER": 10,
	"WSEST_LEAGUE_KILL_WILDMONSTER":     11,
	"WSEST_LEAGUE_CONQUER_MIRACLE":      12,
}

func (x WorldSituationEntrySubType) String() string {
	return proto.EnumName(WorldSituationEntrySubType_name, int32(x))
}
func (WorldSituationEntrySubType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{105} }

// 天下大势条目状态
type WorldSituationEntryStatus int32

const (
	WorldSituationEntryStatus_WSES_NOT_START WorldSituationEntryStatus = 0
	WorldSituationEntryStatus_WSES_PROCESS   WorldSituationEntryStatus = 2
	WorldSituationEntryStatus_WSES_FINISH    WorldSituationEntryStatus = 3
)

var WorldSituationEntryStatus_name = map[int32]string{
	0: "WSES_NOT_START",
	2: "WSES_PROCESS",
	3: "WSES_FINISH",
}
var WorldSituationEntryStatus_value = map[string]int32{
	"WSES_NOT_START": 0,
	"WSES_PROCESS":   2,
	"WSES_FINISH":    3,
}

func (x WorldSituationEntryStatus) String() string {
	return proto.EnumName(WorldSituationEntryStatus_name, int32(x))
}
func (WorldSituationEntryStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{106} }

// 天下大势条目结束类型
type WorldSituationEntryEndType int32

const (
	WorldSituationEntryEndType_WSEET_TIME       WorldSituationEntryEndType = 0
	WorldSituationEntryEndType_WSEET_REACH_TASK WorldSituationEntryEndType = 2
)

var WorldSituationEntryEndType_name = map[int32]string{
	0: "WSEET_TIME",
	2: "WSEET_REACH_TASK",
}
var WorldSituationEntryEndType_value = map[string]int32{
	"WSEET_TIME":       0,
	"WSEET_REACH_TASK": 2,
}

func (x WorldSituationEntryEndType) String() string {
	return proto.EnumName(WorldSituationEntryEndType_name, int32(x))
}
func (WorldSituationEntryEndType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{107} }

// 天下大势解锁类型
type WorldSituationUnlockType int32

const (
	WorldSituationUnlockType_WSUT_CITY            WorldSituationUnlockType = 0
	WorldSituationUnlockType_WSUT_WILDMONSTER     WorldSituationUnlockType = 2
	WorldSituationUnlockType_WSUT_MUTIWILDMONSTER WorldSituationUnlockType = 3
	WorldSituationUnlockType_WSUT_MIRACLE         WorldSituationUnlockType = 4
)

var WorldSituationUnlockType_name = map[int32]string{
	0: "WSUT_CITY",
	2: "WSUT_WILDMONSTER",
	3: "WSUT_MUTIWILDMONSTER",
	4: "WSUT_MIRACLE",
}
var WorldSituationUnlockType_value = map[string]int32{
	"WSUT_CITY":            0,
	"WSUT_WILDMONSTER":     2,
	"WSUT_MUTIWILDMONSTER": 3,
	"WSUT_MIRACLE":         4,
}

func (x WorldSituationUnlockType) String() string {
	return proto.EnumName(WorldSituationUnlockType_name, int32(x))
}
func (WorldSituationUnlockType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{108} }

type SyncType int32

const (
	SyncType_Achivement               SyncType = 0
	SyncType_Building                 SyncType = 2
	SyncType_BuildingAttr             SyncType = 3
	SyncType_DelBuilding              SyncType = 4
	SyncType_Chapter                  SyncType = 5
	SyncType_ItemPackage              SyncType = 6
	SyncType_LeagueTech               SyncType = 7
	SyncType_LeagueRecommendTech      SyncType = 8
	SyncType_LeagueScore              SyncType = 9
	SyncType_LeaugeMemberCapacity     SyncType = 10
	SyncType_LeagueMemberPower        SyncType = 11
	SyncType_LeaguePower              SyncType = 12
	SyncType_AddLocalAction           SyncType = 13
	SyncType_DelLocalAction           SyncType = 14
	SyncType_SetLocalActionStartTime  SyncType = 15
	SyncType_SetLocalActionHelp       SyncType = 16
	SyncType_SetLocalActionRemainTime SyncType = 17
	SyncType_SetLocalActionSecondTime SyncType = 18
	SyncType_SyncActivity             SyncType = 19
	SyncType_LeagueMemberKillNum      SyncType = 20
	SyncType_LeagueShopItem           SyncType = 21
	SyncType_LeagueMemberTitle        SyncType = 22
	SyncType_LeagueMemberOnlineTime   SyncType = 23
	SyncType_LeagueFlag               SyncType = 24
	SyncType_LeagueMemLevel           SyncType = 25
	SyncType_LeagueOwnCity            SyncType = 26
	SyncType_AddLeagueMember          SyncType = 27
	SyncType_DelLeagueMember          SyncType = 28
	SyncType_SetLeagueBattle          SyncType = 29
	SyncType_DelLeagueBattle          SyncType = 30
	SyncType_SetLeagueBattleNotJoin   SyncType = 31
	SyncType_DelLeagueBattleNotJoin   SyncType = 32
	SyncType_LeagueBuilding           SyncType = 33
	SyncType_LeagueSpecialGift        SyncType = 34
	SyncType_AddLeagueRequestJoinList SyncType = 35
	SyncType_ChangeCampLeader         SyncType = 36
	SyncType_RemoveCampLeader         SyncType = 37
	SyncType_DeleteAllRequestJoin     SyncType = 38
	SyncType_DeleteRequestJoin        SyncType = 39
	SyncType_SetLeagueSlogan          SyncType = 40
	SyncType_SetLeagueOwnerName       SyncType = 41
	SyncType_SetLeagueOwnerId         SyncType = 42
	SyncType_SetLeague                SyncType = 43
	SyncType_LeagueMemberCount        SyncType = 44
	SyncType_OfferGift                SyncType = 45
	SyncType_LeagueMemTitle           SyncType = 46
	SyncType_SyncSevenDayTask         SyncType = 47
	SyncType_LeagueChannelId          SyncType = 48
	SyncType_SetLeagueDevote          SyncType = 49
	SyncType_BuffTitle                SyncType = 50
)

var SyncType_name = map[int32]string{
	0:  "Achivement",
	2:  "Building",
	3:  "BuildingAttr",
	4:  "DelBuilding",
	5:  "Chapter",
	6:  "ItemPackage",
	7:  "LeagueTech",
	8:  "LeagueRecommendTech",
	9:  "LeagueScore",
	10: "LeaugeMemberCapacity",
	11: "LeagueMemberPower",
	12: "LeaguePower",
	13: "AddLocalAction",
	14: "DelLocalAction",
	15: "SetLocalActionStartTime",
	16: "SetLocalActionHelp",
	17: "SetLocalActionRemainTime",
	18: "SetLocalActionSecondTime",
	19: "SyncActivity",
	20: "LeagueMemberKillNum",
	21: "LeagueShopItem",
	22: "LeagueMemberTitle",
	23: "LeagueMemberOnlineTime",
	24: "LeagueFlag",
	25: "LeagueMemLevel",
	26: "LeagueOwnCity",
	27: "AddLeagueMember",
	28: "DelLeagueMember",
	29: "SetLeagueBattle",
	30: "DelLeagueBattle",
	31: "SetLeagueBattleNotJoin",
	32: "DelLeagueBattleNotJoin",
	33: "LeagueBuilding",
	34: "LeagueSpecialGift",
	35: "AddLeagueRequestJoinList",
	36: "ChangeCampLeader",
	37: "RemoveCampLeader",
	38: "DeleteAllRequestJoin",
	39: "DeleteRequestJoin",
	40: "SetLeagueSlogan",
	41: "SetLeagueOwnerName",
	42: "SetLeagueOwnerId",
	43: "SetLeague",
	44: "LeagueMemberCount",
	45: "OfferGift",
	46: "LeagueMemTitle",
	47: "SyncSevenDayTask",
	48: "LeagueChannelId",
	49: "SetLeagueDevote",
	50: "BuffTitle",
}
var SyncType_value = map[string]int32{
	"Achivement":               0,
	"Building":                 2,
	"BuildingAttr":             3,
	"DelBuilding":              4,
	"Chapter":                  5,
	"ItemPackage":              6,
	"LeagueTech":               7,
	"LeagueRecommendTech":      8,
	"LeagueScore":              9,
	"LeaugeMemberCapacity":     10,
	"LeagueMemberPower":        11,
	"LeaguePower":              12,
	"AddLocalAction":           13,
	"DelLocalAction":           14,
	"SetLocalActionStartTime":  15,
	"SetLocalActionHelp":       16,
	"SetLocalActionRemainTime": 17,
	"SetLocalActionSecondTime": 18,
	"SyncActivity":             19,
	"LeagueMemberKillNum":      20,
	"LeagueShopItem":           21,
	"LeagueMemberTitle":        22,
	"LeagueMemberOnlineTime":   23,
	"LeagueFlag":               24,
	"LeagueMemLevel":           25,
	"LeagueOwnCity":            26,
	"AddLeagueMember":          27,
	"DelLeagueMember":          28,
	"SetLeagueBattle":          29,
	"DelLeagueBattle":          30,
	"SetLeagueBattleNotJoin":   31,
	"DelLeagueBattleNotJoin":   32,
	"LeagueBuilding":           33,
	"LeagueSpecialGift":        34,
	"AddLeagueRequestJoinList": 35,
	"ChangeCampLeader":         36,
	"RemoveCampLeader":         37,
	"DeleteAllRequestJoin":     38,
	"DeleteRequestJoin":        39,
	"SetLeagueSlogan":          40,
	"SetLeagueOwnerName":       41,
	"SetLeagueOwnerId":         42,
	"SetLeague":                43,
	"LeagueMemberCount":        44,
	"OfferGift":                45,
	"LeagueMemTitle":           46,
	"SyncSevenDayTask":         47,
	"LeagueChannelId":          48,
	"SetLeagueDevote":          49,
	"BuffTitle":                50,
}

func (x SyncType) String() string {
	return proto.EnumName(SyncType_name, int32(x))
}
func (SyncType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{109} }

type ServerTimeStatus int32

const (
	ServerTimeStatus_STS_Building   ServerTimeStatus = 0
	ServerTimeStatus_STS_Protecting ServerTimeStatus = 2
	ServerTimeStatus_STS_Opening    ServerTimeStatus = 3
)

var ServerTimeStatus_name = map[int32]string{
	0: "STS_Building",
	2: "STS_Protecting",
	3: "STS_Opening",
}
var ServerTimeStatus_value = map[string]int32{
	"STS_Building":   0,
	"STS_Protecting": 2,
	"STS_Opening":    3,
}

func (x ServerTimeStatus) String() string {
	return proto.EnumName(ServerTimeStatus_name, int32(x))
}
func (ServerTimeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{110} }

type ServerRankType int32

const (
	ServerRankType_SRT_UserPowerRank         ServerRankType = 0
	ServerRankType_SRT_UserKilledRank        ServerRankType = 2
	ServerRankType_SRT_UserLevelRank         ServerRankType = 3
	ServerRankType_SRT_UserMaincityLevelRank ServerRankType = 4
	ServerRankType_SRT_AipShipStarRank       ServerRankType = 5
	ServerRankType_SRT_HeroKilledRank        ServerRankType = 6
	ServerRankType_SRT_GatherRank            ServerRankType = 7
)

var ServerRankType_name = map[int32]string{
	0: "SRT_UserPowerRank",
	2: "SRT_UserKilledRank",
	3: "SRT_UserLevelRank",
	4: "SRT_UserMaincityLevelRank",
	5: "SRT_AipShipStarRank",
	6: "SRT_HeroKilledRank",
	7: "SRT_GatherRank",
}
var ServerRankType_value = map[string]int32{
	"SRT_UserPowerRank":         0,
	"SRT_UserKilledRank":        2,
	"SRT_UserLevelRank":         3,
	"SRT_UserMaincityLevelRank": 4,
	"SRT_AipShipStarRank":       5,
	"SRT_HeroKilledRank":        6,
	"SRT_GatherRank":            7,
}

func (x ServerRankType) String() string {
	return proto.EnumName(ServerRankType_name, int32(x))
}
func (ServerRankType) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{111} }

type MonsterAtkCityStage int32

const (
	MonsterAtkCityStage_Init           MonsterAtkCityStage = 0
	MonsterAtkCityStage_Preparing      MonsterAtkCityStage = 2
	MonsterAtkCityStage_DefOngoing     MonsterAtkCityStage = 3
	MonsterAtkCityStage_ReadyFightBack MonsterAtkCityStage = 4
	MonsterAtkCityStage_FightBack      MonsterAtkCityStage = 5
	MonsterAtkCityStage_End            MonsterAtkCityStage = 6
)

var MonsterAtkCityStage_name = map[int32]string{
	0: "Init",
	2: "Preparing",
	3: "DefOngoing",
	4: "ReadyFightBack",
	5: "FightBack",
	6: "End",
}
var MonsterAtkCityStage_value = map[string]int32{
	"Init":           0,
	"Preparing":      2,
	"DefOngoing":     3,
	"ReadyFightBack": 4,
	"FightBack":      5,
	"End":            6,
}

func (x MonsterAtkCityStage) String() string {
	return proto.EnumName(MonsterAtkCityStage_name, int32(x))
}
func (MonsterAtkCityStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{112} }

func init() {
	proto.RegisterEnum("proto_micro.VectorType", VectorType_name, VectorType_value)
	proto.RegisterEnum("proto_micro.CashType", CashType_name, CashType_value)
	proto.RegisterEnum("proto_micro.ExpType", ExpType_name, ExpType_value)
	proto.RegisterEnum("proto_micro.MapStageType", MapStageType_name, MapStageType_value)
	proto.RegisterEnum("proto_micro.ActionType", ActionType_name, ActionType_value)
	proto.RegisterEnum("proto_micro.BuildingType", BuildingType_name, BuildingType_value)
	proto.RegisterEnum("proto_micro.MailType", MailType_name, MailType_value)
	proto.RegisterEnum("proto_micro.WorldEntryType", WorldEntryType_name, WorldEntryType_value)
	proto.RegisterEnum("proto_micro.UnitType", UnitType_name, UnitType_value)
	proto.RegisterEnum("proto_micro.UnitBattleType", UnitBattleType_name, UnitBattleType_value)
	proto.RegisterEnum("proto_micro.RetActionType", RetActionType_name, RetActionType_value)
	proto.RegisterEnum("proto_micro.RetChatType", RetChatType_name, RetChatType_value)
	proto.RegisterEnum("proto_micro.ChatContentType", ChatContentType_name, ChatContentType_value)
	proto.RegisterEnum("proto_micro.ForbiddenChatType", ForbiddenChatType_name, ForbiddenChatType_value)
	proto.RegisterEnum("proto_micro.TipType", TipType_name, TipType_value)
	proto.RegisterEnum("proto_micro.LeagueMemberLevel", LeagueMemberLevel_name, LeagueMemberLevel_value)
	proto.RegisterEnum("proto_micro.LeaguePermissionOperator", LeaguePermissionOperator_name, LeaguePermissionOperator_value)
	proto.RegisterEnum("proto_micro.LeagueResult", LeagueResult_name, LeagueResult_value)
	proto.RegisterEnum("proto_micro.ChatChannelType", ChatChannelType_name, ChatChannelType_value)
	proto.RegisterEnum("proto_micro.WorldChannelType", WorldChannelType_name, WorldChannelType_value)
	proto.RegisterEnum("proto_micro.HeroStatus", HeroStatus_name, HeroStatus_value)
	proto.RegisterEnum("proto_micro.AtttibuteType", AtttibuteType_name, AtttibuteType_value)
	proto.RegisterEnum("proto_micro.AttributeSource", AttributeSource_name, AttributeSource_value)
	proto.RegisterEnum("proto_micro.ItemMainType", ItemMainType_name, ItemMainType_value)
	proto.RegisterEnum("proto_micro.ItemSubType", ItemSubType_name, ItemSubType_value)
	proto.RegisterEnum("proto_micro.SpyType", SpyType_name, SpyType_value)
	proto.RegisterEnum("proto_micro.EquipPosType", EquipPosType_name, EquipPosType_value)
	proto.RegisterEnum("proto_micro.EquipQualityType", EquipQualityType_name, EquipQualityType_value)
	proto.RegisterEnum("proto_micro.CommanderEquipState", CommanderEquipState_name, CommanderEquipState_value)
	proto.RegisterEnum("proto_micro.LeagueStausType", LeagueStausType_name, LeagueStausType_value)
	proto.RegisterEnum("proto_micro.DispatchTaskStatus", DispatchTaskStatus_name, DispatchTaskStatus_value)
	proto.RegisterEnum("proto_micro.StatueStatus", StatueStatus_name, StatueStatus_value)
	proto.RegisterEnum("proto_micro.StatueOp", StatueOp_name, StatueOp_value)
	proto.RegisterEnum("proto_micro.GiftSubType", GiftSubType_name, GiftSubType_value)
	proto.RegisterEnum("proto_micro.GiftConditionType", GiftConditionType_name, GiftConditionType_value)
	proto.RegisterEnum("proto_micro.ActivityMapingType", ActivityMapingType_name, ActivityMapingType_value)
	proto.RegisterEnum("proto_micro.TranslateType", TranslateType_name, TranslateType_value)
	proto.RegisterEnum("proto_micro.SystemChatType", SystemChatType_name, SystemChatType_value)
	proto.RegisterEnum("proto_micro.SetCharNameReturnValue", SetCharNameReturnValue_name, SetCharNameReturnValue_value)
	proto.RegisterEnum("proto_micro.WorldDataStatus", WorldDataStatus_name, WorldDataStatus_value)
	proto.RegisterEnum("proto_micro.StrollHeroType", StrollHeroType_name, StrollHeroType_value)
	proto.RegisterEnum("proto_micro.StrollHeroResult", StrollHeroResult_name, StrollHeroResult_value)
	proto.RegisterEnum("proto_micro.LeagueFlagType", LeagueFlagType_name, LeagueFlagType_value)
	proto.RegisterEnum("proto_micro.UserNameExistsResult", UserNameExistsResult_name, UserNameExistsResult_value)
	proto.RegisterEnum("proto_micro.PushMsgType", PushMsgType_name, PushMsgType_value)
	proto.RegisterEnum("proto_micro.LoginType", LoginType_name, LoginType_value)
	proto.RegisterEnum("proto_micro.LoginReCode", LoginReCode_name, LoginReCode_value)
	proto.RegisterEnum("proto_micro.EveryoneMailConditionType", EveryoneMailConditionType_name, EveryoneMailConditionType_value)
	proto.RegisterEnum("proto_micro.EveryoneMailType", EveryoneMailType_name, EveryoneMailType_value)
	proto.RegisterEnum("proto_micro.ChangeServerRetCode", ChangeServerRetCode_name, ChangeServerRetCode_value)
	proto.RegisterEnum("proto_micro.ActivityType", ActivityType_name, ActivityType_value)
	proto.RegisterEnum("proto_micro.ActivityStage", ActivityStage_name, ActivityStage_value)
	proto.RegisterEnum("proto_micro.ServerStatus", ServerStatus_name, ServerStatus_value)
	proto.RegisterEnum("proto_micro.MiracleWarStage", MiracleWarStage_name, MiracleWarStage_value)
	proto.RegisterEnum("proto_micro.CityWarStage", CityWarStage_name, CityWarStage_value)
	proto.RegisterEnum("proto_micro.MiracleWarTitleRight", MiracleWarTitleRight_name, MiracleWarTitleRight_value)
	proto.RegisterEnum("proto_micro.MiracleTitle", MiracleTitle_name, MiracleTitle_value)
	proto.RegisterEnum("proto_micro.AccountBindResult", AccountBindResult_name, AccountBindResult_value)
	proto.RegisterEnum("proto_micro.AccountBindQueryResult", AccountBindQueryResult_name, AccountBindQueryResult_value)
	proto.RegisterEnum("proto_micro.AccountSwitchResult", AccountSwitchResult_name, AccountSwitchResult_value)
	proto.RegisterEnum("proto_micro.MailSourceType", MailSourceType_name, MailSourceType_value)
	proto.RegisterEnum("proto_micro.FirstTutorialType", FirstTutorialType_name, FirstTutorialType_value)
	proto.RegisterEnum("proto_micro.ChallengeConditionType", ChallengeConditionType_name, ChallengeConditionType_value)
	proto.RegisterEnum("proto_micro.ChallengeTaskStatus", ChallengeTaskStatus_name, ChallengeTaskStatus_value)
	proto.RegisterEnum("proto_micro.CityStage", CityStage_name, CityStage_value)
	proto.RegisterEnum("proto_micro.ActivityDataType", ActivityDataType_name, ActivityDataType_value)
	proto.RegisterEnum("proto_micro.ActivityFlags", ActivityFlags_name, ActivityFlags_value)
	proto.RegisterEnum("proto_micro.ActivityLogicType", ActivityLogicType_name, ActivityLogicType_value)
	proto.RegisterEnum("proto_micro.ActivityOpenType", ActivityOpenType_name, ActivityOpenType_value)
	proto.RegisterEnum("proto_micro.ActivityTaskType", ActivityTaskType_name, ActivityTaskType_value)
	proto.RegisterEnum("proto_micro.OfflineEventType", OfflineEventType_name, OfflineEventType_value)
	proto.RegisterEnum("proto_micro.RefreshCondType", RefreshCondType_name, RefreshCondType_value)
	proto.RegisterEnum("proto_micro.UnitSpecialLogic", UnitSpecialLogic_name, UnitSpecialLogic_value)
	proto.RegisterEnum("proto_micro.BoonLogicType", BoonLogicType_name, BoonLogicType_value)
	proto.RegisterEnum("proto_micro.BoonFundType", BoonFundType_name, BoonFundType_value)
	proto.RegisterEnum("proto_micro.BoonDailyType", BoonDailyType_name, BoonDailyType_value)
	proto.RegisterEnum("proto_micro.ChapterTaskType", ChapterTaskType_name, ChapterTaskType_value)
	proto.RegisterEnum("proto_micro.EarlyWarningType", EarlyWarningType_name, EarlyWarningType_value)
	proto.RegisterEnum("proto_micro.HeroBranchType", HeroBranchType_name, HeroBranchType_value)
	proto.RegisterEnum("proto_micro.FightBuffAttibute", FightBuffAttibute_name, FightBuffAttibute_value)
	proto.RegisterEnum("proto_micro.FightBuffType", FightBuffType_name, FightBuffType_value)
	proto.RegisterEnum("proto_micro.SkillMainType", SkillMainType_name, SkillMainType_value)
	proto.RegisterEnum("proto_micro.SkillSubType", SkillSubType_name, SkillSubType_value)
	proto.RegisterEnum("proto_micro.SkillLogicType", SkillLogicType_name, SkillLogicType_value)
	proto.RegisterEnum("proto_micro.FightStageType", FightStageType_name, FightStageType_value)
	proto.RegisterEnum("proto_micro.AttckStageType", AttckStageType_name, AttckStageType_value)
	proto.RegisterEnum("proto_micro.CorpsPos", CorpsPos_name, CorpsPos_value)
	proto.RegisterEnum("proto_micro.CardPoolShopType", CardPoolShopType_name, CardPoolShopType_value)
	proto.RegisterEnum("proto_micro.CardPoolTakeType", CardPoolTakeType_name, CardPoolTakeType_value)
	proto.RegisterEnum("proto_micro.MarketCondType", MarketCondType_name, MarketCondType_value)
	proto.RegisterEnum("proto_micro.LeagueTaskType", LeagueTaskType_name, LeagueTaskType_value)
	proto.RegisterEnum("proto_micro.PowerUpType", PowerUpType_name, PowerUpType_value)
	proto.RegisterEnum("proto_micro.UserActionType", UserActionType_name, UserActionType_value)
	proto.RegisterEnum("proto_micro.UserCostType", UserCostType_name, UserCostType_value)
	proto.RegisterEnum("proto_micro.UserPvpType", UserPvpType_name, UserPvpType_value)
	proto.RegisterEnum("proto_micro.ActivityScoreType", ActivityScoreType_name, ActivityScoreType_value)
	proto.RegisterEnum("proto_micro.GameTaskType", GameTaskType_name, GameTaskType_value)
	proto.RegisterEnum("proto_micro.SevenTaskType", SevenTaskType_name, SevenTaskType_value)
	proto.RegisterEnum("proto_micro.DailyTaskType", DailyTaskType_name, DailyTaskType_value)
	proto.RegisterEnum("proto_micro.CityWarTargetType", CityWarTargetType_name, CityWarTargetType_value)
	proto.RegisterEnum("proto_micro.DropActivityType", DropActivityType_name, DropActivityType_value)
	proto.RegisterEnum("proto_micro.LeagueTaskStatus", LeagueTaskStatus_name, LeagueTaskStatus_value)
	proto.RegisterEnum("proto_micro.StrongestCommanderType", StrongestCommanderType_name, StrongestCommanderType_value)
	proto.RegisterEnum("proto_micro.ExpeditionShopItemType", ExpeditionShopItemType_name, ExpeditionShopItemType_value)
	proto.RegisterEnum("proto_micro.WorldSituationEntryType", WorldSituationEntryType_name, WorldSituationEntryType_value)
	proto.RegisterEnum("proto_micro.WorldSituationEntrySubType", WorldSituationEntrySubType_name, WorldSituationEntrySubType_value)
	proto.RegisterEnum("proto_micro.WorldSituationEntryStatus", WorldSituationEntryStatus_name, WorldSituationEntryStatus_value)
	proto.RegisterEnum("proto_micro.WorldSituationEntryEndType", WorldSituationEntryEndType_name, WorldSituationEntryEndType_value)
	proto.RegisterEnum("proto_micro.WorldSituationUnlockType", WorldSituationUnlockType_name, WorldSituationUnlockType_value)
	proto.RegisterEnum("proto_micro.SyncType", SyncType_name, SyncType_value)
	proto.RegisterEnum("proto_micro.ServerTimeStatus", ServerTimeStatus_name, ServerTimeStatus_value)
	proto.RegisterEnum("proto_micro.ServerRankType", ServerRankType_name, ServerRankType_value)
	proto.RegisterEnum("proto_micro.MonsterAtkCityStage", MonsterAtkCityStage_name, MonsterAtkCityStage_value)
}

func init() { proto.RegisterFile("MG_GameDefine.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 14051 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xbd, 0x79, 0x98, 0x23, 0xc9,
	0x75, 0x1f, 0xd8, 0x05, 0xd4, 0x19, 0x75, 0x45, 0xa3, 0xef, 0x63, 0x2e, 0x52, 0xc3, 0x91, 0x61,
	0xd9, 0x9a, 0xe9, 0xee, 0xa1, 0xc8, 0x95, 0xd7, 0xeb, 0x44, 0x22, 0x01, 0x64, 0x57, 0x02, 0x89,
	0xc9, 0x4c, 0x54, 0x75, 0xfb, 0x50, 0x6e, 0x36, 0x10, 0x5d, 0x95, 0x6c, 0x54, 0x26, 0x94, 0x48,
	0xf4, 0x74, 0xc9, 0xde, 0xb5, 0xc4, 0x43, 0xe2, 0x35, 0xe4, 0x70, 0x86, 0xd4, 0x41, 0x5d, 0xd6,
	0x7d, 0x90, 0x12, 0x29, 0x52, 0xda, 0x5d, 0x4b, 0xa6, 0x65, 0x6b, 0x6d, 0xf3, 0xbe, 0x6f, 0x59,
	0xb2, 0xbd, 0x5e, 0xed, 0x7e, 0x2b, 0xf9, 0x92, 0x65, 0x51, 0xb2, 0x75, 0xd8, 0xfb, 0xbd, 0xf7,
	0x22, 0xf2, 0x28, 0xd4, 0xf0, 0xf3, 0x5f, 0x55, 0xf1, 0x7b, 0x91, 0x2f, 0xae, 0x17, 0x2f, 0xde,
	0x8b, 0x78, 0x11, 0x60, 0x67, 0xba, 0x6d, 0xbf, 0x1d, 0x1c, 0x8a, 0xa6, 0xb8, 0x1b, 0x46, 0xe2,
	0x2f, 0x4f, 0x92, 0x38, 0x8d, 0x6b, 0xeb, 0xf8, 0xc7, 0x3f, 0x0c, 0x87, 0x49, 0x5c, 0xff, 0x4a,
	0x95, 0xb1, 0x5d, 0x31, 0x4c, 0xe3, 0xc4, 0x3b, 0x9a, 0x88, 0xda, 0x3a, 0x5b, 0xd9, 0xf5, 0x7c,
	0x5d, 0x73, 0x3b, 0xfc, 0x94, 0x4c, 0x98, 0x9e, 0xd1, 0xe5, 0x95, 0xda, 0x36, 0x5b, 0xdf, 0xf5,
	0xfc, 0xc6, 0xc0, 0xb4, 0x9a, 0x66, 0xaf, 0xcd, 0xab, 0x92, 0x3a, 0xe8, 0x99, 0x1e, 0x5f, 0xac,
	0xd5, 0xd8, 0xd6, 0xae, 0xe7, 0xef, 0xd9, 0x8e, 0xd5, 0xf4, 0x8d, 0x9e, 0xe7, 0xdc, 0xe6, 0x4b,
	0xf2, 0x0b, 0xc7, 0x70, 0x0d, 0xcd, 0xd1, 0x3b, 0x7c, 0xb9, 0xc6, 0xd8, 0xf2, 0xae, 0xe7, 0x1b,
	0xb7, 0xfa, 0x7c, 0x45, 0x7e, 0xa0, 0xe9, 0x1d, 0xd3, 0xd8, 0x35, 0xba, 0x46, 0xcf, 0xe3, 0xab,
	0x92, 0x63, 0xd3, 0xb1, 0xfb, 0x7c, 0xad, 0xb6, 0xc9, 0xd6, 0x76, 0x3d, 0xdf, 0x33, 0x2c, 0xa0,
	0xb1, 0xda, 0x79, 0x56, 0xdb, 0xf5, 0x7c, 0xd7, 0xd3, 0xbc, 0x81, 0xe1, 0x77, 0x35, 0xcf, 0x70,
	0x4c, 0xcd, 0xe2, 0xeb, 0xf2, 0x9b, 0x8e, 0xe1, 0xd8, 0x7c, 0x43, 0x26, 0x1a, 0x83, 0x56, 0x8b,
	0x6f, 0xd6, 0xb6, 0x18, 0xa3, 0xe2, 0xfd, 0x86, 0x7d, 0x8b, 0x6f, 0x49, 0x86, 0x96, 0xa1, 0xb5,
	0x07, 0x06, 0xdf, 0xae, 0x9d, 0x63, 0xa7, 0xa1, 0xa5, 0x76, 0xb7, 0xab, 0xf5, 0x9a, 0x86, 0x43,
	0xcd, 0xe4, 0x92, 0xc5, 0x9e, 0x66, 0x59, 0xfc, 0xb4, 0x4c, 0x78, 0x8e, 0xd6, 0xe7, 0x35, 0x59,
	0x7b, 0xe0, 0x75, 0x46, 0xf2, 0x6a, 0x0c, 0x1a, 0x0d, 0xcb, 0xe0, 0x67, 0x6b, 0x0f, 0xb1, 0x8b,
	0x85, 0xbe, 0xf1, 0x35, 0xdd, 0x33, 0xed, 0x9e, 0xaf, 0xdb, 0x83, 0x9e, 0xc7, 0x9f, 0xef, 0xd5,
	0x1e, 0x61, 0x97, 0x77, 0x3d, 0xbf, 0xef, 0xd8, 0xcd, 0x01, 0x51, 0x4a, 0x19, 0xde, 0xd1, 0x93,
	0xdf, 0x63, 0xef, 0x75, 0xb5, 0x7e, 0x99, 0xfc, 0x82, 0x22, 0xab, 0x8e, 0x2c, 0x93, 0x5f, 0xec,
	0xd5, 0xce, 0x63, 0x4b, 0xb2, 0xd2, 0x09, 0x7f, 0x67, 0xaf, 0xfe, 0xa5, 0x05, 0xb6, 0xaa, 0x07,
	0xd3, 0x03, 0x1c, 0xd8, 0x6d, 0xb6, 0x0e, 0xa3, 0xea, 0x7b, 0xb7, 0xfb, 0x86, 0xff, 0x14, 0x3f,
	0x55, 0x06, 0xae, 0xd1, 0x00, 0xe7, 0xc0, 0x75, 0x5e, 0x2d, 0x03, 0x37, 0xf8, 0x62, 0x19, 0x78,
	0x9a, 0x46, 0x38, 0x07, 0x5e, 0xc9, 0x97, 0x6b, 0xa7, 0xd9, 0x66, 0x0e, 0xb8, 0x9e, 0xc6, 0x57,
	0xca, 0x90, 0xe1, 0xb4, 0xf9, 0x6a, 0x19, 0x7a, 0xea, 0xc9, 0x27, 0xf9, 0xa8, 0x76, 0x91, 0x9d,
	0x2d, 0xe4, 0xba, 0xd5, 0x37, 0x9a, 0x26, 0x34, 0x92, 0xaf, 0x1d, 0xcf, 0xfc, 0x34, 0x0f, 0xeb,
	0x4f, 0xb2, 0x15, 0xe3, 0xc1, 0x04, 0x9b, 0xb5, 0xc1, 0x56, 0x0d, 0xcf, 0xb7, 0x34, 0xd3, 0x69,
	0x92, 0xc0, 0x1a, 0x52, 0x18, 0x2a, 0x30, 0x5e, 0x86, 0xe7, 0xef, 0x9a, 0x7d, 0x5e, 0xad, 0xcf,
	0xd8, 0x46, 0x37, 0x98, 0xb8, 0x69, 0xb0, 0x2f, 0xf0, 0xb3, 0x4d, 0xb6, 0xd6, 0x75, 0x3d, 0xbf,
	0x8b, 0x82, 0x89, 0x7d, 0x01, 0xc9, 0x3d, 0xdb, 0xd9, 0x01, 0xd9, 0xae, 0x00, 0x5b, 0x00, 0x1a,
	0x9a, 0xbe, 0xc3, 0xab, 0x35, 0xce, 0x36, 0x90, 0xac, 0x99, 0x5e, 0x57, 0x73, 0x5d, 0xbe, 0x08,
	0x95, 0xca, 0x11, 0xe0, 0xb1, 0x04, 0x02, 0xad, 0xa0, 0x86, 0xe6, 0x79, 0x96, 0xc1, 0x97, 0xeb,
	0x5f, 0x78, 0x84, 0x31, 0x6d, 0x98, 0x86, 0x71, 0x84, 0xa5, 0xd6, 0xd8, 0x96, 0x26, 0x07, 0xca,
	0x6f, 0x18, 0x6d, 0xb3, 0xc7, 0x4f, 0x95, 0x30, 0xa3, 0xdb, 0xf7, 0x6e, 0xf3, 0x85, 0xda, 0x59,
	0xc6, 0x33, 0xcc, 0x32, 0x76, 0x0d, 0x6b, 0xd0, 0xe7, 0x15, 0x10, 0xd8, 0x0c, 0x05, 0x11, 0xd8,
	0xd5, 0x3c, 0x83, 0x2a, 0x97, 0x33, 0xe8, 0x35, 0xf9, 0x08, 0x04, 0x5f, 0xf3, 0xfc, 0xe6, 0xc0,
	0xd1, 0x40, 0x3a, 0x45, 0xed, 0x22, 0x3b, 0xa3, 0x95, 0xc4, 0x8f, 0xca, 0xfe, 0xc8, 0x42, 0xed,
	0x02, 0xab, 0x95, 0x29, 0x38, 0x9b, 0x3f, 0x7a, 0x02, 0x41, 0x1f, 0x38, 0x06, 0xff, 0xf8, 0x42,
	0xed, 0x32, 0x3b, 0x57, 0x26, 0xf4, 0x4d, 0xaf, 0x05, 0x93, 0xe5, 0x13, 0x0b, 0xb5, 0x4b, 0xec,
	0x6c, 0x99, 0x46, 0xb3, 0x95, 0x7f, 0x72, 0xa1, 0xf6, 0x18, 0xbb, 0x5a, 0x26, 0x75, 0x35, 0xb3,
	0xa7, 0x9b, 0xde, 0x6d, 0xdf, 0xd8, 0x85, 0xf9, 0xfd, 0xa9, 0x05, 0x10, 0xf2, 0x72, 0x16, 0x9a,
	0xa9, 0x38, 0xe1, 0x3e, 0x7d, 0x42, 0xc1, 0xaa, 0x63, 0x3e, 0xb3, 0x50, 0x7b, 0x94, 0x5d, 0x29,
	0xd3, 0x9a, 0xa6, 0xdb, 0xd7, 0x3c, 0xbd, 0xe3, 0x7b, 0x9a, 0xbb, 0xc3, 0x3f, 0xbb, 0x50, 0x7b,
	0x98, 0x5d, 0x3a, 0x91, 0x39, 0xd2, 0x3f, 0xb7, 0x00, 0x53, 0xa8, 0x4c, 0x87, 0x9e, 0x7c, 0x6f,
	0xa5, 0x76, 0x85, 0x9d, 0x2f, 0xe3, 0x8e, 0xe1, 0xda, 0x03, 0x47, 0x37, 0xf8, 0xbf, 0xa8, 0xd4,
	0x5e, 0xce, 0x1e, 0x3e, 0xd6, 0x49, 0xb6, 0x65, 0x19, 0xba, 0x97, 0x67, 0xfa, 0x97, 0x27, 0x70,
	0xe8, 0xd8, 0x6e, 0xdf, 0xf4, 0x34, 0x8b, 0xff, 0xab, 0x13, 0x88, 0xd0, 0x25, 0x66, 0xaf, 0x65,
	0xf3, 0xff, 0xab, 0x32, 0xdf, 0x9d, 0x7d, 0xc7, 0x74, 0xed, 0x1e, 0xff, 0xd7, 0x27, 0x90, 0x9c,
	0x81, 0x05, 0x82, 0xfb, 0x7f, 0x9f, 0x54, 0x63, 0xad, 0xb7, 0x63, 0x99, 0xae, 0xc7, 0x7f, 0xa7,
	0x02, 0x8a, 0xe8, 0x98, 0x24, 0x58, 0x9a, 0xbe, 0x03, 0xd3, 0x60, 0xc7, 0xf0, 0xf8, 0xff, 0x53,
	0x91, 0xfd, 0x90, 0x29, 0x22, 0x12, 0x94, 0xe7, 0xab, 0xb5, 0xab, 0xec, 0x42, 0x19, 0x87, 0xa1,
	0x35, 0xed, 0x9e, 0xd1, 0xe4, 0xef, 0xa8, 0x1e, 0xff, 0x4a, 0xf3, 0x3c, 0x7d, 0x87, 0xbf, 0x50,
	0x95, 0x82, 0x97, 0xe1, 0xb2, 0x7b, 0xf8, 0x8b, 0x73, 0x14, 0xb7, 0x7f, 0xdb, 0xec, 0x79, 0x36,
	0x7f, 0x67, 0x55, 0x36, 0x2d, 0xa3, 0xb4, 0x35, 0x87, 0x5a, 0xfd, 0xae, 0xaa, 0x14, 0x81, 0x8c,
	0x64, 0xf4, 0x3c, 0xc3, 0x81, 0x0e, 0xe3, 0xdf, 0x5b, 0xad, 0x9d, 0xc3, 0x29, 0x93, 0xd1, 0x70,
	0x9a, 0x7e, 0xdf, 0x1c, 0xb7, 0x9b, 0xb6, 0xd9, 0x43, 0xd2, 0xf7, 0xcf, 0x71, 0xf3, 0x1c, 0xad,
	0xe7, 0xf6, 0x6d, 0xc7, 0xe3, 0x3f, 0x30, 0x57, 0x3d, 0xe3, 0x56, 0xdf, 0xb2, 0x1d, 0x83, 0xbf,
	0x7b, 0xee, 0x2b, 0x50, 0x35, 0x7e, 0xc7, 0xb6, 0x9a, 0xfc, 0x07, 0xab, 0xb5, 0x33, 0x38, 0x95,
	0x33, 0x9a, 0xd9, 0xe3, 0x3f, 0x5c, 0xad, 0x9d, 0x65, 0xdb, 0x45, 0xd0, 0x1e, 0x78, 0xfc, 0x47,
	0xe6, 0xea, 0xd5, 0xd5, 0x74, 0xea, 0xb4, 0x1f, 0x9d, 0xfb, 0x00, 0x04, 0xf1, 0x3f, 0x55, 0xe5,
	0x84, 0xcc, 0xd0, 0xa6, 0xe1, 0x69, 0xa6, 0xc5, 0x7f, 0xa3, 0x2a, 0xa7, 0x4d, 0xce, 0xc9, 0xde,
	0x35, 0xd4, 0xdc, 0xe2, 0xff, 0xa4, 0x2a, 0xc5, 0x21, 0x23, 0x93, 0xd8, 0xb7, 0x2c, 0xad, 0xcd,
	0xff, 0xe9, 0x5c, 0x33, 0xfb, 0xa6, 0xbe, 0x03, 0xb3, 0xed, 0x9f, 0xcd, 0x7d, 0xd6, 0xb7, 0xb4,
	0xdb, 0x86, 0x83, 0x82, 0xf9, 0xe1, 0xaa, 0x9c, 0xcc, 0xa5, 0x22, 0x71, 0x2a, 0xeb, 0x76, 0xb7,
	0x65, 0x3a, 0x5d, 0xfe, 0x91, 0xaa, 0x9c, 0x91, 0x27, 0x64, 0xd1, 0x7a, 0xba, 0x61, 0xf1, 0x8f,
	0xce, 0x49, 0x14, 0x55, 0xac, 0xab, 0xf5, 0x6c, 0x87, 0x7f, 0x6c, 0xae, 0x55, 0x9a, 0xae, 0x1b,
	0x96, 0xe1, 0xa0, 0xc8, 0xf1, 0x8f, 0x57, 0x6b, 0xdf, 0xc8, 0x5e, 0x5e, 0x12, 0x47, 0x50, 0x7e,
	0x96, 0xad, 0x6b, 0x16, 0xa9, 0x41, 0xaa, 0x88, 0xc1, 0x3f, 0x51, 0xad, 0x3d, 0xc1, 0x5e, 0xf6,
	0x75, 0x73, 0x6a, 0x3d, 0xdd, 0x32, 0xf8, 0x27, 0xe7, 0xba, 0xdd, 0xed, 0xdf, 0xe6, 0x9f, 0x9a,
	0xeb, 0x76, 0xad, 0xd9, 0x6c, 0x0c, 0x5a, 0xfc, 0xd3, 0x55, 0xa9, 0x50, 0x72, 0xd1, 0xee, 0x18,
	0x30, 0x8f, 0x6e, 0xfb, 0x2d, 0x90, 0xa0, 0xcf, 0xbc, 0x34, 0xbd, 0x6b, 0xf6, 0x0c, 0xfe, 0xd9,
	0x6a, 0xed, 0x15, 0xec, 0xb1, 0xf9, 0xe6, 0xe3, 0xf4, 0xf7, 0xf7, 0x34, 0xc7, 0xe8, 0xd8, 0x03,
	0xd7, 0xe0, 0x9f, 0xab, 0xd6, 0xea, 0xec, 0xf1, 0x97, 0xca, 0xd7, 0x34, 0x5a, 0x46, 0x4f, 0x37,
	0xa0, 0x48, 0xdd, 0xe0, 0x9f, 0xff, 0xba, 0x3c, 0x1d, 0x03, 0x06, 0x0f, 0xf2, 0x7d, 0xa1, 0x5a,
	0xfb, 0x06, 0xf6, 0xc8, 0x09, 0xf9, 0x4a, 0x92, 0xf3, 0xc5, 0xb9, 0x21, 0x80, 0x85, 0x71, 0x4f,
	0x73, 0x7c, 0x14, 0x82, 0x2f, 0xcd, 0x35, 0x50, 0x91, 0x49, 0x8c, 0xbf, 0x3c, 0x27, 0x01, 0x8a,
	0xae, 0x66, 0xfa, 0x57, 0x5e, 0x32, 0x47, 0x57, 0xeb, 0x69, 0x6d, 0xc3, 0xe1, 0x5f, 0xad, 0xd6,
	0x5e, 0xc6, 0x1e, 0x3a, 0x29, 0x07, 0x36, 0x04, 0xeb, 0xf1, 0x9b, 0x73, 0x72, 0x04, 0xad, 0xf0,
	0x5d, 0xc3, 0xd9, 0x35, 0x1c, 0xfe, 0xaf, 0x94, 0x5a, 0xc8, 0x16, 0x1b, 0x77, 0xc7, 0xec, 0xf1,
	0xdf, 0x53, 0x0a, 0x2b, 0x33, 0xa8, 0x48, 0xcd, 0xfd, 0xe1, 0x1c, 0xee, 0x7a, 0x9a, 0xe3, 0xf1,
	0xaf, 0x29, 0xe1, 0xc8, 0x70, 0x98, 0x93, 0x5f, 0x5e, 0x94, 0x93, 0xc4, 0x78, 0x66, 0x60, 0xf6,
	0xfd, 0x96, 0xa6, 0x7b, 0xb6, 0x73, 0x5b, 0xb2, 0xfa, 0xca, 0xa2, 0x54, 0x14, 0x65, 0x62, 0x57,
	0xdb, 0x31, 0xf8, 0x57, 0x17, 0xe5, 0xec, 0x2f, 0xd3, 0x80, 0xe7, 0xaf, 0x2d, 0xc9, 0xb1, 0x51,
	0xab, 0x93, 0xe1, 0x38, 0x26, 0x52, 0x25, 0x80, 0x8d, 0xfe, 0x07, 0x4b, 0x72, 0xa4, 0xe7, 0x72,
	0x81, 0xf0, 0x39, 0x86, 0xeb, 0x52, 0xbe, 0x0f, 0x2d, 0x49, 0xe9, 0x79, 0xe9, 0x7c, 0x99, 0x76,
	0xfd, 0x87, 0x4b, 0xb5, 0xc7, 0xd9, 0xa3, 0x27, 0xe5, 0xcd, 0xa4, 0x11, 0xf4, 0xd9, 0xaf, 0xbf,
	0x64, 0xd1, 0x79, 0x36, 0xd0, 0x70, 0xff, 0xe8, 0x25, 0xd9, 0x81, 0xfc, 0x67, 0x0b, 0xc1, 0x3f,
	0x5e, 0xaa, 0x3d, 0xc5, 0xbe, 0xe9, 0xbf, 0xab, 0x86, 0x7e, 0xd3, 0x74, 0xe0, 0x93, 0xdf, 0x00,
	0x43, 0x6b, 0x13, 0xc6, 0xd4, 0x74, 0x75, 0xd9, 0xdb, 0xff, 0xdf, 0x8a, 0xec, 0x51, 0xc2, 0xb2,
	0x89, 0x6d, 0x58, 0xfc, 0x77, 0x57, 0xe4, 0x40, 0x14, 0x48, 0x4d, 0xc3, 0xf5, 0x1c, 0xfb, 0x36,
	0xff, 0xbd, 0xd2, 0x67, 0x6e, 0xdf, 0x30, 0x9a, 0x83, 0x3e, 0xb9, 0x3e, 0xff, 0xe6, 0x44, 0x12,
	0x7a, 0x08, 0xff, 0x76, 0x45, 0xea, 0x79, 0x24, 0x39, 0x86, 0x0e, 0xc6, 0xcf, 0xbf, 0x5b, 0x91,
	0xc6, 0x00, 0x82, 0xc7, 0xec, 0x29, 0x55, 0x97, 0x7f, 0xbf, 0x22, 0x25, 0x46, 0x7e, 0x29, 0x85,
	0x09, 0xfe, 0xf1, 0xf8, 0x7f, 0x28, 0x11, 0xcb, 0xfa, 0x8a, 0xff, 0xfe, 0x8a, 0x9c, 0x8d, 0x85,
	0x56, 0xa0, 0xad, 0x48, 0xb5, 0xfd, 0x8f, 0x2b, 0x72, 0x61, 0x2f, 0x90, 0xa5, 0x75, 0x44, 0x19,
	0xfe, 0xa0, 0xd4, 0x1c, 0xc7, 0x78, 0x66, 0x60, 0xb8, 0x60, 0x26, 0x5b, 0x7d, 0xfe, 0x9f, 0x56,
	0xa4, 0x70, 0x23, 0x09, 0x20, 0x68, 0xcf, 0x1f, 0xae, 0xc8, 0xb5, 0x01, 0x51, 0xaa, 0x3f, 0xad,
	0xa9, 0x5f, 0x5b, 0x51, 0x73, 0x0a, 0x28, 0xca, 0xce, 0xe2, 0x7f, 0xb4, 0x22, 0x27, 0x62, 0xf1,
	0x83, 0x8c, 0xfa, 0xc7, 0x2b, 0x72, 0x66, 0xc9, 0x42, 0x1c, 0x9b, 0xac, 0xbe, 0xff, 0xbc, 0x22,
	0xd7, 0x92, 0x97, 0xe8, 0x36, 0xb7, 0xc3, 0xff, 0x4b, 0x69, 0x00, 0x07, 0xae, 0x01, 0x83, 0x60,
	0xf7, 0xd0, 0xc4, 0xff, 0x93, 0x13, 0x47, 0xa9, 0xe5, 0x18, 0x06, 0xff, 0xd3, 0x52, 0x03, 0x68,
	0xf9, 0xa2, 0x59, 0xf1, 0x67, 0xa5, 0xba, 0xa0, 0x38, 0x22, 0xfe, 0xe7, 0x25, 0x1c, 0xe4, 0x8f,
	0xf0, 0xff, 0x5a, 0xe2, 0x64, 0xb6, 0x7b, 0xb6, 0x63, 0x38, 0x5a, 0x53, 0x73, 0xf8, 0x7f, 0x2b,
	0xb7, 0xd9, 0x32, 0x34, 0x87, 0xe4, 0xb8, 0x6d, 0xb6, 0x3c, 0xfe, 0x9d, 0xab, 0x45, 0x7e, 0x60,
	0x3e, 0x53, 0x83, 0xbe, 0x6b, 0xb5, 0xd8, 0xa0, 0x4c, 0x0a, 0x90, 0xf6, 0xda, 0xd5, 0x62, 0x83,
	0x40, 0x95, 0x65, 0xee, 0xf6, 0xeb, 0x56, 0x8b, 0x63, 0xec, 0x18, 0xba, 0x61, 0xee, 0x1a, 0x9a,
	0x65, 0x65, 0xa6, 0xe6, 0xeb, 0x57, 0x8b, 0xb5, 0xe9, 0x0e, 0x2c, 0xcf, 0x2c, 0xb4, 0xee, 0x0d,
	0xab, 0x45, 0xf1, 0xf2, 0x34, 0x70, 0xaa, 0x33, 0x0b, 0xfa, 0xbb, 0x4b, 0x55, 0x85, 0x39, 0xec,
	0xee, 0x98, 0x96, 0xc5, 0xbf, 0x67, 0xb5, 0x2c, 0x36, 0xae, 0xe1, 0xc9, 0x4f, 0xf9, 0x1b, 0x57,
	0xe5, 0xd2, 0x58, 0xe4, 0xd7, 0xd5, 0x6e, 0xf1, 0x37, 0xad, 0x16, 0xbb, 0xab, 0xa9, 0x99, 0xd6,
	0x6d, 0x5f, 0xdb, 0xd3, 0x9c, 0x26, 0x7f, 0xf3, 0xb1, 0x86, 0x63, 0x0b, 0x70, 0xa4, 0x5d, 0xfe,
	0x96, 0x52, 0x49, 0x6d, 0xc3, 0x73, 0x3b, 0x86, 0x63, 0xe0, 0x67, 0x6f, 0x5d, 0x2d, 0xca, 0x88,
	0xd6, 0xd0, 0x7a, 0x4d, 0xbb, 0x07, 0x6e, 0xae, 0xe7, 0x18, 0x9a, 0x87, 0x1b, 0x07, 0xcf, 0x95,
	0xea, 0xef, 0x18, 0x5a, 0x93, 0x06, 0xe8, 0x6d, 0xa5, 0x4a, 0x82, 0x6c, 0xbb, 0x66, 0xaf, 0x6d,
	0x19, 0xfc, 0xed, 0xa5, 0xe2, 0xec, 0x9e, 0x05, 0xfd, 0x44, 0xb5, 0x7c, 0xbe, 0x54, 0xff, 0xbe,
	0x66, 0x69, 0xba, 0xec, 0xc2, 0x77, 0x94, 0xb8, 0xb9, 0x1d, 0x7b, 0x8f, 0xa8, 0xfc, 0x85, 0xd5,
	0xa2, 0x46, 0x70, 0x07, 0xfd, 0xbe, 0x75, 0x9b, 0xbf, 0xb8, 0x2a, 0x57, 0x48, 0xea, 0xd3, 0x7e,
	0xdb, 0xd1, 0x9a, 0x46, 0x41, 0xae, 0xdf, 0xb9, 0x5a, 0x9c, 0x77, 0xe0, 0xbe, 0x3a, 0x76, 0x9f,
	0xbf, 0xab, 0x54, 0xba, 0xe7, 0x68, 0x7d, 0xdf, 0x31, 0x40, 0x0e, 0xf8, 0xf7, 0xae, 0x16, 0xe7,
	0x5d, 0x7f, 0xe0, 0x76, 0xfc, 0xae, 0xd6, 0xe7, 0xdf, 0x57, 0x1a, 0x57, 0xb9, 0x3b, 0x62, 0xf4,
	0x3a, 0x30, 0x01, 0xf9, 0xf7, 0x97, 0x44, 0x42, 0x2d, 0x34, 0xba, 0xdd, 0xed, 0xdb, 0xae, 0xc1,
	0x7f, 0xa0, 0x54, 0x43, 0x45, 0x6d, 0x1a, 0x8a, 0xfe, 0xee, 0x13, 0xbf, 0x96, 0xe3, 0xc6, 0x7f,
	0xf0, 0xc4, 0xaf, 0x61, 0x81, 0xa3, 0xf6, 0xfd, 0x50, 0xe9, 0x6b, 0xd2, 0x49, 0x8e, 0xa1, 0xdf,
	0xd6, 0xd1, 0x4f, 0xf9, 0xe1, 0xd2, 0xa0, 0x1e, 0xa3, 0xfa, 0xe8, 0xad, 0xfc, 0x48, 0x69, 0x8c,
	0xd0, 0xce, 0x46, 0x83, 0xc7, 0x35, 0xf8, 0x8f, 0x96, 0xca, 0x2e, 0x4e, 0x13, 0xfa, 0xf4, 0xef,
	0x95, 0x24, 0x4d, 0x0a, 0xe7, 0xa0, 0x67, 0xd9, 0xfa, 0x0e, 0xff, 0xb1, 0x52, 0xbf, 0x83, 0x61,
	0xe0, 0x77, 0xfa, 0xfc, 0xc7, 0x57, 0xcb, 0xfa, 0xae, 0x8b, 0x56, 0x51, 0xd3, 0x70, 0xf8, 0x4f,
	0xac, 0xd6, 0x38, 0x5b, 0x57, 0x14, 0x58, 0xa4, 0x3f, 0xb1, 0x5a, 0xff, 0x83, 0x2a, 0xdb, 0x68,
	0xcc, 0xc2, 0xf1, 0x28, 0x8c, 0xf6, 0xd1, 0xb1, 0x3f, 0xc3, 0xb6, 0x1b, 0x9e, 0xdf, 0xd0, 0x5c,
	0xdc, 0xf4, 0x40, 0x2b, 0xf5, 0x14, 0x7c, 0xd7, 0x80, 0xef, 0x2c, 0xd3, 0xd3, 0x9c, 0xdb, 0xe0,
	0x6e, 0x6f, 0xb0, 0x15, 0x44, 0x7a, 0x06, 0xf8, 0xd8, 0xe7, 0xd9, 0xe9, 0x06, 0x6e, 0x2e, 0x99,
	0x28, 0xcf, 0x2d, 0xd3, 0xb0, 0x9a, 0xfc, 0x63, 0x0a, 0x97, 0x8d, 0xf5, 0x75, 0x74, 0x73, 0xc0,
	0xf5, 0xde, 0x66, 0xac, 0x21, 0x8d, 0x10, 0xbd, 0x03, 0xfe, 0x76, 0x8d, 0x6d, 0x36, 0x3c, 0xdf,
	0xf5, 0x6c, 0x65, 0x2f, 0x7e, 0x72, 0x41, 0x16, 0x9a, 0xf9, 0x98, 0x9f, 0x5a, 0xa8, 0x6d, 0xb1,
	0xb5, 0x86, 0xa7, 0x7c, 0xc7, 0x4f, 0x2f, 0xd4, 0x36, 0xd9, 0x6a, 0xc3, 0xf3, 0x35, 0xcb, 0xd3,
	0x1c, 0xf0, 0x9d, 0x89, 0xab, 0xdc, 0x06, 0x03, 0x57, 0x99, 0xf2, 0x4b, 0x97, 0xf0, 0x73, 0x0b,
	0xd0, 0x5d, 0x0d, 0xb5, 0x42, 0xcb, 0xca, 0x7c, 0x5e, 0x71, 0xa1, 0x79, 0xf6, 0x85, 0x05, 0x98,
	0x00, 0x50, 0x67, 0x53, 0xeb, 0xda, 0xbd, 0x26, 0x36, 0xf0, 0x8b, 0x8a, 0xb5, 0x66, 0x3a, 0x6e,
	0xc7, 0xec, 0xf3, 0x2f, 0x29, 0xd6, 0x72, 0x57, 0xe0, 0xcb, 0x2a, 0xed, 0x69, 0xbb, 0x86, 0xd3,
	0xe3, 0x5f, 0xc1, 0x5d, 0x87, 0x86, 0xe7, 0x1b, 0x87, 0x22, 0xd9, 0x17, 0xd1, 0xf0, 0x48, 0x17,
	0x51, 0x2a, 0x12, 0xfe, 0xd5, 0x05, 0x10, 0x7d, 0x68, 0x83, 0xbd, 0x67, 0x38, 0x59, 0x07, 0xff,
	0xe6, 0x42, 0xed, 0x34, 0xdb, 0x80, 0x02, 0x86, 0x43, 0x31, 0x9d, 0xc6, 0xc9, 0x11, 0xff, 0xe7,
	0x2a, 0x67, 0xc9, 0xb4, 0xe2, 0xbf, 0xa5, 0x7a, 0xde, 0xb1, 0xb5, 0x26, 0xff, 0x6d, 0xd5, 0x71,
	0x20, 0xea, 0xd2, 0xa5, 0xf8, 0x17, 0xaa, 0xe3, 0x9a, 0x8e, 0xb6, 0xa7, 0x83, 0x1e, 0xf8, 0x97,
	0xaa, 0x89, 0xb6, 0xd7, 0x31, 0x1c, 0xfe, 0x9e, 0x4a, 0xfd, 0xe3, 0x15, 0xb6, 0xda, 0x0d, 0xc2,
	0x31, 0x0e, 0x38, 0x67, 0x1b, 0xdd, 0xc2, 0xe6, 0x21, 0x3f, 0x85, 0x3b, 0x4a, 0x9e, 0xef, 0xde,
	0x76, 0x69, 0xb7, 0x74, 0x83, 0xad, 0x76, 0x71, 0x73, 0xd4, 0xee, 0xf1, 0xaa, 0x24, 0xca, 0x6d,
	0xa1, 0x45, 0x99, 0x6c, 0x1a, 0x1e, 0x58, 0x34, 0x4b, 0xb5, 0x2d, 0xc6, 0xba, 0x9e, 0xdf, 0xb5,
	0x7b, 0x2e, 0x74, 0x2e, 0x6e, 0xa2, 0x21, 0x73, 0x34, 0x92, 0x80, 0xc1, 0x0a, 0x6e, 0x50, 0x79,
	0x7e, 0xdf, 0x70, 0x5c, 0xbb, 0xa7, 0x59, 0x1c, 0x34, 0xce, 0x76, 0xd7, 0xf3, 0x61, 0xc9, 0xb9,
	0xbd, 0xa7, 0x39, 0x20, 0x40, 0x7c, 0xad, 0x76, 0x81, 0x9d, 0xe9, 0xe6, 0xc6, 0x54, 0xe6, 0xd0,
	0x32, 0xf9, 0xb9, 0xb1, 0x6b, 0x38, 0xb7, 0xed, 0x9e, 0xc1, 0xd7, 0x6b, 0x17, 0xd9, 0xd9, 0x3c,
	0xa7, 0xd9, 0xdb, 0x35, 0x65, 0xa7, 0x6e, 0x48, 0xc6, 0x92, 0xd2, 0x76, 0xec, 0x41, 0x9f, 0x6f,
	0xca, 0x1a, 0xc9, 0x1a, 0xfa, 0xc6, 0x2d, 0xbe, 0x25, 0x59, 0xe2, 0x3e, 0x14, 0x38, 0x0c, 0xdb,
	0xb2, 0x70, 0x95, 0x47, 0xf3, 0x76, 0xd0, 0xf3, 0xe0, 0x5c, 0x72, 0xec, 0x3b, 0xb8, 0x61, 0xe5,
	0xeb, 0x1d, 0xcd, 0xe3, 0xa3, 0xfa, 0xaf, 0x2d, 0xb2, 0xad, 0xbd, 0x38, 0x19, 0x8f, 0x8c, 0x28,
	0x4d, 0x8e, 0x54, 0x9f, 0xee, 0x19, 0xb9, 0xb1, 0xce, 0x4f, 0x81, 0x54, 0x21, 0x02, 0xea, 0x99,
	0x6c, 0xf1, 0x8f, 0x2c, 0x94, 0xc0, 0xae, 0x01, 0x42, 0xfe, 0x51, 0x1c, 0xf6, 0x0c, 0xd4, 0x9d,
	0xdb, 0x2e, 0xc0, 0x1f, 0x43, 0x01, 0xc9, 0xe0, 0xb6, 0xe6, 0xc2, 0x2c, 0xba, 0xc0, 0x6a, 0x19,
	0xd4, 0x34, 0x06, 0x9e, 0xe1, 0x98, 0x83, 0xae, 0x9c, 0x4d, 0x39, 0x0b, 0x7b, 0x07, 0x67, 0x53,
	0xe9, 0x7b, 0xa3, 0x0b, 0xd3, 0xa9, 0x08, 0x81, 0x3a, 0x78, 0x4f, 0x05, 0x66, 0x08, 0x40, 0x7b,
	0xa6, 0xd5, 0x54, 0x83, 0xf8, 0xde, 0x0a, 0x28, 0x14, 0xcc, 0x38, 0xf0, 0xcc, 0x22, 0xe5, 0x17,
	0x70, 0x93, 0xe5, 0x58, 0x7e, 0xe3, 0x16, 0xff, 0x45, 0xdc, 0x9d, 0x01, 0xdc, 0x1d, 0x74, 0xbb,
	0x76, 0x6f, 0xee, 0xc3, 0xf7, 0x55, 0x40, 0x22, 0x21, 0x03, 0xfa, 0x98, 0xcf, 0x57, 0x55, 0x12,
	0x3b, 0xeb, 0x1d, 0x55, 0xd5, 0x07, 0xba, 0x86, 0x53, 0x9f, 0xe0, 0x17, 0xaa, 0xaa, 0x34, 0xb7,
	0xab, 0x59, 0x96, 0xdf, 0x35, 0x1d, 0x0d, 0x1c, 0xde, 0x17, 0xab, 0xaa, 0xd6, 0x0d, 0xb3, 0x9d,
	0xa1, 0xef, 0xcc, 0x72, 0x2b, 0xdf, 0x91, 0x66, 0xe0, 0x1f, 0xe2, 0x86, 0x45, 0x11, 0x0f, 0xa6,
	0x07, 0x07, 0xf1, 0x6c, 0x2a, 0xc0, 0x39, 0x2a, 0x93, 0xba, 0xb3, 0x71, 0x1a, 0x02, 0x9d, 0xff,
	0x51, 0x5e, 0x46, 0x61, 0xbb, 0xe8, 0x2b, 0x8b, 0x30, 0xd5, 0xb0, 0xfd, 0x5d, 0xcf, 0xb1, 0xed,
	0x3e, 0x38, 0x44, 0x97, 0xd9, 0x39, 0x40, 0x06, 0x30, 0x97, 0x40, 0xe6, 0x7a, 0x4d, 0xb9, 0xb6,
	0x7e, 0x68, 0x49, 0x8d, 0x0b, 0xae, 0xab, 0x46, 0xc3, 0xbe, 0xc5, 0x5f, 0xbf, 0x52, 0xff, 0x52,
	0x85, 0xad, 0x0e, 0xa2, 0x30, 0x55, 0xca, 0x77, 0xe0, 0x81, 0xf9, 0xa7, 0x9b, 0x9a, 0x45, 0x3b,
	0xf7, 0xa7, 0x8e, 0x81, 0x68, 0x2e, 0x0e, 0x25, 0xd8, 0xb3, 0x9d, 0xae, 0x66, 0x49, 0xdf, 0x61,
	0x54, 0xab, 0xb1, 0xad, 0x1c, 0xf4, 0xb4, 0xde, 0x0e, 0x8f, 0x6a, 0x67, 0x19, 0x2f, 0x64, 0x1c,
	0x34, 0x60, 0x7a, 0x3d, 0x80, 0xd6, 0xe4, 0xe8, 0x4d, 0xf3, 0xa6, 0xa9, 0xf1, 0xd7, 0x2e, 0x94,
	0xd1, 0x96, 0x61, 0xde, 0x34, 0xf9, 0x5b, 0x51, 0x9a, 0x72, 0x14, 0xe4, 0xe4, 0xc3, 0x28, 0xa4,
	0x03, 0x4f, 0x6d, 0x98, 0xe6, 0x9b, 0xb0, 0x65, 0xb8, 0x69, 0x5a, 0x86, 0x29, 0xb7, 0x24, 0x8b,
	0xb9, 0x35, 0x1b, 0xf0, 0xdf, 0x5a, 0x00, 0xb9, 0x2a, 0xe0, 0xb7, 0x4c, 0xad, 0xf7, 0xcc, 0x40,
	0xeb, 0xf1, 0xff, 0xf7, 0xf8, 0x17, 0x4d, 0xcd, 0x6e, 0x6a, 0x3d, 0xfe, 0xfb, 0x38, 0x63, 0x0a,
	0x78, 0x2e, 0xb4, 0x03, 0x92, 0x41, 0x3f, 0x17, 0xda, 0xfa, 0x8b, 0x8b, 0x6c, 0x0b, 0x3a, 0xb6,
	0x11, 0xa4, 0xe9, 0x58, 0xa8, 0x4d, 0xeb, 0x41, 0x03, 0x9a, 0x02, 0x2d, 0xe9, 0x81, 0xfa, 0x38,
	0x55, 0xc6, 0xb0, 0xcf, 0x70, 0xd3, 0x3a, 0xc7, 0x64, 0x9f, 0x55, 0xca, 0x68, 0x67, 0x60, 0xf7,
	0x35, 0x9b, 0x57, 0x71, 0x20, 0x32, 0x94, 0xfa, 0x6c, 0xb1, 0x0c, 0x82, 0xed, 0xf3, 0x14, 0x5f,
	0x9a, 0x07, 0xaf, 0xf1, 0xe5, 0x79, 0xf0, 0x3a, 0x5f, 0x99, 0x07, 0x6f, 0xf0, 0xd5, 0x72, 0x45,
	0x51, 0x0a, 0xd6, 0xca, 0x18, 0x8a, 0x0b, 0xab, 0x9d, 0x63, 0xa7, 0x01, 0x53, 0xf2, 0x42, 0x63,
	0x73, 0x16, 0xd4, 0x64, 0x11, 0x86, 0xee, 0xc3, 0x1d, 0xf2, 0x73, 0x27, 0x51, 0x90, 0xfd, 0xf9,
	0x93, 0x28, 0x78, 0x80, 0x74, 0xa1, 0x76, 0x99, 0x9d, 0x3f, 0x4e, 0xb1, 0x1b, 0x37, 0x61, 0x0d,
	0xb8, 0x58, 0xbb, 0xc2, 0x2e, 0x14, 0x69, 0x0e, 0x9a, 0xb9, 0x54, 0xd8, 0xa5, 0xda, 0x23, 0xec,
	0xca, 0x09, 0x44, 0x6f, 0xcf, 0xa6, 0x0c, 0x97, 0x6b, 0x8f, 0xb1, 0x87, 0x4e, 0xca, 0xd0, 0x71,
	0x0c, 0xb2, 0x39, 0xf9, 0x95, 0xaf, 0xc3, 0x03, 0xeb, 0x7d, 0xb5, 0x76, 0x89, 0x9d, 0x2b, 0x66,
	0x40, 0x8b, 0xcb, 0x35, 0xac, 0x16, 0x7f, 0xa8, 0xfe, 0xa7, 0x8b, 0x6c, 0xd3, 0x11, 0x69, 0xe1,
	0x24, 0x63, 0x9b, 0xad, 0x3b, 0x1a, 0x4c, 0x4a, 0x5d, 0x37, 0x5c, 0x97, 0x9f, 0xaa, 0x9d, 0x67,
	0x35, 0x00, 0x4c, 0xb0, 0x0f, 0x7a, 0x20, 0xf2, 0x8e, 0x63, 0x3b, 0xbc, 0x02, 0x9d, 0x0d, 0xb8,
	0x67, 0x76, 0x0d, 0x89, 0x55, 0xa1, 0x1f, 0x00, 0xd3, 0xed, 0x5e, 0x7e, 0x68, 0x45, 0xb4, 0xc5,
	0x22, 0x4d, 0xb9, 0x36, 0x92, 0xb6, 0xa4, 0xca, 0x00, 0x1a, 0x78, 0x81, 0x12, 0x47, 0x71, 0xa0,
	0xb2, 0xfb, 0x03, 0x4f, 0x82, 0x78, 0xec, 0x44, 0x99, 0x07, 0xd2, 0x33, 0x59, 0x55, 0x10, 0xba,
	0x3d, 0x08, 0xad, 0x29, 0xe8, 0x99, 0x81, 0x81, 0xa7, 0x8a, 0xb7, 0x48, 0x14, 0x00, 0xda, 0xd3,
	0x70, 0x6f, 0x99, 0x72, 0xf3, 0x75, 0x55, 0x78, 0x06, 0x9b, 0x4d, 0xbf, 0x67, 0xf3, 0x0d, 0x58,
	0xf6, 0xe6, 0xf0, 0x41, 0x97, 0x6f, 0xd6, 0x1e, 0x67, 0x8f, 0x01, 0x41, 0x6b, 0x36, 0x7d, 0xe3,
	0x16, 0x18, 0x23, 0xa6, 0x65, 0x34, 0xb1, 0x5b, 0x61, 0x29, 0xf3, 0x2d, 0xb3, 0x6b, 0x7a, 0x7c,
	0xab, 0xf6, 0x0a, 0xf6, 0xb2, 0x13, 0xb2, 0xe5, 0xc7, 0x92, 0x94, 0x6f, 0x1b, 0xc6, 0x0f, 0xf2,
	0x65, 0x27, 0x1b, 0xc8, 0xc8, 0xb7, 0x77, 0x0d, 0xa7, 0x65, 0xd9, 0x7b, 0xb4, 0xcc, 0x42, 0x06,
	0x35, 0xcd, 0xa1, 0x12, 0xa7, 0x55, 0x63, 0x28, 0xb3, 0x3a, 0xde, 0xaa, 0xc1, 0x52, 0x0b, 0x30,
	0xba, 0x23, 0x90, 0xf1, 0x8c, 0x1a, 0xd0, 0x8e, 0x04, 0xce, 0x66, 0x23, 0xec, 0x69, 0x08, 0x9c,
	0x53, 0x23, 0xa9, 0x79, 0xb0, 0xc8, 0x77, 0x7d, 0x6b, 0x97, 0x9f, 0x57, 0x65, 0xf6, 0x8c, 0x3d,
	0xbf, 0x61, 0xdb, 0x9e, 0x8e, 0x62, 0x7e, 0x91, 0x9d, 0x05, 0x70, 0x47, 0x88, 0x89, 0x0f, 0x06,
	0x93, 0x6c, 0x13, 0xbf, 0xa8, 0x58, 0x90, 0xbd, 0x0f, 0x22, 0xc1, 0x2f, 0xd5, 0x1e, 0x65, 0x57,
	0x9d, 0x7c, 0x07, 0xa8, 0x6f, 0x38, 0x5d, 0xd3, 0x75, 0xf1, 0x0c, 0xc7, 0xe8, 0x99, 0x46, 0x93,
	0x5f, 0xae, 0xff, 0x79, 0x85, 0xad, 0x3b, 0x22, 0xd5, 0x0f, 0x02, 0xd2, 0xf7, 0x5b, 0x8c, 0x39,
	0x3a, 0x54, 0x7e, 0xa7, 0x67, 0xef, 0xd1, 0xe1, 0x1d, 0xa4, 0x95, 0x2c, 0x2e, 0x80, 0x24, 0x03,
	0xd0, 0xbd, 0x8d, 0xc6, 0x86, 0xef, 0xd9, 0xb0, 0x1c, 0xc2, 0xe0, 0xa2, 0x3a, 0x02, 0x52, 0x53,
	0x93, 0x34, 0x40, 0x49, 0x20, 0x75, 0x4f, 0xe6, 0x06, 0x49, 0x45, 0x31, 0xde, 0xd5, 0x2c, 0xbe,
	0x88, 0x3d, 0xa8, 0x7b, 0x7e, 0x47, 0xdb, 0x35, 0xfc, 0x96, 0x6d, 0x59, 0xf6, 0x9e, 0xd1, 0xe4,
	0x4b, 0xb5, 0x87, 0xd8, 0x25, 0x80, 0x09, 0x39, 0x5e, 0xce, 0x32, 0xb6, 0x4a, 0x71, 0x34, 0x6e,
	0xf5, 0x4d, 0xc7, 0x68, 0xfa, 0xb6, 0xe3, 0xf7, 0x6c, 0xdf, 0xb8, 0x05, 0x2e, 0xca, 0x8a, 0xaa,
	0x09, 0xf2, 0xed, 0x3b, 0x9a, 0xe9, 0x1a, 0x4d, 0xbe, 0xaa, 0xd0, 0x9e, 0xed, 0xe5, 0x85, 0xad,
	0x61, 0x8f, 0xea, 0x65, 0x13, 0x4a, 0x0a, 0x2b, 0x48, 0x85, 0x0e, 0x26, 0xb4, 0xd3, 0x36, 0x4e,
	0xc8, 0xb0, 0x8e, 0xe2, 0xa9, 0x93, 0x51, 0xe5, 0x4b, 0x01, 0x05, 0x79, 0xda, 0x50, 0xbd, 0xd8,
	0xb2, 0x9d, 0x86, 0xd9, 0xe4, 0x9b, 0xaa, 0x0c, 0xdd, 0xee, 0x79, 0xe0, 0x2e, 0x79, 0xb6, 0xed,
	0x5b, 0x76, 0xaf, 0xcd, 0xb7, 0xea, 0xbf, 0xb3, 0xc0, 0xb6, 0xa1, 0xf3, 0xf5, 0x38, 0x4a, 0x45,
	0x94, 0xaa, 0xf3, 0x53, 0x5d, 0xf7, 0xb2, 0x43, 0xcc, 0x6d, 0xb6, 0xae, 0xab, 0x8f, 0x6f, 0x79,
	0x1c, 0xd6, 0xb4, 0xd3, 0x48, 0x47, 0x8b, 0xd7, 0x77, 0x0c, 0xb4, 0x43, 0x2b, 0x2a, 0x5f, 0xdf,
	0x76, 0x4d, 0xcf, 0x04, 0xc3, 0x78, 0x83, 0xad, 0xea, 0x58, 0x3d, 0x3c, 0x55, 0x95, 0x5c, 0x77,
	0x6d, 0x53, 0x37, 0xf8, 0x12, 0x9e, 0xfc, 0xea, 0x64, 0xa1, 0x18, 0x5d, 0xfb, 0xa6, 0xc9, 0x97,
	0xa1, 0xd6, 0x00, 0x49, 0x33, 0x7b, 0x05, 0x04, 0x19, 0x19, 0x0e, 0x1c, 0xbd, 0xa3, 0xb9, 0x06,
	0x5f, 0x55, 0x25, 0xe3, 0x30, 0x5a, 0x64, 0xf7, 0xf5, 0xf9, 0x1a, 0x48, 0x2a, 0x7e, 0x88, 0x1b,
	0x00, 0x64, 0x84, 0xb2, 0xda, 0x3a, 0x5b, 0x01, 0x10, 0x56, 0xc4, 0xf5, 0x7a, 0x8f, 0x9d, 0x6e,
	0xc5, 0xc9, 0x9d, 0x70, 0x34, 0x12, 0x51, 0x26, 0x6b, 0x35, 0xb6, 0xd5, 0xd2, 0x55, 0x5c, 0x03,
	0x7e, 0x05, 0x7e, 0xdd, 0x06, 0x60, 0x30, 0xc9, 0x10, 0x81, 0x05, 0x76, 0x1b, 0x10, 0x65, 0x1c,
	0x01, 0x58, 0xa9, 0x5f, 0x64, 0x2b, 0x5e, 0x38, 0x51, 0xbd, 0xe5, 0x29, 0x63, 0x80, 0x9f, 0xaa,
	0x7f, 0x68, 0x81, 0x9d, 0xb6, 0x44, 0xb0, 0x3f, 0x13, 0x5d, 0x71, 0x78, 0x47, 0x24, 0x96, 0xb8,
	0x2f, 0xc6, 0xa0, 0x60, 0xe6, 0xc0, 0x27, 0x49, 0xb3, 0xce, 0xe1, 0x4f, 0xf1, 0x85, 0x13, 0xf1,
	0x6b, 0xbc, 0x72, 0x22, 0x7e, 0x9d, 0x57, 0x4f, 0xc4, 0x6f, 0xf0, 0xc5, 0x13, 0xf1, 0xa7, 0xf9,
	0x12, 0x08, 0xc4, 0x1c, 0xde, 0x0d, 0x1e, 0xf0, 0xe5, 0xfa, 0xb7, 0xb1, 0x8b, 0x44, 0xe9, 0x8b,
	0xe4, 0x30, 0x9c, 0x4e, 0xc3, 0x38, 0xb2, 0x27, 0x22, 0x09, 0xd2, 0x38, 0x81, 0xce, 0xe9, 0x27,
	0xb1, 0x44, 0x07, 0x13, 0x3a, 0x93, 0xdf, 0x09, 0x87, 0xf7, 0xec, 0x59, 0x4a, 0x6e, 0x91, 0x76,
	0x67, 0x14, 0x0e, 0x83, 0x54, 0xf0, 0x2a, 0xce, 0x2d, 0x31, 0x0c, 0xc6, 0x63, 0x62, 0x67, 0x47,
	0xcf, 0x8a, 0x84, 0x2f, 0xd6, 0x3f, 0x58, 0x61, 0x1b, 0x84, 0x38, 0x62, 0x3a, 0x1b, 0xa7, 0x20,
	0x08, 0x94, 0x76, 0x67, 0xe8, 0xeb, 0xf1, 0x53, 0xf0, 0x29, 0x41, 0xbd, 0xe0, 0x50, 0x18, 0x0f,
	0xc2, 0x69, 0x2a, 0x46, 0x7c, 0x01, 0x66, 0xb2, 0xcc, 0x79, 0x10, 0x27, 0x69, 0x91, 0x56, 0x81,
	0xaa, 0x59, 0x22, 0xf8, 0xf6, 0x99, 0x30, 0xa7, 0xad, 0xd9, 0x78, 0x4c, 0x47, 0xe7, 0x94, 0xfb,
	0x66, 0x1c, 0x46, 0x62, 0xc4, 0x17, 0x61, 0xfe, 0x11, 0x62, 0x4e, 0x7b, 0x71, 0x8a, 0xdf, 0x16,
	0xbb, 0x22, 0x6f, 0x70, 0x53, 0x44, 0x47, 0x7c, 0x39, 0xaf, 0x46, 0x3f, 0x48, 0x82, 0xc3, 0xa9,
	0x91, 0x24, 0x71, 0xc2, 0x57, 0x60, 0xd6, 0x1d, 0xff, 0x00, 0xba, 0x6e, 0x35, 0xcf, 0x8f, 0xfc,
	0xa9, 0x67, 0x49, 0x3a, 0x15, 0xbc, 0x17, 0x24, 0x7a, 0x98, 0x1e, 0x71, 0x96, 0x83, 0xd8, 0xf5,
	0x58, 0xe5, 0xf5, 0xbc, 0x2a, 0x5e, 0x12, 0x44, 0xd3, 0xbb, 0x22, 0x21, 0x4b, 0x8d, 0x6f, 0xd4,
	0xff, 0xb6, 0x9c, 0xa5, 0x07, 0x41, 0x14, 0x89, 0xb1, 0x0a, 0x8e, 0x28, 0x4c, 0x52, 0x4a, 0xa1,
	0x28, 0xf3, 0x05, 0x9c, 0x8a, 0x28, 0xc4, 0x26, 0xee, 0x15, 0x55, 0x70, 0x32, 0x78, 0xfe, 0xc0,
	0x35, 0x60, 0x89, 0x86, 0xa9, 0xe7, 0xa9, 0x5d, 0x44, 0xcd, 0xb4, 0x64, 0xf0, 0x87, 0x9a, 0x09,
	0x7b, 0xb7, 0xf8, 0x52, 0x8d, 0xb1, 0x65, 0x39, 0x79, 0x96, 0xeb, 0x11, 0xe3, 0xe8, 0xcd, 0x15,
	0x4b, 0xdf, 0x64, 0x6b, 0x7b, 0x85, 0xe2, 0xb7, 0x18, 0x83, 0x64, 0xcf, 0xd8, 0x33, 0x5c, 0x98,
	0x34, 0xeb, 0x6c, 0x05, 0xd2, 0x1d, 0x1b, 0x14, 0x83, 0x24, 0x92, 0xce, 0xa3, 0xf2, 0xf7, 0x48,
	0x85, 0x7b, 0x76, 0xdf, 0xd4, 0x41, 0x39, 0xc8, 0xfc, 0x50, 0xde, 0x52, 0x7d, 0xc6, 0x58, 0x47,
	0x24, 0xb1, 0x9b, 0x06, 0xe9, 0x6c, 0x0a, 0x25, 0x75, 0x5c, 0x2a, 0xc8, 0x20, 0x57, 0xbc, 0xe3,
	0xaa, 0xe9, 0x06, 0x1e, 0xdb, 0x66, 0xc7, 0xf5, 0xcd, 0x2e, 0x6d, 0x81, 0x18, 0x4d, 0x12, 0xc3,
	0x8e, 0xeb, 0x37, 0x0d, 0xcd, 0xeb, 0x90, 0x12, 0xea, 0xb8, 0x32, 0x16, 0x64, 0x11, 0xaa, 0x82,
	0x34, 0xda, 0x6b, 0xc2, 0x66, 0x76, 0x5c, 0xd9, 0xcc, 0x9f, 0x7f, 0x9c, 0x6d, 0x6a, 0x69, 0x9a,
	0x86, 0x77, 0x66, 0xa9, 0x50, 0xf1, 0x52, 0x7d, 0x17, 0xdc, 0x9d, 0xa7, 0x48, 0xd4, 0x29, 0x71,
	0x8d, 0xfa, 0x93, 0x12, 0xd7, 0x29, 0x56, 0x8a, 0x12, 0x37, 0xa8, 0x25, 0x94, 0x80, 0x69, 0x06,
	0xdd, 0x2e, 0x19, 0x2c, 0xe7, 0x89, 0x6b, 0x7c, 0x25, 0x4f, 0x5c, 0xa7, 0xd0, 0x28, 0x5d, 0x32,
	0x58, 0xcb, 0x13, 0x4f, 0x73, 0x06, 0xb5, 0xef, 0x7b, 0x6e, 0x3c, 0x4b, 0x86, 0x82, 0xaf, 0x43,
	0x6d, 0xf7, 0x44, 0xb8, 0x7f, 0x90, 0xf2, 0x0d, 0xdc, 0xa4, 0x00, 0xc1, 0x4b, 0x86, 0x07, 0x5e,
	0x78, 0x28, 0xf8, 0x26, 0x6e, 0x3c, 0x64, 0x49, 0xf4, 0xe1, 0x77, 0xc2, 0xf1, 0x78, 0x2f, 0x9e,
	0x45, 0x23, 0x31, 0xe2, 0xdb, 0xb5, 0x35, 0xb6, 0xd4, 0x8f, 0x61, 0x12, 0x72, 0xe8, 0x06, 0xdc,
	0xe2, 0x72, 0x27, 0x42, 0x8c, 0xf8, 0x69, 0xf4, 0xce, 0x29, 0x9f, 0x1e, 0xcf, 0xa2, 0x94, 0xd7,
	0x50, 0x5b, 0xcf, 0x12, 0x41, 0x19, 0x30, 0x24, 0x0a, 0x3c, 0x07, 0xa2, 0x9e, 0x05, 0xcd, 0xd9,
	0x14, 0x77, 0x45, 0x34, 0x12, 0x89, 0x96, 0xa6, 0xc1, 0xf0, 0x1e, 0x3f, 0x07, 0x12, 0xad, 0x30,
	0xfc, 0x3b, 0x15, 0xfc, 0x3c, 0x2a, 0xc7, 0x58, 0x55, 0xe1, 0x82, 0x62, 0x43, 0x5c, 0x2f, 0x62,
	0x2c, 0x0b, 0x7e, 0xee, 0x05, 0xd1, 0x3d, 0x7e, 0x09, 0xa3, 0x5d, 0x30, 0xdd, 0x98, 0xdd, 0x09,
	0xa3, 0x7d, 0x7e, 0x19, 0x1a, 0x41, 0x48, 0x4b, 0x84, 0xaf, 0x09, 0xf9, 0x95, 0x1c, 0xb8, 0x19,
	0xbe, 0x26, 0x0c, 0xf8, 0x55, 0x00, 0x64, 0x71, 0xc8, 0xe4, 0x21, 0x90, 0x08, 0x09, 0x48, 0x2e,
	0x0f, 0x03, 0x5f, 0x09, 0x11, 0x9b, 0x47, 0x0a, 0x08, 0xf1, 0x79, 0x14, 0x25, 0xa1, 0x8f, 0x2c,
	0x1e, 0x43, 0x99, 0xe9, 0xcb, 0xaf, 0x5f, 0x06, 0x03, 0xd2, 0xe9, 0xd3, 0x87, 0x2f, 0xa7, 0x04,
	0x7d, 0xf3, 0x0d, 0xd0, 0x1c, 0x2d, 0x39, 0x3c, 0xa2, 0x5e, 0x79, 0x1c, 0x92, 0x4e, 0x38, 0x12,
	0x94, 0x7c, 0x05, 0xb6, 0x3d, 0x88, 0xee, 0x51, 0x63, 0x9f, 0x80, 0xc6, 0x22, 0x13, 0x4a, 0x7f,
	0x23, 0xa4, 0x91, 0x0f, 0xa5, 0xff, 0x02, 0x34, 0x84, 0x8a, 0x24, 0xa0, 0x8e, 0xdf, 0x27, 0xc1,
	0x84, 0x92, 0x7f, 0x11, 0xda, 0xe5, 0x1e, 0x84, 0x62, 0x3c, 0x6a, 0xce, 0x92, 0xe0, 0xce, 0x58,
	0xf0, 0x6f, 0x2a, 0xf4, 0x5f, 0x12, 0x4c, 0xf8, 0x5f, 0x82, 0x34, 0xfc, 0xd7, 0x9b, 0xa1, 0xe6,
	0xf9, 0xcb, 0x18, 0x6a, 0xb4, 0xbf, 0x9f, 0x88, 0xfd, 0x00, 0x6c, 0x7b, 0x62, 0xf4, 0xcd, 0x30,
	0x78, 0xa8, 0x5f, 0x02, 0xb2, 0xf8, 0x83, 0x07, 0xfc, 0x1a, 0x72, 0x52, 0x2d, 0xb9, 0xc6, 0xaf,
	0x43, 0x0f, 0x38, 0x62, 0x4a, 0x5f, 0xdc, 0x80, 0xaa, 0xb9, 0xa1, 0xd8, 0x17, 0x72, 0xac, 0x9f,
	0x46, 0xfb, 0x42, 0x4c, 0x51, 0x2c, 0xfb, 0x2e, 0x7f, 0x65, 0x31, 0xad, 0xbb, 0xfc, 0x5b, 0xa0,
	0x33, 0xa1, 0x22, 0x9d, 0x3e, 0x7f, 0x15, 0xd0, 0x50, 0xec, 0xac, 0xf0, 0x30, 0x4c, 0xf9, 0xab,
	0xa1, 0x07, 0xdb, 0x49, 0x3c, 0x03, 0xe2, 0xff, 0x00, 0xe3, 0x80, 0x09, 0x25, 0x31, 0xdf, 0x0a,
	0x65, 0x21, 0x22, 0xcb, 0xfa, 0x2b, 0xf0, 0xbd, 0x92, 0xab, 0x4e, 0x9f, 0xff, 0x8f, 0xd8, 0xe9,
	0x48, 0xd3, 0xbc, 0x1d, 0xfe, 0x57, 0xf3, 0x64, 0xd3, 0x68, 0xf1, 0xff, 0x09, 0xd7, 0x20, 0x4c,
	0x76, 0xfa, 0xfc, 0xaf, 0x41, 0x9f, 0x51, 0x6a, 0x18, 0xa6, 0x47, 0x90, 0x5f, 0x2b, 0x43, 0xf0,
	0x4d, 0x23, 0x17, 0x3b, 0x80, 0x3a, 0x7d, 0xae, 0x83, 0x8a, 0xc7, 0xf9, 0xa1, 0x1a, 0xe5, 0x88,
	0xd1, 0x6c, 0x28, 0x78, 0x13, 0x8d, 0x49, 0x31, 0x15, 0x30, 0xcd, 0x8e, 0xd1, 0x0c, 0x58, 0x6b,
	0x61, 0xca, 0x1c, 0xc3, 0x5b, 0x80, 0x43, 0x67, 0x1c, 0xc3, 0xdb, 0x50, 0x88, 0x9e, 0xce, 0x13,
	0x3a, 0xb0, 0x8e, 0xb4, 0xc5, 0x61, 0x5b, 0xa4, 0xfd, 0x24, 0xbe, 0x13, 0xdc, 0x09, 0xc7, 0xb0,
	0x64, 0x98, 0x00, 0x93, 0x80, 0x78, 0x49, 0x10, 0x46, 0x32, 0xf7, 0x4d, 0x98, 0x77, 0x20, 0x66,
	0x45, 0x70, 0x07, 0x46, 0x1e, 0x85, 0xab, 0x88, 0x5a, 0x80, 0xa2, 0x08, 0x16, 0xd1, 0x2e, 0xd6,
	0x23, 0x1e, 0x8f, 0x05, 0x8a, 0x43, 0xae, 0x41, 0x7a, 0xa8, 0x50, 0xe2, 0x48, 0x0e, 0x84, 0x8d,
	0x6a, 0xbb, 0xa0, 0x24, 0xae, 0xf1, 0x3e, 0x0c, 0x16, 0x8e, 0xad, 0xe4, 0xf5, 0x0c, 0x96, 0x10,
	0x44, 0xfb, 0xf7, 0xe2, 0x68, 0xdf, 0xbb, 0x26, 0x51, 0x07, 0x17, 0x9c, 0xf0, 0x4e, 0x10, 0x67,
	0x90, 0x8b, 0x56, 0x55, 0x10, 0x61, 0xc5, 0x15, 0xe8, 0xa1, 0x0a, 0x09, 0x83, 0xb8, 0x98, 0x73,
	0x50, 0x62, 0x79, 0x5d, 0xa2, 0xbb, 0x39, 0x4b, 0x05, 0xed, 0x15, 0x59, 0x2a, 0xf0, 0x56, 0x91,
	0xa5, 0x02, 0x6f, 0x97, 0x58, 0xde, 0x90, 0xe8, 0x5f, 0xcf, 0x59, 0x2a, 0xe8, 0x6f, 0x14, 0x59,
	0x2a, 0xf0, 0x6f, 0x16, 0x59, 0x2a, 0xf0, 0x6f, 0xc1, 0xa4, 0x92, 0x83, 0xa3, 0x6a, 0xfe, 0x6d,
	0x20, 0x57, 0xa5, 0x06, 0xfa, 0x50, 0x04, 0x0d, 0x8b, 0x82, 0xfe, 0x67, 0x80, 0x68, 0x4c, 0x14,
	0x14, 0x14, 0x78, 0xa9, 0x2a, 0xdf, 0xc9, 0x78, 0x29, 0x64, 0x98, 0xf3, 0x52, 0xd0, 0x28, 0xe7,
	0xa5, 0x20, 0x51, 0xe0, 0xa5, 0xea, 0x7a, 0x37, 0xe3, 0xa5, 0x90, 0xfd, 0x9c, 0x97, 0x82, 0x0e,
	0x72, 0x5e, 0x0a, 0x0a, 0x71, 0xf1, 0x14, 0x49, 0x2c, 0x05, 0xe2, 0x35, 0xb8, 0x14, 0xc3, 0x3a,
	0x8d, 0x5a, 0xe2, 0x1e, 0x14, 0x65, 0x7c, 0xfb, 0x2c, 0x9c, 0x74, 0x83, 0x7b, 0x72, 0xdd, 0x18,
	0xa3, 0x65, 0x1e, 0x1f, 0x1e, 0x06, 0x30, 0x7b, 0x8d, 0x07, 0x13, 0x6d, 0x34, 0xe2, 0x87, 0x18,
	0x4c, 0x09, 0x42, 0x1d, 0x24, 0x47, 0xcd, 0xe0, 0x30, 0xd8, 0x17, 0x3c, 0x42, 0x5e, 0xb3, 0x28,
	0x6d, 0x06, 0x87, 0xfb, 0x82, 0xc7, 0x68, 0x0f, 0x04, 0xe3, 0x71, 0x53, 0xdc, 0xe5, 0x13, 0x8c,
	0x8d, 0xbc, 0x33, 0xed, 0x84, 0x29, 0xda, 0x4a, 0x52, 0x2f, 0x7f, 0x3b, 0xf0, 0x2e, 0xc0, 0xa8,
	0xba, 0x13, 0x54, 0x79, 0x39, 0x48, 0x5a, 0x7b, 0x7a, 0x8c, 0x43, 0x67, 0x16, 0xf7, 0x83, 0x98,
	0xa7, 0x20, 0xf9, 0xda, 0x9d, 0x69, 0x33, 0x1e, 0xed, 0x8b, 0x22, 0xeb, 0x99, 0xcc, 0x9f, 0x13,
	0x90, 0xf9, 0x7d, 0x98, 0xc9, 0x25, 0x98, 0xd8, 0x3f, 0x3b, 0xc7, 0x47, 0x16, 0xf0, 0x40, 0x12,
	0x1a, 0x41, 0x7c, 0x33, 0x2c, 0x16, 0x70, 0x24, 0x0b, 0xc8, 0x09, 0x58, 0xc0, 0x77, 0xc8, 0x02,
	0x72, 0x98, 0x0a, 0xf8, 0xdb, 0x73, 0x7c, 0x64, 0x01, 0x7f, 0x07, 0xbc, 0x61, 0xed, 0xce, 0x74,
	0x27, 0x88, 0xf6, 0x1b, 0x41, 0x5c, 0x2c, 0xe2, 0x7f, 0x91, 0xdf, 0x14, 0x49, 0x58, 0xc8, 0xff,
	0x0a, 0x56, 0xe6, 0x31, 0x02, 0x15, 0xf3, 0x77, 0xf1, 0x60, 0xad, 0x4c, 0x91, 0x05, 0x7d, 0x27,
	0x6e, 0x64, 0x16, 0xba, 0x10, 0x55, 0x34, 0xff, 0x2e, 0x8a, 0x25, 0x2d, 0x36, 0x9d, 0x08, 0xaf,
	0x55, 0x84, 0xbc, 0xca, 0x44, 0x78, 0x1d, 0x05, 0x92, 0x96, 0x0b, 0x21, 0xd2, 0xeb, 0x71, 0x8f,
	0xb3, 0x2f, 0x92, 0x63, 0x03, 0xfd, 0x06, 0xdc, 0x85, 0x2d, 0xe0, 0xd8, 0x8c, 0xef, 0xc6, 0x1a,
	0x15, 0x50, 0x6a, 0xc3, 0xf7, 0x1c, 0x67, 0x22, 0x1b, 0xf0, 0x46, 0xdc, 0x5a, 0xed, 0x8b, 0x64,
	0x6e, 0xb0, 0xdf, 0xa4, 0xbe, 0x38, 0x36, 0xda, 0x6f, 0xc6, 0x26, 0x94, 0x70, 0x2a, 0xe2, 0x2d,
	0xf3, 0xac, 0x64, 0x21, 0x6f, 0x55, 0x94, 0xb9, 0x01, 0x7f, 0x4e, 0x15, 0x72, 0x6c, 0xc4, 0xdf,
	0xa6, 0x0a, 0x39, 0x3e, 0xe4, 0x6f, 0x9f, 0x67, 0x25, 0x0b, 0x79, 0x1e, 0xa3, 0x65, 0xfb, 0x22,
	0x39, 0x61, 0xd0, 0xdf, 0xa1, 0xbe, 0x9a, 0x1b, 0xf5, 0x17, 0xb0, 0xdf, 0x8f, 0x51, 0xa8, 0xa8,
	0x17, 0x4f, 0x62, 0x28, 0x0b, 0x7b, 0xe7, 0xf1, 0x5e, 0xa6, 0xa1, 0x7a, 0xd7, 0x7c, 0xdf, 0x10,
	0xe1, 0x7b, 0xe7, 0xdb, 0x43, 0x84, 0xef, 0x3b, 0xa9, 0x7c, 0x22, 0x7d, 0x3f, 0xee, 0xa7, 0x77,
	0xc2, 0xd4, 0x09, 0x52, 0x65, 0xb2, 0xfd, 0x00, 0x1e, 0xd9, 0x49, 0x0c, 0x1b, 0xf0, 0x6e, 0x3c,
	0x9c, 0x91, 0x08, 0x55, 0xfc, 0x07, 0x8b, 0x1f, 0xca, 0x0a, 0xff, 0x10, 0x1d, 0x69, 0x42, 0xe9,
	0x05, 0x76, 0x3f, 0x4c, 0xa7, 0x82, 0x0a, 0x45, 0x86, 0x3f, 0x42, 0xe7, 0x9a, 0x0a, 0x23, 0x96,
	0x3f, 0x5a, 0xfe, 0x5c, 0x32, 0xfd, 0x7b, 0xc5, 0xb2, 0xa9, 0xd2, 0x3f, 0x56, 0xfe, 0x9a, 0xc0,
	0x1f, 0xa7, 0x0a, 0xcd, 0xa2, 0x54, 0x24, 0xdd, 0x38, 0x9a, 0x82, 0xf6, 0xfa, 0x09, 0xcc, 0x98,
	0x63, 0x56, 0x78, 0x57, 0xf0, 0x9f, 0x3c, 0x96, 0x51, 0x4b, 0xef, 0xf1, 0x9f, 0xc2, 0xae, 0x2e,
	0x7e, 0x8c, 0x9a, 0xf1, 0xa7, 0xf1, 0xa8, 0x52, 0x1a, 0x4c, 0xd7, 0xf8, 0xcf, 0x14, 0x93, 0xd7,
	0xf9, 0xcf, 0x22, 0xa3, 0xa2, 0x05, 0x75, 0x8d, 0xff, 0xdc, 0x1c, 0x76, 0x9d, 0xff, 0x3c, 0xb6,
	0xa0, 0x60, 0x57, 0x5d, 0xe3, 0xef, 0x39, 0x0e, 0x5d, 0xe7, 0xef, 0xc5, 0x53, 0xdd, 0xcc, 0x0e,
	0xbc, 0xce, 0x7f, 0xa1, 0x0c, 0xdc, 0xe0, 0xbf, 0x48, 0x87, 0xad, 0xf1, 0x74, 0xea, 0x88, 0x11,
	0x7f, 0x1f, 0xf8, 0x79, 0xcb, 0x64, 0x22, 0xf0, 0xf7, 0xab, 0x04, 0xb4, 0xfa, 0x97, 0x16, 0x6a,
	0x8c, 0x2d, 0x75, 0xe3, 0xa8, 0x33, 0xe1, 0x1f, 0xc8, 0x08, 0xc1, 0x21, 0xff, 0xa0, 0x4a, 0xc0,
	0xf7, 0xbf, 0x8c, 0xec, 0xa9, 0xa1, 0x4e, 0x38, 0x15, 0xfc, 0x57, 0x90, 0x7d, 0x67, 0x96, 0xa4,
	0x40, 0xfe, 0xdf, 0xa8, 0x8f, 0x69, 0xf5, 0x7a, 0x5a, 0xae, 0x42, 0xff, 0x3b, 0x56, 0x1b, 0x97,
	0x2f, 0x05, 0xfd, 0x1f, 0xd8, 0x60, 0x5a, 0xbf, 0x14, 0xf6, 0xf7, 0x11, 0xa3, 0x05, 0x4c, 0x61,
	0xbf, 0x8a, 0x42, 0x35, 0x88, 0xc0, 0xca, 0x21, 0xdf, 0xfc, 0x77, 0x57, 0x6a, 0x5b, 0xe8, 0x91,
	0xc4, 0x51, 0x47, 0x8c, 0x27, 0xfc, 0xf7, 0x30, 0xfc, 0xab, 0x1b, 0x3c, 0x28, 0x58, 0xcd, 0xfc,
	0xdf, 0xac, 0xc0, 0x67, 0xcd, 0x30, 0x38, 0x8c, 0xa3, 0x51, 0x37, 0x8c, 0x04, 0xff, 0xb7, 0x2b,
	0xc0, 0xdc, 0x11, 0x61, 0x74, 0x37, 0x4e, 0x86, 0xe2, 0x50, 0x44, 0x29, 0xff, 0x77, 0x2b, 0x50,
	0x2f, 0x70, 0xee, 0xf5, 0x60, 0x12, 0x80, 0x21, 0xc9, 0xff, 0x3d, 0x72, 0x03, 0x08, 0x2d, 0x76,
	0x32, 0xe3, 0xfe, 0x03, 0x72, 0x03, 0x10, 0x06, 0x39, 0x15, 0x09, 0xff, 0x7d, 0x8c, 0x4d, 0x02,
	0xa4, 0xcc, 0xf1, 0x3f, 0x62, 0x29, 0x59, 0xe5, 0xd0, 0x26, 0xfb, 0x03, 0x0c, 0xe8, 0x6a, 0x8b,
	0xd4, 0x3b, 0xc8, 0xec, 0xcc, 0x29, 0xff, 0xec, 0x36, 0x74, 0x2a, 0x6d, 0xb6, 0xf0, 0xcf, 0x6d,
	0x43, 0x9b, 0x60, 0xcc, 0xc8, 0xe0, 0xfe, 0xbc, 0x24, 0x4e, 0x82, 0x30, 0xe1, 0x5f, 0xd8, 0x86,
	0xd2, 0xd1, 0x64, 0xb3, 0xef, 0xa4, 0x41, 0x18, 0xf1, 0x2f, 0x6e, 0x43, 0x25, 0xdb, 0x41, 0x7a,
	0x20, 0x12, 0x33, 0x1a, 0x26, 0x22, 0x98, 0x0a, 0xfe, 0xa5, 0x6d, 0x90, 0xb2, 0x6e, 0xd7, 0x11,
	0xcf, 0x06, 0xc9, 0x88, 0x7f, 0x19, 0x93, 0xad, 0x44, 0x08, 0xac, 0xc4, 0x1b, 0x9f, 0xa8, 0x6d,
	0xb2, 0x15, 0x2f, 0x18, 0x8b, 0x28, 0x7d, 0x8a, 0xff, 0xd8, 0x73, 0xcb, 0x79, 0xf2, 0x1a, 0xff,
	0xf1, 0x62, 0xf2, 0x3a, 0xff, 0x89, 0x62, 0xf2, 0x06, 0xff, 0xc9, 0x62, 0xf2, 0x69, 0xfe, 0x53,
	0xc5, 0xe4, 0x2b, 0xf9, 0x4f, 0x17, 0x93, 0xdf, 0xc2, 0x7f, 0xa6, 0x98, 0x7c, 0x15, 0xff, 0xd9,
	0x62, 0xf2, 0xd5, 0xfc, 0xe7, 0x9e, 0x5b, 0xae, 0x6d, 0xb1, 0x55, 0x59, 0x8d, 0x27, 0xf9, 0xcf,
	0x97, 0xd2, 0x4f, 0xf1, 0xf7, 0x94, 0xd2, 0xd7, 0xf8, 0x7b, 0x4b, 0xe9, 0xeb, 0xfc, 0x17, 0x4a,
	0xe9, 0x1b, 0xfc, 0x17, 0x4b, 0xe9, 0xa7, 0xf9, 0xfb, 0x4a, 0xe9, 0x57, 0xf2, 0xf7, 0x63, 0xf1,
	0xab, 0x8d, 0x59, 0x03, 0x8d, 0x3c, 0xfe, 0xd3, 0xbd, 0x42, 0xf2, 0x3a, 0xff, 0x99, 0x62, 0xf2,
	0x06, 0xff, 0xd9, 0x62, 0xf2, 0x69, 0xfe, 0x73, 0x3d, 0x18, 0x04, 0x32, 0x06, 0xf9, 0x0f, 0xe5,
	0x89, 0xeb, 0xfc, 0x87, 0xf3, 0xc4, 0x0d, 0xfe, 0x23, 0x79, 0xe2, 0x69, 0xfe, 0xa3, 0x3d, 0x98,
	0x0c, 0x37, 0xc3, 0x9b, 0x60, 0x2e, 0xf2, 0xf7, 0x17, 0x52, 0xd7, 0xf9, 0x2f, 0x15, 0x52, 0x37,
	0xf8, 0x07, 0x0a, 0xa9, 0xa7, 0xf9, 0x07, 0x31, 0xd5, 0x12, 0xe1, 0xcd, 0xd0, 0x7b, 0x9a, 0xff,
	0xfd, 0x42, 0xea, 0x1a, 0xff, 0xd5, 0x42, 0xea, 0x3a, 0xff, 0xb5, 0x42, 0xea, 0x06, 0xff, 0x07,
	0x3d, 0x98, 0x8d, 0xb9, 0xf5, 0xce, 0x3f, 0x54, 0x06, 0xae, 0xf3, 0x7f, 0x58, 0x06, 0x6e, 0xf0,
	0x5f, 0x47, 0x06, 0xd2, 0xb4, 0xe7, 0xff, 0xa8, 0x90, 0xba, 0xce, 0xff, 0x71, 0x21, 0x75, 0x83,
	0xff, 0x46, 0x0f, 0xa4, 0x32, 0xb3, 0xf8, 0xf9, 0xff, 0x59, 0x4a, 0x5f, 0xe7, 0xff, 0xa4, 0x94,
	0xbe, 0xc1, 0xff, 0x29, 0xa6, 0x33, 0x67, 0x80, 0xff, 0xb3, 0x52, 0xfa, 0x3a, 0xff, 0x70, 0x29,
	0x7d, 0x83, 0x7f, 0xa4, 0x07, 0xd3, 0x4f, 0x4b, 0x53, 0xd4, 0xb1, 0xb0, 0xb8, 0xf0, 0x8f, 0x16,
	0x21, 0xf2, 0xc9, 0x3f, 0xd6, 0x03, 0x61, 0x57, 0x8e, 0xad, 0x54, 0x0b, 0x6f, 0x7a, 0x02, 0xe3,
	0x4a, 0xb2, 0xed, 0x10, 0x09, 0xbf, 0xf9, 0x09, 0x98, 0x6a, 0x99, 0x3b, 0x24, 0xd1, 0xb7, 0x60,
	0xe6, 0xdc, 0xf7, 0x95, 0xf0, 0x5b, 0x31, 0x73, 0xb6, 0xb5, 0x21, 0xd1, 0xe7, 0x9e, 0x80, 0x19,
	0x2c, 0x37, 0x8d, 0x24, 0xf6, 0xb6, 0x27, 0x60, 0xb6, 0x17, 0xd4, 0xae, 0xc4, 0xdf, 0xfe, 0x04,
	0xac, 0x9c, 0x45, 0xad, 0x2d, 0x09, 0xcf, 0x3f, 0x91, 0xa9, 0xf3, 0x4e, 0x5f, 0x62, 0xef, 0x78,
	0xa2, 0xfe, 0xbd, 0x55, 0xb6, 0xad, 0xa5, 0x69, 0x82, 0x9b, 0x55, 0xb4, 0x41, 0x24, 0x9d, 0x76,
	0x74, 0x4e, 0xf9, 0xa9, 0xda, 0x2a, 0x5b, 0x04, 0xeb, 0x9c, 0x57, 0xe0, 0x3f, 0x33, 0x15, 0x87,
	0xbc, 0x0a, 0x7e, 0x39, 0x6d, 0x30, 0xf2, 0x45, 0xf4, 0xd1, 0x51, 0xb8, 0x29, 0x48, 0x05, 0xf2,
	0xca, 0xf4, 0x32, 0x7c, 0x81, 0xfb, 0x94, 0x2b, 0x90, 0x0b, 0xf7, 0xe1, 0x04, 0x5f, 0xc5, 0xed,
	0x5f, 0x50, 0x1d, 0x00, 0x80, 0x66, 0x5c, 0xab, 0xad, 0xb0, 0xea, 0xae, 0xd9, 0xe7, 0xac, 0xb6,
	0xc6, 0x96, 0xbc, 0x30, 0x1d, 0x0b, 0xbe, 0x0e, 0xbc, 0x5c, 0x91, 0xdc, 0x17, 0x49, 0x63, 0x76,
	0xf7, 0x2e, 0x9d, 0x45, 0x00, 0xaf, 0x5e, 0x9c, 0x1c, 0x06, 0x63, 0xbe, 0x09, 0xd6, 0x7f, 0xee,
	0x12, 0x80, 0xbf, 0xc0, 0xb7, 0xd0, 0x6b, 0x1f, 0xa6, 0xe1, 0x7d, 0x28, 0x13, 0x2f, 0xef, 0x65,
	0x39, 0xcc, 0xc3, 0x49, 0x12, 0x4e, 0xe3, 0x88, 0x73, 0xf0, 0x48, 0x76, 0xc2, 0xf1, 0x38, 0x23,
	0xd1, 0xbe, 0x55, 0x37, 0x08, 0x23, 0xe0, 0xef, 0xde, 0x0b, 0x23, 0x5e, 0xc3, 0x5d, 0x92, 0xd9,
	0x9d, 0xe9, 0x30, 0x09, 0xef, 0x88, 0x76, 0x78, 0x37, 0xe5, 0x67, 0xf2, 0x8d, 0x60, 0x19, 0xf0,
	0x70, 0x16, 0xb7, 0xbb, 0x82, 0xa4, 0x13, 0x4c, 0x26, 0x22, 0x02, 0xfb, 0xe0, 0x1c, 0x38, 0xb2,
	0x72, 0xe7, 0x15, 0x5b, 0x71, 0x1e, 0x7d, 0xa4, 0x46, 0xa1, 0x1d, 0x17, 0xc0, 0xb3, 0xf0, 0x1a,
	0xdd, 0x30, 0x09, 0x86, 0x63, 0xb1, 0x17, 0x10, 0x7a, 0x11, 0xf7, 0xa3, 0x5c, 0xf8, 0x9f, 0x3e,
	0xbc, 0x54, 0xff, 0xa1, 0x0a, 0xdb, 0x80, 0xde, 0x86, 0x7a, 0xa9, 0xc8, 0x17, 0xb3, 0x5b, 0xb8,
	0x36, 0x84, 0x9b, 0xa5, 0x66, 0x1e, 0x31, 0x84, 0x1b, 0x96, 0x98, 0x1e, 0xb4, 0x5a, 0xb4, 0x6f,
	0x0e, 0x29, 0x3c, 0xa2, 0x6d, 0x39, 0x5a, 0x1b, 0xa3, 0x20, 0x17, 0x15, 0x9b, 0x2c, 0x80, 0x06,
	0xef, 0xa4, 0x99, 0x59, 0x34, 0x0f, 0x86, 0xa5, 0xe2, 0x69, 0x29, 0x60, 0xf2, 0x9c, 0x17, 0xc1,
	0x15, 0xf0, 0xad, 0x00, 0xa4, 0x60, 0xa7, 0x55, 0xc5, 0xa9, 0xe9, 0xd8, 0xfd, 0xbe, 0xa6, 0xef,
	0xd0, 0x10, 0xe1, 0x57, 0x14, 0xdd, 0xb8, 0x0d, 0x6e, 0x48, 0x56, 0x05, 0x8c, 0xb6, 0xc2, 0x3a,
	0x70, 0x70, 0x29, 0xcc, 0x62, 0x64, 0x14, 0x11, 0xf9, 0xe9, 0xda, 0x65, 0x76, 0xbe, 0x4c, 0xc8,
	0xee, 0x70, 0xd6, 0x54, 0xeb, 0xf0, 0x20, 0xfa, 0x4c, 0xfd, 0x4f, 0xb6, 0xd9, 0x3a, 0x74, 0x8f,
	0x3b, 0xbb, 0x93, 0xf5, 0x8e, 0x5b, 0xea, 0x1d, 0x28, 0xa4, 0x80, 0xd0, 0x61, 0x76, 0x97, 0xdf,
	0xad, 0x5d, 0x61, 0x17, 0x4a, 0x04, 0xbd, 0x63, 0xdb, 0xae, 0x01, 0x69, 0xbe, 0x5f, 0xbb, 0xca,
	0x2e, 0x9e, 0x44, 0xc4, 0xa8, 0xee, 0x83, 0xda, 0x23, 0xec, 0xb2, 0xe9, 0x66, 0x27, 0x56, 0xd9,
	0x85, 0x15, 0xc9, 0xfa, 0xa3, 0x78, 0xc9, 0xec, 0xa4, 0x0c, 0x5a, 0x73, 0x17, 0x37, 0xd0, 0x3f,
	0x86, 0x97, 0xdc, 0x4e, 0xcc, 0xa1, 0xf6, 0xd8, 0x3f, 0x8e, 0x26, 0x7e, 0x21, 0x8b, 0xdb, 0xc1,
	0x98, 0xbf, 0x4f, 0xa0, 0x79, 0x5d, 0xc0, 0x5b, 0x76, 0xdb, 0xb7, 0x5b, 0xfe, 0x9e, 0xe6, 0xf0,
	0x4f, 0xe2, 0xc5, 0xb8, 0xe2, 0x37, 0x32, 0xcc, 0x99, 0xb6, 0xab, 0x3f, 0x75, 0x9c, 0x8c, 0x21,
	0x35, 0xbe, 0xd1, 0xb3, 0x34, 0xa7, 0x6d, 0xf0, 0x4f, 0x2f, 0xd4, 0xae, 0x52, 0x97, 0x64, 0x27,
	0x71, 0x18, 0x36, 0x4b, 0x07, 0x6e, 0x9f, 0x39, 0xfe, 0x71, 0x4e, 0x05, 0xde, 0x9f, 0x3d, 0x5e,
	0x2d, 0xad, 0xd9, 0xf4, 0x35, 0xcf, 0x03, 0x81, 0xf8, 0xdc, 0x49, 0x34, 0xdc, 0x33, 0x6f, 0xf2,
	0xcf, 0xa3, 0x8b, 0x71, 0x8c, 0x66, 0x99, 0x2d, 0x83, 0x7f, 0xe1, 0x78, 0x75, 0xf2, 0xc6, 0xb8,
	0x2e, 0xff, 0x62, 0xde, 0x3d, 0x83, 0x56, 0x2b, 0x1f, 0xef, 0x5f, 0xc0, 0xfb, 0x6e, 0x19, 0x4e,
	0xa7, 0xc7, 0x78, 0x62, 0xcf, 0x7f, 0xb1, 0x02, 0x0a, 0x3c, 0x23, 0x81, 0xa2, 0x79, 0x5f, 0x25,
	0x2b, 0x03, 0x20, 0x55, 0x42, 0x5b, 0x43, 0xd1, 0x7e, 0x3f, 0x5e, 0x90, 0x9b, 0x2b, 0x83, 0x02,
	0xbe, 0x7e, 0xa9, 0x92, 0x35, 0xaa, 0x44, 0x6c, 0x6b, 0x2e, 0xff, 0x40, 0x25, 0x13, 0x80, 0x12,
	0x2d, 0x0f, 0x21, 0xfb, 0x60, 0xb9, 0xe0, 0x2c, 0x07, 0xc5, 0xa8, 0xfd, 0x72, 0xa5, 0xf6, 0x30,
	0xbb, 0x74, 0x42, 0xc1, 0x32, 0x58, 0xed, 0x57, 0x2a, 0xb0, 0x6a, 0x00, 0x9d, 0x62, 0x17, 0x6f,
	0x6a, 0xfa, 0x8e, 0xe1, 0xc9, 0xcb, 0x75, 0x39, 0xec, 0x39, 0x36, 0x9e, 0xd0, 0xbc, 0x80, 0xb7,
	0xcd, 0x72, 0xbc, 0x63, 0x68, 0x4d, 0xfe, 0xe2, 0x31, 0xb0, 0x61, 0x58, 0x1e, 0x7f, 0x27, 0x46,
	0x61, 0xe5, 0xa0, 0xdb, 0xb1, 0x0d, 0x97, 0xbf, 0xab, 0xaa, 0xc6, 0x88, 0x50, 0x0d, 0xcf, 0xce,
	0x6d, 0x07, 0xef, 0xd2, 0x5d, 0x60, 0xb5, 0x9c, 0x92, 0x4d, 0xd3, 0x77, 0x67, 0x8c, 0x3a, 0x4d,
	0x8c, 0x8d, 0xc5, 0x9b, 0x99, 0x3f, 0x58, 0x55, 0xfd, 0x92, 0x5f, 0xb2, 0x51, 0x37, 0x29, 0xec,
	0x6e, 0xd7, 0xee, 0xf1, 0xaf, 0x55, 0xd5, 0xdc, 0x9a, 0xcb, 0x41, 0xb7, 0x1b, 0xfe, 0x08, 0x6f,
	0x2e, 0x9d, 0x98, 0x41, 0x5e, 0x09, 0xa0, 0x18, 0x96, 0x3f, 0xae, 0xaa, 0x2e, 0x9c, 0xcb, 0xe7,
	0x19, 0x7a, 0x87, 0xff, 0x67, 0xbc, 0x30, 0x74, 0x22, 0x3d, 0x8b, 0x87, 0xfd, 0x2f, 0xf3, 0x65,
	0xa9, 0x6b, 0xa6, 0x2a, 0x08, 0xd9, 0xde, 0x35, 0x1c, 0xfe, 0x27, 0x55, 0x35, 0x35, 0x8a, 0x77,
	0x87, 0x2c, 0x4b, 0xde, 0xd6, 0xf8, 0xd3, 0x79, 0xb2, 0xde, 0xd1, 0x7a, 0x6d, 0xc3, 0xef, 0x69,
	0x5d, 0x83, 0xff, 0xd9, 0x4b, 0x92, 0x4d, 0xdd, 0xee, 0xf1, 0x3f, 0xaf, 0xd6, 0x1e, 0x67, 0x8f,
	0x96, 0xc8, 0x30, 0x45, 0xb2, 0x84, 0x9c, 0x47, 0xff, 0x75, 0xbe, 0x6b, 0x3d, 0x67, 0xd0, 0xed,
	0x1b, 0x9e, 0x6f, 0x99, 0xb8, 0x2e, 0xfc, 0xb7, 0xf9, 0x72, 0x50, 0x21, 0x6b, 0xcd, 0xa6, 0x71,
	0xab, 0xcf, 0xbf, 0x73, 0x71, 0xae, 0xc3, 0x90, 0xec, 0x18, 0x6e, 0x5f, 0xdb, 0xeb, 0xf1, 0xef,
	0x5a, 0x9c, 0x1b, 0x19, 0xc7, 0xe8, 0x6b, 0xa6, 0xa3, 0xae, 0x0e, 0xbf, 0x76, 0x71, 0xae, 0x47,
	0x73, 0xfd, 0x2d, 0x0b, 0x79, 0xdd, 0x3c, 0x13, 0x0a, 0xd6, 0x56, 0x97, 0x3f, 0x5e, 0xbf, 0x38,
	0xd7, 0x0c, 0x59, 0x8b, 0x96, 0x0c, 0x6f, 0x7d, 0xc3, 0xa2, 0x52, 0x9d, 0x79, 0x7f, 0x58, 0x9e,
	0xe1, 0xf8, 0x3d, 0x53, 0xdf, 0xa1, 0x1e, 0xfd, 0xee, 0x45, 0x35, 0xb9, 0x4a, 0x5d, 0x66, 0xf4,
	0x0c, 0xa7, 0x7d, 0x9b, 0x7f, 0xcf, 0xe2, 0xdc, 0xa8, 0xca, 0xfe, 0x2e, 0xdf, 0xfc, 0x7a, 0xe3,
	0x7c, 0x41, 0xd9, 0xad, 0x11, 0x4d, 0xb7, 0x3d, 0xe7, 0x36, 0x7f, 0xd3, 0xa2, 0xd2, 0x01, 0xa5,
	0x82, 0x50, 0x00, 0xdf, 0x3c, 0xdf, 0x92, 0xbc, 0x3b, 0x70, 0x06, 0xbe, 0xa5, 0x5c, 0x80, 0x57,
	0xca, 0xd1, 0xb5, 0x9b, 0x86, 0xc5, 0xdf, 0x5a, 0x6e, 0x89, 0x27, 0x0b, 0x90, 0xb7, 0x1d, 0x9e,
	0x5b, 0xac, 0xbd, 0x9c, 0x3d, 0x5c, 0xa2, 0x16, 0x6e, 0x2a, 0x4b, 0xe9, 0x7b, 0x5b, 0xb9, 0x1e,
	0x90, 0x49, 0xc5, 0x8c, 0xca, 0x48, 0xbe, 0xb7, 0xcf, 0x37, 0x54, 0x5e, 0x3d, 0xe8, 0x6b, 0x0d,
	0xd3, 0x02, 0xe3, 0xe0, 0xf9, 0x45, 0xa5, 0x59, 0xca, 0x66, 0xc4, 0x57, 0x17, 0x95, 0x66, 0x40,
	0xbc, 0x61, 0x0d, 0x0c, 0xbf, 0xef, 0x98, 0x3d, 0x8f, 0xff, 0x66, 0xc6, 0xf4, 0x18, 0x25, 0xff,
	0xf8, 0x9f, 0x97, 0x7b, 0x0f, 0x6a, 0x46, 0xf3, 0xca, 0xed, 0xf1, 0xdf, 0x7a, 0xe9, 0xce, 0x57,
	0xc7, 0x55, 0xbf, 0xbd, 0x58, 0xff, 0xed, 0x65, 0xb6, 0xe2, 0x4e, 0x28, 0x20, 0xf8, 0x32, 0x3b,
	0xef, 0x7a, 0xbe, 0xd9, 0x33, 0x3d, 0x53, 0xf3, 0xcc, 0x5d, 0xa3, 0x68, 0x02, 0xbc, 0x8c, 0x3d,
	0x5c, 0xa6, 0xed, 0x52, 0x2f, 0x61, 0x0c, 0x0e, 0x8e, 0x56, 0xa5, 0xf6, 0x08, 0xbb, 0x72, 0x52,
	0x1e, 0x75, 0x63, 0xbd, 0x0a, 0x16, 0xc1, 0x49, 0x19, 0xe4, 0x93, 0x16, 0xaf, 0x60, 0x2f, 0x7b,
	0xe9, 0x22, 0xb2, 0x9b, 0x73, 0x4b, 0xb5, 0x6f, 0x60, 0x8f, 0x96, 0xf3, 0x65, 0x77, 0xd6, 0xf2,
	0xf8, 0xf0, 0xe5, 0xda, 0x45, 0x76, 0xb6, 0x9c, 0x4b, 0x2e, 0xfe, 0x2b, 0x60, 0xb4, 0x94, 0x29,
	0x96, 0xed, 0x34, 0x5d, 0xbc, 0x73, 0xb2, 0x5a, 0x7b, 0x94, 0x5d, 0x3d, 0xa9, 0x12, 0x59, 0xf1,
	0x6b, 0x60, 0x89, 0x95, 0x73, 0x60, 0xf5, 0x59, 0xed, 0x12, 0x3b, 0x57, 0xc6, 0x55, 0xbb, 0xd7,
	0xe7, 0x3b, 0x36, 0x63, 0xb7, 0x31, 0xcf, 0x0e, 0x75, 0xeb, 0x26, 0xd8, 0x5c, 0x65, 0x9c, 0x0c,
	0xbb, 0x2d, 0xd9, 0xb0, 0xbe, 0xe6, 0xba, 0x80, 0xe6, 0x4d, 0xde, 0x96, 0xc5, 0x28, 0x0a, 0x59,
	0x0e, 0xf8, 0x8c, 0x03, 0xe7, 0xc7, 0x69, 0x8e, 0x83, 0x45, 0x99, 0x5d, 0x83, 0x9f, 0x96, 0x35,
	0x57, 0x34, 0x0c, 0xfc, 0xf6, 0x3d, 0xd3, 0x32, 0x78, 0x4d, 0x0e, 0xa9, 0x22, 0xcd, 0x8d, 0xf9,
	0x99, 0xda, 0x43, 0xec, 0x52, 0x21, 0x43, 0x41, 0xc9, 0xef, 0x1a, 0x16, 0x3f, 0x7b, 0x8c, 0x75,
	0x61, 0xb8, 0xf1, 0x70, 0xba, 0x40, 0x42, 0xf0, 0xbc, 0x6c, 0xb5, 0x02, 0x41, 0xee, 0x71, 0x5c,
	0x2e, 0x1c, 0xcb, 0x8d, 0x7d, 0x74, 0x11, 0xec, 0xff, 0x02, 0x48, 0x1d, 0x74, 0xe9, 0x58, 0x07,
	0x79, 0x5a, 0xdb, 0xf0, 0x90, 0xc9, 0xe5, 0x13, 0x64, 0x82, 0xae, 0x46, 0x5c, 0x01, 0x0b, 0xbf,
	0xdc, 0x05, 0x00, 0x5f, 0xad, 0x3d, 0xce, 0x1e, 0x7b, 0x69, 0x91, 0x54, 0xe3, 0xfb, 0xd0, 0xb1,
	0x56, 0x16, 0xfa, 0xe7, 0xe1, 0xfa, 0x4f, 0x2f, 0xb0, 0x0d, 0x74, 0xa9, 0xfa, 0xf1, 0x54, 0x45,
	0xd3, 0x19, 0x7d, 0x4f, 0xd9, 0x1b, 0x18, 0xca, 0x05, 0x69, 0x65, 0x68, 0xa0, 0xeb, 0x01, 0x00,
	0xea, 0xb7, 0xaa, 0x4a, 0xa1, 0x69, 0x81, 0x01, 0x5b, 0x90, 0x22, 0x9b, 0x62, 0x09, 0x7a, 0x0b,
	0x92, 0x99, 0x31, 0xe1, 0xb7, 0x4c, 0xc7, 0xf5, 0x48, 0xf8, 0xcb, 0x04, 0xd7, 0xd0, 0xed, 0x5e,
	0x93, 0x22, 0x65, 0xca, 0x14, 0xaf, 0x63, 0x3a, 0x4d, 0xbe, 0x5a, 0xff, 0x9b, 0x8c, 0x63, 0x3d,
	0x9f, 0x99, 0x05, 0xe3, 0x30, 0x3d, 0x52, 0x11, 0x25, 0xc6, 0x33, 0x9e, 0xbf, 0xd7, 0x31, 0x3d,
	0x19, 0xe7, 0x01, 0xc9, 0xb6, 0x63, 0x18, 0x3d, 0x59, 0xd1, 0x67, 0xc0, 0xbe, 0xb2, 0x0c, 0x5e,
	0xc5, 0x76, 0x3d, 0x83, 0x91, 0x61, 0x7d, 0xbc, 0x73, 0x21, 0xa9, 0x6d, 0xdb, 0x6a, 0xf2, 0xa5,
	0xfa, 0x0d, 0x76, 0xa6, 0xec, 0x61, 0x82, 0xc3, 0x4a, 0x01, 0x33, 0x86, 0xeb, 0xef, 0x69, 0x78,
	0xa5, 0x63, 0x9b, 0xad, 0x43, 0xca, 0xd3, 0x76, 0x0c, 0xbb, 0xd5, 0xe2, 0x95, 0xfa, 0x07, 0x17,
	0x54, 0x48, 0x8e, 0x9b, 0x06, 0xb3, 0xa9, 0x8a, 0x3e, 0xb7, 0xa0, 0xb3, 0xe9, 0x8a, 0xe1, 0x4d,
	0x1b, 0x63, 0x5d, 0xca, 0xe0, 0x33, 0x03, 0x54, 0x47, 0x57, 0xd9, 0xc5, 0x02, 0x48, 0x51, 0xa8,
	0xb4, 0x4c, 0x35, 0xc9, 0xa7, 0x03, 0xaa, 0x0e, 0x06, 0xb8, 0xa1, 0x5e, 0xa9, 0x59, 0xc4, 0x48,
	0xa2, 0xfc, 0xa3, 0x1d, 0x58, 0x10, 0xed, 0x81, 0xc7, 0x97, 0x30, 0x52, 0xc9, 0xf5, 0x7c, 0x7b,
	0xaf, 0x67, 0x38, 0xea, 0x1a, 0xea, 0x32, 0x38, 0x7c, 0x96, 0xb2, 0x31, 0x3d, 0x13, 0x6c, 0x84,
	0x95, 0x7a, 0xc0, 0x6a, 0xcd, 0x70, 0x3a, 0x09, 0xd2, 0xe1, 0x81, 0x17, 0x4c, 0xef, 0xc9, 0x98,
	0x99, 0xb3, 0x8c, 0x37, 0x3d, 0x17, 0x23, 0x0d, 0xe5, 0x9d, 0xae, 0x26, 0x35, 0x19, 0xd0, 0xfc,
	0x21, 0x94, 0x1a, 0xdb, 0x02, 0x40, 0xd7, 0x7a, 0x6a, 0x89, 0xc2, 0xb0, 0x29, 0xc0, 0x5a, 0x66,
	0xcf, 0x74, 0x3b, 0x46, 0x93, 0x2f, 0xd6, 0x9f, 0x61, 0x1b, 0xb4, 0x05, 0x20, 0x99, 0x83, 0xf8,
	0xba, 0xea, 0xa1, 0x13, 0x75, 0x85, 0xf1, 0x54, 0x09, 0xce, 0xbe, 0xae, 0xe0, 0x5c, 0x52, 0x70,
	0xdf, 0xd2, 0x74, 0xe8, 0x8f, 0xfa, 0x3e, 0x5b, 0x25, 0x96, 0xf6, 0x04, 0x83, 0x0b, 0x6c, 0x1f,
	0x9a, 0x88, 0x0f, 0xb2, 0x60, 0xa0, 0x8d, 0x6b, 0xa3, 0x87, 0x45, 0x23, 0x0d, 0x54, 0xbb, 0xb7,
	0x6b, 0x38, 0x1e, 0x85, 0xd7, 0xb8, 0xb6, 0x6f, 0xf7, 0x8d, 0x1e, 0x6d, 0x5b, 0xb8, 0x76, 0x76,
	0x23, 0x6e, 0x19, 0xea, 0xee, 0xda, 0x85, 0x5b, 0x6e, 0x2b, 0xf5, 0xcf, 0x2c, 0xb0, 0xf5, 0x76,
	0x78, 0x37, 0x55, 0xee, 0xe6, 0x26, 0x5b, 0x6b, 0xbb, 0x32, 0x3c, 0x9c, 0x84, 0x0c, 0x92, 0x5d,
	0xbb, 0xe7, 0x75, 0x28, 0x82, 0x11, 0x92, 0x0d, 0x79, 0x3f, 0x0a, 0x4b, 0x07, 0x40, 0xfa, 0x89,
	0x28, 0x67, 0x98, 0xc1, 0xc6, 0xb5, 0x81, 0xb3, 0x0d, 0x48, 0xc1, 0xb8, 0xb5, 0x34, 0xac, 0x80,
	0xe4, 0x67, 0xf6, 0xda, 0x36, 0x38, 0xde, 0xf2, 0x73, 0xc8, 0xee, 0xef, 0x52, 0x8c, 0x32, 0xa4,
	0xdd, 0x41, 0xc3, 0xd5, 0x1d, 0xb3, 0x61, 0x50, 0xb4, 0x0f, 0x40, 0xb4, 0x8b, 0x22, 0x19, 0x66,
	0x5b, 0x21, 0xeb, 0xea, 0x8b, 0x7e, 0x70, 0x34, 0x88, 0xc6, 0xf1, 0xf0, 0x1e, 0xdf, 0xa8, 0x7f,
	0x5f, 0x95, 0x9d, 0x86, 0x26, 0xe9, 0x71, 0x34, 0x0a, 0xb3, 0x98, 0x6d, 0xf8, 0x54, 0xf7, 0xfc,
	0x1d, 0xc3, 0xe8, 0xfb, 0x7d, 0x8d, 0xee, 0xd7, 0x6c, 0x67, 0x48, 0xcf, 0x46, 0xb0, 0x82, 0xfc,
	0x74, 0x2c, 0x4e, 0x6a, 0x4d, 0x70, 0x08, 0xce, 0xb4, 0xf5, 0xa2, 0xef, 0x4e, 0x04, 0x8c, 0x1d,
	0x6c, 0xeb, 0xde, 0x71, 0x35, 0x8b, 0x01, 0x73, 0x80, 0xc3, 0x18, 0xc8, 0xcb, 0xf8, 0xa4, 0xdb,
	0x31, 0x60, 0x2e, 0xa3, 0x64, 0x97, 0x87, 0x56, 0x14, 0x23, 0x0b, 0x9c, 0x57, 0xec, 0x6a, 0xbf,
	0xa9, 0xdd, 0xa6, 0x78, 0xb9, 0x0c, 0xdf, 0x33, 0x8c, 0x1d, 0x84, 0x31, 0x84, 0x9f, 0x60, 0xd7,
	0x95, 0xcf, 0x1d, 0x31, 0x10, 0x68, 0xe4, 0xdc, 0x6a, 0x61, 0xd8, 0x27, 0x96, 0xb7, 0xae, 0xd0,
	0x96, 0xe9, 0xf8, 0x6d, 0x23, 0x7b, 0x27, 0x4a, 0x36, 0x7c, 0xd0, 0xf7, 0x6c, 0x5c, 0x5f, 0xac,
	0x5d, 0xda, 0x75, 0x6a, 0xeb, 0xea, 0x96, 0x99, 0x05, 0xc2, 0xb1, 0xa5, 0xca, 0x27, 0x57, 0xe8,
	0x99, 0x81, 0x66, 0xd1, 0x5d, 0x27, 0x59, 0x5d, 0xef, 0x56, 0xd3, 0x85, 0xef, 0xdb, 0x74, 0x15,
	0x88, 0xe3, 0xe0, 0x42, 0xbd, 0xb4, 0x86, 0x61, 0xd1, 0xde, 0x13, 0x26, 0xe3, 0xfd, 0x30, 0x6a,
	0x06, 0x47, 0xbc, 0x56, 0xff, 0xab, 0xac, 0xa6, 0x86, 0xae, 0x1b, 0x4c, 0x0a, 0xd7, 0x07, 0xb5,
	0xae, 0xa7, 0xae, 0xe1, 0xa0, 0xdf, 0x0f, 0x83, 0xb3, 0x09, 0x20, 0x7a, 0x1d, 0xc6, 0xae, 0xd1,
	0xe3, 0x3f, 0xf9, 0xdc, 0x72, 0x7d, 0x87, 0x6d, 0x62, 0x60, 0xce, 0x38, 0x90, 0xf1, 0x67, 0xa7,
	0xd9, 0xa6, 0x97, 0x45, 0x2e, 0xc3, 0x7c, 0x3f, 0x55, 0x84, 0xe8, 0x25, 0x2e, 0x0c, 0x7b, 0xf6,
	0x3c, 0xff, 0xb6, 0x3d, 0xe8, 0x9a, 0x7e, 0xd7, 0x70, 0x5d, 0xad, 0x6d, 0xf0, 0x6a, 0xfd, 0x0b,
	0x0b, 0x6c, 0xcb, 0x3d, 0x9a, 0xa6, 0xe2, 0x30, 0x8b, 0x77, 0x85, 0x19, 0xaa, 0x7b, 0xc5, 0x30,
	0xec, 0x41, 0x9f, 0x36, 0x5c, 0x8e, 0xc1, 0x4d, 0x7b, 0x0f, 0x74, 0x2e, 0x2c, 0xe3, 0xd0, 0xe9,
	0xba, 0x3e, 0xe8, 0xdf, 0x2e, 0xbe, 0x38, 0xc1, 0xab, 0xb8, 0xba, 0xa9, 0xa1, 0x56, 0xf7, 0xc9,
	0xcc, 0x96, 0x47, 0x37, 0x3d, 0x80, 0x62, 0xdc, 0x32, 0xb3, 0xf7, 0xb8, 0x96, 0x14, 0x78, 0x33,
	0x7f, 0x9d, 0x87, 0x66, 0x8b, 0xab, 0xc6, 0x84, 0xaf, 0xc0, 0xe4, 0x82, 0x24, 0x06, 0x19, 0xaf,
	0xaa, 0xca, 0x96, 0x55, 0xe6, 0x5a, 0xfd, 0xe7, 0x17, 0xd8, 0x79, 0x17, 0xe3, 0xc5, 0x93, 0x5e,
	0x70, 0x28, 0x1c, 0x91, 0xce, 0x92, 0x68, 0x37, 0x18, 0xcf, 0x04, 0x95, 0xd1, 0x73, 0x76, 0x29,
	0x58, 0xdc, 0x68, 0xa2, 0xce, 0x43, 0x36, 0x00, 0x16, 0x2f, 0x10, 0x60, 0x1c, 0x2d, 0xc1, 0x96,
	0xd1, 0x6b, 0x7b, 0x9d, 0xec, 0xf6, 0x02, 0x2c, 0xae, 0x85, 0xec, 0xa0, 0x40, 0x77, 0x35, 0xcb,
	0x6c, 0xd2, 0x74, 0x20, 0x12, 0x06, 0x79, 0xbb, 0xd9, 0xc5, 0x85, 0xec, 0x13, 0x58, 0xf4, 0x4c,
	0x7a, 0x5f, 0x88, 0xee, 0x2e, 0xd4, 0x5f, 0x58, 0x60, 0xdb, 0x18, 0x39, 0xd9, 0x0c, 0xd2, 0x40,
	0x6a, 0xcf, 0x2d, 0xc6, 0xf6, 0x9a, 0xae, 0x2f, 0xb7, 0x43, 0x31, 0x70, 0x13, 0xd2, 0x7b, 0x71,
	0x72, 0x8f, 0x02, 0x37, 0x21, 0xd5, 0x88, 0xe3, 0x74, 0x18, 0x4c, 0x48, 0x25, 0x21, 0x30, 0x4b,
	0x70, 0xa7, 0x72, 0x51, 0x7d, 0x2f, 0x23, 0x43, 0x57, 0x55, 0xba, 0x29, 0xc6, 0x22, 0x15, 0x9c,
	0xe3, 0xde, 0x26, 0xd0, 0xc7, 0xc1, 0xf0, 0x5e, 0x3c, 0x4b, 0xf9, 0xa3, 0x18, 0xaa, 0x49, 0x39,
	0x3a, 0x13, 0xfe, 0xd7, 0xea, 0xdf, 0xca, 0xb6, 0xdc, 0x34, 0x89, 0xc7, 0x63, 0xdc, 0xf1, 0x95,
	0xf7, 0x3d, 0xdc, 0x8e, 0xe7, 0xf7, 0xe2, 0xf4, 0x00, 0xca, 0x38, 0x85, 0x83, 0xdb, 0xf1, 0x7c,
	0x5a, 0x0d, 0xb5, 0xc3, 0x3b, 0xc1, 0x74, 0x1a, 0x8c, 0xe2, 0x84, 0x57, 0xea, 0x31, 0xe3, 0xf9,
	0xc7, 0x79, 0x00, 0xaf, 0xdb, 0x71, 0x7c, 0x0c, 0xdf, 0x15, 0x23, 0x31, 0x22, 0x29, 0x05, 0xa8,
	0x19, 0x2b, 0x9e, 0x15, 0xe2, 0xe9, 0xf8, 0x66, 0x74, 0x3f, 0x18, 0x87, 0x23, 0x8c, 0xa8, 0x15,
	0xa9, 0x48, 0x78, 0x15, 0x4d, 0x64, 0xa4, 0xa4, 0x22, 0x89, 0x82, 0x31, 0x6d, 0xba, 0x52, 0xb0,
	0xed, 0x62, 0xbd, 0xcf, 0xb6, 0xa8, 0x1a, 0xad, 0x71, 0xb0, 0xaf, 0xa2, 0xb6, 0xad, 0x96, 0xe7,
	0xb7, 0x2c, 0xad, 0xed, 0xeb, 0xb6, 0x65, 0x3b, 0x24, 0xc2, 0x19, 0x06, 0xab, 0x08, 0x5d, 0x33,
	0x23, 0x7d, 0x97, 0x11, 0xd0, 0x3d, 0xaf, 0xd6, 0x47, 0xec, 0xec, 0x60, 0x2a, 0x92, 0x2c, 0x7c,
	0x78, 0x2a, 0x9b, 0x71, 0x8e, 0x9d, 0x36, 0x7b, 0x38, 0xd8, 0xbe, 0xe6, 0xb4, 0x07, 0xe0, 0xf2,
	0xb8, 0xfc, 0x14, 0x0c, 0x6f, 0x76, 0xef, 0x45, 0x6a, 0x3b, 0x25, 0x44, 0x8c, 0x2d, 0x93, 0x2c,
	0xd0, 0x4a, 0x01, 0xc2, 0x22, 0xd3, 0x8b, 0xf5, 0xb7, 0x2d, 0xb1, 0xf5, 0xfe, 0x6c, 0x7a, 0xd0,
	0x9d, 0xee, 0x2b, 0x77, 0xa7, 0xdf, 0xf5, 0x7c, 0x28, 0x59, 0x5d, 0x2e, 0x6e, 0x85, 0x51, 0x38,
	0x3d, 0xa0, 0xee, 0x56, 0x34, 0x14, 0x92, 0x40, 0x52, 0x50, 0x4c, 0x15, 0xc5, 0x4b, 0x82, 0x89,
	0xc4, 0xab, 0x45, 0x7c, 0x10, 0x85, 0xa9, 0xc4, 0x71, 0xee, 0x65, 0xa5, 0x08, 0x77, 0x12, 0x8a,
	0x11, 0xdd, 0xac, 0xc9, 0x41, 0x3c, 0x74, 0x48, 0xc5, 0x88, 0x2f, 0x83, 0xde, 0xc8, 0xf1, 0x6e,
	0x30, 0x9d, 0x8a, 0x11, 0xd9, 0x6c, 0x80, 0xde, 0x91, 0xf2, 0x23, 0xc7, 0x8b, 0xaf, 0x96, 0x6a,
	0x89, 0x71, 0x88, 0xc6, 0x83, 0x49, 0x98, 0x08, 0x52, 0xd8, 0x40, 0x91, 0x01, 0xe5, 0xc1, 0x74,
	0x4a, 0x0a, 0x3b, 0xc7, 0x88, 0x3d, 0x5f, 0x57, 0xf5, 0xd3, 0xc3, 0xf4, 0x48, 0xd5, 0x6f, 0x43,
	0xd5, 0x8f, 0x40, 0x3a, 0x14, 0x11, 0x23, 0x52, 0xd9, 0x39, 0x8e, 0x0c, 0xb6, 0x54, 0xed, 0x64,
	0xbc, 0x1a, 0x5d, 0x66, 0x1b, 0xde, 0xe3, 0xdb, 0x30, 0x4c, 0x40, 0x40, 0xfd, 0x39, 0x89, 0x93,
	0x9c, 0xc4, 0x55, 0x55, 0x80, 0x43, 0x86, 0x9e, 0x56, 0xcd, 0x69, 0x07, 0x09, 0x9e, 0x2f, 0x64,
	0x94, 0x9a, 0x2a, 0xa3, 0x21, 0xa6, 0x74, 0xce, 0x21, 0x46, 0x48, 0x38, 0xa3, 0x18, 0x81, 0xe8,
	0x67, 0xc7, 0x12, 0x67, 0x55, 0x35, 0x01, 0xdd, 0x09, 0xc7, 0x63, 0x31, 0x22, 0x77, 0x43, 0x61,
	0x8e, 0x18, 0xe3, 0x99, 0x2a, 0x1e, 0x29, 0x28, 0xd0, 0x0d, 0xee, 0x0b, 0x3a, 0x52, 0xa0, 0xd6,
	0x48, 0x63, 0xb5, 0x3b, 0xdd, 0x27, 0x47, 0x03, 0x50, 0xb5, 0x94, 0xd8, 0x13, 0x11, 0x51, 0x6c,
	0x2c, 0xa0, 0x78, 0x00, 0xd3, 0x0d, 0x1e, 0xf0, 0xcb, 0xaa, 0x10, 0x9c, 0xe9, 0xdd, 0x20, 0xb9,
	0x27, 0x52, 0x7e, 0x45, 0x55, 0x3e, 0x3f, 0xa7, 0x70, 0xd3, 0x20, 0x49, 0xf9, 0xd5, 0xfa, 0xb7,
	0xb1, 0x35, 0x5c, 0xaa, 0x94, 0x5f, 0x60, 0x79, 0xfe, 0x6e, 0x38, 0x0d, 0xd3, 0x38, 0x21, 0x3b,
	0xc8, 0xf2, 0xfc, 0x76, 0x1c, 0xef, 0x8f, 0x05, 0x29, 0x1d, 0xcb, 0xf3, 0x5b, 0xc1, 0x50, 0x34,
	0xe2, 0xf8, 0x1e, 0x49, 0xb7, 0xe5, 0xf9, 0xde, 0xb3, 0x61, 0x0a, 0x53, 0x16, 0x5f, 0xc8, 0x83,
	0xfc, 0xc1, 0xa1, 0x3a, 0x53, 0x59, 0xaa, 0xbf, 0x71, 0x81, 0xad, 0x63, 0x01, 0x8e, 0xd0, 0xe3,
	0x91, 0xc0, 0xa3, 0x26, 0x47, 0xf7, 0xed, 0x7b, 0xfc, 0x14, 0xcc, 0x70, 0xf8, 0xdf, 0x8b, 0xef,
	0x89, 0xc8, 0xdf, 0x15, 0x49, 0x78, 0xf7, 0xc8, 0x6f, 0x05, 0xe1, 0x18, 0x23, 0xf7, 0x81, 0xb7,
	0xa3, 0xfb, 0x83, 0xe8, 0x5e, 0x14, 0x3f, 0x2b, 0xcb, 0x72, 0x74, 0x75, 0x77, 0x65, 0x11, 0x83,
	0xe2, 0x1d, 0xdd, 0x27, 0xb5, 0xe0, 0x0f, 0x26, 0xfb, 0x49, 0x00, 0xb3, 0x87, 0x04, 0xbb, 0x40,
	0xb1, 0xef, 0xde, 0x1d, 0x87, 0x91, 0xe0, 0xcb, 0xf5, 0x8f, 0x2e, 0xb0, 0x4b, 0xc6, 0x7d, 0x91,
	0x1c, 0xc5, 0x91, 0xe8, 0x06, 0xe1, 0xb8, 0x6c, 0x29, 0x9d, 0x66, 0x9b, 0x46, 0x17, 0x6c, 0xa0,
	0x70, 0x42, 0x07, 0x85, 0x78, 0xe9, 0x03, 0x21, 0x19, 0xe0, 0x4e, 0x13, 0x0f, 0x11, 0x75, 0xba,
	0x44, 0x39, 0xf1, 0x6e, 0x23, 0xe5, 0x4c, 0x04, 0x2c, 0xd2, 0xe1, 0xa1, 0xa0, 0xde, 0x40, 0x50,
	0x46, 0xf9, 0x8f, 0xe8, 0x76, 0x0b, 0x42, 0x54, 0x37, 0xb3, 0x49, 0x47, 0x33, 0x08, 0xd1, 0xb4,
	0xc1, 0x4f, 0x71, 0xcd, 0x43, 0x70, 0x80, 0x53, 0x4c, 0x7d, 0xe5, 0x88, 0xfd, 0x30, 0x8e, 0xcc,
	0x11, 0x5f, 0xab, 0x7f, 0x33, 0xe3, 0xc5, 0xa6, 0xa8, 0xb0, 0x74, 0x03, 0x04, 0x64, 0x3c, 0xa6,
	0xc3, 0x24, 0x48, 0xf4, 0x45, 0x02, 0xe2, 0x58, 0xa9, 0xff, 0xca, 0x12, 0x3b, 0x03, 0xed, 0xd8,
	0x17, 0x54, 0xb6, 0x23, 0x52, 0x1c, 0x0f, 0x0c, 0x2b, 0x87, 0x01, 0xd9, 0x21, 0xdb, 0x10, 0x13,
	0x66, 0xe4, 0xf7, 0x93, 0x38, 0x15, 0xc3, 0x94, 0xae, 0x50, 0x20, 0xe8, 0x86, 0x23, 0xdf, 0x48,
	0x12, 0xf9, 0x46, 0xa4, 0x9b, 0x8f, 0xcd, 0x62, 0x96, 0x65, 0x20, 0xb3, 0x2c, 0x65, 0x9c, 0x3a,
	0xc1, 0x54, 0xb6, 0x9f, 0x34, 0x0b, 0x82, 0x85, 0x29, 0x44, 0xd7, 0xdc, 0x11, 0x95, 0xf1, 0x83,
	0xab, 0x79, 0x81, 0x93, 0x23, 0x33, 0x4a, 0x63, 0xf9, 0x1c, 0x24, 0x20, 0x6a, 0x56, 0x72, 0x86,
	0x81, 0xe8, 0x00, 0x49, 0x0d, 0x52, 0x63, 0x5b, 0x98, 0xcc, 0x26, 0x3a, 0x85, 0xc2, 0x23, 0x26,
	0xb5, 0x02, 0xdf, 0xcc, 0x2a, 0xd0, 0x09, 0xa6, 0x7d, 0x64, 0x24, 0x12, 0xb2, 0xf7, 0x08, 0x2d,
	0x4e, 0xe0, 0xed, 0x0c, 0xee, 0xc7, 0x53, 0x94, 0x12, 0x6c, 0x19, 0x1e, 0x76, 0x51, 0x5b, 0xe5,
	0x62, 0xe1, 0xd3, 0x85, 0x91, 0xd3, 0x79, 0xe7, 0xa5, 0xe2, 0xd0, 0x57, 0xf1, 0xf2, 0x57, 0xd8,
	0x05, 0x6a, 0x0b, 0x09, 0x23, 0x4e, 0x53, 0x9f, 0x22, 0x30, 0xce, 0xd4, 0x1e, 0x63, 0x0f, 0x11,
	0x31, 0x0d, 0x12, 0xbf, 0x0f, 0xfd, 0x71, 0x2c, 0xcb, 0xd9, 0x8c, 0xa9, 0x13, 0x8f, 0x85, 0x64,
	0x7a, 0x0e, 0x23, 0x8a, 0x11, 0x14, 0xd3, 0x78, 0x36, 0x14, 0x32, 0xf3, 0xf9, 0xda, 0xa3, 0xec,
	0x2a, 0xe2, 0x56, 0x3c, 0x0c, 0xc6, 0xaa, 0x48, 0x90, 0x28, 0x79, 0x54, 0x7b, 0xa1, 0xf6, 0x30,
	0xbb, 0x8c, 0x39, 0x9a, 0x62, 0x7a, 0x02, 0x1d, 0x23, 0xef, 0x95, 0x00, 0x0c, 0x47, 0xfc, 0x52,
	0xd6, 0x58, 0x25, 0xef, 0x3e, 0x09, 0x3c, 0xee, 0x62, 0x14, 0xdb, 0xd5, 0x8b, 0x53, 0x1f, 0x15,
	0xd2, 0x95, 0xac, 0x72, 0xed, 0x71, 0x7c, 0x27, 0x18, 0xfb, 0x74, 0x7f, 0x94, 0x5f, 0xcd, 0x8a,
	0x56, 0x77, 0x58, 0xa4, 0xa9, 0xe2, 0xe3, 0xfb, 0x9c, 0xfc, 0xa1, 0xac, 0xbb, 0x4b, 0x27, 0xb0,
	0x0f, 0xd7, 0x3f, 0xbb, 0xc0, 0x36, 0x94, 0xca, 0x53, 0x3a, 0xca, 0x8c, 0x46, 0xe1, 0xfd, 0x70,
	0x34, 0x43, 0x43, 0x09, 0xcf, 0xb3, 0xc7, 0x30, 0x39, 0x57, 0x58, 0x15, 0x0c, 0x6e, 0x52, 0x15,
	0x74, 0xb2, 0x0b, 0xde, 0x12, 0xee, 0x58, 0xb8, 0xe3, 0x60, 0xb6, 0x7f, 0x00, 0x2a, 0x09, 0xcf,
	0xae, 0x1b, 0xb3, 0xbb, 0x77, 0xfd, 0xa7, 0xf8, 0x6a, 0xf6, 0xff, 0x35, 0x7a, 0x7c, 0xd6, 0x9d,
	0x04, 0xcf, 0x46, 0x18, 0xcc, 0xc3, 0x28, 0xf9, 0x6c, 0x80, 0x4b, 0x00, 0x5f, 0x47, 0x5d, 0x48,
	0x4c, 0x67, 0x13, 0x12, 0x2e, 0x57, 0xdc, 0x17, 0x60, 0xe2, 0x83, 0x83, 0xcd, 0x37, 0x51, 0xdc,
	0xc2, 0xf4, 0x68, 0x2f, 0x48, 0x34, 0x0c, 0x8f, 0xd9, 0x82, 0xaa, 0x35, 0x93, 0x78, 0xc2, 0x39,
	0xce, 0xe7, 0x07, 0x43, 0x9c, 0x7e, 0xfc, 0x74, 0xfd, 0xbd, 0x0b, 0x6c, 0x53, 0xb5, 0x09, 0x9b,
	0x8f, 0x0f, 0x82, 0x82, 0xf1, 0x97, 0x86, 0x43, 0x41, 0x1d, 0x82, 0x93, 0x51, 0x73, 0xfd, 0x7e,
	0x22, 0x26, 0x41, 0x22, 0x41, 0xbc, 0x00, 0x86, 0x60, 0x3c, 0x14, 0xd3, 0x69, 0x18, 0xed, 0x13,
	0x5e, 0x91, 0x0c, 0x1c, 0xf1, 0xac, 0x48, 0x46, 0x84, 0xe1, 0x7d, 0x1a, 0xcd, 0xf5, 0xdd, 0x34,
	0xa6, 0x37, 0x50, 0x53, 0x9a, 0xa8, 0x9a, 0xeb, 0xdf, 0x0c, 0xe3, 0x88, 0x32, 0x2d, 0x49, 0xc4,
	0x8c, 0xc2, 0x94, 0x90, 0x21, 0x1d, 0x5d, 0x83, 0xda, 0x24, 0x60, 0xb9, 0xde, 0x80, 0xa6, 0xc2,
	0x30, 0xe7, 0xa6, 0xaa, 0x0b, 0xce, 0xb2, 0x32, 0x55, 0xc1, 0xaa, 0x73, 0xbd, 0x82, 0x0a, 0xc6,
	0x95, 0x02, 0x20, 0xa5, 0x7b, 0xab, 0xf5, 0x23, 0xb6, 0x5d, 0x5a, 0x7b, 0xf6, 0xd1, 0x2e, 0xef,
	0xee, 0xb9, 0xfe, 0x20, 0x02, 0xc1, 0x51, 0x8d, 0x3e, 0xcb, 0x38, 0x80, 0xa5, 0x56, 0x57, 0x72,
	0x14, 0x75, 0x92, 0x6a, 0x5f, 0x8d, 0x6d, 0x01, 0xda, 0x0a, 0xf7, 0x0f, 0x24, 0x46, 0x6f, 0xb4,
	0xee, 0xb9, 0xfe, 0x5e, 0xa0, 0xda, 0xb3, 0x54, 0xbf, 0x9f, 0x8d, 0x4b, 0x56, 0xae, 0x3e, 0x57,
	0x2e, 0xe8, 0x8f, 0x32, 0x2f, 0x2c, 0x55, 0x9f, 0x2f, 0x15, 0xe4, 0xf4, 0x18, 0xfa, 0xa4, 0x54,
	0x81, 0x7b, 0xae, 0x6f, 0x44, 0x23, 0x55, 0xee, 0x2d, 0x76, 0x36, 0x6f, 0x32, 0x86, 0x01, 0x38,
	0xc0, 0x1d, 0x7b, 0x7c, 0x32, 0x89, 0xc3, 0x28, 0xa5, 0xd8, 0x00, 0x14, 0x61, 0x8c, 0x49, 0xc0,
	0x90, 0x0c, 0x0c, 0x20, 0xa8, 0xd2, 0xd5, 0x09, 0x34, 0x11, 0x40, 0x9f, 0x63, 0x58, 0x06, 0x89,
	0x07, 0x5f, 0xaa, 0x7f, 0xa0, 0xc2, 0x36, 0x24, 0x6b, 0x64, 0x81, 0x31, 0x1b, 0xf0, 0xcf, 0x53,
	0xb8, 0x66, 0xd3, 0xff, 0xd7, 0xf8, 0x6b, 0xdf, 0xf5, 0xb5, 0x7a, 0x96, 0xbc, 0xce, 0x5f, 0x57,
	0x4c, 0xde, 0xe0, 0xaf, 0x2f, 0x26, 0x9f, 0xe6, 0x6f, 0x28, 0x26, 0x5f, 0xc9, 0xbf, 0xbb, 0x98,
	0xfc, 0x16, 0xfe, 0x3d, 0xc5, 0xe4, 0xab, 0xf8, 0x1b, 0x8b, 0xc9, 0x57, 0xf3, 0x37, 0x41, 0x72,
	0x8b, 0xad, 0x50, 0x1d, 0x9e, 0xe4, 0x6f, 0x2e, 0xa5, 0x9f, 0xe2, 0x6f, 0x29, 0xa5, 0xaf, 0xf1,
	0xb7, 0x96, 0xd2, 0xd7, 0xf9, 0x73, 0xa5, 0xf4, 0x0d, 0xfe, 0xb6, 0x52, 0xfa, 0x69, 0xfe, 0xf6,
	0x52, 0xfa, 0x95, 0xfc, 0xf9, 0x52, 0xfa, 0x5b, 0xf8, 0x3b, 0x4a, 0xe9, 0x57, 0xf1, 0x17, 0x4a,
	0xe9, 0x57, 0xf3, 0x17, 0xdf, 0xf5, 0xb5, 0x7a, 0x3d, 0x65, 0xa7, 0xb5, 0xe1, 0x10, 0x34, 0x68,
	0x23, 0x8c, 0x46, 0xd2, 0xb8, 0xe7, 0x6c, 0x23, 0x4f, 0xe1, 0x12, 0x78, 0x91, 0x9d, 0xcd, 0x11,
	0xb4, 0x4c, 0xc8, 0xe5, 0xa8, 0x80, 0x29, 0x99, 0x53, 0xe0, 0x3f, 0x31, 0x22, 0x52, 0xb5, 0xfc,
	0x11, 0x58, 0x3b, 0x43, 0xe5, 0xa7, 0xbc, 0x6e, 0x81, 0x9d, 0x2f, 0x14, 0xfb, 0xcc, 0x4c, 0x24,
	0x47, 0xb2, 0xec, 0x0b, 0xec, 0x4c, 0x21, 0xd9, 0x8b, 0xd3, 0x46, 0x3c, 0x8b, 0x46, 0x34, 0x07,
	0x0a, 0x04, 0x42, 0x17, 0x6a, 0x57, 0xd9, 0xc5, 0x02, 0xaa, 0xbc, 0x22, 0x55, 0xb9, 0x32, 0x15,
	0xbf, 0xd9, 0x0b, 0xd3, 0x03, 0x57, 0x8c, 0xef, 0xf2, 0x6a, 0x5d, 0xb0, 0x33, 0xb2, 0x12, 0xee,
	0xb3, 0x61, 0x8a, 0x77, 0x54, 0xa0, 0x06, 0xe0, 0xba, 0x16, 0xd2, 0xd2, 0xf4, 0x22, 0xcf, 0xbf,
	0x80, 0x4b, 0x0f, 0x8e, 0x2f, 0xe0, 0x46, 0x7b, 0x81, 0x70, 0xac, 0x12, 0xf5, 0x3f, 0x5e, 0x60,
	0x5b, 0x60, 0x8d, 0x50, 0xdc, 0x91, 0xf2, 0x21, 0xbb, 0xae, 0xe7, 0x37, 0xc5, 0xdd, 0x60, 0x36,
	0x4e, 0xf9, 0x29, 0x10, 0x55, 0x00, 0xda, 0x5d, 0xba, 0x0d, 0x08, 0xff, 0x9b, 0x0d, 0x97, 0xec,
	0x3d, 0x48, 0x48, 0x63, 0xa1, 0xaa, 0x5e, 0x63, 0xc6, 0x58, 0xa5, 0x45, 0xf5, 0x1a, 0x33, 0x4c,
	0x93, 0x3e, 0x58, 0x09, 0x4b, 0xea, 0x35, 0x67, 0x3b, 0x3d, 0x10, 0x09, 0x5f, 0x86, 0xb6, 0x74,
	0x0b, 0x7b, 0x64, 0x32, 0x44, 0x11, 0x0f, 0x5a, 0x72, 0xb6, 0x4d, 0x71, 0x3f, 0x4e, 0x45, 0x33,
	0x38, 0x72, 0x82, 0xe8, 0x9e, 0x7c, 0x50, 0xc7, 0xf5, 0x7c, 0x94, 0x93, 0x5e, 0x7c, 0x17, 0x56,
	0x8b, 0x35, 0xe8, 0xca, 0xe3, 0x5f, 0xec, 0x09, 0x71, 0x0f, 0x3f, 0x41, 0x07, 0x26, 0xa7, 0x7a,
	0x62, 0x78, 0x60, 0xdd, 0xe7, 0xeb, 0xf5, 0x9f, 0xaa, 0xb0, 0xd3, 0xad, 0x30, 0x99, 0xa6, 0xde,
	0x2c, 0x8d, 0x93, 0x30, 0xc8, 0x1e, 0x0c, 0x6a, 0x79, 0x9e, 0xaf, 0x39, 0x5d, 0x7a, 0x4a, 0x19,
	0x75, 0x3a, 0x20, 0x72, 0x67, 0x04, 0x37, 0x8e, 0x85, 0x02, 0x07, 0x2e, 0x6e, 0xea, 0xe2, 0xd1,
	0xe7, 0x5d, 0x05, 0x42, 0x16, 0xb5, 0xcb, 0xb1, 0x0f, 0xba, 0x07, 0xc0, 0xf2, 0xe6, 0xc7, 0x01,
	0xb4, 0x11, 0x60, 0x6f, 0xe0, 0xd9, 0x8e, 0xa9, 0x59, 0xf8, 0xda, 0x97, 0x65, 0xe0, 0x31, 0x6b,
	0xa8, 0x88, 0xae, 0xb1, 0x6b, 0xf4, 0xd4, 0x1d, 0x78, 0xcb, 0x32, 0x7a, 0x6d, 0x83, 0xbf, 0x46,
	0x95, 0x52, 0x3c, 0xc7, 0xbe, 0x07, 0x3d, 0x8f, 0xec, 0x0c, 0xbd, 0xc3, 0xc7, 0x78, 0x3f, 0xcd,
	0xcb, 0xde, 0x80, 0x3b, 0x84, 0x11, 0x85, 0x34, 0x3e, 0x21, 0xa3, 0xf5, 0x79, 0x84, 0xd7, 0xa5,
	0xf3, 0x36, 0x35, 0xec, 0x5b, 0x3c, 0x86, 0xd1, 0x00, 0x6c, 0xcf, 0xb0, 0x74, 0xbb, 0x6b, 0xa8,
	0x5d, 0xe4, 0x49, 0xfd, 0x43, 0x15, 0x76, 0x5e, 0x3f, 0x08, 0xc6, 0x63, 0x11, 0xed, 0x8b, 0xb9,
	0x9d, 0x4a, 0xbc, 0x4e, 0x1e, 0x4f, 0x53, 0x7c, 0x49, 0xe6, 0x54, 0x11, 0xc1, 0x38, 0xb5, 0x8a,
	0xba, 0xe7, 0x7d, 0xdc, 0xfa, 0x06, 0x93, 0x43, 0xcf, 0xbc, 0x3f, 0xb0, 0x8a, 0x92, 0xa1, 0x20,
	0xb7, 0x57, 0x47, 0xb3, 0x79, 0x28, 0xc2, 0xfb, 0x02, 0xd7, 0x71, 0xdc, 0x43, 0x07, 0xb0, 0xb8,
	0x3b, 0x4e, 0x5b, 0x94, 0x80, 0xda, 0xd1, 0x38, 0x14, 0x99, 0x90, 0xad, 0xe4, 0x9c, 0x0f, 0x0f,
	0xf1, 0xa6, 0x19, 0x95, 0x98, 0x5d, 0x38, 0x57, 0x2e, 0x3b, 0xdd, 0x9f, 0x5c, 0x53, 0xb0, 0x8a,
	0xb6, 0x23, 0x98, 0xa9, 0x7a, 0x80, 0x1b, 0xa8, 0xa2, 0x7b, 0xd7, 0x15, 0x58, 0x74, 0xd3, 0x36,
	0xb2, 0xab, 0xee, 0xb3, 0xc9, 0x64, 0x7c, 0x44, 0xcf, 0xd9, 0x63, 0x9a, 0xec, 0xb3, 0xad, 0xfa,
	0x2d, 0x34, 0xe2, 0xa9, 0xfb, 0x0a, 0xfb, 0xfa, 0x78, 0x4d, 0x17, 0x96, 0x34, 0xf2, 0xea, 0xd0,
	0x71, 0x03, 0x80, 0x92, 0x38, 0xb7, 0x20, 0x99, 0xed, 0x13, 0xe0, 0x4d, 0x5f, 0xd7, 0x6f, 0x8b,
	0x54, 0xce, 0x93, 0xc5, 0xfa, 0xab, 0xd9, 0x9a, 0x9e, 0x99, 0x23, 0x68, 0x5c, 0xe7, 0x0b, 0x3c,
	0x25, 0xa5, 0x7d, 0xbe, 0x40, 0x46, 0xa2, 0xaf, 0x07, 0x93, 0x74, 0x96, 0x08, 0x5e, 0xa9, 0x7f,
	0xd7, 0x02, 0xe3, 0x6a, 0xde, 0x35, 0x83, 0x34, 0x50, 0x66, 0x9a, 0xd6, 0x54, 0x0e, 0x11, 0xf9,
	0x23, 0x90, 0x1e, 0x4c, 0x46, 0x90, 0x5e, 0x50, 0xe9, 0xa6, 0x48, 0x83, 0x70, 0x2c, 0x2f, 0x89,
	0x37, 0x3d, 0x5f, 0x5e, 0xd2, 0x96, 0x54, 0x77, 0x08, 0x56, 0x36, 0x2d, 0xeb, 0x90, 0x6e, 0x88,
	0xfd, 0x30, 0x02, 0xeb, 0x85, 0x2f, 0xa9, 0x0f, 0x6e, 0xc6, 0x61, 0xc4, 0x97, 0xeb, 0x7f, 0x3d,
	0xb7, 0xa8, 0x5a, 0xe3, 0x60, 0x1f, 0x8d, 0x14, 0xad, 0xe5, 0x3b, 0xe2, 0x6e, 0x22, 0x94, 0x30,
	0x69, 0x2d, 0xbf, 0x91, 0xc4, 0xc1, 0x68, 0x18, 0x4c, 0x53, 0xda, 0x03, 0xd2, 0x5a, 0xbe, 0x1d,
	0x09, 0x2f, 0x9e, 0x58, 0x60, 0xc2, 0xe3, 0x4d, 0x70, 0xad, 0x45, 0x36, 0x6e, 0x2f, 0x96, 0x5d,
	0xb3, 0x5a, 0xff, 0xf5, 0x05, 0x58, 0x3a, 0x88, 0x39, 0x2a, 0x77, 0x75, 0xcf, 0x5a, 0xb3, 0xc0,
	0x0a, 0x8a, 0x54, 0xf3, 0xac, 0xcc, 0x26, 0x5a, 0x50, 0x54, 0x5c, 0xcc, 0x2b, 0x78, 0x19, 0xd1,
	0xf2, 0x7c, 0xb4, 0x2e, 0x65, 0xeb, 0xac, 0x4c, 0xd5, 0x2d, 0xaa, 0xcc, 0x68, 0x2b, 0x92, 0x45,
	0x66, 0x81, 0x3f, 0x28, 0xed, 0x45, 0xf4, 0x9b, 0x00, 0xc1, 0xed, 0x9e, 0x60, 0xaa, 0x34, 0x11,
	0x98, 0x82, 0x19, 0x97, 0x0c, 0xc7, 0xb3, 0x01, 0xe4, 0x16, 0x84, 0x63, 0x32, 0x4d, 0x37, 0xea,
	0x9d, 0x7c, 0x80, 0xc0, 0xe8, 0xc9, 0xea, 0x6f, 0x7b, 0xbe, 0x36, 0x4b, 0x63, 0xda, 0x6e, 0x84,
	0x54, 0x93, 0x06, 0x87, 0xb1, 0x65, 0x48, 0xb5, 0xe5, 0xa3, 0x66, 0xf0, 0x3f, 0x98, 0x91, 0xbc,
	0x5a, 0xff, 0xb3, 0x6a, 0xce, 0x0a, 0x98, 0xab, 0x0d, 0x64, 0xcd, 0xf3, 0xc0, 0x24, 0x1a, 0xcd,
	0x86, 0x29, 0x45, 0x37, 0x4b, 0x03, 0x36, 0x87, 0xf1, 0x76, 0x45, 0x85, 0x9e, 0xb9, 0xcf, 0x40,
	0xba, 0x5e, 0x51, 0x3d, 0x86, 0xd2, 0x3d, 0x5a, 0xdc, 0x5a, 0x2d, 0xa0, 0xfd, 0x30, 0xbd, 0x1b,
	0x8c, 0xc7, 0x14, 0xe1, 0x08, 0x38, 0xb5, 0x1c, 0x23, 0xf4, 0x97, 0xcb, 0x18, 0xe8, 0x65, 0x7a,
	0x28, 0x02, 0xb0, 0x2c, 0xf8, 0x75, 0x15, 0x2f, 0x3f, 0x79, 0xf9, 0xbc, 0x25, 0x93, 0x55, 0xd0,
	0x65, 0x7c, 0x20, 0x14, 0xa7, 0x28, 0x53, 0xb5, 0x92, 0x7a, 0xa5, 0x2b, 0xd2, 0x60, 0x4c, 0xae,
	0x66, 0x01, 0x6d, 0x07, 0x53, 0x3a, 0x5b, 0x28, 0x60, 0x7a, 0x7c, 0x4f, 0xf0, 0x4d, 0x55, 0x7d,
	0x05, 0x26, 0x47, 0x53, 0x60, 0x80, 0x87, 0xe7, 0x05, 0xbc, 0x29, 0x66, 0xa9, 0x48, 0xc2, 0xd9,
	0x21, 0xdf, 0x56, 0x6c, 0x8a, 0x3a, 0x81, 0xd3, 0xcb, 0xfe, 0x99, 0x4e, 0x38, 0x8d, 0xf6, 0xb9,
	0x07, 0x4a, 0x90, 0xa4, 0xb6, 0xa6, 0xaa, 0x59, 0xd2, 0x68, 0x67, 0x54, 0xe9, 0x83, 0xa9, 0x80,
	0x25, 0xd4, 0x78, 0x30, 0x41, 0x1d, 0x7a, 0x56, 0x75, 0x8a, 0x3e, 0x4b, 0x48, 0x23, 0x9e, 0x53,
	0xc3, 0x47, 0xf3, 0x5b, 0xb5, 0xfe, 0xfc, 0xb1, 0x1e, 0x05, 0xa6, 0x17, 0xea, 0xaf, 0x5d, 0x60,
	0x5c, 0x1a, 0xf5, 0xc6, 0x7d, 0xf5, 0x2e, 0xc8, 0x36, 0x5b, 0xb7, 0x0d, 0x2f, 0xdb, 0x9c, 0xc6,
	0xb9, 0x86, 0xc0, 0x2c, 0x89, 0x12, 0xf2, 0x07, 0x14, 0xa2, 0x76, 0x9f, 0x71, 0xc4, 0x01, 0x29,
	0x85, 0xe9, 0xe2, 0x2e, 0x36, 0xa0, 0xe4, 0x9c, 0xd3, 0x36, 0x02, 0xa4, 0xd1, 0xa1, 0x95, 0x9e,
	0xe4, 0x72, 0xfd, 0x5b, 0xd9, 0xb6, 0x9c, 0xd7, 0xb0, 0x82, 0xa8, 0xc5, 0xc3, 0xd1, 0x0b, 0x27,
	0x64, 0xf4, 0x36, 0x91, 0xee, 0xf9, 0xc7, 0x5e, 0x4c, 0xa8, 0xd4, 0x9f, 0x62, 0x5c, 0xc6, 0x63,
	0x0f, 0xc3, 0x60, 0x8c, 0xd3, 0x19, 0x4a, 0x1d, 0xb8, 0x56, 0x49, 0xdf, 0x41, 0xba, 0x9f, 0xc4,
	0x77, 0x04, 0x5f, 0xa8, 0xff, 0xee, 0x02, 0xdb, 0x6c, 0xc4, 0x71, 0x94, 0xcf, 0x7d, 0x30, 0x1b,
	0x2d, 0x3c, 0x7e, 0xc3, 0x45, 0x9f, 0x7c, 0x20, 0x89, 0xb8, 0x62, 0x18, 0x47, 0x23, 0x92, 0x74,
	0x80, 0xc0, 0xbf, 0x6e, 0xce, 0x12, 0x0a, 0x8d, 0xae, 0xaa, 0x8c, 0x38, 0x3b, 0x81, 0x29, 0x3d,
	0xb2, 0x00, 0x50, 0x6b, 0x16, 0xc9, 0x0d, 0xac, 0x2d, 0xc6, 0x00, 0x70, 0xc3, 0xfd, 0xc8, 0x8c,
	0xe8, 0x01, 0x14, 0x48, 0xc3, 0xe2, 0x14, 0x09, 0xda, 0x31, 0x69, 0xe0, 0xcc, 0xbf, 0x2f, 0xc6,
	0x83, 0x09, 0x5f, 0x85, 0xc6, 0x02, 0xa0, 0x9a, 0x2f, 0xf5, 0x3e, 0xab, 0x5d, 0x66, 0xe7, 0x01,
	0xd7, 0x67, 0x87, 0xb3, 0x71, 0x90, 0x86, 0xf7, 0x71, 0x69, 0xbb, 0x03, 0x5a, 0x7c, 0x5d, 0x55,
	0x2f, 0xfb, 0xc6, 0x88, 0x46, 0x7c, 0x54, 0x7f, 0x8c, 0x6d, 0x40, 0xad, 0xa0, 0x2e, 0x6a, 0x57,
	0xac, 0xd1, 0xa2, 0xcd, 0x56, 0xb9, 0x2b, 0x56, 0x7f, 0x15, 0xf5, 0x06, 0xe9, 0x17, 0xa9, 0x49,
	0x1a, 0xa0, 0xba, 0x13, 0x21, 0xe8, 0x98, 0x16, 0x52, 0x8d, 0xd9, 0x11, 0xa9, 0x41, 0x4a, 0x80,
	0x1a, 0xac, 0xbf, 0xb0, 0x84, 0xcf, 0x55, 0x4c, 0x52, 0xd2, 0x63, 0xd9, 0xb2, 0x5f, 0x98, 0x91,
	0x64, 0xfe, 0x02, 0x82, 0xae, 0x98, 0x92, 0x46, 0x7a, 0x45, 0x06, 0x84, 0x34, 0x4c, 0xa6, 0x07,
	0xe1, 0x44, 0xad, 0x61, 0x64, 0x1f, 0x52, 0xcd, 0x16, 0xe9, 0xb1, 0x0b, 0xcf, 0xc7, 0xd9, 0x8f,
	0x5a, 0x02, 0x53, 0x49, 0x10, 0xa2, 0x0f, 0x3f, 0x25, 0x2d, 0x01, 0xd8, 0x20, 0xb2, 0xe2, 0xe1,
	0x3d, 0x2b, 0x88, 0x46, 0xf2, 0x39, 0x19, 0x98, 0x5f, 0x22, 0x1a, 0xa1, 0x94, 0xaf, 0xaa, 0x5c,
	0x85, 0xd0, 0xf7, 0x35, 0x85, 0xc1, 0x72, 0x23, 0xf5, 0x36, 0xcb, 0xf3, 0x8d, 0x27, 0x12, 0x5b,
	0x57, 0xb5, 0x6f, 0xc6, 0x51, 0x90, 0x0a, 0x89, 0x6e, 0xa8, 0xca, 0xca, 0x6d, 0xef, 0xf8, 0x01,
	0xdf, 0x44, 0x5b, 0x61, 0x6e, 0xd6, 0x6d, 0xa1, 0x59, 0xe0, 0xd1, 0x99, 0xa5, 0x23, 0x86, 0xc9,
	0x2c, 0x4c, 0xf9, 0xb6, 0xaa, 0xa2, 0x7a, 0x47, 0x8a, 0x8e, 0x73, 0xb2, 0x6c, 0x5a, 0x6f, 0x87,
	0x9f, 0x56, 0x05, 0x53, 0xf4, 0xa4, 0x41, 0x71, 0x28, 0xb5, 0xac, 0x97, 0xe0, 0x4b, 0x7c, 0xdf,
	0x17, 0x15, 0x83, 0xee, 0x15, 0x76, 0x97, 0xa9, 0xf7, 0xce, 0xaa, 0xd6, 0xd0, 0x26, 0x61, 0x2f,
	0x38, 0x14, 0xa4, 0x1a, 0x90, 0xe9, 0x6c, 0x7a, 0x70, 0x18, 0x4c, 0xe4, 0x8a, 0x78, 0x5e, 0x0d,
	0x06, 0x70, 0xed, 0xcd, 0x0e, 0xf9, 0x05, 0xf5, 0xad, 0x23, 0xa6, 0x6a, 0xb3, 0xed, 0x62, 0xd6,
	0xd7, 0x53, 0xe1, 0x88, 0x29, 0x2a, 0x9f, 0x4b, 0xaa, 0x92, 0xd4, 0xe8, 0xfe, 0x38, 0x38, 0x12,
	0x89, 0xdc, 0x4c, 0x92, 0xca, 0xd7, 0x3d, 0x0c, 0x72, 0x0d, 0x7c, 0x45, 0x95, 0xef, 0x88, 0xa9,
	0x5c, 0x04, 0x68, 0x2f, 0x49, 0x36, 0xc1, 0x11, 0x53, 0x25, 0x37, 0x50, 0x8d, 0x87, 0x70, 0xb7,
	0xed, 0x04, 0x46, 0x40, 0x7c, 0x58, 0xf1, 0xca, 0xf5, 0x19, 0xc0, 0x8f, 0xd4, 0xff, 0x0a, 0xe3,
	0x46, 0x90, 0x8c, 0x8f, 0xf6, 0x02, 0x3c, 0x4a, 0xcb, 0x7e, 0x60, 0x66, 0xcf, 0x53, 0x0f, 0xdf,
	0xad, 0xb3, 0x15, 0x48, 0x39, 0x46, 0x93, 0x2f, 0x60, 0xfc, 0xc9, 0x5e, 0x16, 0x7f, 0x52, 0xdf,
	0x61, 0x5b, 0x20, 0x26, 0x8d, 0x24, 0x88, 0x86, 0x07, 0xca, 0xf0, 0xe9, 0x34, 0x3c, 0x15, 0x33,
	0x8d, 0xd1, 0x15, 0x1d, 0xf5, 0xb4, 0xab, 0x6e, 0xd0, 0xe2, 0x0a, 0x40, 0xa7, 0x2f, 0xdf, 0x24,
	0x69, 0xa0, 0x87, 0x70, 0x9b, 0x57, 0xeb, 0xff, 0xba, 0x0a, 0x5e, 0xc4, 0xfe, 0x41, 0x0a, 0xf3,
	0x45, 0x93, 0x2f, 0x8e, 0x00, 0x83, 0x5e, 0x7c, 0x18, 0x8c, 0xe5, 0x9d, 0x68, 0x5c, 0x57, 0x8d,
	0x48, 0x1c, 0x1e, 0x75, 0x9a, 0xe2, 0xae, 0x04, 0x71, 0x03, 0x88, 0xc0, 0xce, 0x44, 0x62, 0x38,
	0x45, 0xc0, 0x01, 0xb4, 0x32, 0x08, 0x0d, 0x29, 0x47, 0x0c, 0xe3, 0xfb, 0x22, 0x39, 0xd2, 0x67,
	0x49, 0x67, 0x42, 0x7b, 0xd2, 0x74, 0x7f, 0xa4, 0x33, 0x71, 0xd0, 0xd7, 0xc4, 0x13, 0x58, 0x82,
	0x9a, 0xe2, 0x2e, 0x5d, 0x14, 0xa0, 0xa4, 0x96, 0xa6, 0xf4, 0x5e, 0x95, 0xba, 0x12, 0x86, 0xb5,
	0x05, 0x74, 0x6d, 0x0e, 0x85, 0x4f, 0xf1, 0x02, 0x48, 0x33, 0xfc, 0x8e, 0xef, 0x38, 0xe2, 0xeb,
	0x28, 0x34, 0x63, 0x11, 0x24, 0x4d, 0x71, 0x87, 0x6e, 0x80, 0x80, 0x59, 0x09, 0x00, 0x26, 0xf1,
	0xbd, 0x51, 0xc5, 0x80, 0xae, 0x7b, 0xe3, 0x5b, 0x25, 0xb2, 0x1e, 0x08, 0x6c, 0xcb, 0x57, 0x1a,
	0xf4, 0x38, 0xba, 0x2f, 0x92, 0x69, 0x88, 0xd7, 0x3f, 0xd6, 0xd9, 0x8a, 0x96, 0xa6, 0x8e, 0x08,
	0x12, 0x7e, 0x1a, 0xaf, 0x34, 0xec, 0x47, 0x71, 0x82, 0x15, 0xc7, 0x5f, 0x6f, 0x32, 0x22, 0x01,
	0xe3, 0x7c, 0x06, 0x3e, 0x05, 0x2d, 0x10, 0xcd, 0x0e, 0x65, 0x67, 0xe0, 0x52, 0xe8, 0xce, 0x0e,
	0x0f, 0xe3, 0xc8, 0x4b, 0xe2, 0x78, 0x32, 0xe5, 0xe7, 0xe0, 0xfb, 0x5e, 0x96, 0x01, 0x8f, 0x66,
	0xe8, 0x7f, 0x3a, 0xd9, 0xe2, 0x17, 0x30, 0x52, 0xea, 0x41, 0x9a, 0x04, 0x32, 0x0b, 0xee, 0x98,
	0xf6, 0x66, 0x87, 0x7a, 0x7c, 0x38, 0x09, 0x12, 0xc1, 0x2f, 0x01, 0x87, 0x66, 0x9c, 0x8e, 0x88,
	0x7c, 0x19, 0x38, 0x74, 0xe2, 0xd4, 0x03, 0x2b, 0x18, 0x6f, 0xef, 0x5d, 0xa9, 0xeb, 0x6c, 0x33,
	0x1b, 0x63, 0x14, 0x98, 0x55, 0xb6, 0xd8, 0x8e, 0x63, 0xf0, 0xbb, 0x57, 0x58, 0xb5, 0x11, 0xc0,
	0xd2, 0x01, 0xbd, 0x86, 0x2d, 0xae, 0xe2, 0xa6, 0x66, 0x9c, 0xca, 0x08, 0x17, 0x5a, 0xb4, 0x30,
	0x94, 0x69, 0xd3, 0xbd, 0x07, 0xb6, 0x8a, 0xba, 0x4d, 0x42, 0xa1, 0x69, 0x18, 0x5c, 0x61, 0xf8,
	0x2d, 0xb3, 0xdd, 0xf1, 0xc8, 0x28, 0xcd, 0x43, 0xc2, 0xc8, 0x50, 0xdf, 0xc0, 0xcf, 0x54, 0xd8,
	0x4b, 0x39, 0x76, 0x4d, 0x7d, 0x56, 0x46, 0xe9, 0x5e, 0x40, 0xf5, 0x58, 0x74, 0x5a, 0xdb, 0xb2,
	0x1b, 0xf8, 0x54, 0x5a, 0x39, 0x26, 0x0e, 0xef, 0xaa, 0x2c, 0x1d, 0x8b, 0x45, 0xd3, 0x5a, 0x9e,
	0xe1, 0x10, 0xf3, 0xe5, 0x7a, 0x8f, 0x6d, 0x61, 0x15, 0xf2, 0xc5, 0x14, 0x1a, 0x66, 0xe1, 0xab,
	0x44, 0xb2, 0xca, 0x56, 0x36, 0x7b, 0x16, 0x54, 0x5a, 0x7a, 0x9f, 0xb4, 0xb1, 0x68, 0xc1, 0x5c,
	0x6c, 0x0f, 0x2c, 0xcd, 0xe1, 0xd5, 0xfa, 0xdf, 0x61, 0x5b, 0xf9, 0xa6, 0x9d, 0x32, 0x47, 0x5a,
	0x50, 0xba, 0x63, 0xf4, 0x35, 0x47, 0x86, 0x8c, 0x01, 0x40, 0x8f, 0xc9, 0x62, 0xe4, 0x11, 0x24,
	0xb1, 0x08, 0x19, 0x1c, 0x52, 0x3d, 0x06, 0xe2, 0xdb, 0x8d, 0x8b, 0xc7, 0x40, 0x0c, 0xa6, 0xc3,
	0xb7, 0x7b, 0x00, 0xa4, 0xb7, 0x81, 0xfe, 0x06, 0xdb, 0xd2, 0xd2, 0x74, 0x78, 0xaf, 0x54, 0xba,
	0x56, 0x2a, 0x1d, 0x77, 0x61, 0xbd, 0xc2, 0x0b, 0xeb, 0x15, 0x05, 0xf5, 0x1d, 0x5b, 0x57, 0xb7,
	0x7b, 0x70, 0xff, 0xd6, 0xf3, 0x75, 0xcd, 0xf2, 0x9b, 0x5a, 0x57, 0x6b, 0x1b, 0x7c, 0xb1, 0xde,
	0x60, 0xab, 0x7a, 0x9c, 0x4c, 0xa6, 0xfd, 0x78, 0x8a, 0x4b, 0x5b, 0xdf, 0x6f, 0x39, 0x76, 0xcf,
	0x93, 0x0e, 0x59, 0xdf, 0xef, 0x9a, 0xcd, 0x26, 0x5e, 0x14, 0xa2, 0x64, 0x43, 0x1c, 0x84, 0xd1,
	0x88, 0x6e, 0x73, 0xe9, 0x7d, 0xdf, 0xdd, 0xb9, 0xcd, 0x17, 0xeb, 0xd7, 0x18, 0xd7, 0x83, 0x64,
	0xd4, 0x8f, 0xe3, 0xb1, 0x7b, 0x10, 0x4f, 0xb2, 0x5f, 0x05, 0xeb, 0x17, 0x37, 0x70, 0xf1, 0x7b,
	0xd7, 0xf3, 0x3b, 0xe1, 0xfe, 0x01, 0xaf, 0xd4, 0xbf, 0x39, 0xff, 0xc6, 0x0b, 0xee, 0x89, 0xec,
	0x55, 0xa9, 0xbe, 0x07, 0x36, 0x88, 0x50, 0x1f, 0xf4, 0x71, 0xa9, 0x8d, 0x78, 0xa5, 0xfe, 0x06,
	0xdc, 0xf7, 0x01, 0x73, 0x35, 0x33, 0xc8, 0x4e, 0xb3, 0x4d, 0x3c, 0xe7, 0x9a, 0x08, 0x31, 0x42,
	0xdd, 0x7f, 0x2a, 0x83, 0xc0, 0x36, 0xc1, 0x25, 0x1a, 0x95, 0x16, 0x40, 0xe4, 0x97, 0x22, 0x56,
	0x55, 0xd9, 0xb2, 0x65, 0x9b, 0x7e, 0x67, 0x0e, 0x20, 0x5a, 0x35, 0xf6, 0xc2, 0xf1, 0x48, 0xfe,
	0xf2, 0x96, 0x8e, 0x1b, 0x4b, 0x22, 0x48, 0x11, 0x5b, 0xae, 0x8f, 0x55, 0x50, 0x40, 0x66, 0x5d,
	0xe0, 0x89, 0xa5, 0x3c, 0x1d, 0xc5, 0x87, 0xc9, 0x6a, 0x6c, 0xcb, 0xa2, 0x45, 0x29, 0x91, 0xf6,
	0x64, 0xa5, 0x88, 0xd1, 0x85, 0x57, 0xf9, 0x4a, 0x98, 0xc4, 0xf4, 0x18, 0x7d, 0x43, 0xc9, 0x0a,
	0x90, 0xfe, 0x6e, 0x9f, 0x2f, 0xd5, 0x3d, 0x79, 0x63, 0x76, 0x90, 0xfd, 0x28, 0x59, 0x7f, 0x20,
	0x8d, 0x0f, 0xec, 0x21, 0x4c, 0x41, 0x2b, 0x68, 0x84, 0x20, 0x89, 0xab, 0x15, 0xed, 0x6d, 0x21,
	0x15, 0xcc, 0x0d, 0x7a, 0x1a, 0x6a, 0xe0, 0xf9, 0x5a, 0x74, 0xc4, 0x97, 0xea, 0xef, 0xae, 0xb0,
	0xad, 0xbc, 0x76, 0xd9, 0x63, 0xac, 0x1a, 0xe5, 0xce, 0x62, 0x03, 0x38, 0xdb, 0x00, 0x2c, 0x33,
	0x78, 0x71, 0x66, 0x00, 0xd2, 0x9c, 0x45, 0xfb, 0x02, 0x2d, 0x4d, 0x09, 0xa8, 0xc5, 0x14, 0x8f,
	0x41, 0x90, 0x0f, 0xd6, 0x09, 0x1d, 0x68, 0x4c, 0x42, 0x85, 0x97, 0x15, 0x91, 0x6a, 0xb8, 0xa2,
	0x92, 0x7a, 0x12, 0xdc, 0x4d, 0x29, 0x9a, 0x04, 0x79, 0x91, 0x4f, 0xb2, 0xa6, 0x8a, 0xef, 0xcf,
	0x92, 0xe1, 0x41, 0x30, 0x05, 0x5b, 0x08, 0xd4, 0xab, 0x56, 0xb4, 0x70, 0xd6, 0x55, 0x26, 0x90,
	0xa5, 0x66, 0x12, 0x3c, 0xcb, 0x37, 0x54, 0x4b, 0x0a, 0x8e, 0xdb, 0x26, 0x3e, 0xe1, 0x0a, 0xac,
	0xc6, 0xc1, 0x50, 0x9d, 0x43, 0xe1, 0x91, 0x1c, 0x36, 0xaf, 0x64, 0x1c, 0x6d, 0xd7, 0xc7, 0x6c,
	0x43, 0x8d, 0x88, 0x92, 0xb2, 0xc1, 0x31, 0x29, 0x83, 0x22, 0xb2, 0x33, 0x57, 0x3d, 0x0e, 0x23,
	0x7e, 0x1d, 0x2b, 0x02, 0xf2, 0x93, 0x1c, 0xd2, 0xc6, 0xdf, 0x0d, 0x95, 0xcb, 0x78, 0x30, 0x11,
	0x49, 0x28, 0xa2, 0xa1, 0xe0, 0x4f, 0x63, 0x7f, 0xe9, 0x9e, 0xdf, 0x16, 0x87, 0x38, 0xe2, 0xaf,
	0xac, 0x3f, 0xc9, 0xd6, 0x71, 0xb4, 0xef, 0x67, 0xd3, 0x66, 0xd0, 0xf7, 0xb2, 0x7d, 0x0f, 0x1a,
	0x83, 0x3e, 0x59, 0x1b, 0x28, 0xa8, 0x95, 0xfa, 0x9b, 0x2b, 0xf9, 0x4e, 0x81, 0x3b, 0x8c, 0x93,
	0xec, 0x77, 0xe7, 0x60, 0x6e, 0x53, 0xbf, 0xd3, 0x56, 0x81, 0xeb, 0xf9, 0x52, 0xd4, 0x2a, 0x74,
	0x02, 0x53, 0xb0, 0x80, 0xab, 0x0a, 0xc9, 0xfc, 0xd6, 0x45, 0xa5, 0x55, 0x54, 0x4f, 0x2c, 0x29,
	0x40, 0x55, 0x66, 0x45, 0x7d, 0x93, 0x55, 0x66, 0x55, 0xa9, 0x94, 0x82, 0xd8, 0xac, 0xa9, 0xcf,
	0xf2, 0xf7, 0xe6, 0xa4, 0x2a, 0xca, 0x3a, 0x5a, 0xfa, 0xb7, 0xae, 0xda, 0xa9, 0x19, 0x44, 0x61,
	0x44, 0x67, 0x5b, 0x80, 0x41, 0x1f, 0x23, 0xb2, 0xa5, 0x38, 0x61, 0xd7, 0x0f, 0xfa, 0x7c, 0x3b,
	0xaf, 0xd1, 0xf4, 0xe0, 0xa9, 0x27, 0x9f, 0xe4, 0xbc, 0xfe, 0x77, 0xd9, 0x46, 0x3b, 0x38, 0x14,
	0x45, 0x4b, 0xbf, 0x5d, 0x70, 0x53, 0x49, 0x23, 0xb4, 0x33, 0x8b, 0x4c, 0x9f, 0xc9, 0xb8, 0xa6,
	0x36, 0x19, 0xa1, 0x93, 0x54, 0x4d, 0x44, 0x00, 0xb4, 0x61, 0xda, 0x8f, 0xc3, 0x28, 0x25, 0xad,
	0x4c, 0xc8, 0x41, 0x28, 0xee, 0xd3, 0x9d, 0x78, 0x54, 0x07, 0xed, 0xb2, 0xb3, 0xba, 0x5c, 0xff,
	0x9d, 0x45, 0xb0, 0x7f, 0xee, 0x8b, 0xa8, 0xb8, 0x51, 0xe1, 0x7a, 0xc7, 0xb7, 0xed, 0xe8, 0x00,
	0x4b, 0xfa, 0x0d, 0x04, 0xd1, 0x3a, 0x53, 0x70, 0xb2, 0x17, 0x33, 0x20, 0x1b, 0x01, 0x5c, 0x25,
	0xf3, 0x19, 0x28, 0xf7, 0x11, 0x6b, 0x6c, 0xcb, 0x2d, 0x6f, 0x4d, 0xac, 0xa8, 0x52, 0xcb, 0x7b,
	0x8b, 0xab, 0xb4, 0x72, 0x96, 0x9d, 0xfd, 0x35, 0x95, 0x37, 0x9b, 0x46, 0x78, 0xa8, 0xca, 0xe6,
	0x60, 0xe4, 0xbc, 0xae, 0xea, 0x50, 0xf2, 0xfc, 0x37, 0x14, 0x2a, 0x2d, 0x66, 0xba, 0x4b, 0xbb,
	0xa9, 0x8a, 0xeb, 0xce, 0xc6, 0x61, 0xee, 0x6d, 0xa0, 0x85, 0x90, 0xed, 0x2d, 0xa0, 0xa3, 0x81,
	0x3d, 0x11, 0xdc, 0x13, 0x30, 0x6d, 0x69, 0xf7, 0x01, 0x10, 0x29, 0xad, 0x68, 0x61, 0xb9, 0xca,
	0xab, 0xa2, 0x47, 0x65, 0x5d, 0xaf, 0x20, 0x76, 0x67, 0x14, 0x92, 0xed, 0xe3, 0x9e, 0x55, 0xdd,
	0x8b, 0xa2, 0x82, 0xf1, 0x0d, 0xe7, 0x30, 0xa6, 0x0f, 0x1c, 0x88, 0x38, 0x01, 0x33, 0xeb, 0xd8,
	0xb0, 0x90, 0x43, 0x72, 0xa1, 0x38, 0x2c, 0x74, 0xf2, 0x7d, 0xf1, 0x78, 0x4e, 0x82, 0x2f, 0x29,
	0xb8, 0xac, 0x2e, 0x2e, 0xd3, 0xb5, 0x86, 0x0c, 0x9e, 0x8d, 0x53, 0x68, 0x39, 0xbf, 0x52, 0x1e,
	0x24, 0xec, 0xb4, 0xab, 0x8a, 0x45, 0xf9, 0x7d, 0xf6, 0x87, 0x54, 0x45, 0x51, 0x49, 0x3e, 0xac,
	0xfa, 0x10, 0x1b, 0x4f, 0x8b, 0x0a, 0x7f, 0xa4, 0xfe, 0x89, 0x45, 0xb6, 0x99, 0x6d, 0xb6, 0xe5,
	0x66, 0x95, 0xea, 0x33, 0x2d, 0x3a, 0x72, 0xc4, 0x54, 0x46, 0xcf, 0x65, 0x28, 0x9a, 0x72, 0x77,
	0x91, 0x52, 0x51, 0xf9, 0x91, 0xad, 0x16, 0x1d, 0x61, 0x47, 0x56, 0x55, 0x2d, 0x11, 0xf5, 0xe4,
	0x4a, 0x88, 0x86, 0x95, 0xc4, 0x24, 0x0b, 0x4f, 0xee, 0x6b, 0xcb, 0xc6, 0x0e, 0x26, 0x58, 0xaf,
	0xc6, 0x11, 0x8d, 0xd0, 0xb2, 0x2a, 0x76, 0x30, 0xa5, 0xc7, 0x97, 0x5a, 0x71, 0x42, 0x14, 0x79,
	0x07, 0xa5, 0x44, 0xc9, 0x74, 0xd0, 0xea, 0x09, 0xc4, 0x4c, 0x1d, 0xad, 0xa9, 0x0a, 0xc3, 0xa8,
	0x6b, 0xe3, 0xc9, 0x41, 0xe0, 0x1d, 0x4e, 0x69, 0xb7, 0x41, 0xa1, 0xdd, 0x60, 0x78, 0x10, 0x46,
	0x22, 0xdf, 0xed, 0x96, 0x15, 0xef, 0x84, 0xe9, 0x31, 0xd2, 0x86, 0x1a, 0x66, 0x3d, 0x8e, 0xa6,
	0xb3, 0x43, 0xe1, 0x59, 0xe4, 0x1b, 0xa3, 0x5c, 0x07, 0x89, 0x9c, 0x19, 0x8d, 0xd9, 0x11, 0xdf,
	0x52, 0x4c, 0xb2, 0x26, 0x66, 0xd5, 0xdd, 0x9e, 0x23, 0x65, 0x95, 0xcd, 0x24, 0x78, 0x30, 0x15,
	0x6d, 0x71, 0x48, 0xcf, 0x23, 0xe3, 0x74, 0x9c, 0x88, 0x28, 0x5f, 0xad, 0x6a, 0x0a, 0xce, 0x9d,
	0x79, 0x80, 0xcf, 0xa8, 0x51, 0x28, 0xf8, 0xf8, 0x67, 0x55, 0xd6, 0xb6, 0x48, 0x09, 0xc2, 0xc3,
	0xdb, 0x73, 0xaa, 0x0e, 0x85, 0xf6, 0xcb, 0x28, 0xa8, 0xf3, 0x4a, 0x70, 0x06, 0x53, 0xa1, 0x45,
	0x47, 0xf4, 0x08, 0xd6, 0x05, 0xd5, 0x8b, 0x68, 0xbe, 0x2a, 0x0b, 0xe5, 0x62, 0xdd, 0xa0, 0x47,
	0x3f, 0xf6, 0x82, 0xc4, 0x0b, 0x92, 0x7d, 0x91, 0x3d, 0xbd, 0xdb, 0xde, 0xf3, 0x68, 0x1f, 0x86,
	0x7c, 0x4a, 0x4c, 0x9a, 0xd1, 0x34, 0x1c, 0x09, 0x5a, 0x43, 0x10, 0xb0, 0x67, 0x29, 0x22, 0xd5,
	0xfa, 0x87, 0x17, 0x18, 0x6f, 0x26, 0xf1, 0xa4, 0x14, 0x3b, 0x71, 0x86, 0x6d, 0x37, 0xb5, 0xf2,
	0x2e, 0x27, 0x86, 0xc2, 0x36, 0xe7, 0xd6, 0xda, 0x4a, 0xed, 0x02, 0x3b, 0x93, 0xe5, 0x2d, 0xe8,
	0x0c, 0x3c, 0x6d, 0x29, 0xe4, 0x97, 0xfb, 0x77, 0xb4, 0x77, 0x07, 0xb8, 0xd4, 0x14, 0xb8, 0x44,
	0x35, 0xb5, 0x5c, 0x85, 0x2e, 0xab, 0x0c, 0x52, 0xd9, 0xe0, 0x6b, 0xc8, 0x90, 0xa6, 0x6d, 0x2d,
	0xb5, 0xdb, 0xae, 0x3e, 0x53, 0xfb, 0x08, 0x6b, 0xf5, 0xa1, 0x7a, 0x9e, 0xb5, 0x70, 0xe0, 0x81,
	0x26, 0x9b, 0x8b, 0x16, 0xb4, 0xe1, 0xba, 0xd9, 0x45, 0x03, 0x4b, 0xde, 0x5a, 0x68, 0x1b, 0x9e,
	0xfc, 0x69, 0x1f, 0x0a, 0xf5, 0x94, 0x30, 0x79, 0x00, 0x55, 0x05, 0xf5, 0x6c, 0xe5, 0x14, 0x2c,
	0xd6, 0x3f, 0x50, 0x61, 0xe7, 0xdd, 0x34, 0x89, 0xa3, 0x7d, 0x31, 0x4d, 0xb3, 0xad, 0x11, 0x65,
	0x7e, 0xb9, 0xf9, 0xe9, 0x12, 0x98, 0x8c, 0xa7, 0xb2, 0x98, 0x64, 0x32, 0x63, 0x41, 0xe5, 0xe9,
	0xa5, 0x15, 0x5c, 0x86, 0x30, 0xd3, 0x4c, 0xcb, 0x62, 0x9f, 0xe5, 0x76, 0xb3, 0x9c, 0xb0, 0xf2,
	0xab, 0x4c, 0x75, 0x2e, 0xab, 0xd8, 0xe6, 0xc2, 0xf0, 0x18, 0x0f, 0xc8, 0x16, 0xc3, 0x78, 0x68,
	0xd4, 0x37, 0x59, 0x04, 0x74, 0x79, 0xbc, 0xd6, 0x54, 0x19, 0xe5, 0x1d, 0x6c, 0x19, 0x8e, 0x2d,
	0x07, 0x31, 0x0d, 0xf3, 0x09, 0x29, 0xb9, 0x64, 0x66, 0x36, 0x34, 0x55, 0xae, 0x1d, 0xd0, 0x14,
	0x41, 0x31, 0x8b, 0x58, 0xb1, 0x4d, 0x95, 0xd9, 0x1e, 0x0e, 0x67, 0x93, 0x23, 0x19, 0x79, 0xc0,
	0xb7, 0xea, 0x7f, 0x8b, 0x9d, 0x07, 0x0b, 0x8a, 0x0e, 0xf1, 0xc0, 0xbd, 0x00, 0xfb, 0x40, 0xad,
	0xf5, 0x86, 0x6b, 0x66, 0x0f, 0x0e, 0xc8, 0x2b, 0x46, 0x80, 0xc8, 0x17, 0x5a, 0x2b, 0x19, 0xd0,
	0x32, 0x6f, 0x19, 0xcd, 0xa7, 0xc8, 0x5e, 0xcd, 0x81, 0x6b, 0x7c, 0xb1, 0x7e, 0x93, 0x5d, 0xc0,
	0x28, 0x69, 0x37, 0x4c, 0x67, 0xb8, 0x7d, 0x9a, 0xff, 0x6c, 0xc8, 0x36, 0x5b, 0xdf, 0x73, 0x0d,
	0x4f, 0xfd, 0xe8, 0x1f, 0xda, 0xdb, 0x08, 0xe0, 0x66, 0x58, 0x25, 0xa3, 0xcb, 0x23, 0xd2, 0x6a,
	0xfd, 0x3d, 0x55, 0x76, 0xf9, 0x04, 0x66, 0xca, 0x11, 0x7e, 0x39, 0x7b, 0x64, 0xcf, 0x35, 0x5c,
	0xc5, 0x90, 0x02, 0xf0, 0xcb, 0x6b, 0xc1, 0xa9, 0xda, 0x63, 0xec, 0xa1, 0xaf, 0x9b, 0x89, 0x57,
	0x6a, 0x8f, 0xb3, 0xc7, 0xe6, 0xb3, 0x1c, 0xff, 0x51, 0x8f, 0xea, 0x1c, 0xa7, 0xb9, 0xdf, 0x90,
	0x5d, 0xac, 0x3d, 0xc2, 0xae, 0x94, 0xb2, 0xcc, 0x5d, 0xb7, 0xb8, 0xc0, 0xce, 0x94, 0x32, 0x64,
	0xe1, 0xf3, 0x97, 0xd8, 0x39, 0x22, 0x40, 0x5f, 0xd0, 0xa9, 0xb2, 0x0a, 0xa5, 0xbf, 0xc2, 0x2e,
	0x14, 0x48, 0xea, 0xf9, 0x75, 0x24, 0xae, 0xd6, 0x1e, 0x62, 0x97, 0x88, 0xa8, 0x22, 0xfa, 0xed,
	0xde, 0x33, 0x03, 0xa8, 0x9c, 0xe9, 0xdd, 0xe6, 0x6b, 0x79, 0xd3, 0x24, 0xf9, 0xc4, 0xa6, 0xb1,
	0xbc, 0x69, 0xc5, 0x6c, 0xc5, 0x2c, 0xeb, 0xb5, 0x47, 0xd9, 0xd5, 0x13, 0x0b, 0x52, 0xbf, 0x48,
	0xb2, 0x51, 0x77, 0xd8, 0xa5, 0x93, 0x06, 0x2b, 0x9b, 0xfb, 0xf0, 0x79, 0x61, 0xfa, 0xa2, 0x29,
	0x8e, 0x98, 0x54, 0x08, 0x99, 0x04, 0xa8, 0x0b, 0x4b, 0xbc, 0x5a, 0x6f, 0x9c, 0x28, 0x00, 0x86,
	0xf4, 0x57, 0xb7, 0x18, 0xdb, 0x73, 0x0d, 0x83, 0xde, 0x10, 0xa7, 0x3d, 0x10, 0x4a, 0x3b, 0x86,
	0xa6, 0x7e, 0x52, 0xb8, 0x52, 0xbf, 0xc7, 0x2e, 0x96, 0x79, 0xd0, 0xed, 0x9b, 0xec, 0xe5, 0x63,
	0x77, 0x20, 0x7f, 0x99, 0x45, 0x32, 0x18, 0x78, 0xc7, 0xe4, 0xe3, 0x22, 0x3b, 0x8b, 0xe8, 0xbc,
	0x48, 0x60, 0x0b, 0x06, 0xd9, 0x7d, 0x10, 0xbe, 0x58, 0xff, 0xe5, 0x55, 0xb6, 0xea, 0x1e, 0x45,
	0xc3, 0xec, 0x38, 0x75, 0x78, 0x10, 0x4a, 0x7b, 0x17, 0x15, 0x50, 0xa6, 0x6e, 0x50, 0x01, 0xa9,
	0x94, 0x96, 0xa6, 0x32, 0x44, 0xb3, 0x29, 0xc6, 0x59, 0x16, 0x74, 0x32, 0x95, 0x51, 0x8d, 0xaa,
	0x19, 0xa6, 0x2a, 0x18, 0xa2, 0x18, 0xe2, 0x95, 0x47, 0xcc, 0xc9, 0x93, 0xb3, 0xec, 0x2d, 0x6b,
	0x47, 0x0c, 0xe9, 0xec, 0x1b, 0x09, 0xab, 0xf9, 0x83, 0x28, 0xe8, 0xde, 0xd0, 0x33, 0xf5, 0x96,
	0x08, 0x66, 0xfb, 0xf2, 0xc5, 0xf0, 0xec, 0x95, 0x2b, 0x96, 0x3f, 0x7b, 0x4d, 0x14, 0x52, 0x5f,
	0xeb, 0x39, 0x07, 0x02, 0xd0, 0x29, 0xd4, 0x46, 0xa3, 0xe2, 0x11, 0xcf, 0x26, 0x3d, 0x24, 0x3c,
	0x2e, 0x62, 0x5b, 0x68, 0x91, 0x88, 0xb4, 0x80, 0xd1, 0x4e, 0x02, 0x18, 0x94, 0x78, 0x39, 0xa7,
	0x4c, 0x44, 0x0b, 0x99, 0xe3, 0x6d, 0xdf, 0x12, 0xee, 0x88, 0x43, 0xb0, 0xa7, 0xe0, 0xab, 0xd3,
	0xf3, 0x54, 0x3a, 0xbc, 0x41, 0x2a, 0xd9, 0xb6, 0x47, 0xd1, 0x30, 0xf3, 0xb1, 0xcf, 0xe4, 0xdd,
	0x42, 0x4d, 0x02, 0x1d, 0xd9, 0x9b, 0x1d, 0xd2, 0xde, 0x79, 0xf6, 0x04, 0x39, 0x1d, 0xb4, 0x9d,
	0x3b, 0xde, 0x7e, 0xf5, 0x82, 0x4c, 0xf6, 0x5a, 0x39, 0xc1, 0xb4, 0xfa, 0x61, 0x89, 0x17, 0xf2,
	0x61, 0x68, 0x8d, 0x83, 0x7d, 0xda, 0x42, 0xcf, 0xf2, 0x92, 0x55, 0x7c, 0x29, 0x7f, 0x17, 0xdd,
	0x7e, 0x96, 0x56, 0x5e, 0x8c, 0xf8, 0x86, 0x1e, 0x2c, 0x70, 0xe5, 0x57, 0xe8, 0xdd, 0xe5, 0x71,
	0x09, 0xbc, 0x8a, 0x8b, 0x84, 0xb2, 0x5a, 0xe4, 0x91, 0xd8, 0x43, 0xa5, 0x9c, 0x12, 0x7c, 0x18,
	0x8d, 0xb9, 0x72, 0xce, 0x5e, 0x9c, 0xe2, 0x61, 0xfb, 0x23, 0x40, 0x3b, 0xf6, 0x81, 0xa2, 0x3d,
	0x9a, 0x57, 0x39, 0x93, 0xbd, 0xc7, 0xf2, 0x9e, 0x90, 0x1b, 0x98, 0x68, 0x2f, 0xbd, 0x0c, 0x7a,
	0x3f, 0xab, 0xb6, 0x23, 0xbe, 0x7d, 0x26, 0xa6, 0xc8, 0x04, 0xad, 0x85, 0x97, 0xe3, 0x51, 0x01,
	0x1e, 0x45, 0xe8, 0xc1, 0x21, 0x98, 0x5e, 0x23, 0x91, 0xf0, 0x6f, 0xc0, 0xdf, 0x4a, 0x10, 0x87,
	0xf1, 0xfd, 0x22, 0xfa, 0x38, 0x08, 0x21, 0x5d, 0x74, 0xd1, 0xc6, 0xe3, 0x02, 0x27, 0xfe, 0x0a,
	0x34, 0x6e, 0x90, 0x52, 0x84, 0x9f, 0x28, 0xf5, 0x83, 0x3b, 0x8e, 0xf7, 0x83, 0x88, 0x7f, 0xa3,
	0x92, 0x21, 0xd5, 0xb9, 0x14, 0xde, 0xcb, 0xff, 0x02, 0xae, 0x89, 0x25, 0xdc, 0x94, 0xcf, 0x30,
	0x67, 0x28, 0xff, 0x8b, 0xc7, 0x47, 0x9b, 0x3c, 0x93, 0x6f, 0x82, 0x5c, 0xf6, 0xdd, 0xbb, 0x22,
	0xc1, 0x26, 0xff, 0xa5, 0xd2, 0x80, 0x92, 0x40, 0xe0, 0x6b, 0xcc, 0x20, 0x66, 0xa5, 0x68, 0xd2,
	0x6f, 0xce, 0x1f, 0x82, 0x97, 0xc1, 0xe7, 0xe6, 0x88, 0x3f, 0x59, 0xaa, 0x36, 0x45, 0x26, 0xf1,
	0xa7, 0xa0, 0x88, 0xfc, 0xa1, 0xa1, 0x6b, 0x75, 0x13, 0x6a, 0x9b, 0xdc, 0x07, 0x81, 0x3b, 0x54,
	0x57, 0x33, 0xd1, 0x27, 0x73, 0x8b, 0x87, 0x6c, 0x68, 0xd6, 0x66, 0x51, 0x8c, 0x79, 0xd0, 0xa6,
	0xe7, 0xa2, 0x61, 0x8c, 0x56, 0x4c, 0xfd, 0x57, 0x17, 0xd8, 0x96, 0x8c, 0x16, 0x0f, 0xa2, 0xdc,
	0x83, 0x76, 0xe4, 0x2e, 0x18, 0xbe, 0xf0, 0x1b, 0x44, 0xf7, 0xe8, 0xb4, 0x55, 0xc1, 0x64, 0x38,
	0x38, 0x74, 0xda, 0x5f, 0xc8, 0x8e, 0xf2, 0x8b, 0x70, 0x15, 0xe3, 0xc8, 0x24, 0x0c, 0x06, 0xe4,
	0x50, 0x9d, 0x2e, 0x22, 0x19, 0xef, 0xbf, 0x02, 0x59, 0x0b, 0x27, 0xee, 0x01, 0xde, 0xd2, 0xa5,
	0x62, 0x96, 0x54, 0x31, 0xf9, 0x9d, 0x0a, 0xc4, 0xc9, 0xeb, 0x76, 0x94, 0xe9, 0x89, 0xd8, 0x4a,
	0xfd, 0x35, 0xec, 0x8c, 0xb4, 0x76, 0xb4, 0xf4, 0x5e, 0x1e, 0xda, 0xb2, 0xca, 0x16, 0x4d, 0x30,
	0x6a, 0x68, 0x8b, 0x0e, 0xc3, 0x4c, 0xa9, 0xf5, 0xf4, 0x9e, 0xb4, 0x1d, 0xed, 0xc7, 0x64, 0xc2,
	0xd5, 0xd8, 0x96, 0x23, 0x82, 0xd1, 0x11, 0x6d, 0xd6, 0x83, 0xcb, 0x8e, 0x3b, 0x68, 0x79, 0x72,
	0xa9, 0xb6, 0xc2, 0xaa, 0x46, 0x34, 0xe2, 0xcb, 0x8d, 0xea, 0x77, 0x2e, 0x9c, 0xba, 0xb3, 0x3c,
	0x49, 0xe2, 0x34, 0xbe, 0xfe, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x3d, 0x62, 0x20, 0x7f,
	0x83, 0x00, 0x00,
}
