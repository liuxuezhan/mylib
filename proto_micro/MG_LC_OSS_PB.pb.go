// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_LC_OSS_PB.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MG_LC_OSS_PB struct {
	ServerID  uint32 `protobuf:"fixed32,1,opt,name=ServerID" json:"ServerID,omitempty"`
	UserID    uint32 `protobuf:"fixed32,2,opt,name=UserID" json:"UserID,omitempty"`
	CharID    string `protobuf:"bytes,3,opt,name=CharID" json:"CharID,omitempty"`
	EventID   uint32 `protobuf:"fixed32,4,opt,name=EventID" json:"EventID,omitempty"`
	Level     int32  `protobuf:"varint,5,opt,name=Level" json:"Level,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=Value" json:"Value,omitempty"`
	ProductID int32  `protobuf:"varint,7,opt,name=ProductID" json:"ProductID,omitempty"`
	VIPlevel  int32  `protobuf:"varint,8,opt,name=VIPlevel" json:"VIPlevel,omitempty"`
	Channel   string `protobuf:"bytes,9,opt,name=Channel" json:"Channel,omitempty"`
	Region    string `protobuf:"bytes,10,opt,name=Region" json:"Region,omitempty"`
	Platform  int32  `protobuf:"varint,11,opt,name=Platform" json:"Platform,omitempty"`
	Version   string `protobuf:"bytes,12,opt,name=Version" json:"Version,omitempty"`
	Time      int32  `protobuf:"varint,13,opt,name=Time" json:"Time,omitempty"`
}

func (m *MG_LC_OSS_PB) Reset()                    { *m = MG_LC_OSS_PB{} }
func (m *MG_LC_OSS_PB) String() string            { return proto.CompactTextString(m) }
func (*MG_LC_OSS_PB) ProtoMessage()               {}
func (*MG_LC_OSS_PB) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *MG_LC_OSS_PB) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetUserID() uint32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetCharID() string {
	if m != nil {
		return m.CharID
	}
	return ""
}

func (m *MG_LC_OSS_PB) GetEventID() uint32 {
	if m != nil {
		return m.EventID
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MG_LC_OSS_PB) GetProductID() int32 {
	if m != nil {
		return m.ProductID
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetVIPlevel() int32 {
	if m != nil {
		return m.VIPlevel
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *MG_LC_OSS_PB) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MG_LC_OSS_PB) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *MG_LC_OSS_PB) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MG_LC_OSS_PB) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func init() {
	proto.RegisterType((*MG_LC_OSS_PB)(nil), "proto_micro.MG_LC_OSS_PB")
}

func init() { proto.RegisterFile("MG_LC_OSS_PB.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0xdd, 0xb6, 0x94, 0xb2, 0xad, 0x97, 0x8d, 0x31, 0x13, 0xe3, 0x81, 0x78, 0xe2, 0xe4,
	0xc5, 0x37, 0x28, 0x35, 0x4a, 0x52, 0x23, 0x01, 0xe5, 0x4a, 0xb0, 0x8e, 0x96, 0x64, 0x61, 0xcd,
	0x96, 0x72, 0xf6, 0x29, 0x7d, 0x1e, 0x33, 0xb3, 0x50, 0x3d, 0xed, 0x7e, 0xff, 0xcc, 0x7c, 0x3b,
	0x59, 0xa9, 0x9e, 0x1e, 0xca, 0x6d, 0x5c, 0x3e, 0xe7, 0x79, 0x99, 0xae, 0x6f, 0xbf, 0xac, 0xe9,
	0x8c, 0x5a, 0xf2, 0x51, 0x36, 0xf5, 0xce, 0x9a, 0x9b, 0x9f, 0x89, 0x5c, 0xfd, 0xef, 0x51, 0x57,
	0x72, 0x91, 0xa3, 0xed, 0xd1, 0x26, 0x1b, 0x10, 0xa1, 0x88, 0xfc, 0xec, 0xc4, 0xea, 0x52, 0xce,
	0x5f, 0x0f, 0x5c, 0x99, 0x70, 0x65, 0x20, 0xca, 0xe3, 0x7d, 0x45, 0xf9, 0x34, 0x14, 0x51, 0x90,
	0x0d, 0xa4, 0x40, 0xfa, 0xf7, 0x3d, 0xb6, 0x5d, 0xb2, 0x81, 0x19, 0x0f, 0x8c, 0xa8, 0x2e, 0xa4,
	0xb7, 0xc5, 0x1e, 0x35, 0x78, 0xa1, 0x88, 0xbc, 0xcc, 0x01, 0xa5, 0x45, 0xa5, 0x8f, 0x08, 0x73,
	0xd6, 0x38, 0x50, 0xd7, 0x32, 0x48, 0xad, 0x79, 0x3f, 0xee, 0xc8, 0xe3, 0x73, 0xff, 0x5f, 0x40,
	0xfb, 0x16, 0x49, 0xaa, 0x59, 0xb6, 0xe0, 0xe2, 0x89, 0xe9, 0xfd, 0x78, 0x5f, 0xb5, 0x2d, 0x6a,
	0x08, 0xd8, 0x38, 0x22, 0x6d, 0x9c, 0xe1, 0x67, 0x6d, 0x5a, 0x90, 0x6e, 0x63, 0x47, 0x64, 0x4b,
	0x75, 0xd5, 0x7d, 0x18, 0xdb, 0xc0, 0xd2, 0xd9, 0x46, 0x26, 0x5b, 0x81, 0xf6, 0x40, 0x43, 0x2b,
	0x67, 0x1b, 0x50, 0x29, 0x39, 0x7b, 0xa9, 0x1b, 0x84, 0x73, 0x9e, 0xe0, 0xfb, 0xda, 0x7b, 0x9c,
	0x7e, 0x8b, 0xb3, 0xb7, 0x39, 0x7f, 0xf6, 0xdd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0xe0,
	0x4e, 0xd6, 0x89, 0x01, 0x00, 0x00,
}
