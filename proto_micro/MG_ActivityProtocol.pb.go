// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_ActivityProtocol.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏服务器申请连接需要带上自身的连接信息
type ST_GS2AS_Connect struct {
	ServerID   uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ServerHost string `protobuf:"bytes,2,opt,name=serverHost" json:"serverHost,omitempty"`
	ServerPort uint32 `protobuf:"varint,3,opt,name=serverPort" json:"serverPort,omitempty"`
}

func (m *ST_GS2AS_Connect) Reset()                    { *m = ST_GS2AS_Connect{} }
func (m *ST_GS2AS_Connect) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_Connect) ProtoMessage()               {}
func (*ST_GS2AS_Connect) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ST_GS2AS_Connect) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_Connect) GetServerHost() string {
	if m != nil {
		return m.ServerHost
	}
	return ""
}

func (m *ST_GS2AS_Connect) GetServerPort() uint32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

type ST_AS2GS_ActivityUpdate struct {
	Tp         uint32              `protobuf:"varint,1,opt,name=tp" json:"tp,omitempty"`
	ActivityID uint32              `protobuf:"varint,2,opt,name=activityID" json:"activityID,omitempty"`
	FuData     *ST_ActivityInfo_PB `protobuf:"bytes,3,opt,name=fuData" json:"fuData,omitempty"`
	NextFresh  uint64              `protobuf:"varint,4,opt,name=nextFresh" json:"nextFresh,omitempty"`
	DataVer    uint64              `protobuf:"varint,5,opt,name=dataVer" json:"dataVer,omitempty"`
	Time       string              `protobuf:"bytes,6,opt,name=Time" json:"Time,omitempty"`
}

func (m *ST_AS2GS_ActivityUpdate) Reset()                    { *m = ST_AS2GS_ActivityUpdate{} }
func (m *ST_AS2GS_ActivityUpdate) String() string            { return proto.CompactTextString(m) }
func (*ST_AS2GS_ActivityUpdate) ProtoMessage()               {}
func (*ST_AS2GS_ActivityUpdate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ST_AS2GS_ActivityUpdate) GetTp() uint32 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *ST_AS2GS_ActivityUpdate) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

func (m *ST_AS2GS_ActivityUpdate) GetFuData() *ST_ActivityInfo_PB {
	if m != nil {
		return m.FuData
	}
	return nil
}

func (m *ST_AS2GS_ActivityUpdate) GetNextFresh() uint64 {
	if m != nil {
		return m.NextFresh
	}
	return 0
}

func (m *ST_AS2GS_ActivityUpdate) GetDataVer() uint64 {
	if m != nil {
		return m.DataVer
	}
	return 0
}

func (m *ST_AS2GS_ActivityUpdate) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type ST_GS2AS_ActivityScore struct {
	ActiID    uint32                 `protobuf:"varint,1,opt,name=actiID" json:"actiID,omitempty"`
	ServerID  uint32                 `protobuf:"varint,2,opt,name=serverID" json:"serverID,omitempty"`
	ContentID uint32                 `protobuf:"varint,3,opt,name=contentID" json:"contentID,omitempty"`
	ScData    *ST_ActivityScore_User `protobuf:"bytes,4,opt,name=scData" json:"scData,omitempty"`
	Luid      uint64                 `protobuf:"varint,6,opt,name=luid" json:"luid,omitempty"`
	AddScore  uint32                 `protobuf:"varint,7,opt,name=addScore" json:"addScore,omitempty"`
}

func (m *ST_GS2AS_ActivityScore) Reset()                    { *m = ST_GS2AS_ActivityScore{} }
func (m *ST_GS2AS_ActivityScore) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_ActivityScore) ProtoMessage()               {}
func (*ST_GS2AS_ActivityScore) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ST_GS2AS_ActivityScore) GetActiID() uint32 {
	if m != nil {
		return m.ActiID
	}
	return 0
}

func (m *ST_GS2AS_ActivityScore) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_ActivityScore) GetContentID() uint32 {
	if m != nil {
		return m.ContentID
	}
	return 0
}

func (m *ST_GS2AS_ActivityScore) GetScData() *ST_ActivityScore_User {
	if m != nil {
		return m.ScData
	}
	return nil
}

func (m *ST_GS2AS_ActivityScore) GetLuid() uint64 {
	if m != nil {
		return m.Luid
	}
	return 0
}

func (m *ST_GS2AS_ActivityScore) GetAddScore() uint32 {
	if m != nil {
		return m.AddScore
	}
	return 0
}

type ST_MemberJoin_Info struct {
	Uid  uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ST_MemberJoin_Info) Reset()                    { *m = ST_MemberJoin_Info{} }
func (m *ST_MemberJoin_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_MemberJoin_Info) ProtoMessage()               {}
func (*ST_MemberJoin_Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ST_MemberJoin_Info) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_MemberJoin_Info) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ST_GS2AS_LeagueJoin struct {
	ActiID    uint32                `protobuf:"varint,1,opt,name=actiID" json:"actiID,omitempty"`
	ServerID  uint32                `protobuf:"varint,2,opt,name=serverID" json:"serverID,omitempty"`
	CurClass  uint32                `protobuf:"varint,3,opt,name=curClass" json:"curClass,omitempty"`
	IsJoin    bool                  `protobuf:"varint,4,opt,name=isJoin" json:"isJoin,omitempty"`
	BaLeague  *ST_LeagueInfo_Base   `protobuf:"bytes,5,opt,name=baLeague" json:"baLeague,omitempty"`
	ActorList []*ST_MemberJoin_Info `protobuf:"bytes,7,rep,name=actorList" json:"actorList,omitempty"`
}

func (m *ST_GS2AS_LeagueJoin) Reset()                    { *m = ST_GS2AS_LeagueJoin{} }
func (m *ST_GS2AS_LeagueJoin) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_LeagueJoin) ProtoMessage()               {}
func (*ST_GS2AS_LeagueJoin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ST_GS2AS_LeagueJoin) GetActiID() uint32 {
	if m != nil {
		return m.ActiID
	}
	return 0
}

func (m *ST_GS2AS_LeagueJoin) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_LeagueJoin) GetCurClass() uint32 {
	if m != nil {
		return m.CurClass
	}
	return 0
}

func (m *ST_GS2AS_LeagueJoin) GetIsJoin() bool {
	if m != nil {
		return m.IsJoin
	}
	return false
}

func (m *ST_GS2AS_LeagueJoin) GetBaLeague() *ST_LeagueInfo_Base {
	if m != nil {
		return m.BaLeague
	}
	return nil
}

func (m *ST_GS2AS_LeagueJoin) GetActorList() []*ST_MemberJoin_Info {
	if m != nil {
		return m.ActorList
	}
	return nil
}

type ST_ActivityInfo_PB struct {
	BaData *ST_Activity_PB          `protobuf:"bytes,1,opt,name=baData" json:"baData,omitempty"`
	DeData []*ST_ActivityContent_PB `protobuf:"bytes,2,rep,name=deData" json:"deData,omitempty"`
	ScUser []*ST_ActivityScore_User `protobuf:"bytes,3,rep,name=scUser" json:"scUser,omitempty"`
	Luid   uint64                   `protobuf:"varint,5,opt,name=luid" json:"luid,omitempty"`
	IsJoin bool                     `protobuf:"varint,6,opt,name=isJoin" json:"isJoin,omitempty"`
}

func (m *ST_ActivityInfo_PB) Reset()                    { *m = ST_ActivityInfo_PB{} }
func (m *ST_ActivityInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityInfo_PB) ProtoMessage()               {}
func (*ST_ActivityInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ST_ActivityInfo_PB) GetBaData() *ST_Activity_PB {
	if m != nil {
		return m.BaData
	}
	return nil
}

func (m *ST_ActivityInfo_PB) GetDeData() []*ST_ActivityContent_PB {
	if m != nil {
		return m.DeData
	}
	return nil
}

func (m *ST_ActivityInfo_PB) GetScUser() []*ST_ActivityScore_User {
	if m != nil {
		return m.ScUser
	}
	return nil
}

func (m *ST_ActivityInfo_PB) GetLuid() uint64 {
	if m != nil {
		return m.Luid
	}
	return 0
}

func (m *ST_ActivityInfo_PB) GetIsJoin() bool {
	if m != nil {
		return m.IsJoin
	}
	return false
}

type ST_AS2GS_Activity_InfoList struct {
	FuDatas []*ST_ActivityInfo_PB `protobuf:"bytes,1,rep,name=fuDatas" json:"fuDatas,omitempty"`
	Success int32                 `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	DataVer uint64                `protobuf:"varint,3,opt,name=dataVer" json:"dataVer,omitempty"`
}

func (m *ST_AS2GS_Activity_InfoList) Reset()                    { *m = ST_AS2GS_Activity_InfoList{} }
func (m *ST_AS2GS_Activity_InfoList) String() string            { return proto.CompactTextString(m) }
func (*ST_AS2GS_Activity_InfoList) ProtoMessage()               {}
func (*ST_AS2GS_Activity_InfoList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ST_AS2GS_Activity_InfoList) GetFuDatas() []*ST_ActivityInfo_PB {
	if m != nil {
		return m.FuDatas
	}
	return nil
}

func (m *ST_AS2GS_Activity_InfoList) GetSuccess() int32 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *ST_AS2GS_Activity_InfoList) GetDataVer() uint64 {
	if m != nil {
		return m.DataVer
	}
	return 0
}

type ST_GS2AS_ActivityStart struct {
	ServerID   uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ActivityID uint32 `protobuf:"varint,2,opt,name=activityID" json:"activityID,omitempty"`
}

func (m *ST_GS2AS_ActivityStart) Reset()                    { *m = ST_GS2AS_ActivityStart{} }
func (m *ST_GS2AS_ActivityStart) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_ActivityStart) ProtoMessage()               {}
func (*ST_GS2AS_ActivityStart) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ST_GS2AS_ActivityStart) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_ActivityStart) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

type ST_GS2AS_TickTock struct {
	ServerID   uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ServerHost string `protobuf:"bytes,2,opt,name=serverHost" json:"serverHost,omitempty"`
	ServerPort uint32 `protobuf:"varint,3,opt,name=serverPort" json:"serverPort,omitempty"`
}

func (m *ST_GS2AS_TickTock) Reset()                    { *m = ST_GS2AS_TickTock{} }
func (m *ST_GS2AS_TickTock) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_TickTock) ProtoMessage()               {}
func (*ST_GS2AS_TickTock) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ST_GS2AS_TickTock) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_TickTock) GetServerHost() string {
	if m != nil {
		return m.ServerHost
	}
	return ""
}

func (m *ST_GS2AS_TickTock) GetServerPort() uint32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

type ST_GS2AS_UpdataStage struct {
	ServerID   uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ActivityID uint32 `protobuf:"varint,2,opt,name=activityID" json:"activityID,omitempty"`
}

func (m *ST_GS2AS_UpdataStage) Reset()                    { *m = ST_GS2AS_UpdataStage{} }
func (m *ST_GS2AS_UpdataStage) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_UpdataStage) ProtoMessage()               {}
func (*ST_GS2AS_UpdataStage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ST_GS2AS_UpdataStage) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_UpdataStage) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

type ST_GS2AS_ActivityEnd struct {
	ServerID   uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ActivityID uint32 `protobuf:"varint,2,opt,name=activityID" json:"activityID,omitempty"`
}

func (m *ST_GS2AS_ActivityEnd) Reset()                    { *m = ST_GS2AS_ActivityEnd{} }
func (m *ST_GS2AS_ActivityEnd) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_ActivityEnd) ProtoMessage()               {}
func (*ST_GS2AS_ActivityEnd) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ST_GS2AS_ActivityEnd) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GS2AS_ActivityEnd) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

type ST_AS2GS_ActivityRank struct {
	ActiID   uint32              `protobuf:"varint,1,opt,name=actiID" json:"actiID,omitempty"`
	RankData *ST_ActivityRank_PB `protobuf:"bytes,2,opt,name=rankData" json:"rankData,omitempty"`
	Reward   bool                `protobuf:"varint,3,opt,name=reward" json:"reward,omitempty"`
}

func (m *ST_AS2GS_ActivityRank) Reset()                    { *m = ST_AS2GS_ActivityRank{} }
func (m *ST_AS2GS_ActivityRank) String() string            { return proto.CompactTextString(m) }
func (*ST_AS2GS_ActivityRank) ProtoMessage()               {}
func (*ST_AS2GS_ActivityRank) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ST_AS2GS_ActivityRank) GetActiID() uint32 {
	if m != nil {
		return m.ActiID
	}
	return 0
}

func (m *ST_AS2GS_ActivityRank) GetRankData() *ST_ActivityRank_PB {
	if m != nil {
		return m.RankData
	}
	return nil
}

func (m *ST_AS2GS_ActivityRank) GetReward() bool {
	if m != nil {
		return m.Reward
	}
	return false
}

type ST_AS2GS_Activity_ScoreLevel struct {
	ActiID uint32 `protobuf:"varint,1,opt,name=ActiID" json:"ActiID,omitempty"`
	UserID uint64 `protobuf:"varint,2,opt,name=userID" json:"userID,omitempty"`
	Old    uint32 `protobuf:"varint,3,opt,name=old" json:"old,omitempty"`
	New    uint32 `protobuf:"varint,4,opt,name=new" json:"new,omitempty"`
}

func (m *ST_AS2GS_Activity_ScoreLevel) Reset()                    { *m = ST_AS2GS_Activity_ScoreLevel{} }
func (m *ST_AS2GS_Activity_ScoreLevel) String() string            { return proto.CompactTextString(m) }
func (*ST_AS2GS_Activity_ScoreLevel) ProtoMessage()               {}
func (*ST_AS2GS_Activity_ScoreLevel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *ST_AS2GS_Activity_ScoreLevel) GetActiID() uint32 {
	if m != nil {
		return m.ActiID
	}
	return 0
}

func (m *ST_AS2GS_Activity_ScoreLevel) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ST_AS2GS_Activity_ScoreLevel) GetOld() uint32 {
	if m != nil {
		return m.Old
	}
	return 0
}

func (m *ST_AS2GS_Activity_ScoreLevel) GetNew() uint32 {
	if m != nil {
		return m.New
	}
	return 0
}

type ST_GS2RC_Activity_List struct {
	List []*ST_GlobalBuff_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_GS2RC_Activity_List) Reset()                    { *m = ST_GS2RC_Activity_List{} }
func (m *ST_GS2RC_Activity_List) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2RC_Activity_List) ProtoMessage()               {}
func (*ST_GS2RC_Activity_List) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ST_GS2RC_Activity_List) GetList() []*ST_GlobalBuff_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_GS2AS_GM struct {
	Cmd string `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
}

func (m *ST_GS2AS_GM) Reset()                    { *m = ST_GS2AS_GM{} }
func (m *ST_GS2AS_GM) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2AS_GM) ProtoMessage()               {}
func (*ST_GS2AS_GM) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ST_GS2AS_GM) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func init() {
	proto.RegisterType((*ST_GS2AS_Connect)(nil), "proto_micro.ST_GS2AS_Connect")
	proto.RegisterType((*ST_AS2GS_ActivityUpdate)(nil), "proto_micro.ST_AS2GS_ActivityUpdate")
	proto.RegisterType((*ST_GS2AS_ActivityScore)(nil), "proto_micro.ST_GS2AS_ActivityScore")
	proto.RegisterType((*ST_MemberJoin_Info)(nil), "proto_micro.ST_MemberJoin_Info")
	proto.RegisterType((*ST_GS2AS_LeagueJoin)(nil), "proto_micro.ST_GS2AS_LeagueJoin")
	proto.RegisterType((*ST_ActivityInfo_PB)(nil), "proto_micro.ST_ActivityInfo_PB")
	proto.RegisterType((*ST_AS2GS_Activity_InfoList)(nil), "proto_micro.ST_AS2GS_Activity_InfoList")
	proto.RegisterType((*ST_GS2AS_ActivityStart)(nil), "proto_micro.ST_GS2AS_ActivityStart")
	proto.RegisterType((*ST_GS2AS_TickTock)(nil), "proto_micro.ST_GS2AS_TickTock")
	proto.RegisterType((*ST_GS2AS_UpdataStage)(nil), "proto_micro.ST_GS2AS_UpdataStage")
	proto.RegisterType((*ST_GS2AS_ActivityEnd)(nil), "proto_micro.ST_GS2AS_ActivityEnd")
	proto.RegisterType((*ST_AS2GS_ActivityRank)(nil), "proto_micro.ST_AS2GS_ActivityRank")
	proto.RegisterType((*ST_AS2GS_Activity_ScoreLevel)(nil), "proto_micro.ST_AS2GS_Activity_ScoreLevel")
	proto.RegisterType((*ST_GS2RC_Activity_List)(nil), "proto_micro.ST_GS2RC_Activity_List")
	proto.RegisterType((*ST_GS2AS_GM)(nil), "proto_micro.ST_GS2AS_GM")
}

func init() { proto.RegisterFile("MG_ActivityProtocol.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4b, 0x6f, 0xd3, 0x4e,
	0x10, 0xff, 0x3b, 0xef, 0x6c, 0xd5, 0xbf, 0xca, 0x42, 0x8b, 0x09, 0x85, 0x46, 0x3e, 0xf5, 0x54,
	0x89, 0xf6, 0x80, 0x68, 0xc5, 0x21, 0x0f, 0x48, 0x0b, 0x8d, 0x54, 0xad, 0x53, 0xae, 0xd6, 0xc6,
	0xde, 0x14, 0x2b, 0x8e, 0x37, 0x5a, 0x6f, 0x5a, 0xb8, 0x71, 0xe0, 0xc6, 0x77, 0xe3, 0xc8, 0xb7,
	0xe0, 0x03, 0x70, 0x43, 0x33, 0x7e, 0xc4, 0x49, 0x93, 0x22, 0x51, 0x71, 0xf2, 0xcc, 0x7a, 0x9e,
	0xbf, 0xf9, 0xcd, 0x90, 0x27, 0xfd, 0x9e, 0xd3, 0x72, 0xb5, 0x7f, 0xed, 0xeb, 0xcf, 0x17, 0x4a,
	0x6a, 0xe9, 0xca, 0xe0, 0x60, 0x0a, 0x02, 0xdd, 0xc0, 0x8f, 0x33, 0xf1, 0x5d, 0x25, 0x1b, 0xdb,
	0xfd, 0x9e, 0xd3, 0xe3, 0x13, 0xb1, 0x68, 0x63, 0x85, 0x64, 0xcb, 0x1e, 0x38, 0x3d, 0xfb, 0xb0,
	0x65, 0x3b, 0x1d, 0x19, 0x86, 0xc2, 0xd5, 0xb4, 0x41, 0x6a, 0x91, 0x50, 0xd7, 0x42, 0x9d, 0x75,
	0x4d, 0xa3, 0x69, 0xec, 0x6f, 0xb2, 0x4c, 0xa7, 0xcf, 0x09, 0x89, 0xe5, 0x53, 0x19, 0x69, 0xb3,
	0xd0, 0x34, 0xf6, 0xeb, 0x2c, 0xf7, 0x32, 0xff, 0x7f, 0x21, 0x95, 0x36, 0x8b, 0xe8, 0x9d, 0x7b,
	0xb1, 0xbe, 0x1b, 0xe4, 0xb1, 0x3d, 0x70, 0x5a, 0xf6, 0x61, 0xcf, 0xce, 0xea, 0xbe, 0x9c, 0x7a,
	0x5c, 0x0b, 0xfa, 0x3f, 0x29, 0xe8, 0x69, 0x92, 0xb1, 0xa0, 0xa7, 0x10, 0x8b, 0x27, 0x16, 0x67,
	0x5d, 0xcc, 0xb5, 0xc9, 0x72, 0x2f, 0xf4, 0x25, 0xa9, 0x8c, 0x66, 0x5d, 0xae, 0x39, 0xe6, 0xd9,
	0x38, 0xdc, 0x3b, 0xc8, 0x35, 0x7c, 0x00, 0x59, 0x52, 0xdb, 0x70, 0x24, 0x9d, 0x8b, 0x36, 0x4b,
	0xcc, 0xe9, 0x2e, 0xa9, 0x87, 0xe2, 0x93, 0x7e, 0xab, 0x44, 0xf4, 0xd1, 0x2c, 0x35, 0x8d, 0xfd,
	0x12, 0x9b, 0x3f, 0x50, 0x93, 0x54, 0x3d, 0xae, 0xf9, 0x07, 0xa1, 0xcc, 0x32, 0xfe, 0x4b, 0x55,
	0x4a, 0x49, 0x69, 0xe0, 0x4f, 0x84, 0x59, 0xc1, 0xb6, 0x51, 0xb6, 0x7e, 0x18, 0x64, 0x27, 0x43,
	0x30, 0x4d, 0x68, 0xbb, 0x52, 0x09, 0xba, 0x43, 0x2a, 0x50, 0x6d, 0x86, 0x62, 0xa2, 0x2d, 0xe0,
	0x5b, 0x58, 0xc2, 0x77, 0x97, 0xd4, 0x5d, 0x19, 0x6a, 0x11, 0xea, 0xb3, 0x6e, 0x02, 0xdf, 0xfc,
	0x81, 0x1e, 0x93, 0x4a, 0xe4, 0x62, 0xc7, 0x25, 0xec, 0xd8, 0x5a, 0xd7, 0x31, 0x16, 0xe0, 0x5c,
	0x46, 0x42, 0xb1, 0xc4, 0x03, 0x8a, 0x0f, 0x66, 0xbe, 0x87, 0xc5, 0x97, 0x18, 0xca, 0x50, 0x09,
	0xf7, 0x3c, 0x34, 0x36, 0xab, 0x71, 0x25, 0xa9, 0x6e, 0x1d, 0x13, 0x6a, 0x0f, 0x9c, 0xbe, 0x98,
	0x0c, 0x85, 0x7a, 0x27, 0xfd, 0xd0, 0x01, 0x14, 0xe9, 0x16, 0x29, 0x42, 0x10, 0x03, 0x83, 0x80,
	0x08, 0x71, 0x43, 0x3e, 0x11, 0x09, 0x17, 0x50, 0xb6, 0x7e, 0x19, 0xe4, 0x61, 0x06, 0xca, 0xb9,
	0xe0, 0x57, 0x33, 0x01, 0x21, 0xfe, 0x0a, 0x91, 0x06, 0xa9, 0xb9, 0x33, 0xd5, 0x09, 0x78, 0x14,
	0x25, 0x80, 0x64, 0x3a, 0xc4, 0xf3, 0x23, 0x88, 0x8c, 0x78, 0xd4, 0x58, 0xa2, 0xd1, 0x13, 0x52,
	0x1b, 0xf2, 0x38, 0x2f, 0xce, 0x70, 0x05, 0x37, 0xe2, 0xbf, 0xc8, 0x8c, 0x36, 0x8f, 0x04, 0xcb,
	0x1c, 0xe8, 0x6b, 0x52, 0xe7, 0xae, 0x96, 0xea, 0xdc, 0x8f, 0xb4, 0x59, 0x6d, 0x16, 0x57, 0x79,
	0x2f, 0xc1, 0xc2, 0xe6, 0x1e, 0xd6, 0x4f, 0x03, 0x81, 0x5b, 0xe2, 0x1e, 0x3d, 0x22, 0x95, 0x21,
	0xc7, 0xd1, 0x19, 0x58, 0xd0, 0xd3, 0x75, 0xa3, 0x43, 0xa2, 0xc6, 0xa6, 0x30, 0x6f, 0x4f, 0xa0,
	0x53, 0x01, 0xeb, 0x58, 0x3b, 0xef, 0x4e, 0x4c, 0x11, 0xf4, 0x8d, 0x3d, 0x62, 0xae, 0x00, 0x03,
	0xcc, 0xe2, 0xdd, 0xbe, 0x8b, 0x5c, 0x81, 0x6f, 0xc6, 0x95, 0x72, 0x8e, 0x2b, 0x73, 0xac, 0x2b,
	0x79, 0xac, 0xad, 0x6f, 0x06, 0x69, 0xdc, 0xda, 0x68, 0x44, 0x05, 0xe0, 0xa0, 0xaf, 0x48, 0x35,
	0xde, 0xba, 0xc8, 0x34, 0x56, 0x63, 0xb9, 0xbc, 0xa5, 0xa9, 0x3d, 0x2c, 0x62, 0x34, 0x73, 0x5d,
	0x11, 0x45, 0x48, 0x8a, 0x32, 0x4b, 0xd5, 0xfc, 0x8a, 0x16, 0x17, 0x56, 0xd4, 0x1a, 0xac, 0xda,
	0x46, 0xcd, 0xd5, 0x1f, 0xaf, 0xda, 0x5d, 0x97, 0xc6, 0x92, 0xe4, 0x41, 0x16, 0x75, 0xe0, 0xbb,
	0xe3, 0x81, 0x74, 0xc7, 0xff, 0xf4, 0x4c, 0x32, 0xf2, 0x28, 0x4b, 0x88, 0xd7, 0x91, 0xdb, 0x9a,
	0x5f, 0x89, 0x7b, 0x35, 0x91, 0x8f, 0x99, 0x42, 0xf3, 0x26, 0xf4, 0xee, 0x15, 0xf3, 0xab, 0x41,
	0xb6, 0x6f, 0x0d, 0x9f, 0xf1, 0x70, 0xbc, 0x76, 0xd5, 0x4f, 0x48, 0x4d, 0xf1, 0x70, 0x9c, 0x90,
	0xfa, 0xce, 0xb3, 0x0d, 0x71, 0x80, 0x10, 0x99, 0x03, 0x04, 0x55, 0xe2, 0x86, 0x2b, 0x0f, 0x21,
	0xab, 0xb1, 0x44, 0xb3, 0x14, 0xd9, 0xbd, 0x4d, 0x41, 0xe4, 0xf5, 0xb9, 0xb8, 0x16, 0x01, 0xf8,
	0xb5, 0x16, 0x8a, 0x89, 0x35, 0x78, 0x9f, 0x45, 0xd9, 0xd5, 0x29, 0xb1, 0x44, 0x83, 0x2b, 0x27,
	0x03, 0x2f, 0x99, 0x0b, 0x88, 0xf0, 0x12, 0x8a, 0x1b, 0x3c, 0x33, 0x9b, 0x0c, 0x44, 0xeb, 0x7d,
	0xca, 0x34, 0xd6, 0x99, 0xe7, 0x44, 0xca, 0xbf, 0x20, 0xa5, 0x00, 0x6e, 0x47, 0xcc, 0xf7, 0x67,
	0xcb, 0xed, 0xf5, 0x02, 0x39, 0xe4, 0x41, 0x7b, 0x36, 0x1a, 0x41, 0x73, 0x68, 0x6a, 0xed, 0x91,
	0x8d, 0x6c, 0x36, 0xbd, 0x3e, 0x64, 0x73, 0x27, 0xf1, 0x95, 0xad, 0x33, 0x10, 0xdb, 0xe5, 0xd3,
	0xe2, 0x17, 0xe3, 0xbf, 0x61, 0x05, 0x63, 0x1d, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xe8,
	0x06, 0x35, 0xf6, 0x07, 0x00, 0x00,
}
