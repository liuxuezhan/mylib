// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_DBCacheProtocol.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Dbc ==> Gs
type DBC2GS_PROTOCOL_ID int32

const (
	DBC2GS_PROTOCOL_ID_DBC2GS_ILLEGAL                      DBC2GS_PROTOCOL_ID = 0
	DBC2GS_PROTOCOL_ID_DBC2GS_PONG                         DBC2GS_PROTOCOL_ID = 1
	DBC2GS_PROTOCOL_ID_DBC2GS_REGISTER                     DBC2GS_PROTOCOL_ID = 2
	DBC2GS_PROTOCOL_ID_DBC2GS_REQUIRE_GSID                 DBC2GS_PROTOCOL_ID = 3
	DBC2GS_PROTOCOL_ID_DBC2GS_PING                         DBC2GS_PROTOCOL_ID = 4
	DBC2GS_PROTOCOL_ID_DBC2GS_FWD_MSG_BEGIN                DBC2GS_PROTOCOL_ID = 5
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_CREATE_CHAR              DBC2GS_PROTOCOL_ID = 7
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_CHAR_ASSET          DBC2GS_PROTOCOL_ID = 8
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_CHAR_ALL_ASSETS     DBC2GS_PROTOCOL_ID = 9
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_WORLDDATA_ASSETS    DBC2GS_PROTOCOL_ID = 10
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_GLOBALACTION_ASSETS DBC2GS_PROTOCOL_ID = 11
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_GLOBALACTION_FINISH DBC2GS_PROTOCOL_ID = 12
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_WORLDDATA_FINISH    DBC2GS_PROTOCOL_ID = 13
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_MAIL_INFO           DBC2GS_PROTOCOL_ID = 14
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_LEAGUE_INFO         DBC2GS_PROTOCOL_ID = 15
	DBC2GS_PROTOCOL_ID_DBC2GS_RET_PULL_LEAGUE_FINISH       DBC2GS_PROTOCOL_ID = 16
	DBC2GS_PROTOCOL_ID_DBC2GS_FWD_MSG_END                  DBC2GS_PROTOCOL_ID = 150
	DBC2GS_PROTOCOL_ID_DBCGS_MAX                           DBC2GS_PROTOCOL_ID = 255
)

var DBC2GS_PROTOCOL_ID_name = map[int32]string{
	0:   "DBC2GS_ILLEGAL",
	1:   "DBC2GS_PONG",
	2:   "DBC2GS_REGISTER",
	3:   "DBC2GS_REQUIRE_GSID",
	4:   "DBC2GS_PING",
	5:   "DBC2GS_FWD_MSG_BEGIN",
	7:   "DBC2GS_RET_CREATE_CHAR",
	8:   "DBC2GS_RET_PULL_CHAR_ASSET",
	9:   "DBC2GS_RET_PULL_CHAR_ALL_ASSETS",
	10:  "DBC2GS_RET_PULL_WORLDDATA_ASSETS",
	11:  "DBC2GS_RET_PULL_GLOBALACTION_ASSETS",
	12:  "DBC2GS_RET_PULL_GLOBALACTION_FINISH",
	13:  "DBC2GS_RET_PULL_WORLDDATA_FINISH",
	14:  "DBC2GS_RET_PULL_MAIL_INFO",
	15:  "DBC2GS_RET_PULL_LEAGUE_INFO",
	16:  "DBC2GS_RET_PULL_LEAGUE_FINISH",
	150: "DBC2GS_FWD_MSG_END",
	255: "DBCGS_MAX",
}
var DBC2GS_PROTOCOL_ID_value = map[string]int32{
	"DBC2GS_ILLEGAL":                      0,
	"DBC2GS_PONG":                         1,
	"DBC2GS_REGISTER":                     2,
	"DBC2GS_REQUIRE_GSID":                 3,
	"DBC2GS_PING":                         4,
	"DBC2GS_FWD_MSG_BEGIN":                5,
	"DBC2GS_RET_CREATE_CHAR":              7,
	"DBC2GS_RET_PULL_CHAR_ASSET":          8,
	"DBC2GS_RET_PULL_CHAR_ALL_ASSETS":     9,
	"DBC2GS_RET_PULL_WORLDDATA_ASSETS":    10,
	"DBC2GS_RET_PULL_GLOBALACTION_ASSETS": 11,
	"DBC2GS_RET_PULL_GLOBALACTION_FINISH": 12,
	"DBC2GS_RET_PULL_WORLDDATA_FINISH":    13,
	"DBC2GS_RET_PULL_MAIL_INFO":           14,
	"DBC2GS_RET_PULL_LEAGUE_INFO":         15,
	"DBC2GS_RET_PULL_LEAGUE_FINISH":       16,
	"DBC2GS_FWD_MSG_END":                  150,
	"DBCGS_MAX":                           255,
}

func (x DBC2GS_PROTOCOL_ID) String() string {
	return proto.EnumName(DBC2GS_PROTOCOL_ID_name, int32(x))
}
func (DBC2GS_PROTOCOL_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// Gs ==> Dbc
type GS2DBC_PROTOCOL_ID int32

const (
	GS2DBC_PROTOCOL_ID_GS2DBC_ILLEGAL                        GS2DBC_PROTOCOL_ID = 0
	GS2DBC_PROTOCOL_ID_GS2DBC_PING                           GS2DBC_PROTOCOL_ID = 1
	GS2DBC_PROTOCOL_ID_GS2DBC_GSID                           GS2DBC_PROTOCOL_ID = 2
	GS2DBC_PROTOCOL_ID_GS2DBC_PONG                           GS2DBC_PROTOCOL_ID = 3
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_CHAR_LIST             GS2DBC_PROTOCOL_ID = 4
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_CREATE_CHAR                GS2DBC_PROTOCOL_ID = 5
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_SAVE_CHAR_ALL_ASSETS       GS2DBC_PROTOCOL_ID = 6
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_CHAR_ALL_ASSETS       GS2DBC_PROTOCOL_ID = 7
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_WORLDDATA_ASSETS      GS2DBC_PROTOCOL_ID = 8
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_SAVE_WORLDDATA_ASSETS      GS2DBC_PROTOCOL_ID = 9
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_DELETE_WORLDDATA_ASSETS    GS2DBC_PROTOCOL_ID = 10
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_GLOBALACTION_ASSETS   GS2DBC_PROTOCOL_ID = 11
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_SAVE_GLOBALACTION_ASSETS   GS2DBC_PROTOCOL_ID = 12
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_DELETE_GLOBALACTION_ASSETS GS2DBC_PROTOCOL_ID = 13
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_MAIL_DATA             GS2DBC_PROTOCOL_ID = 14
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_SAVE_MAIL_DATA             GS2DBC_PROTOCOL_ID = 15
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_CREATE_LEAGUE_INFO         GS2DBC_PROTOCOL_ID = 16
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_UPDATE_LEAGUE_INFO         GS2DBC_PROTOCOL_ID = 17
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_DELETE_LEAGUE_INFO         GS2DBC_PROTOCOL_ID = 18
	GS2DBC_PROTOCOL_ID_GS2DBC_REQ_PULL_ALL_LEAGUE_LIST       GS2DBC_PROTOCOL_ID = 19
	GS2DBC_PROTOCOL_ID_GS2DBC_FWD_MSG_END                    GS2DBC_PROTOCOL_ID = 100
	GS2DBC_PROTOCOL_ID_GS2DBC_MAX                            GS2DBC_PROTOCOL_ID = 255
)

var GS2DBC_PROTOCOL_ID_name = map[int32]string{
	0:   "GS2DBC_ILLEGAL",
	1:   "GS2DBC_PING",
	2:   "GS2DBC_GSID",
	3:   "GS2DBC_PONG",
	4:   "GS2DBC_REQ_PULL_CHAR_LIST",
	5:   "GS2DBC_REQ_CREATE_CHAR",
	6:   "GS2DBC_REQ_SAVE_CHAR_ALL_ASSETS",
	7:   "GS2DBC_REQ_PULL_CHAR_ALL_ASSETS",
	8:   "GS2DBC_REQ_PULL_WORLDDATA_ASSETS",
	9:   "GS2DBC_REQ_SAVE_WORLDDATA_ASSETS",
	10:  "GS2DBC_REQ_DELETE_WORLDDATA_ASSETS",
	11:  "GS2DBC_REQ_PULL_GLOBALACTION_ASSETS",
	12:  "GS2DBC_REQ_SAVE_GLOBALACTION_ASSETS",
	13:  "GS2DBC_REQ_DELETE_GLOBALACTION_ASSETS",
	14:  "GS2DBC_REQ_PULL_MAIL_DATA",
	15:  "GS2DBC_REQ_SAVE_MAIL_DATA",
	16:  "GS2DBC_REQ_CREATE_LEAGUE_INFO",
	17:  "GS2DBC_REQ_UPDATE_LEAGUE_INFO",
	18:  "GS2DBC_REQ_DELETE_LEAGUE_INFO",
	19:  "GS2DBC_REQ_PULL_ALL_LEAGUE_LIST",
	100: "GS2DBC_FWD_MSG_END",
	255: "GS2DBC_MAX",
}
var GS2DBC_PROTOCOL_ID_value = map[string]int32{
	"GS2DBC_ILLEGAL":                        0,
	"GS2DBC_PING":                           1,
	"GS2DBC_GSID":                           2,
	"GS2DBC_PONG":                           3,
	"GS2DBC_REQ_PULL_CHAR_LIST":             4,
	"GS2DBC_REQ_CREATE_CHAR":                5,
	"GS2DBC_REQ_SAVE_CHAR_ALL_ASSETS":       6,
	"GS2DBC_REQ_PULL_CHAR_ALL_ASSETS":       7,
	"GS2DBC_REQ_PULL_WORLDDATA_ASSETS":      8,
	"GS2DBC_REQ_SAVE_WORLDDATA_ASSETS":      9,
	"GS2DBC_REQ_DELETE_WORLDDATA_ASSETS":    10,
	"GS2DBC_REQ_PULL_GLOBALACTION_ASSETS":   11,
	"GS2DBC_REQ_SAVE_GLOBALACTION_ASSETS":   12,
	"GS2DBC_REQ_DELETE_GLOBALACTION_ASSETS": 13,
	"GS2DBC_REQ_PULL_MAIL_DATA":             14,
	"GS2DBC_REQ_SAVE_MAIL_DATA":             15,
	"GS2DBC_REQ_CREATE_LEAGUE_INFO":         16,
	"GS2DBC_REQ_UPDATE_LEAGUE_INFO":         17,
	"GS2DBC_REQ_DELETE_LEAGUE_INFO":         18,
	"GS2DBC_REQ_PULL_ALL_LEAGUE_LIST":       19,
	"GS2DBC_FWD_MSG_END":                    100,
	"GS2DBC_MAX":                            255,
}

func (x GS2DBC_PROTOCOL_ID) String() string {
	return proto.EnumName(GS2DBC_PROTOCOL_ID_name, int32(x))
}
func (GS2DBC_PROTOCOL_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type CHAR_RET_CODE int32

const (
	CHAR_RET_CODE_CREATE_CHAR_SUCCESS CHAR_RET_CODE = 0
	CHAR_RET_CODE_CHAR_NAME_EXIST     CHAR_RET_CODE = 2
	CHAR_RET_CODE_CHAR_DATA_NOTEXIST  CHAR_RET_CODE = 3
	CHAR_RET_CODE_CHAR_DATA_SUCESS    CHAR_RET_CODE = 4
)

var CHAR_RET_CODE_name = map[int32]string{
	0: "CREATE_CHAR_SUCCESS",
	2: "CHAR_NAME_EXIST",
	3: "CHAR_DATA_NOTEXIST",
	4: "CHAR_DATA_SUCESS",
}
var CHAR_RET_CODE_value = map[string]int32{
	"CREATE_CHAR_SUCCESS": 0,
	"CHAR_NAME_EXIST":     2,
	"CHAR_DATA_NOTEXIST":  3,
	"CHAR_DATA_SUCESS":    4,
}

func (x CHAR_RET_CODE) String() string {
	return proto.EnumName(CHAR_RET_CODE_name, int32(x))
}
func (CHAR_RET_CODE) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

// DBC -> GS -> DBC ping & pong
type MG_DBC_PING_GS_PONG struct {
	QwPingNs uint64 `protobuf:"fixed64,1,opt,name=qwPingNs" json:"qwPingNs,omitempty"`
}

func (m *MG_DBC_PING_GS_PONG) Reset()                    { *m = MG_DBC_PING_GS_PONG{} }
func (m *MG_DBC_PING_GS_PONG) String() string            { return proto.CompactTextString(m) }
func (*MG_DBC_PING_GS_PONG) ProtoMessage()               {}
func (*MG_DBC_PING_GS_PONG) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *MG_DBC_PING_GS_PONG) GetQwPingNs() uint64 {
	if m != nil {
		return m.QwPingNs
	}
	return 0
}

// GS -> DBC -> GS ping & pong
type MG_GS_PING_DBC_PONG struct {
	FCurTime float32 `protobuf:"fixed32,1,opt,name=fCurTime" json:"fCurTime,omitempty"`
}

func (m *MG_GS_PING_DBC_PONG) Reset()                    { *m = MG_GS_PING_DBC_PONG{} }
func (m *MG_GS_PING_DBC_PONG) String() string            { return proto.CompactTextString(m) }
func (*MG_GS_PING_DBC_PONG) ProtoMessage()               {}
func (*MG_GS_PING_DBC_PONG) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *MG_GS_PING_DBC_PONG) GetFCurTime() float32 {
	if m != nil {
		return m.FCurTime
	}
	return 0
}

// GS -> DBC 创建一个新角色
type MG_GS2DBC_REQ_CREATE_NEW_CHAR struct {
	DwGsId   int32 `protobuf:"varint,1,opt,name=dwGsId" json:"dwGsId,omitempty"`
	DwUserId int64 `protobuf:"varint,2,opt,name=dwUserId" json:"dwUserId,omitempty"`
}

func (m *MG_GS2DBC_REQ_CREATE_NEW_CHAR) Reset()                    { *m = MG_GS2DBC_REQ_CREATE_NEW_CHAR{} }
func (m *MG_GS2DBC_REQ_CREATE_NEW_CHAR) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_CREATE_NEW_CHAR) ProtoMessage()               {}
func (*MG_GS2DBC_REQ_CREATE_NEW_CHAR) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *MG_GS2DBC_REQ_CREATE_NEW_CHAR) GetDwGsId() int32 {
	if m != nil {
		return m.DwGsId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_CREATE_NEW_CHAR) GetDwUserId() int64 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

// GS -> DBC 请求获取某个角色的数据
type MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA struct {
	DwUserId   int64 `protobuf:"varint,1,opt,name=dwUserId" json:"dwUserId,omitempty"`
	NSessionId int64 `protobuf:"varint,2,opt,name=nSessionId" json:"nSessionId,omitempty"`
	NLogicGsId int32 `protobuf:"varint,3,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
}

func (m *MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) Reset()         { *m = MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA{} }
func (m *MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) ProtoMessage()    {}
func (*MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{3}
}

func (m *MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) GetDwUserId() int64 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) GetNSessionId() int64 {
	if m != nil {
		return m.NSessionId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

// GS <-> DBC 角色数据保存和拉取返回
type MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA struct {
	DwResultCode int64  `protobuf:"varint,1,opt,name=dwResultCode" json:"dwResultCode,omitempty"`
	DwUserId     int64  `protobuf:"varint,2,opt,name=dwUserId" json:"dwUserId,omitempty"`
	Charinfo     string `protobuf:"bytes,3,opt,name=charinfo" json:"charinfo,omitempty"`
}

func (m *MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) Reset()         { *m = MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA{} }
func (m *MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) ProtoMessage()    {}
func (*MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{4}
}

func (m *MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) GetDwResultCode() int64 {
	if m != nil {
		return m.DwResultCode
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) GetDwUserId() int64 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA) GetCharinfo() string {
	if m != nil {
		return m.Charinfo
	}
	return ""
}

// GS->DBC 请求获取地图资产
type MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA struct {
	NLogicGsId int32 `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
}

func (m *MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA) Reset() {
	*m = MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA{}
}
func (m *MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA) ProtoMessage()    {}
func (*MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{5}
}

func (m *MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

// GS<->DBC 地图资产的保存和拉取返回
type MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA struct {
	NLogicGsId int32                   `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
	Datas      []*ST_WorldDataEntry_PB `protobuf:"bytes,2,rep,name=datas" json:"datas,omitempty"`
}

func (m *MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) Reset() {
	*m = MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA{}
}
func (m *MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) ProtoMessage()    {}
func (*MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{6}
}

func (m *MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA) GetDatas() []*ST_WorldDataEntry_PB {
	if m != nil {
		return m.Datas
	}
	return nil
}

// GS<->DBC 全局action的保存和拉取返回
type MG_DBC2GS_PUSH_PULL_ACTION_DATA struct {
	Actionid uint64                   `protobuf:"varint,1,opt,name=actionid" json:"actionid,omitempty"`
	Action   *ST_GlobalActionEntry_PB `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
}

func (m *MG_DBC2GS_PUSH_PULL_ACTION_DATA) Reset()                    { *m = MG_DBC2GS_PUSH_PULL_ACTION_DATA{} }
func (m *MG_DBC2GS_PUSH_PULL_ACTION_DATA) String() string            { return proto.CompactTextString(m) }
func (*MG_DBC2GS_PUSH_PULL_ACTION_DATA) ProtoMessage()               {}
func (*MG_DBC2GS_PUSH_PULL_ACTION_DATA) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *MG_DBC2GS_PUSH_PULL_ACTION_DATA) GetActionid() uint64 {
	if m != nil {
		return m.Actionid
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_PULL_ACTION_DATA) GetAction() *ST_GlobalActionEntry_PB {
	if m != nil {
		return m.Action
	}
	return nil
}

type MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA struct {
	NLogicGsId int32                              `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
	Actionlist []*MG_DBC2GS_PUSH_PULL_ACTION_DATA `protobuf:"bytes,2,rep,name=actionlist" json:"actionlist,omitempty"`
}

func (m *MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) Reset() {
	*m = MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA{}
}
func (m *MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) ProtoMessage()    {}
func (*MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{8}
}

func (m *MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA) GetActionlist() []*MG_DBC2GS_PUSH_PULL_ACTION_DATA {
	if m != nil {
		return m.Actionlist
	}
	return nil
}

// GS->DBC 请求获取action资产
type MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA struct {
	NLogicGsId int32 `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
}

func (m *MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA) Reset()         { *m = MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA{} }
func (m *MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA) String() string { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA) ProtoMessage()    {}
func (*MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{9}
}

func (m *MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

// GS->DBC 请求邮件数据返回
type MG_GS2DBC_REQ_MAIL_INFO struct {
	NLogicGsId int32 `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
	MailId     int64 `protobuf:"varint,2,opt,name=mailId" json:"mailId,omitempty"`
}

func (m *MG_GS2DBC_REQ_MAIL_INFO) Reset()                    { *m = MG_GS2DBC_REQ_MAIL_INFO{} }
func (m *MG_GS2DBC_REQ_MAIL_INFO) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_MAIL_INFO) ProtoMessage()               {}
func (*MG_GS2DBC_REQ_MAIL_INFO) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *MG_GS2DBC_REQ_MAIL_INFO) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_MAIL_INFO) GetMailId() int64 {
	if m != nil {
		return m.MailId
	}
	return 0
}

// DBC->GS 邮件数据返回
type MG_DBC2GS_PUSH_MAIL_INFO struct {
	MailId   int64  `protobuf:"varint,1,opt,name=mailId" json:"mailId,omitempty"`
	MailInfo string `protobuf:"bytes,2,opt,name=mailInfo" json:"mailInfo,omitempty"`
}

func (m *MG_DBC2GS_PUSH_MAIL_INFO) Reset()                    { *m = MG_DBC2GS_PUSH_MAIL_INFO{} }
func (m *MG_DBC2GS_PUSH_MAIL_INFO) String() string            { return proto.CompactTextString(m) }
func (*MG_DBC2GS_PUSH_MAIL_INFO) ProtoMessage()               {}
func (*MG_DBC2GS_PUSH_MAIL_INFO) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *MG_DBC2GS_PUSH_MAIL_INFO) GetMailId() int64 {
	if m != nil {
		return m.MailId
	}
	return 0
}

func (m *MG_DBC2GS_PUSH_MAIL_INFO) GetMailInfo() string {
	if m != nil {
		return m.MailInfo
	}
	return ""
}

// 请求保存邮件资产
type MG_GS2DBC_REQ_SAVE_MAIL struct {
	NLogicGsId int32  `protobuf:"varint,1,opt,name=nLogicGsId" json:"nLogicGsId,omitempty"`
	Data       string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *MG_GS2DBC_REQ_SAVE_MAIL) Reset()                    { *m = MG_GS2DBC_REQ_SAVE_MAIL{} }
func (m *MG_GS2DBC_REQ_SAVE_MAIL) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_SAVE_MAIL) ProtoMessage()               {}
func (*MG_GS2DBC_REQ_SAVE_MAIL) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *MG_GS2DBC_REQ_SAVE_MAIL) GetNLogicGsId() int32 {
	if m != nil {
		return m.NLogicGsId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_SAVE_MAIL) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type MG_LEAGUE_LIST struct {
	DwGsId     int32                    `protobuf:"varint,1,opt,name=dwGsId" json:"dwGsId,omitempty"`
	LeagueList []*ST_League_Detail_Info `protobuf:"bytes,2,rep,name=leagueList" json:"leagueList,omitempty"`
}

func (m *MG_LEAGUE_LIST) Reset()                    { *m = MG_LEAGUE_LIST{} }
func (m *MG_LEAGUE_LIST) String() string            { return proto.CompactTextString(m) }
func (*MG_LEAGUE_LIST) ProtoMessage()               {}
func (*MG_LEAGUE_LIST) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *MG_LEAGUE_LIST) GetDwGsId() int32 {
	if m != nil {
		return m.DwGsId
	}
	return 0
}

func (m *MG_LEAGUE_LIST) GetLeagueList() []*ST_League_Detail_Info {
	if m != nil {
		return m.LeagueList
	}
	return nil
}

type MG_GS2DBC_PULL_ALL_LEAGUE struct {
	DwGsId int32 `protobuf:"varint,1,opt,name=dwGsId" json:"dwGsId,omitempty"`
}

func (m *MG_GS2DBC_PULL_ALL_LEAGUE) Reset()                    { *m = MG_GS2DBC_PULL_ALL_LEAGUE{} }
func (m *MG_GS2DBC_PULL_ALL_LEAGUE) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_PULL_ALL_LEAGUE) ProtoMessage()               {}
func (*MG_GS2DBC_PULL_ALL_LEAGUE) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *MG_GS2DBC_PULL_ALL_LEAGUE) GetDwGsId() int32 {
	if m != nil {
		return m.DwGsId
	}
	return 0
}

// GS -> DBC 修改角色名
type MG_GS2DBC_REQ_MODIFY_CHAR_NAME struct {
	DwUserId   int64  `protobuf:"varint,1,opt,name=dwUserId" json:"dwUserId,omitempty"`
	DwGsId     int32  `protobuf:"varint,2,opt,name=dwGsId" json:"dwGsId,omitempty"`
	SzCharName string `protobuf:"bytes,3,opt,name=szCharName" json:"szCharName,omitempty"`
	DwRealGsId int32  `protobuf:"varint,4,opt,name=dwRealGsId" json:"dwRealGsId,omitempty"`
}

func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) Reset()                    { *m = MG_GS2DBC_REQ_MODIFY_CHAR_NAME{} }
func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_REQ_MODIFY_CHAR_NAME) ProtoMessage()               {}
func (*MG_GS2DBC_REQ_MODIFY_CHAR_NAME) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) GetDwUserId() int64 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) GetDwGsId() int32 {
	if m != nil {
		return m.DwGsId
	}
	return 0
}

func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) GetSzCharName() string {
	if m != nil {
		return m.SzCharName
	}
	return ""
}

func (m *MG_GS2DBC_REQ_MODIFY_CHAR_NAME) GetDwRealGsId() int32 {
	if m != nil {
		return m.DwRealGsId
	}
	return 0
}

// DBC -> GS 角色改名完成
type MG_GS2DBC_RET_MODIFY_CHAR_NAME struct {
	DwUserId     int64 `protobuf:"varint,1,opt,name=dwUserId" json:"dwUserId,omitempty"`
	DwResultCode int64 `protobuf:"varint,2,opt,name=dwResultCode" json:"dwResultCode,omitempty"`
}

func (m *MG_GS2DBC_RET_MODIFY_CHAR_NAME) Reset()                    { *m = MG_GS2DBC_RET_MODIFY_CHAR_NAME{} }
func (m *MG_GS2DBC_RET_MODIFY_CHAR_NAME) String() string            { return proto.CompactTextString(m) }
func (*MG_GS2DBC_RET_MODIFY_CHAR_NAME) ProtoMessage()               {}
func (*MG_GS2DBC_RET_MODIFY_CHAR_NAME) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *MG_GS2DBC_RET_MODIFY_CHAR_NAME) GetDwUserId() int64 {
	if m != nil {
		return m.DwUserId
	}
	return 0
}

func (m *MG_GS2DBC_RET_MODIFY_CHAR_NAME) GetDwResultCode() int64 {
	if m != nil {
		return m.DwResultCode
	}
	return 0
}

func init() {
	proto.RegisterType((*MG_DBC_PING_GS_PONG)(nil), "proto_micro.MG_DBC_PING_GS_PONG")
	proto.RegisterType((*MG_GS_PING_DBC_PONG)(nil), "proto_micro.MG_GS_PING_DBC_PONG")
	proto.RegisterType((*MG_GS2DBC_REQ_CREATE_NEW_CHAR)(nil), "proto_micro.MG_GS2DBC_REQ_CREATE_NEW_CHAR")
	proto.RegisterType((*MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA)(nil), "proto_micro.MG_GS2DBC_REQ_PULL_CHAR_ASSETS_DATA")
	proto.RegisterType((*MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA)(nil), "proto_micro.MG_DBC2GS_PUSH_PULL_CHAR_ASSETS_DATA")
	proto.RegisterType((*MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA)(nil), "proto_micro.MG_GS2DBC_REQ_PULL_WORLDDATA_ASSETS_DATA")
	proto.RegisterType((*MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA)(nil), "proto_micro.MG_DBC2GS_PUSH_PULL_WORLDDATA_ASSETS_DATA")
	proto.RegisterType((*MG_DBC2GS_PUSH_PULL_ACTION_DATA)(nil), "proto_micro.MG_DBC2GS_PUSH_PULL_ACTION_DATA")
	proto.RegisterType((*MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA)(nil), "proto_micro.MG_DBC2GS_PUSH_PULL_ACTION_ASSETS_DATA")
	proto.RegisterType((*MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA)(nil), "proto_micro.MG_GS2DBC_REQ_PULL_ACTION_ASSETS_DATA")
	proto.RegisterType((*MG_GS2DBC_REQ_MAIL_INFO)(nil), "proto_micro.MG_GS2DBC_REQ_MAIL_INFO")
	proto.RegisterType((*MG_DBC2GS_PUSH_MAIL_INFO)(nil), "proto_micro.MG_DBC2GS_PUSH_MAIL_INFO")
	proto.RegisterType((*MG_GS2DBC_REQ_SAVE_MAIL)(nil), "proto_micro.MG_GS2DBC_REQ_SAVE_MAIL")
	proto.RegisterType((*MG_LEAGUE_LIST)(nil), "proto_micro.MG_LEAGUE_LIST")
	proto.RegisterType((*MG_GS2DBC_PULL_ALL_LEAGUE)(nil), "proto_micro.MG_GS2DBC_PULL_ALL_LEAGUE")
	proto.RegisterType((*MG_GS2DBC_REQ_MODIFY_CHAR_NAME)(nil), "proto_micro.MG_GS2DBC_REQ_MODIFY_CHAR_NAME")
	proto.RegisterType((*MG_GS2DBC_RET_MODIFY_CHAR_NAME)(nil), "proto_micro.MG_GS2DBC_RET_MODIFY_CHAR_NAME")
	proto.RegisterEnum("proto_micro.DBC2GS_PROTOCOL_ID", DBC2GS_PROTOCOL_ID_name, DBC2GS_PROTOCOL_ID_value)
	proto.RegisterEnum("proto_micro.GS2DBC_PROTOCOL_ID", GS2DBC_PROTOCOL_ID_name, GS2DBC_PROTOCOL_ID_value)
	proto.RegisterEnum("proto_micro.CHAR_RET_CODE", CHAR_RET_CODE_name, CHAR_RET_CODE_value)
}

func init() { proto.RegisterFile("MG_DBCacheProtocol.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 1080 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x73, 0xdb, 0x44,
	0x18, 0xae, 0xfc, 0xd5, 0xe4, 0xcd, 0xd7, 0xb2, 0x29, 0x49, 0x1a, 0x26, 0x1f, 0x55, 0xd2, 0x92,
	0x76, 0x98, 0xcc, 0x90, 0x1e, 0xb8, 0x70, 0x91, 0xa5, 0x8d, 0x22, 0x46, 0x96, 0x1c, 0x49, 0x26,
	0xe5, 0xb4, 0xa8, 0xb6, 0x9b, 0x68, 0x50, 0x2c, 0xb0, 0x9d, 0xc9, 0x00, 0x17, 0x60, 0xf8, 0x09,
	0x4c, 0x6f, 0xfc, 0x1d, 0xfe, 0x16, 0xcc, 0xae, 0xd6, 0xb2, 0xb4, 0x96, 0xe3, 0x09, 0x27, 0x6b,
	0xdf, 0x7d, 0xde, 0xef, 0x47, 0x8f, 0x0c, 0x3b, 0x2d, 0x93, 0x1a, 0x4d, 0x3d, 0xec, 0xde, 0xf4,
	0xdb, 0xc3, 0x64, 0x9c, 0x74, 0x93, 0xf8, 0xf4, 0x47, 0xf6, 0x80, 0x57, 0xf8, 0x0f, 0xbd, 0x8d,
	0xba, 0xc3, 0x64, 0xf7, 0xd3, 0x96, 0x49, 0xcd, 0xf0, 0x56, 0xc2, 0xa8, 0x5f, 0xc2, 0x66, 0xea,
	0x4f, 0xdb, 0x96, 0x63, 0x52, 0xd3, 0xa7, 0x6d, 0xd7, 0x31, 0xf1, 0x2e, 0x2c, 0xfd, 0x74, 0xdf,
	0x8e, 0x06, 0xd7, 0xce, 0x68, 0x47, 0x39, 0x54, 0x4e, 0x1a, 0x5e, 0x76, 0x16, 0x2e, 0x0c, 0xc9,
	0x3c, 0xb8, 0xab, 0x70, 0xf9, 0xa0, 0xdf, 0x0d, 0x83, 0xe8, 0xb6, 0xcf, 0x5d, 0x2a, 0x5e, 0x76,
	0x56, 0x7d, 0xd8, 0xe3, 0x2e, 0x67, 0x0c, 0xed, 0x91, 0x4b, 0xaa, 0x7b, 0x44, 0x0b, 0x08, 0x75,
	0xc8, 0x15, 0xd5, 0x2f, 0x34, 0x0f, 0x6f, 0x41, 0xa3, 0x77, 0x6f, 0x8e, 0xac, 0x1e, 0x77, 0xad,
	0x7b, 0xe2, 0xc4, 0x82, 0xf6, 0xee, 0x3b, 0xa3, 0xfe, 0xd0, 0xea, 0xed, 0x54, 0x0e, 0x95, 0x93,
	0xaa, 0x97, 0x9d, 0xd5, 0xdf, 0x15, 0x38, 0x2a, 0x46, 0x6d, 0x77, 0x6c, 0x9b, 0xc7, 0xa3, 0x9a,
	0xef, 0x93, 0xc0, 0xa7, 0x86, 0x16, 0x68, 0x85, 0x18, 0x4a, 0x31, 0x06, 0xde, 0x07, 0x18, 0xf8,
	0xfd, 0xd1, 0x28, 0x4a, 0x06, 0x59, 0x86, 0x9c, 0x85, 0xdf, 0xdb, 0xc9, 0x75, 0xd4, 0xe5, 0xb5,
	0x55, 0x79, 0x6d, 0x39, 0x8b, 0xfa, 0x87, 0x02, 0xc7, 0xe9, 0xfc, 0xce, 0xd8, 0x40, 0x3a, 0xfe,
	0xc5, 0x9c, 0x22, 0x54, 0x58, 0xed, 0xdd, 0x7b, 0xfd, 0xd1, 0x5d, 0x3c, 0xd6, 0x93, 0x5e, 0x5f,
	0x14, 0x52, 0xb0, 0x3d, 0xd4, 0x2c, 0xbb, 0xeb, 0xde, 0x84, 0xc3, 0x68, 0xf0, 0x21, 0xe1, 0x65,
	0x2c, 0x7b, 0xd9, 0x59, 0xfd, 0x06, 0x4e, 0x4a, 0xe6, 0x70, 0xe5, 0x7a, 0xb6, 0xc1, 0x72, 0x17,
	0xea, 0x28, 0x36, 0xa4, 0xcc, 0x34, 0xf4, 0xa7, 0x02, 0xaf, 0xcb, 0x1a, 0xfa, 0x5f, 0xd1, 0xf0,
	0x57, 0x50, 0xef, 0x85, 0xe3, 0x70, 0xb4, 0x53, 0x39, 0xac, 0x9e, 0xac, 0x9c, 0xbd, 0x38, 0xcd,
	0x31, 0xf2, 0xd4, 0x0f, 0xe8, 0x55, 0x32, 0x8c, 0x7b, 0x46, 0x38, 0x0e, 0xc9, 0x60, 0x3c, 0xfc,
	0x99, 0xb6, 0x9b, 0x5e, 0x8a, 0x57, 0x7f, 0x85, 0x83, 0xb2, 0x2a, 0x34, 0x3d, 0xb0, 0x5c, 0x27,
	0x5b, 0x6b, 0xd8, 0x1d, 0x47, 0xc9, 0x20, 0x4a, 0x33, 0xd7, 0xbc, 0xec, 0x8c, 0xbf, 0x86, 0x46,
	0xfa, 0xcc, 0xe7, 0xb8, 0x72, 0x76, 0x2c, 0x27, 0x36, 0xe3, 0xe4, 0x7d, 0x18, 0x6b, 0x1c, 0x93,
	0xe5, 0x16, 0x3e, 0xea, 0x47, 0x05, 0x5e, 0x3d, 0x90, 0xfd, 0x31, 0x03, 0xb0, 0x01, 0xd2, 0xa0,
	0x71, 0x34, 0x1a, 0x8b, 0x29, 0x7c, 0x51, 0x28, 0x66, 0x41, 0x9b, 0x5e, 0xce, 0x5f, 0x35, 0xe1,
	0x65, 0xc9, 0xa2, 0x1f, 0x5f, 0x96, 0x7a, 0x09, 0xdb, 0xc5, 0x40, 0x2d, 0xcd, 0xb2, 0xa9, 0xe5,
	0x9c, 0xbb, 0x0b, 0x3b, 0xda, 0x82, 0xc6, 0x6d, 0x18, 0xc5, 0x19, 0x45, 0xc5, 0x49, 0x75, 0x26,
	0x42, 0x94, 0xb5, 0x32, 0x8d, 0x39, 0xf5, 0x51, 0xf2, 0x3e, 0x6c, 0x85, 0xfc, 0x89, 0x91, 0xba,
	0x92, 0x92, 0x7a, 0x72, 0x56, 0x5b, 0x72, 0x89, 0xbe, 0xf6, 0x2d, 0xe1, 0x31, 0x17, 0x96, 0x88,
	0xa1, 0xc6, 0x58, 0x24, 0x42, 0xf2, 0x67, 0x35, 0x86, 0xf5, 0x96, 0x49, 0x6d, 0xa2, 0x99, 0x1d,
	0x42, 0x6d, 0xcb, 0x0f, 0xe6, 0x4a, 0x4e, 0x13, 0x20, 0xee, 0x87, 0xd7, 0x77, 0x7d, 0x7b, 0xba,
	0x32, 0x55, 0xe6, 0x8f, 0xcd, 0x11, 0xd4, 0xe8, 0x8f, 0xc3, 0x28, 0xa6, 0xac, 0x60, 0x2f, 0xe7,
	0xa5, 0xbe, 0x85, 0xe7, 0xd3, 0xe2, 0xd3, 0x25, 0xd9, 0xb6, 0xc8, 0x3e, 0x2f, 0xb1, 0xfa, 0x97,
	0x02, 0xfb, 0xd2, 0x56, 0x5c, 0xc3, 0x3a, 0xff, 0x2e, 0x15, 0x13, 0x47, 0x6b, 0x91, 0x07, 0xa5,
	0x6c, 0x1a, 0xb6, 0x52, 0xe8, 0x67, 0x1f, 0x60, 0xf4, 0x8b, 0x7e, 0x13, 0x0e, 0x9d, 0xf0, 0xb6,
	0x2f, 0xb4, 0x23, 0x67, 0x61, 0xf7, 0x4c, 0x85, 0xc2, 0x98, 0xfb, 0xd6, 0xd2, 0x69, 0x4e, 0x2d,
	0xea, 0xf7, 0xc5, 0xaa, 0x82, 0xc7, 0x55, 0x25, 0xeb, 0x5e, 0x65, 0x56, 0xf7, 0xde, 0xfc, 0x5d,
	0x03, 0x3c, 0x21, 0x8e, 0xe7, 0x06, 0xae, 0xee, 0xda, 0xd4, 0x32, 0x30, 0x86, 0x75, 0x61, 0xb5,
	0x6c, 0x9b, 0x98, 0x9a, 0x8d, 0x9e, 0xe0, 0x0d, 0x58, 0x99, 0x20, 0x5d, 0xc7, 0x44, 0x0a, 0xde,
	0x84, 0x0d, 0x61, 0xf0, 0x88, 0x69, 0xf9, 0x01, 0xf1, 0x50, 0x05, 0x6f, 0xc3, 0x66, 0x66, 0xbc,
	0xec, 0x58, 0x1e, 0xa1, 0xa6, 0x6f, 0x19, 0xa8, 0x9a, 0x77, 0xb7, 0x1c, 0x13, 0xd5, 0xf0, 0x0e,
	0x3c, 0x13, 0x86, 0xf3, 0x2b, 0x83, 0xb6, 0x7c, 0x93, 0x36, 0x89, 0x69, 0x39, 0xa8, 0x8e, 0x77,
	0x61, 0x2b, 0x8b, 0x11, 0x4c, 0xbe, 0x57, 0xac, 0x67, 0xf4, 0x14, 0xef, 0xc3, 0x6e, 0xee, 0x4e,
	0x12, 0x7c, 0xb4, 0x84, 0x8f, 0xe0, 0xa0, 0xfc, 0x9e, 0x11, 0x81, 0xbf, 0xa6, 0x68, 0x19, 0x1f,
	0xc3, 0xa1, 0x0c, 0x92, 0x45, 0x16, 0x01, 0xfe, 0x1c, 0x8e, 0x64, 0x94, 0x69, 0xbb, 0x4d, 0xcd,
	0x2e, 0xbc, 0xf5, 0x68, 0x65, 0x21, 0xf0, 0xdc, 0x72, 0x2c, 0xff, 0x02, 0xad, 0x3e, 0x9c, 0x57,
	0xa0, 0xd6, 0xf0, 0x1e, 0x3c, 0x97, 0x51, 0xd9, 0xfb, 0x8c, 0xd6, 0xf1, 0x01, 0x7c, 0x26, 0x5f,
	0x8b, 0x77, 0x8b, 0x03, 0x36, 0xf0, 0x0b, 0xd8, 0x9b, 0x03, 0x10, 0x29, 0x10, 0xde, 0xce, 0xb6,
	0x3e, 0x99, 0x3d, 0x71, 0x0c, 0xf4, 0x51, 0xc1, 0xeb, 0xb0, 0x6c, 0x34, 0x75, 0xd3, 0xa7, 0x2d,
	0xed, 0x1d, 0xfa, 0x57, 0x79, 0xf3, 0x4f, 0x1d, 0xf0, 0xe4, 0x5d, 0x2a, 0xf2, 0x43, 0x58, 0x0b,
	0xfc, 0x98, 0x20, 0x2d, 0xce, 0x8f, 0xa9, 0x81, 0x53, 0xa0, 0x92, 0x47, 0x30, 0x06, 0x55, 0x59,
	0xa7, 0xa5, 0x7f, 0x21, 0x98, 0x48, 0xa0, 0x1a, 0xe3, 0xc1, 0xec, 0xff, 0x16, 0xce, 0x83, 0x3a,
	0xdb, 0xb3, 0x2c, 0x50, 0xf2, 0x9e, 0x1b, 0x12, 0xa8, 0x94, 0x0c, 0x4f, 0xd9, 0x52, 0x16, 0x7d,
	0xbf, 0xd1, 0x92, 0x84, 0xe2, 0xf9, 0x66, 0x50, 0xcb, 0xf8, 0x15, 0xa8, 0x39, 0x94, 0x41, 0x6c,
	0x12, 0x90, 0x39, 0xd4, 0x92, 0x73, 0xce, 0xa5, 0x96, 0x9c, 0xb6, 0x0c, 0xb8, 0x8a, 0x5f, 0xc3,
	0xcb, 0xd9, 0xcc, 0x65, 0xd0, 0xb5, 0xb2, 0xa9, 0x73, 0x7e, 0xb1, 0x12, 0xd1, 0xba, 0x74, 0x9d,
	0x49, 0x7f, 0x7a, 0xcd, 0xd9, 0x35, 0xbb, 0x94, 0x3c, 0x01, 0x91, 0x04, 0xe9, 0xb4, 0x0d, 0x19,
	0xf2, 0x89, 0x04, 0x11, 0xe5, 0xe6, 0x21, 0xb8, 0x6c, 0x79, 0x53, 0x25, 0x4f, 0x29, 0xb2, 0x89,
	0xb7, 0x32, 0x7a, 0xe6, 0x89, 0xdc, 0xc3, 0x1b, 0x00, 0xc2, 0x2e, 0x88, 0xfc, 0x03, 0xac, 0xf1,
	0xd5, 0x73, 0x45, 0x71, 0x0d, 0xc2, 0x84, 0x2a, 0xc7, 0x28, 0xea, 0x77, 0x74, 0x9d, 0xf8, 0x3e,
	0x7a, 0xc2, 0x64, 0x2d, 0xd3, 0x57, 0x4a, 0xde, 0xb1, 0x3c, 0x15, 0x96, 0x87, 0x1b, 0xf9, 0x1a,
	0x1d, 0x37, 0x48, 0xed, 0x55, 0xfc, 0x0c, 0xd0, 0xd4, 0xee, 0x77, 0x78, 0x88, 0x5a, 0xb3, 0x7e,
	0x51, 0xfd, 0x4d, 0x79, 0xf2, 0xbe, 0xc1, 0xbf, 0x5c, 0x6f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0x7c, 0x9d, 0x3b, 0x73, 0x27, 0x0c, 0x00, 0x00,
}
