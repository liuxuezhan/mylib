// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MG_GameProtocol.proto

package proto_micro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ST_CharBasic_Server_PB struct {
	Uid                       uint64               `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Charname                  string               `protobuf:"bytes,2,opt,name=charname" json:"charname,omitempty"`
	Signature                 string               `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	Location                  int32                `protobuf:"varint,4,opt,name=location" json:"location,omitempty"`
	Worlddataid               uint64               `protobuf:"varint,5,opt,name=worlddataid" json:"worlddataid,omitempty"`
	LordIcon                  string               `protobuf:"bytes,6,opt,name=lordIcon" json:"lordIcon,omitempty"`
	AvatarBoxID               uint32               `protobuf:"varint,7,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	Avatar                    string               `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
	LastRefreshTimestamp      uint64               `protobuf:"varint,9,opt,name=lastRefreshTimestamp" json:"lastRefreshTimestamp,omitempty"`
	Language                  uint32               `protobuf:"varint,10,opt,name=language" json:"language,omitempty"`
	LoginTimestamp            uint64               `protobuf:"varint,11,opt,name=loginTimestamp" json:"loginTimestamp,omitempty"`
	ForbidLogin               uint64               `protobuf:"varint,12,opt,name=forbidLogin" json:"forbidLogin,omitempty"`
	CreateTime                uint64               `protobuf:"varint,13,opt,name=createTime" json:"createTime,omitempty"`
	ForbidLoginDur            uint64               `protobuf:"varint,14,opt,name=forbidLoginDur" json:"forbidLoginDur,omitempty"`
	ForbidLoginMsg            string               `protobuf:"bytes,15,opt,name=forbidLoginMsg" json:"forbidLoginMsg,omitempty"`
	NickName                  string               `protobuf:"bytes,16,opt,name=nickName" json:"nickName,omitempty"`
	Platform                  uint32               `protobuf:"varint,17,opt,name=platform" json:"platform,omitempty"`
	LastLogoutTime            uint64               `protobuf:"varint,18,opt,name=lastLogoutTime" json:"lastLogoutTime,omitempty"`
	ChangedName               bool                 `protobuf:"varint,19,opt,name=changedName" json:"changedName,omitempty"`
	AvatarFileName            string               `protobuf:"bytes,20,opt,name=avatarFileName" json:"avatarFileName,omitempty"`
	LogFileName               string               `protobuf:"bytes,21,opt,name=logFileName" json:"logFileName,omitempty"`
	NextUploadAvatarTimestamp uint64               `protobuf:"varint,22,opt,name=nextUploadAvatarTimestamp" json:"nextUploadAvatarTimestamp,omitempty"`
	FcmToken                  string               `protobuf:"bytes,23,opt,name=fcmToken" json:"fcmToken,omitempty"`
	AirDropPoolIndex          int32                `protobuf:"varint,24,opt,name=airDropPoolIndex" json:"airDropPoolIndex,omitempty"`
	AirDropRaffleTimes        int32                `protobuf:"varint,25,opt,name=airDropRaffleTimes" json:"airDropRaffleTimes,omitempty"`
	AirDropFreeTime           uint64               `protobuf:"varint,26,opt,name=airDropFreeTime" json:"airDropFreeTime,omitempty"`
	HistoryItemList           []int32              `protobuf:"varint,27,rep,packed,name=historyItemList" json:"historyItemList,omitempty"`
	Sid                       uint32               `protobuf:"varint,28,opt,name=sid" json:"sid,omitempty"`
	CurrentSid                uint32               `protobuf:"varint,29,opt,name=currentSid" json:"currentSid,omitempty"`
	KeepPay                   int32                `protobuf:"varint,30,opt,name=keepPay" json:"keepPay,omitempty"`
	KeepNoPay                 int32                `protobuf:"varint,31,opt,name=keepNoPay" json:"keepNoPay,omitempty"`
	CommanderInfo             *ST_CommanderInfo_PB `protobuf:"bytes,32,opt,name=commanderInfo" json:"commanderInfo,omitempty"`
	ModelId                   uint32               `protobuf:"varint,33,opt,name=modelId" json:"modelId,omitempty"`
	ChannelID                 string               `protobuf:"bytes,34,opt,name=channelID" json:"channelID,omitempty"`
	MainCityLevel             uint32               `protobuf:"varint,35,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
	SrcVer                    int64                `protobuf:"varint,36,opt,name=SrcVer" json:"SrcVer,omitempty"`
	LastPower                 uint64               `protobuf:"varint,37,opt,name=lastPower" json:"lastPower,omitempty"`
	Accountid                 uint64               `protobuf:"varint,38,opt,name=accountid" json:"accountid,omitempty"`
	Bubbleid                  uint32               `protobuf:"varint,39,opt,name=bubbleid" json:"bubbleid,omitempty"`
	TotalPay                  uint32               `protobuf:"varint,40,opt,name=TotalPay" json:"TotalPay,omitempty"`
	ChangeServerCD            uint64               `protobuf:"varint,41,opt,name=ChangeServerCD" json:"ChangeServerCD,omitempty"`
	ReportGlobalTime          uint64               `protobuf:"varint,42,opt,name=reportGlobalTime" json:"reportGlobalTime,omitempty"`
	IP                        string               `protobuf:"bytes,43,opt,name=IP" json:"IP,omitempty"`
}

func (m *ST_CharBasic_Server_PB) Reset()                    { *m = ST_CharBasic_Server_PB{} }
func (m *ST_CharBasic_Server_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CharBasic_Server_PB) ProtoMessage()               {}
func (*ST_CharBasic_Server_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ST_CharBasic_Server_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetCharname() string {
	if m != nil {
		return m.Charname
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetLocation() int32 {
	if m != nil {
		return m.Location
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetWorlddataid() uint64 {
	if m != nil {
		return m.Worlddataid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetLordIcon() string {
	if m != nil {
		return m.LordIcon
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetLastRefreshTimestamp() uint64 {
	if m != nil {
		return m.LastRefreshTimestamp
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetLanguage() uint32 {
	if m != nil {
		return m.Language
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetLoginTimestamp() uint64 {
	if m != nil {
		return m.LoginTimestamp
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetForbidLogin() uint64 {
	if m != nil {
		return m.ForbidLogin
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetForbidLoginDur() uint64 {
	if m != nil {
		return m.ForbidLoginDur
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetForbidLoginMsg() string {
	if m != nil {
		return m.ForbidLoginMsg
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetPlatform() uint32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetLastLogoutTime() uint64 {
	if m != nil {
		return m.LastLogoutTime
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetChangedName() bool {
	if m != nil {
		return m.ChangedName
	}
	return false
}

func (m *ST_CharBasic_Server_PB) GetAvatarFileName() string {
	if m != nil {
		return m.AvatarFileName
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetLogFileName() string {
	if m != nil {
		return m.LogFileName
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetNextUploadAvatarTimestamp() uint64 {
	if m != nil {
		return m.NextUploadAvatarTimestamp
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetFcmToken() string {
	if m != nil {
		return m.FcmToken
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetAirDropPoolIndex() int32 {
	if m != nil {
		return m.AirDropPoolIndex
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetAirDropRaffleTimes() int32 {
	if m != nil {
		return m.AirDropRaffleTimes
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetAirDropFreeTime() uint64 {
	if m != nil {
		return m.AirDropFreeTime
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetHistoryItemList() []int32 {
	if m != nil {
		return m.HistoryItemList
	}
	return nil
}

func (m *ST_CharBasic_Server_PB) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetKeepPay() int32 {
	if m != nil {
		return m.KeepPay
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetKeepNoPay() int32 {
	if m != nil {
		return m.KeepNoPay
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetCommanderInfo() *ST_CommanderInfo_PB {
	if m != nil {
		return m.CommanderInfo
	}
	return nil
}

func (m *ST_CharBasic_Server_PB) GetModelId() uint32 {
	if m != nil {
		return m.ModelId
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ST_CharBasic_Server_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetSrcVer() int64 {
	if m != nil {
		return m.SrcVer
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetLastPower() uint64 {
	if m != nil {
		return m.LastPower
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetAccountid() uint64 {
	if m != nil {
		return m.Accountid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetBubbleid() uint32 {
	if m != nil {
		return m.Bubbleid
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetTotalPay() uint32 {
	if m != nil {
		return m.TotalPay
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetChangeServerCD() uint64 {
	if m != nil {
		return m.ChangeServerCD
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetReportGlobalTime() uint64 {
	if m != nil {
		return m.ReportGlobalTime
	}
	return 0
}

func (m *ST_CharBasic_Server_PB) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type ST_UserServer_PB struct {
	// 30日充值记录
	TimeChar []*ST_Vector4UInt64_PB `protobuf:"bytes,1,rep,name=TimeChar" json:"TimeChar,omitempty"`
	// 当前标签
	CurLabel int64 `protobuf:"varint,2,opt,name=CurLabel" json:"CurLabel,omitempty"`
	// 历史最高标签
	MaxLabel int64 `protobuf:"varint,3,opt,name=MaxLabel" json:"MaxLabel,omitempty"`
	// 当前标签达标数据
	CurLabelNum int32 `protobuf:"varint,4,opt,name=CurLabelNum" json:"CurLabelNum,omitempty"`
	// 历史充值次数
	PayCount uint64 `protobuf:"varint,5,opt,name=PayCount" json:"PayCount,omitempty"`
	// 首充金额
	FirstNum uint64 `protobuf:"varint,6,opt,name=FirstNum" json:"FirstNum,omitempty"`
	// 首充时间
	FirstTm uint64 `protobuf:"varint,7,opt,name=FirstTm" json:"FirstTm,omitempty"`
	// 最后充值时间
	LastTm uint64 `protobuf:"varint,8,opt,name=LastTm" json:"LastTm,omitempty"`
	// 30日充值每笔记录
	History30 []*ST_Vector4UInt64_PB `protobuf:"bytes,9,rep,name=history30" json:"history30,omitempty"`
	// 领取联盟科技捐献排行榜邮件时间
	LeagueDevoteDayRankMailTm uint64 `protobuf:"varint,10,opt,name=LeagueDevoteDayRankMailTm" json:"LeagueDevoteDayRankMailTm,omitempty"`
	// 领取联盟科技捐献排行榜邮件时间
	LeagueDevoteWeekRankMailTm uint64 `protobuf:"varint,11,opt,name=LeagueDevoteWeekRankMailTm" json:"LeagueDevoteWeekRankMailTm,omitempty"`
}

func (m *ST_UserServer_PB) Reset()                    { *m = ST_UserServer_PB{} }
func (m *ST_UserServer_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UserServer_PB) ProtoMessage()               {}
func (*ST_UserServer_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *ST_UserServer_PB) GetTimeChar() []*ST_Vector4UInt64_PB {
	if m != nil {
		return m.TimeChar
	}
	return nil
}

func (m *ST_UserServer_PB) GetCurLabel() int64 {
	if m != nil {
		return m.CurLabel
	}
	return 0
}

func (m *ST_UserServer_PB) GetMaxLabel() int64 {
	if m != nil {
		return m.MaxLabel
	}
	return 0
}

func (m *ST_UserServer_PB) GetCurLabelNum() int32 {
	if m != nil {
		return m.CurLabelNum
	}
	return 0
}

func (m *ST_UserServer_PB) GetPayCount() uint64 {
	if m != nil {
		return m.PayCount
	}
	return 0
}

func (m *ST_UserServer_PB) GetFirstNum() uint64 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *ST_UserServer_PB) GetFirstTm() uint64 {
	if m != nil {
		return m.FirstTm
	}
	return 0
}

func (m *ST_UserServer_PB) GetLastTm() uint64 {
	if m != nil {
		return m.LastTm
	}
	return 0
}

func (m *ST_UserServer_PB) GetHistory30() []*ST_Vector4UInt64_PB {
	if m != nil {
		return m.History30
	}
	return nil
}

func (m *ST_UserServer_PB) GetLeagueDevoteDayRankMailTm() uint64 {
	if m != nil {
		return m.LeagueDevoteDayRankMailTm
	}
	return 0
}

func (m *ST_UserServer_PB) GetLeagueDevoteWeekRankMailTm() uint64 {
	if m != nil {
		return m.LeagueDevoteWeekRankMailTm
	}
	return 0
}

// 指挥官信息
type ST_CommanderInfo_PB struct {
	Status         uint32            `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	ImprisoneOwner uint64            `protobuf:"varint,2,opt,name=imprisoneOwner" json:"imprisoneOwner,omitempty"`
	StepStartTime  uint64            `protobuf:"varint,3,opt,name=stepStartTime" json:"stepStartTime,omitempty"`
	StepRemainTime uint64            `protobuf:"varint,4,opt,name=stepRemainTime" json:"stepRemainTime,omitempty"`
	Ransom         *ST_Vector4Int_PB `protobuf:"bytes,5,opt,name=ransom" json:"ransom,omitempty"`
	Bounty         *ST_Vector4Int_PB `protobuf:"bytes,6,opt,name=bounty" json:"bounty,omitempty"`
	Token          string            `protobuf:"bytes,7,opt,name=Token" json:"Token,omitempty"`
	LoginDay       uint64            `protobuf:"varint,8,opt,name=LoginDay" json:"LoginDay,omitempty"`
}

func (m *ST_CommanderInfo_PB) Reset()                    { *m = ST_CommanderInfo_PB{} }
func (m *ST_CommanderInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CommanderInfo_PB) ProtoMessage()               {}
func (*ST_CommanderInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *ST_CommanderInfo_PB) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_CommanderInfo_PB) GetImprisoneOwner() uint64 {
	if m != nil {
		return m.ImprisoneOwner
	}
	return 0
}

func (m *ST_CommanderInfo_PB) GetStepStartTime() uint64 {
	if m != nil {
		return m.StepStartTime
	}
	return 0
}

func (m *ST_CommanderInfo_PB) GetStepRemainTime() uint64 {
	if m != nil {
		return m.StepRemainTime
	}
	return 0
}

func (m *ST_CommanderInfo_PB) GetRansom() *ST_Vector4Int_PB {
	if m != nil {
		return m.Ransom
	}
	return nil
}

func (m *ST_CommanderInfo_PB) GetBounty() *ST_Vector4Int_PB {
	if m != nil {
		return m.Bounty
	}
	return nil
}

func (m *ST_CommanderInfo_PB) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ST_CommanderInfo_PB) GetLoginDay() uint64 {
	if m != nil {
		return m.LoginDay
	}
	return 0
}

type ST_CharBasic_PB struct {
	Uid                       uint64               `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Charname                  string               `protobuf:"bytes,2,opt,name=charname" json:"charname,omitempty"`
	Signature                 string               `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	Location                  int32                `protobuf:"varint,4,opt,name=location" json:"location,omitempty"`
	Worlddataid               uint64               `protobuf:"varint,5,opt,name=worlddataid" json:"worlddataid,omitempty"`
	LordIcon                  string               `protobuf:"bytes,6,opt,name=lordIcon" json:"lordIcon,omitempty"`
	AvatarBoxID               uint32               `protobuf:"varint,7,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	Avatar                    string               `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
	Language                  uint32               `protobuf:"varint,9,opt,name=language" json:"language,omitempty"`
	NickName                  string               `protobuf:"bytes,10,opt,name=nickName" json:"nickName,omitempty"`
	Sid                       uint32               `protobuf:"varint,11,opt,name=sid" json:"sid,omitempty"`
	ChangeName                bool                 `protobuf:"varint,12,opt,name=changeName" json:"changeName,omitempty"`
	NextUploadAvatarTimestamp uint64               `protobuf:"varint,13,opt,name=nextUploadAvatarTimestamp" json:"nextUploadAvatarTimestamp,omitempty"`
	CreateTime                uint64               `protobuf:"varint,14,opt,name=createTime" json:"createTime,omitempty"`
	AirDropFreeTime           uint64               `protobuf:"varint,15,opt,name=airDropFreeTime" json:"airDropFreeTime,omitempty"`
	HistoryItemList           []int32              `protobuf:"varint,16,rep,packed,name=historyItemList" json:"historyItemList,omitempty"`
	CommanderInfo             *ST_CommanderInfo_PB `protobuf:"bytes,17,opt,name=commanderInfo" json:"commanderInfo,omitempty"`
	ModelId                   uint32               `protobuf:"varint,18,opt,name=modelId" json:"modelId,omitempty"`
	SrcVer                    int64                `protobuf:"varint,19,opt,name=SrcVer" json:"SrcVer,omitempty"`
	ChangeServerCD            uint64               `protobuf:"varint,20,opt,name=ChangeServerCD" json:"ChangeServerCD,omitempty"`
	Bubbleid                  uint32               `protobuf:"varint,21,opt,name=bubbleid" json:"bubbleid,omitempty"`
	CurrentSid                uint32               `protobuf:"varint,22,opt,name=currentSid" json:"currentSid,omitempty"`
}

func (m *ST_CharBasic_PB) Reset()                    { *m = ST_CharBasic_PB{} }
func (m *ST_CharBasic_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CharBasic_PB) ProtoMessage()               {}
func (*ST_CharBasic_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *ST_CharBasic_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_CharBasic_PB) GetCharname() string {
	if m != nil {
		return m.Charname
	}
	return ""
}

func (m *ST_CharBasic_PB) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ST_CharBasic_PB) GetLocation() int32 {
	if m != nil {
		return m.Location
	}
	return 0
}

func (m *ST_CharBasic_PB) GetWorlddataid() uint64 {
	if m != nil {
		return m.Worlddataid
	}
	return 0
}

func (m *ST_CharBasic_PB) GetLordIcon() string {
	if m != nil {
		return m.LordIcon
	}
	return ""
}

func (m *ST_CharBasic_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_CharBasic_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_CharBasic_PB) GetLanguage() uint32 {
	if m != nil {
		return m.Language
	}
	return 0
}

func (m *ST_CharBasic_PB) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *ST_CharBasic_PB) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_CharBasic_PB) GetChangeName() bool {
	if m != nil {
		return m.ChangeName
	}
	return false
}

func (m *ST_CharBasic_PB) GetNextUploadAvatarTimestamp() uint64 {
	if m != nil {
		return m.NextUploadAvatarTimestamp
	}
	return 0
}

func (m *ST_CharBasic_PB) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ST_CharBasic_PB) GetAirDropFreeTime() uint64 {
	if m != nil {
		return m.AirDropFreeTime
	}
	return 0
}

func (m *ST_CharBasic_PB) GetHistoryItemList() []int32 {
	if m != nil {
		return m.HistoryItemList
	}
	return nil
}

func (m *ST_CharBasic_PB) GetCommanderInfo() *ST_CommanderInfo_PB {
	if m != nil {
		return m.CommanderInfo
	}
	return nil
}

func (m *ST_CharBasic_PB) GetModelId() uint32 {
	if m != nil {
		return m.ModelId
	}
	return 0
}

func (m *ST_CharBasic_PB) GetSrcVer() int64 {
	if m != nil {
		return m.SrcVer
	}
	return 0
}

func (m *ST_CharBasic_PB) GetChangeServerCD() uint64 {
	if m != nil {
		return m.ChangeServerCD
	}
	return 0
}

func (m *ST_CharBasic_PB) GetBubbleid() uint32 {
	if m != nil {
		return m.Bubbleid
	}
	return 0
}

func (m *ST_CharBasic_PB) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

type ST_CharExp_PB struct {
	Exp          uint64 `protobuf:"varint,1,opt,name=exp" json:"exp,omitempty"`
	Level        uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Restexp      uint64 `protobuf:"varint,3,opt,name=restexp" json:"restexp,omitempty"`
	Nextactionid uint32 `protobuf:"varint,4,opt,name=nextactionid" json:"nextactionid,omitempty"`
}

func (m *ST_CharExp_PB) Reset()                    { *m = ST_CharExp_PB{} }
func (m *ST_CharExp_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CharExp_PB) ProtoMessage()               {}
func (*ST_CharExp_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *ST_CharExp_PB) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *ST_CharExp_PB) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ST_CharExp_PB) GetRestexp() uint64 {
	if m != nil {
		return m.Restexp
	}
	return 0
}

func (m *ST_CharExp_PB) GetNextactionid() uint32 {
	if m != nil {
		return m.Nextactionid
	}
	return 0
}

type ST_Statistics_PB struct {
	Power                      uint64           `protobuf:"varint,1,opt,name=power" json:"power,omitempty"`
	ReceiveResourceToday       uint64           `protobuf:"varint,2,opt,name=receiveResourceToday" json:"receiveResourceToday,omitempty"`
	LastClearTime              uint64           `protobuf:"varint,3,opt,name=lastClearTime" json:"lastClearTime,omitempty"`
	KilledMonsterLevel         uint32           `protobuf:"varint,4,opt,name=killedMonsterLevel" json:"killedMonsterLevel,omitempty"`
	STA                        uint32           `protobuf:"varint,5,opt,name=STA" json:"STA,omitempty"`
	StaRefresh                 uint64           `protobuf:"varint,6,opt,name=staRefresh" json:"staRefresh,omitempty"`
	NeedRecoverSTA             bool             `protobuf:"varint,7,opt,name=needRecoverSTA" json:"needRecoverSTA,omitempty"`
	UnitLoss                   uint64           `protobuf:"varint,8,opt,name=unitLoss" json:"unitLoss,omitempty"`
	AttackWin                  uint32           `protobuf:"varint,9,opt,name=attackWin" json:"attackWin,omitempty"`
	AttackFail                 uint32           `protobuf:"varint,10,opt,name=attackFail" json:"attackFail,omitempty"`
	DefenceWin                 uint32           `protobuf:"varint,11,opt,name=defenceWin" json:"defenceWin,omitempty"`
	DefenceFail                uint32           `protobuf:"varint,12,opt,name=defenceFail" json:"defenceFail,omitempty"`
	SendResourceToday          uint64           `protobuf:"varint,13,opt,name=sendResourceToday" json:"sendResourceToday,omitempty"`
	LossUnit                   *ST_UnitAsset_PB `protobuf:"bytes,14,opt,name=lossUnit" json:"lossUnit,omitempty"`
	KillUnit                   *ST_UnitAsset_PB `protobuf:"bytes,15,opt,name=killUnit" json:"killUnit,omitempty"`
	RepairUnit                 *ST_UnitAsset_PB `protobuf:"bytes,16,opt,name=repairUnit" json:"repairUnit,omitempty"`
	SpyTimes                   uint32           `protobuf:"varint,17,opt,name=spyTimes" json:"spyTimes,omitempty"`
	ArestHero                  uint32           `protobuf:"varint,18,opt,name=arestHero" json:"arestHero,omitempty"`
	KillHero                   uint32           `protobuf:"varint,19,opt,name=killHero" json:"killHero,omitempty"`
	GetReward                  uint64           `protobuf:"varint,20,opt,name=getReward" json:"getReward,omitempty"`
	CaptivedTime               uint32           `protobuf:"varint,21,opt,name=captivedTime" json:"captivedTime,omitempty"`
	EscapeTime                 uint32           `protobuf:"varint,22,opt,name=escapeTime" json:"escapeTime,omitempty"`
	ExecutedTime               uint32           `protobuf:"varint,23,opt,name=executedTime" json:"executedTime,omitempty"`
	LeagueHelpTime             uint32           `protobuf:"varint,24,opt,name=leagueHelpTime" json:"leagueHelpTime,omitempty"`
	MassLimit                  uint64           `protobuf:"varint,25,opt,name=massLimit" json:"massLimit,omitempty"`
	TransforResource           *ST_CashAsset_PB `protobuf:"bytes,26,opt,name=transforResource" json:"transforResource,omitempty"`
	CollectResource            *ST_CashAsset_PB `protobuf:"bytes,27,opt,name=collectResource" json:"collectResource,omitempty"`
	FirstSpy                   bool             `protobuf:"varint,28,opt,name=firstSpy" json:"firstSpy,omitempty"`
	FirstBeAttack              bool             `protobuf:"varint,29,opt,name=firstBeAttack" json:"firstBeAttack,omitempty"`
	LastFeedbackTime           uint64           `protobuf:"varint,30,opt,name=lastFeedbackTime" json:"lastFeedbackTime,omitempty"`
	LoginGetVIPPointTimestamp  uint64           `protobuf:"varint,31,opt,name=loginGetVIPPointTimestamp" json:"loginGetVIPPointTimestamp,omitempty"`
	LoginGetVIPPointTotalCount uint32           `protobuf:"varint,32,opt,name=loginGetVIPPointTotalCount" json:"loginGetVIPPointTotalCount,omitempty"`
	ContinuousLoginTimes       uint32           `protobuf:"varint,33,opt,name=continuousLoginTimes" json:"continuousLoginTimes,omitempty"`
	ContinuousLoginRecordPoint uint64           `protobuf:"varint,34,opt,name=continuousLoginRecordPoint" json:"continuousLoginRecordPoint,omitempty"`
	FirstUploadAvatar          bool             `protobuf:"varint,35,opt,name=firstUploadAvatar" json:"firstUploadAvatar,omitempty"`
	ReportedTimes              uint32           `protobuf:"varint,36,opt,name=reportedTimes" json:"reportedTimes,omitempty"`
	FirstBindAccount           bool             `protobuf:"varint,37,opt,name=firstBindAccount" json:"firstBindAccount,omitempty"`
	MainCityRewardLevel        uint32           `protobuf:"varint,38,opt,name=mainCityRewardLevel" json:"mainCityRewardLevel,omitempty"`
	Energy                     uint32           `protobuf:"varint,39,opt,name=energy" json:"energy,omitempty"`
	LastEnergyTime             uint64           `protobuf:"varint,40,opt,name=lastEnergyTime" json:"lastEnergyTime,omitempty"`
	MutiMonsterRewardTimes     uint64           `protobuf:"varint,41,opt,name=mutiMonsterRewardTimes" json:"mutiMonsterRewardTimes,omitempty"`
	LastMutiMonsterRewardTime  uint64           `protobuf:"varint,42,opt,name=lastMutiMonsterRewardTime" json:"lastMutiMonsterRewardTime,omitempty"`
}

func (m *ST_Statistics_PB) Reset()                    { *m = ST_Statistics_PB{} }
func (m *ST_Statistics_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Statistics_PB) ProtoMessage()               {}
func (*ST_Statistics_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *ST_Statistics_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_Statistics_PB) GetReceiveResourceToday() uint64 {
	if m != nil {
		return m.ReceiveResourceToday
	}
	return 0
}

func (m *ST_Statistics_PB) GetLastClearTime() uint64 {
	if m != nil {
		return m.LastClearTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetKilledMonsterLevel() uint32 {
	if m != nil {
		return m.KilledMonsterLevel
	}
	return 0
}

func (m *ST_Statistics_PB) GetSTA() uint32 {
	if m != nil {
		return m.STA
	}
	return 0
}

func (m *ST_Statistics_PB) GetStaRefresh() uint64 {
	if m != nil {
		return m.StaRefresh
	}
	return 0
}

func (m *ST_Statistics_PB) GetNeedRecoverSTA() bool {
	if m != nil {
		return m.NeedRecoverSTA
	}
	return false
}

func (m *ST_Statistics_PB) GetUnitLoss() uint64 {
	if m != nil {
		return m.UnitLoss
	}
	return 0
}

func (m *ST_Statistics_PB) GetAttackWin() uint32 {
	if m != nil {
		return m.AttackWin
	}
	return 0
}

func (m *ST_Statistics_PB) GetAttackFail() uint32 {
	if m != nil {
		return m.AttackFail
	}
	return 0
}

func (m *ST_Statistics_PB) GetDefenceWin() uint32 {
	if m != nil {
		return m.DefenceWin
	}
	return 0
}

func (m *ST_Statistics_PB) GetDefenceFail() uint32 {
	if m != nil {
		return m.DefenceFail
	}
	return 0
}

func (m *ST_Statistics_PB) GetSendResourceToday() uint64 {
	if m != nil {
		return m.SendResourceToday
	}
	return 0
}

func (m *ST_Statistics_PB) GetLossUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.LossUnit
	}
	return nil
}

func (m *ST_Statistics_PB) GetKillUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.KillUnit
	}
	return nil
}

func (m *ST_Statistics_PB) GetRepairUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.RepairUnit
	}
	return nil
}

func (m *ST_Statistics_PB) GetSpyTimes() uint32 {
	if m != nil {
		return m.SpyTimes
	}
	return 0
}

func (m *ST_Statistics_PB) GetArestHero() uint32 {
	if m != nil {
		return m.ArestHero
	}
	return 0
}

func (m *ST_Statistics_PB) GetKillHero() uint32 {
	if m != nil {
		return m.KillHero
	}
	return 0
}

func (m *ST_Statistics_PB) GetGetReward() uint64 {
	if m != nil {
		return m.GetReward
	}
	return 0
}

func (m *ST_Statistics_PB) GetCaptivedTime() uint32 {
	if m != nil {
		return m.CaptivedTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetEscapeTime() uint32 {
	if m != nil {
		return m.EscapeTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetExecutedTime() uint32 {
	if m != nil {
		return m.ExecutedTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetLeagueHelpTime() uint32 {
	if m != nil {
		return m.LeagueHelpTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetMassLimit() uint64 {
	if m != nil {
		return m.MassLimit
	}
	return 0
}

func (m *ST_Statistics_PB) GetTransforResource() *ST_CashAsset_PB {
	if m != nil {
		return m.TransforResource
	}
	return nil
}

func (m *ST_Statistics_PB) GetCollectResource() *ST_CashAsset_PB {
	if m != nil {
		return m.CollectResource
	}
	return nil
}

func (m *ST_Statistics_PB) GetFirstSpy() bool {
	if m != nil {
		return m.FirstSpy
	}
	return false
}

func (m *ST_Statistics_PB) GetFirstBeAttack() bool {
	if m != nil {
		return m.FirstBeAttack
	}
	return false
}

func (m *ST_Statistics_PB) GetLastFeedbackTime() uint64 {
	if m != nil {
		return m.LastFeedbackTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetLoginGetVIPPointTimestamp() uint64 {
	if m != nil {
		return m.LoginGetVIPPointTimestamp
	}
	return 0
}

func (m *ST_Statistics_PB) GetLoginGetVIPPointTotalCount() uint32 {
	if m != nil {
		return m.LoginGetVIPPointTotalCount
	}
	return 0
}

func (m *ST_Statistics_PB) GetContinuousLoginTimes() uint32 {
	if m != nil {
		return m.ContinuousLoginTimes
	}
	return 0
}

func (m *ST_Statistics_PB) GetContinuousLoginRecordPoint() uint64 {
	if m != nil {
		return m.ContinuousLoginRecordPoint
	}
	return 0
}

func (m *ST_Statistics_PB) GetFirstUploadAvatar() bool {
	if m != nil {
		return m.FirstUploadAvatar
	}
	return false
}

func (m *ST_Statistics_PB) GetReportedTimes() uint32 {
	if m != nil {
		return m.ReportedTimes
	}
	return 0
}

func (m *ST_Statistics_PB) GetFirstBindAccount() bool {
	if m != nil {
		return m.FirstBindAccount
	}
	return false
}

func (m *ST_Statistics_PB) GetMainCityRewardLevel() uint32 {
	if m != nil {
		return m.MainCityRewardLevel
	}
	return 0
}

func (m *ST_Statistics_PB) GetEnergy() uint32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *ST_Statistics_PB) GetLastEnergyTime() uint64 {
	if m != nil {
		return m.LastEnergyTime
	}
	return 0
}

func (m *ST_Statistics_PB) GetMutiMonsterRewardTimes() uint64 {
	if m != nil {
		return m.MutiMonsterRewardTimes
	}
	return 0
}

func (m *ST_Statistics_PB) GetLastMutiMonsterRewardTime() uint64 {
	if m != nil {
		return m.LastMutiMonsterRewardTime
	}
	return 0
}

// 减少时间奖励
type ST_StrollHeroEventCountDownTimeReward struct {
	ActionId uint32 `protobuf:"varint,1,opt,name=actionId" json:"actionId,omitempty"`
	Seconds  uint64 `protobuf:"varint,2,opt,name=seconds" json:"seconds,omitempty"`
}

func (m *ST_StrollHeroEventCountDownTimeReward) Reset()         { *m = ST_StrollHeroEventCountDownTimeReward{} }
func (m *ST_StrollHeroEventCountDownTimeReward) String() string { return proto.CompactTextString(m) }
func (*ST_StrollHeroEventCountDownTimeReward) ProtoMessage()    {}
func (*ST_StrollHeroEventCountDownTimeReward) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{6}
}

func (m *ST_StrollHeroEventCountDownTimeReward) GetActionId() uint32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *ST_StrollHeroEventCountDownTimeReward) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

// 兵奖励
type ST_StrollHeroEventAddUnitReward struct {
	UnitId uint64 `protobuf:"varint,1,opt,name=unitId" json:"unitId,omitempty"`
	Number uint64 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
}

func (m *ST_StrollHeroEventAddUnitReward) Reset()                    { *m = ST_StrollHeroEventAddUnitReward{} }
func (m *ST_StrollHeroEventAddUnitReward) String() string            { return proto.CompactTextString(m) }
func (*ST_StrollHeroEventAddUnitReward) ProtoMessage()               {}
func (*ST_StrollHeroEventAddUnitReward) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *ST_StrollHeroEventAddUnitReward) GetUnitId() uint64 {
	if m != nil {
		return m.UnitId
	}
	return 0
}

func (m *ST_StrollHeroEventAddUnitReward) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

// 英雄行走奖励内容
type ST_StrollHeroEventRewardContent_PB struct {
	HeroID        uint32                                 `protobuf:"varint,1,opt,name=heroID" json:"heroID,omitempty"`
	HeroQuality   uint32                                 `protobuf:"varint,2,opt,name=heroQuality" json:"heroQuality,omitempty"`
	CountDownTime *ST_StrollHeroEventCountDownTimeReward `protobuf:"bytes,3,opt,name=countDownTime" json:"countDownTime,omitempty"`
	AddUnit       *ST_StrollHeroEventAddUnitReward       `protobuf:"bytes,4,opt,name=addUnit" json:"addUnit,omitempty"`
	Resource      *ST_Vector4IntList_PB                  `protobuf:"bytes,5,opt,name=resource" json:"resource,omitempty"`
}

func (m *ST_StrollHeroEventRewardContent_PB) Reset()         { *m = ST_StrollHeroEventRewardContent_PB{} }
func (m *ST_StrollHeroEventRewardContent_PB) String() string { return proto.CompactTextString(m) }
func (*ST_StrollHeroEventRewardContent_PB) ProtoMessage()    {}
func (*ST_StrollHeroEventRewardContent_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{8}
}

func (m *ST_StrollHeroEventRewardContent_PB) GetHeroID() uint32 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

func (m *ST_StrollHeroEventRewardContent_PB) GetHeroQuality() uint32 {
	if m != nil {
		return m.HeroQuality
	}
	return 0
}

func (m *ST_StrollHeroEventRewardContent_PB) GetCountDownTime() *ST_StrollHeroEventCountDownTimeReward {
	if m != nil {
		return m.CountDownTime
	}
	return nil
}

func (m *ST_StrollHeroEventRewardContent_PB) GetAddUnit() *ST_StrollHeroEventAddUnitReward {
	if m != nil {
		return m.AddUnit
	}
	return nil
}

func (m *ST_StrollHeroEventRewardContent_PB) GetResource() *ST_Vector4IntList_PB {
	if m != nil {
		return m.Resource
	}
	return nil
}

// 行走英雄奖励
type ST_StrollHeroEventReward_PB struct {
	Content []*ST_StrollHeroEventRewardContent_PB `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *ST_StrollHeroEventReward_PB) Reset()                    { *m = ST_StrollHeroEventReward_PB{} }
func (m *ST_StrollHeroEventReward_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StrollHeroEventReward_PB) ProtoMessage()               {}
func (*ST_StrollHeroEventReward_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *ST_StrollHeroEventReward_PB) GetContent() []*ST_StrollHeroEventRewardContent_PB {
	if m != nil {
		return m.Content
	}
	return nil
}

type ST_Building_PB struct {
	BuildingID       uint32                       `protobuf:"varint,1,opt,name=buildingID" json:"buildingID,omitempty"`
	Activated        bool                         `protobuf:"varint,2,opt,name=activated" json:"activated,omitempty"`
	X                uint32                       `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y                uint32                       `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
	Buildingtype     uint32                       `protobuf:"varint,5,opt,name=buildingtype" json:"buildingtype,omitempty"`
	Buildinglevel    uint32                       `protobuf:"varint,6,opt,name=buildinglevel" json:"buildinglevel,omitempty"`
	HeroId           uint32                       `protobuf:"varint,7,opt,name=heroId" json:"heroId,omitempty"`
	Units            *ST_UnitAsset_PB             `protobuf:"bytes,8,opt,name=units" json:"units,omitempty"`
	Resource         *ST_CashAsset_PB             `protobuf:"bytes,9,opt,name=resource" json:"resource,omitempty"`
	StrollHeroReward *ST_StrollHeroEventReward_PB `protobuf:"bytes,10,opt,name=strollHeroReward" json:"strollHeroReward,omitempty"`
	EquipCSVID       uint32                       `protobuf:"varint,11,opt,name=equipCSVID" json:"equipCSVID,omitempty"`
}

func (m *ST_Building_PB) Reset()                    { *m = ST_Building_PB{} }
func (m *ST_Building_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Building_PB) ProtoMessage()               {}
func (*ST_Building_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *ST_Building_PB) GetBuildingID() uint32 {
	if m != nil {
		return m.BuildingID
	}
	return 0
}

func (m *ST_Building_PB) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *ST_Building_PB) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *ST_Building_PB) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *ST_Building_PB) GetBuildingtype() uint32 {
	if m != nil {
		return m.Buildingtype
	}
	return 0
}

func (m *ST_Building_PB) GetBuildinglevel() uint32 {
	if m != nil {
		return m.Buildinglevel
	}
	return 0
}

func (m *ST_Building_PB) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *ST_Building_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_Building_PB) GetResource() *ST_CashAsset_PB {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ST_Building_PB) GetStrollHeroReward() *ST_StrollHeroEventReward_PB {
	if m != nil {
		return m.StrollHeroReward
	}
	return nil
}

func (m *ST_Building_PB) GetEquipCSVID() uint32 {
	if m != nil {
		return m.EquipCSVID
	}
	return 0
}

type ST_BuildingAsset_PB struct {
	Buildings      []*ST_Building_PB    `protobuf:"bytes,1,rep,name=buildings" json:"buildings,omitempty"`
	NextBuildingId uint32               `protobuf:"varint,2,opt,name=nextBuildingId" json:"nextBuildingId,omitempty"`
	BuildingAttrs  *ST_AttributeList_PB `protobuf:"bytes,3,opt,name=buildingAttrs" json:"buildingAttrs,omitempty"`
}

func (m *ST_BuildingAsset_PB) Reset()                    { *m = ST_BuildingAsset_PB{} }
func (m *ST_BuildingAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BuildingAsset_PB) ProtoMessage()               {}
func (*ST_BuildingAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *ST_BuildingAsset_PB) GetBuildings() []*ST_Building_PB {
	if m != nil {
		return m.Buildings
	}
	return nil
}

func (m *ST_BuildingAsset_PB) GetNextBuildingId() uint32 {
	if m != nil {
		return m.NextBuildingId
	}
	return 0
}

func (m *ST_BuildingAsset_PB) GetBuildingAttrs() *ST_AttributeList_PB {
	if m != nil {
		return m.BuildingAttrs
	}
	return nil
}

type ST_LocalActionEntry_PB struct {
	Actionid   uint32           `protobuf:"varint,1,opt,name=actionid" json:"actionid,omitempty"`
	Actiontype uint32           `protobuf:"varint,2,opt,name=actiontype" json:"actiontype,omitempty"`
	BuildingID uint32           `protobuf:"varint,3,opt,name=buildingID" json:"buildingID,omitempty"`
	Starttime  uint64           `protobuf:"varint,4,opt,name=starttime" json:"starttime,omitempty"`
	Remaintime uint64           `protobuf:"varint,5,opt,name=remaintime" json:"remaintime,omitempty"`
	Totaltime  uint64           `protobuf:"varint,6,opt,name=totaltime" json:"totaltime,omitempty"`
	Details    []int32          `protobuf:"varint,7,rep,packed,name=details" json:"details,omitempty"`
	Appenddata string           `protobuf:"bytes,8,opt,name=appenddata" json:"appenddata,omitempty"`
	IsHelped   bool             `protobuf:"varint,9,opt,name=isHelped" json:"isHelped,omitempty"`
	Units      *ST_UnitAsset_PB `protobuf:"bytes,10,opt,name=units" json:"units,omitempty"`
	// 队列序号(1,2)
	Startid uint32 `protobuf:"varint,11,opt,name=startid" json:"startid,omitempty"`
}

func (m *ST_LocalActionEntry_PB) Reset()                    { *m = ST_LocalActionEntry_PB{} }
func (m *ST_LocalActionEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LocalActionEntry_PB) ProtoMessage()               {}
func (*ST_LocalActionEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *ST_LocalActionEntry_PB) GetActionid() uint32 {
	if m != nil {
		return m.Actionid
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetActiontype() uint32 {
	if m != nil {
		return m.Actiontype
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetBuildingID() uint32 {
	if m != nil {
		return m.BuildingID
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetStarttime() uint64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetRemaintime() uint64 {
	if m != nil {
		return m.Remaintime
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetTotaltime() uint64 {
	if m != nil {
		return m.Totaltime
	}
	return 0
}

func (m *ST_LocalActionEntry_PB) GetDetails() []int32 {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ST_LocalActionEntry_PB) GetAppenddata() string {
	if m != nil {
		return m.Appenddata
	}
	return ""
}

func (m *ST_LocalActionEntry_PB) GetIsHelped() bool {
	if m != nil {
		return m.IsHelped
	}
	return false
}

func (m *ST_LocalActionEntry_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_LocalActionEntry_PB) GetStartid() uint32 {
	if m != nil {
		return m.Startid
	}
	return 0
}

type ST_GlobalActionVersion_PB struct {
	ActionID  uint64 `protobuf:"varint,1,opt,name=actionID" json:"actionID,omitempty"`
	Versionid uint32 `protobuf:"varint,2,opt,name=versionid" json:"versionid,omitempty"`
}

func (m *ST_GlobalActionVersion_PB) Reset()                    { *m = ST_GlobalActionVersion_PB{} }
func (m *ST_GlobalActionVersion_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalActionVersion_PB) ProtoMessage()               {}
func (*ST_GlobalActionVersion_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *ST_GlobalActionVersion_PB) GetActionID() uint64 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_GlobalActionVersion_PB) GetVersionid() uint32 {
	if m != nil {
		return m.Versionid
	}
	return 0
}

type ST_GlobalActionVersionList_PB struct {
	List []*ST_GlobalActionVersion_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_GlobalActionVersionList_PB) Reset()                    { *m = ST_GlobalActionVersionList_PB{} }
func (m *ST_GlobalActionVersionList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalActionVersionList_PB) ProtoMessage()               {}
func (*ST_GlobalActionVersionList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *ST_GlobalActionVersionList_PB) GetList() []*ST_GlobalActionVersion_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_LeagueMassJoins struct {
	UserId      uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar      string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID uint32 `protobuf:"varint,4,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
}

func (m *ST_LeagueMassJoins) Reset()                    { *m = ST_LeagueMassJoins{} }
func (m *ST_LeagueMassJoins) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueMassJoins) ProtoMessage()               {}
func (*ST_LeagueMassJoins) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *ST_LeagueMassJoins) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ST_LeagueMassJoins) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_LeagueMassJoins) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_LeagueMassJoins) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

type ST_LeagueMassDetail struct {
	ActionId           uint64                `protobuf:"varint,1,opt,name=actionId" json:"actionId,omitempty"`
	LeagueId           uint64                `protobuf:"varint,2,opt,name=leagueId" json:"leagueId,omitempty"`
	LeagueName         string                `protobuf:"bytes,3,opt,name=leagueName" json:"leagueName,omitempty"`
	MassInitiator      *ST_ArmyHerosDetail   `protobuf:"bytes,4,opt,name=massInitiator" json:"massInitiator,omitempty"`
	JoinMembers        []*ST_LeagueMassJoins `protobuf:"bytes,5,rep,name=joinMembers" json:"joinMembers,omitempty"`
	MassDefender       *ST_ArmyHerosDetail   `protobuf:"bytes,6,opt,name=massDefender" json:"massDefender,omitempty"`
	JoinDefenceMembers []*ST_LeagueMassJoins `protobuf:"bytes,7,rep,name=joinDefenceMembers" json:"joinDefenceMembers,omitempty"`
}

func (m *ST_LeagueMassDetail) Reset()                    { *m = ST_LeagueMassDetail{} }
func (m *ST_LeagueMassDetail) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueMassDetail) ProtoMessage()               {}
func (*ST_LeagueMassDetail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *ST_LeagueMassDetail) GetActionId() uint64 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *ST_LeagueMassDetail) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_LeagueMassDetail) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_LeagueMassDetail) GetMassInitiator() *ST_ArmyHerosDetail {
	if m != nil {
		return m.MassInitiator
	}
	return nil
}

func (m *ST_LeagueMassDetail) GetJoinMembers() []*ST_LeagueMassJoins {
	if m != nil {
		return m.JoinMembers
	}
	return nil
}

func (m *ST_LeagueMassDetail) GetMassDefender() *ST_ArmyHerosDetail {
	if m != nil {
		return m.MassDefender
	}
	return nil
}

func (m *ST_LeagueMassDetail) GetJoinDefenceMembers() []*ST_LeagueMassJoins {
	if m != nil {
		return m.JoinDefenceMembers
	}
	return nil
}

type ST_GlobalActionEntry_PB struct {
	Actionid                 uint64               `protobuf:"varint,1,opt,name=actionid" json:"actionid,omitempty"`
	Actiontype               uint32               `protobuf:"varint,2,opt,name=actiontype" json:"actiontype,omitempty"`
	Stage                    uint32               `protobuf:"varint,3,opt,name=stage" json:"stage,omitempty"`
	Uid                      uint64               `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
	Starttime                uint64               `protobuf:"varint,5,opt,name=starttime" json:"starttime,omitempty"`
	Remaintime               uint64               `protobuf:"varint,6,opt,name=remaintime" json:"remaintime,omitempty"`
	Totaltime                uint64               `protobuf:"varint,7,opt,name=totaltime" json:"totaltime,omitempty"`
	StartTileID              int32                `protobuf:"varint,8,opt,name=startTileID" json:"startTileID,omitempty"`
	EndTileID                int32                `protobuf:"varint,9,opt,name=endTileID" json:"endTileID,omitempty"`
	WorldDataID              uint64               `protobuf:"varint,10,opt,name=worldDataID" json:"worldDataID,omitempty"`
	Details                  []uint64             `protobuf:"varint,11,rep,packed,name=details" json:"details,omitempty"`
	Units                    *ST_UnitAsset_PB     `protobuf:"bytes,12,opt,name=units" json:"units,omitempty"`
	Appenddata               string               `protobuf:"bytes,13,opt,name=appenddata" json:"appenddata,omitempty"`
	HeroId_Old               uint32               `protobuf:"varint,14,opt,name=heroId_Old,json=heroIdOld" json:"heroId_Old,omitempty"`
	LeagueID                 uint64               `protobuf:"varint,15,opt,name=leagueID" json:"leagueID,omitempty"`
	ParentID                 uint64               `protobuf:"varint,16,opt,name=parentID" json:"parentID,omitempty"`
	ChildrenID               []uint64             `protobuf:"varint,17,rep,packed,name=childrenID" json:"childrenID,omitempty"`
	Versionid                uint32               `protobuf:"varint,18,opt,name=versionid" json:"versionid,omitempty"`
	StartScope               *ST_Vector2Int_PB    `protobuf:"bytes,19,opt,name=startScope" json:"startScope,omitempty"`
	EndScope                 *ST_Vector2Int_PB    `protobuf:"bytes,20,opt,name=endScope" json:"endScope,omitempty"`
	OriActionType            uint32               `protobuf:"varint,21,opt,name=oriActionType" json:"oriActionType,omitempty"`
	RecvActionIDList         []uint64             `protobuf:"varint,22,rep,packed,name=recvActionIDList" json:"recvActionIDList,omitempty"`
	HeroIDList               []uint32             `protobuf:"varint,23,rep,packed,name=heroIDList" json:"heroIDList,omitempty"`
	Formation                uint32               `protobuf:"varint,24,opt,name=formation" json:"formation,omitempty"`
	MassDetail               *ST_LeagueMassDetail `protobuf:"bytes,25,opt,name=massDetail" json:"massDetail,omitempty"`
	Hit                      uint32               `protobuf:"varint,26,opt,name=hit" json:"hit,omitempty"`
	HoldHeroIDList           []uint32             `protobuf:"varint,27,rep,packed,name=HoldHeroIDList" json:"HoldHeroIDList,omitempty"`
	TargetWorldEntryType     int64                `protobuf:"varint,28,opt,name=targetWorldEntryType" json:"targetWorldEntryType,omitempty"`
	TargetWorldEntryLeagueID uint64               `protobuf:"varint,29,opt,name=targetWorldEntryLeagueID" json:"targetWorldEntryLeagueID,omitempty"`
	CrossSpecialTile         uint32               `protobuf:"varint,30,opt,name=CrossSpecialTile" json:"CrossSpecialTile,omitempty"`
	CostSta                  uint64               `protobuf:"varint,31,opt,name=costSta" json:"costSta,omitempty"`
	MacMonsterId             int64                `protobuf:"varint,32,opt,name=macMonsterId" json:"macMonsterId,omitempty"`
}

func (m *ST_GlobalActionEntry_PB) Reset()                    { *m = ST_GlobalActionEntry_PB{} }
func (m *ST_GlobalActionEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalActionEntry_PB) ProtoMessage()               {}
func (*ST_GlobalActionEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *ST_GlobalActionEntry_PB) GetActionid() uint64 {
	if m != nil {
		return m.Actionid
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetActiontype() uint32 {
	if m != nil {
		return m.Actiontype
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetStarttime() uint64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetRemaintime() uint64 {
	if m != nil {
		return m.Remaintime
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetTotaltime() uint64 {
	if m != nil {
		return m.Totaltime
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetStartTileID() int32 {
	if m != nil {
		return m.StartTileID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetEndTileID() int32 {
	if m != nil {
		return m.EndTileID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetWorldDataID() uint64 {
	if m != nil {
		return m.WorldDataID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetDetails() []uint64 {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetAppenddata() string {
	if m != nil {
		return m.Appenddata
	}
	return ""
}

func (m *ST_GlobalActionEntry_PB) GetHeroId_Old() uint32 {
	if m != nil {
		return m.HeroId_Old
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetParentID() uint64 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetChildrenID() []uint64 {
	if m != nil {
		return m.ChildrenID
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetVersionid() uint32 {
	if m != nil {
		return m.Versionid
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetStartScope() *ST_Vector2Int_PB {
	if m != nil {
		return m.StartScope
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetEndScope() *ST_Vector2Int_PB {
	if m != nil {
		return m.EndScope
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetOriActionType() uint32 {
	if m != nil {
		return m.OriActionType
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetRecvActionIDList() []uint64 {
	if m != nil {
		return m.RecvActionIDList
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetHeroIDList() []uint32 {
	if m != nil {
		return m.HeroIDList
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetFormation() uint32 {
	if m != nil {
		return m.Formation
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetMassDetail() *ST_LeagueMassDetail {
	if m != nil {
		return m.MassDetail
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetHit() uint32 {
	if m != nil {
		return m.Hit
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetHoldHeroIDList() []uint32 {
	if m != nil {
		return m.HoldHeroIDList
	}
	return nil
}

func (m *ST_GlobalActionEntry_PB) GetTargetWorldEntryType() int64 {
	if m != nil {
		return m.TargetWorldEntryType
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetTargetWorldEntryLeagueID() uint64 {
	if m != nil {
		return m.TargetWorldEntryLeagueID
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetCrossSpecialTile() uint32 {
	if m != nil {
		return m.CrossSpecialTile
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetCostSta() uint64 {
	if m != nil {
		return m.CostSta
	}
	return 0
}

func (m *ST_GlobalActionEntry_PB) GetMacMonsterId() int64 {
	if m != nil {
		return m.MacMonsterId
	}
	return 0
}

type ST_LocalActionAsset_PB struct {
	ActionList []*ST_LocalActionEntry_PB `protobuf:"bytes,1,rep,name=actionList" json:"actionList,omitempty"`
	// 第二队列时间(vip永久时间生效时不使用)
	SecondTime uint64 `protobuf:"varint,2,opt,name=SecondTime" json:"SecondTime,omitempty"`
}

func (m *ST_LocalActionAsset_PB) Reset()                    { *m = ST_LocalActionAsset_PB{} }
func (m *ST_LocalActionAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LocalActionAsset_PB) ProtoMessage()               {}
func (*ST_LocalActionAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *ST_LocalActionAsset_PB) GetActionList() []*ST_LocalActionEntry_PB {
	if m != nil {
		return m.ActionList
	}
	return nil
}

func (m *ST_LocalActionAsset_PB) GetSecondTime() uint64 {
	if m != nil {
		return m.SecondTime
	}
	return 0
}

type ST_GlobalActionAsset_PB struct {
	ActionIDList []uint64 `protobuf:"varint,2,rep,packed,name=actionIDList" json:"actionIDList,omitempty"`
}

func (m *ST_GlobalActionAsset_PB) Reset()                    { *m = ST_GlobalActionAsset_PB{} }
func (m *ST_GlobalActionAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalActionAsset_PB) ProtoMessage()               {}
func (*ST_GlobalActionAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *ST_GlobalActionAsset_PB) GetActionIDList() []uint64 {
	if m != nil {
		return m.ActionIDList
	}
	return nil
}

type ST_GlobalActionList_PB struct {
	ActionList []*ST_GlobalActionEntry_PB `protobuf:"bytes,1,rep,name=actionList" json:"actionList,omitempty"`
}

func (m *ST_GlobalActionList_PB) Reset()                    { *m = ST_GlobalActionList_PB{} }
func (m *ST_GlobalActionList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalActionList_PB) ProtoMessage()               {}
func (*ST_GlobalActionList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *ST_GlobalActionList_PB) GetActionList() []*ST_GlobalActionEntry_PB {
	if m != nil {
		return m.ActionList
	}
	return nil
}

type ST_ColonyAsset_PB struct {
	OwnColonyIDList   []uint64 `protobuf:"varint,1,rep,packed,name=ownColonyIDList" json:"ownColonyIDList,omitempty"`
	ShareColonyIDList []uint64 `protobuf:"varint,2,rep,packed,name=shareColonyIDList" json:"shareColonyIDList,omitempty"`
}

func (m *ST_ColonyAsset_PB) Reset()                    { *m = ST_ColonyAsset_PB{} }
func (m *ST_ColonyAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ColonyAsset_PB) ProtoMessage()               {}
func (*ST_ColonyAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *ST_ColonyAsset_PB) GetOwnColonyIDList() []uint64 {
	if m != nil {
		return m.OwnColonyIDList
	}
	return nil
}

func (m *ST_ColonyAsset_PB) GetShareColonyIDList() []uint64 {
	if m != nil {
		return m.ShareColonyIDList
	}
	return nil
}

type ST_DefenseAsset_PB struct {
	Durable          uint32   `protobuf:"varint,1,opt,name=durable" json:"durable,omitempty"`
	LastRefreshTime  uint64   `protobuf:"varint,2,opt,name=lastRefreshTime" json:"lastRefreshTime,omitempty"`
	BurnTime         uint32   `protobuf:"varint,3,opt,name=burnTime" json:"burnTime,omitempty"`
	IsBurning        bool     `protobuf:"varint,4,opt,name=isBurning" json:"isBurning,omitempty"`
	CanRecover       bool     `protobuf:"varint,5,opt,name=canRecover" json:"canRecover,omitempty"`
	BurningSpeed     uint32   `protobuf:"varint,6,opt,name=burningSpeed" json:"burningSpeed,omitempty"`
	Bootcap          bool     `protobuf:"varint,7,opt,name=bootcap" json:"bootcap,omitempty"`
	CapStartTime     uint64   `protobuf:"varint,8,opt,name=capStartTime" json:"capStartTime,omitempty"`
	CapDuration      uint64   `protobuf:"varint,9,opt,name=capDuration" json:"capDuration,omitempty"`
	BurningStartTime uint64   `protobuf:"varint,10,opt,name=burningStartTime" json:"burningStartTime,omitempty"`
	Blackout         bool     `protobuf:"varint,11,opt,name=blackout" json:"blackout,omitempty"`
	BlackStartTime   uint64   `protobuf:"varint,12,opt,name=blackStartTime" json:"blackStartTime,omitempty"`
	BlackDuration    uint64   `protobuf:"varint,13,opt,name=blackDuration" json:"blackDuration,omitempty"`
	SvrPauseTime     uint64   `protobuf:"varint,14,opt,name=svrPauseTime" json:"svrPauseTime,omitempty"`
	DefValue         uint32   `protobuf:"varint,15,opt,name=defValue" json:"defValue,omitempty"`
	HeroIDList       []uint32 `protobuf:"varint,16,rep,packed,name=heroIDList" json:"heroIDList,omitempty"`
	MaxDurable       uint32   `protobuf:"varint,17,opt,name=maxDurable" json:"maxDurable,omitempty"`
	Newbootcap       bool     `protobuf:"varint,18,opt,name=Newbootcap" json:"Newbootcap,omitempty"`
	// 生命力为0,被击飞
	Hp             uint64 `protobuf:"varint,19,opt,name=hp" json:"hp,omitempty"`
	BurningEndTime uint64 `protobuf:"varint,20,opt,name=burningEndTime" json:"burningEndTime,omitempty"`
	Tip            bool   `protobuf:"varint,21,opt,name=tip" json:"tip,omitempty"`
	// 修复hp时间
	HpTime       uint64 `protobuf:"varint,22,opt,name=HpTime" json:"HpTime,omitempty"`
	HeroWayList  []bool `protobuf:"varint,23,rep,packed,name=heroWayList" json:"heroWayList,omitempty"`
	HeroFirstCap []bool `protobuf:"varint,24,rep,packed,name=heroFirstCap" json:"heroFirstCap,omitempty"`
}

func (m *ST_DefenseAsset_PB) Reset()                    { *m = ST_DefenseAsset_PB{} }
func (m *ST_DefenseAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DefenseAsset_PB) ProtoMessage()               {}
func (*ST_DefenseAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *ST_DefenseAsset_PB) GetDurable() uint32 {
	if m != nil {
		return m.Durable
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetLastRefreshTime() uint64 {
	if m != nil {
		return m.LastRefreshTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBurnTime() uint32 {
	if m != nil {
		return m.BurnTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetIsBurning() bool {
	if m != nil {
		return m.IsBurning
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetCanRecover() bool {
	if m != nil {
		return m.CanRecover
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetBurningSpeed() uint32 {
	if m != nil {
		return m.BurningSpeed
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBootcap() bool {
	if m != nil {
		return m.Bootcap
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetCapStartTime() uint64 {
	if m != nil {
		return m.CapStartTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetCapDuration() uint64 {
	if m != nil {
		return m.CapDuration
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBurningStartTime() uint64 {
	if m != nil {
		return m.BurningStartTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBlackout() bool {
	if m != nil {
		return m.Blackout
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetBlackStartTime() uint64 {
	if m != nil {
		return m.BlackStartTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBlackDuration() uint64 {
	if m != nil {
		return m.BlackDuration
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetSvrPauseTime() uint64 {
	if m != nil {
		return m.SvrPauseTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetDefValue() uint32 {
	if m != nil {
		return m.DefValue
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetHeroIDList() []uint32 {
	if m != nil {
		return m.HeroIDList
	}
	return nil
}

func (m *ST_DefenseAsset_PB) GetMaxDurable() uint32 {
	if m != nil {
		return m.MaxDurable
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetNewbootcap() bool {
	if m != nil {
		return m.Newbootcap
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetHp() uint64 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetBurningEndTime() uint64 {
	if m != nil {
		return m.BurningEndTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetTip() bool {
	if m != nil {
		return m.Tip
	}
	return false
}

func (m *ST_DefenseAsset_PB) GetHpTime() uint64 {
	if m != nil {
		return m.HpTime
	}
	return 0
}

func (m *ST_DefenseAsset_PB) GetHeroWayList() []bool {
	if m != nil {
		return m.HeroWayList
	}
	return nil
}

func (m *ST_DefenseAsset_PB) GetHeroFirstCap() []bool {
	if m != nil {
		return m.HeroFirstCap
	}
	return nil
}

type ST_CashAsset_PB struct {
	Cash1          uint64 `protobuf:"varint,1,opt,name=cash1" json:"cash1,omitempty"`
	Cash2          uint64 `protobuf:"varint,2,opt,name=cash2" json:"cash2,omitempty"`
	Cash3          uint64 `protobuf:"varint,3,opt,name=cash3" json:"cash3,omitempty"`
	Cash4          uint64 `protobuf:"varint,4,opt,name=cash4" json:"cash4,omitempty"`
	Cash5          uint64 `protobuf:"varint,5,opt,name=cash5" json:"cash5,omitempty"`
	Cash100        uint64 `protobuf:"varint,6,opt,name=cash100" json:"cash100,omitempty"`
	Cash6          uint64 `protobuf:"varint,7,opt,name=cash6" json:"cash6,omitempty"`
	CashExpedition uint64 `protobuf:"varint,8,opt,name=cashExpedition" json:"cashExpedition,omitempty"`
}

func (m *ST_CashAsset_PB) Reset()                    { *m = ST_CashAsset_PB{} }
func (m *ST_CashAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CashAsset_PB) ProtoMessage()               {}
func (*ST_CashAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *ST_CashAsset_PB) GetCash1() uint64 {
	if m != nil {
		return m.Cash1
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash2() uint64 {
	if m != nil {
		return m.Cash2
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash3() uint64 {
	if m != nil {
		return m.Cash3
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash4() uint64 {
	if m != nil {
		return m.Cash4
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash5() uint64 {
	if m != nil {
		return m.Cash5
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash100() uint64 {
	if m != nil {
		return m.Cash100
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCash6() uint64 {
	if m != nil {
		return m.Cash6
	}
	return 0
}

func (m *ST_CashAsset_PB) GetCashExpedition() uint64 {
	if m != nil {
		return m.CashExpedition
	}
	return 0
}

type ST_Market_PB struct {
	Uid         uint64           `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Resource    *ST_CashAsset_PB `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
	ReceiveTime uint64           `protobuf:"varint,3,opt,name=receiveTime" json:"receiveTime,omitempty"`
	Max         uint64           `protobuf:"varint,4,opt,name=max" json:"max,omitempty"`
}

func (m *ST_Market_PB) Reset()                    { *m = ST_Market_PB{} }
func (m *ST_Market_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Market_PB) ProtoMessage()               {}
func (*ST_Market_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *ST_Market_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_Market_PB) GetResource() *ST_CashAsset_PB {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ST_Market_PB) GetReceiveTime() uint64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *ST_Market_PB) GetMax() uint64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ST_MarketAsset_PB struct {
	NeedReceive []*ST_Market_PB `protobuf:"bytes,1,rep,name=needReceive" json:"needReceive,omitempty"`
	Received    []*ST_Market_PB `protobuf:"bytes,2,rep,name=received" json:"received,omitempty"`
	Send        []*ST_Market_PB `protobuf:"bytes,3,rep,name=send" json:"send,omitempty"`
}

func (m *ST_MarketAsset_PB) Reset()                    { *m = ST_MarketAsset_PB{} }
func (m *ST_MarketAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MarketAsset_PB) ProtoMessage()               {}
func (*ST_MarketAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *ST_MarketAsset_PB) GetNeedReceive() []*ST_Market_PB {
	if m != nil {
		return m.NeedReceive
	}
	return nil
}

func (m *ST_MarketAsset_PB) GetReceived() []*ST_Market_PB {
	if m != nil {
		return m.Received
	}
	return nil
}

func (m *ST_MarketAsset_PB) GetSend() []*ST_Market_PB {
	if m != nil {
		return m.Send
	}
	return nil
}

type ST_Unit_PB struct {
	Unitid  uint32 `protobuf:"varint,1,opt,name=unitid" json:"unitid,omitempty"`
	Unitnum uint64 `protobuf:"varint,2,opt,name=unitnum" json:"unitnum,omitempty"`
	Lv      uint64 `protobuf:"varint,3,opt,name=Lv" json:"Lv,omitempty"`
}

func (m *ST_Unit_PB) Reset()                    { *m = ST_Unit_PB{} }
func (m *ST_Unit_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Unit_PB) ProtoMessage()               {}
func (*ST_Unit_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *ST_Unit_PB) GetUnitid() uint32 {
	if m != nil {
		return m.Unitid
	}
	return 0
}

func (m *ST_Unit_PB) GetUnitnum() uint64 {
	if m != nil {
		return m.Unitnum
	}
	return 0
}

func (m *ST_Unit_PB) GetLv() uint64 {
	if m != nil {
		return m.Lv
	}
	return 0
}

type ST_UnitAsset_PB struct {
	Units        []*ST_Unit_PB     `protobuf:"bytes,1,rep,name=units" json:"units,omitempty"`
	CapacityItem *ST_Vector2Int_PB `protobuf:"bytes,2,opt,name=capacityItem" json:"capacityItem,omitempty"`
}

func (m *ST_UnitAsset_PB) Reset()                    { *m = ST_UnitAsset_PB{} }
func (m *ST_UnitAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitAsset_PB) ProtoMessage()               {}
func (*ST_UnitAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *ST_UnitAsset_PB) GetUnits() []*ST_Unit_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_UnitAsset_PB) GetCapacityItem() *ST_Vector2Int_PB {
	if m != nil {
		return m.CapacityItem
	}
	return nil
}

type ST_UnitVague_PB struct {
	Unitid  uint32              `protobuf:"varint,1,opt,name=unitid" json:"unitid,omitempty"`
	UnitNum *ST_Vector2Int64_PB `protobuf:"bytes,2,opt,name=unitNum" json:"unitNum,omitempty"`
}

func (m *ST_UnitVague_PB) Reset()                    { *m = ST_UnitVague_PB{} }
func (m *ST_UnitVague_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitVague_PB) ProtoMessage()               {}
func (*ST_UnitVague_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

func (m *ST_UnitVague_PB) GetUnitid() uint32 {
	if m != nil {
		return m.Unitid
	}
	return 0
}

func (m *ST_UnitVague_PB) GetUnitNum() *ST_Vector2Int64_PB {
	if m != nil {
		return m.UnitNum
	}
	return nil
}

type ST_UnitVagueAsset_PB struct {
	Units []*ST_UnitVague_PB `protobuf:"bytes,1,rep,name=units" json:"units,omitempty"`
}

func (m *ST_UnitVagueAsset_PB) Reset()                    { *m = ST_UnitVagueAsset_PB{} }
func (m *ST_UnitVagueAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitVagueAsset_PB) ProtoMessage()               {}
func (*ST_UnitVagueAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

func (m *ST_UnitVagueAsset_PB) GetUnits() []*ST_UnitVague_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

type ST_TeamConf_PB struct {
	Confid     uint32           `protobuf:"varint,1,opt,name=confid" json:"confid,omitempty"`
	ConfName   string           `protobuf:"bytes,2,opt,name=confName" json:"confName,omitempty"`
	UnitList   *ST_UnitAsset_PB `protobuf:"bytes,3,opt,name=unitList" json:"unitList,omitempty"`
	HeroIDList []uint32         `protobuf:"varint,4,rep,packed,name=heroIDList" json:"heroIDList,omitempty"`
}

func (m *ST_TeamConf_PB) Reset()                    { *m = ST_TeamConf_PB{} }
func (m *ST_TeamConf_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TeamConf_PB) ProtoMessage()               {}
func (*ST_TeamConf_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *ST_TeamConf_PB) GetConfid() uint32 {
	if m != nil {
		return m.Confid
	}
	return 0
}

func (m *ST_TeamConf_PB) GetConfName() string {
	if m != nil {
		return m.ConfName
	}
	return ""
}

func (m *ST_TeamConf_PB) GetUnitList() *ST_UnitAsset_PB {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *ST_TeamConf_PB) GetHeroIDList() []uint32 {
	if m != nil {
		return m.HeroIDList
	}
	return nil
}

type ST_TeamConfList_PB struct {
	ConfList []*ST_TeamConf_PB `protobuf:"bytes,1,rep,name=confList" json:"confList,omitempty"`
}

func (m *ST_TeamConfList_PB) Reset()                    { *m = ST_TeamConfList_PB{} }
func (m *ST_TeamConfList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TeamConfList_PB) ProtoMessage()               {}
func (*ST_TeamConfList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

func (m *ST_TeamConfList_PB) GetConfList() []*ST_TeamConf_PB {
	if m != nil {
		return m.ConfList
	}
	return nil
}

type ST_WorldDataVersion_PB struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Version uint32 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (m *ST_WorldDataVersion_PB) Reset()                    { *m = ST_WorldDataVersion_PB{} }
func (m *ST_WorldDataVersion_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataVersion_PB) ProtoMessage()               {}
func (*ST_WorldDataVersion_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

func (m *ST_WorldDataVersion_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_WorldDataVersion_PB) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ST_WorldDataVersionList_PB struct {
	List []*ST_WorldDataVersion_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_WorldDataVersionList_PB) Reset()                    { *m = ST_WorldDataVersionList_PB{} }
func (m *ST_WorldDataVersionList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataVersionList_PB) ProtoMessage()               {}
func (*ST_WorldDataVersionList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

func (m *ST_WorldDataVersionList_PB) GetList() []*ST_WorldDataVersion_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_WorldDataBasic_PB struct {
	Id     *ST_WorldDataVersion_PB    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Simple *ST_WorldDataSimpleInfo_PB `protobuf:"bytes,2,opt,name=simple" json:"simple,omitempty"`
	// 行军中队列
	Actionlist *ST_Uint64List_PB `protobuf:"bytes,3,opt,name=actionlist" json:"actionlist,omitempty"`
}

func (m *ST_WorldDataBasic_PB) Reset()                    { *m = ST_WorldDataBasic_PB{} }
func (m *ST_WorldDataBasic_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataBasic_PB) ProtoMessage()               {}
func (*ST_WorldDataBasic_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

func (m *ST_WorldDataBasic_PB) GetId() *ST_WorldDataVersion_PB {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ST_WorldDataBasic_PB) GetSimple() *ST_WorldDataSimpleInfo_PB {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *ST_WorldDataBasic_PB) GetActionlist() *ST_Uint64List_PB {
	if m != nil {
		return m.Actionlist
	}
	return nil
}

type ST_WorldDataBasicList_PB struct {
	List []*ST_WorldDataBasic_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_WorldDataBasicList_PB) Reset()                    { *m = ST_WorldDataBasicList_PB{} }
func (m *ST_WorldDataBasicList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataBasicList_PB) ProtoMessage()               {}
func (*ST_WorldDataBasicList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *ST_WorldDataBasicList_PB) GetList() []*ST_WorldDataBasic_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_WorldDataSimpleInfo_PB struct {
	Uid                uint64            `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	LeagueId           uint64            `protobuf:"varint,2,opt,name=leagueId" json:"leagueId,omitempty"`
	TileId             int32             `protobuf:"varint,3,opt,name=tileId" json:"tileId,omitempty"`
	DataEntry          *ST_Vector4Int_PB `protobuf:"bytes,4,opt,name=dataEntry" json:"dataEntry,omitempty"`
	GActionList        []uint64          `protobuf:"varint,5,rep,packed,name=gActionList" json:"gActionList,omitempty"`
	CityID             []uint32          `protobuf:"varint,6,rep,packed,name=cityID" json:"cityID,omitempty"`
	Status             uint32            `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	LocationChangeTime uint64            `protobuf:"varint,8,opt,name=locationChangeTime" json:"locationChangeTime,omitempty"`
	AttackLeagueID     uint64            `protobuf:"varint,9,opt,name=attackLeagueID" json:"attackLeagueID,omitempty"`
	MiracleStage       int32             `protobuf:"varint,10,opt,name=miracleStage" json:"miracleStage,omitempty"`
	StageEndTime       uint64            `protobuf:"varint,11,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	OccupyInfo         *ST_OccupyInfo_PB `protobuf:"bytes,12,opt,name=occupyInfo" json:"occupyInfo,omitempty"`
	SkinId             uint32            `protobuf:"varint,13,opt,name=skinId" json:"skinId,omitempty"`
	PrisonCount        uint32            `protobuf:"varint,14,opt,name=prisonCount" json:"prisonCount,omitempty"`
	Hp                 uint64            `protobuf:"varint,15,opt,name=hp" json:"hp,omitempty"`
	Did                uint64            `protobuf:"varint,16,opt,name=did" json:"did,omitempty"`
	Res                *ST_CashHouse_PB  `protobuf:"bytes,17,opt,name=res" json:"res,omitempty"`
	Lid                uint64            `protobuf:"varint,18,opt,name=lid" json:"lid,omitempty"`
	StagStartTime      uint64            `protobuf:"varint,19,opt,name=stagStartTime" json:"stagStartTime,omitempty"`
	IsOk               bool              `protobuf:"varint,20,opt,name=IsOk" json:"IsOk,omitempty"`
	// 首次生效,客户端使用
	First  bool   `protobuf:"varint,21,opt,name=First" json:"First,omitempty"`
	MstLid uint64 `protobuf:"varint,22,opt,name=mstLid" json:"mstLid,omitempty"`
	Sid    uint32 `protobuf:"varint,23,opt,name=sid" json:"sid,omitempty"`
}

func (m *ST_WorldDataSimpleInfo_PB) Reset()                    { *m = ST_WorldDataSimpleInfo_PB{} }
func (m *ST_WorldDataSimpleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataSimpleInfo_PB) ProtoMessage()               {}
func (*ST_WorldDataSimpleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{36} }

func (m *ST_WorldDataSimpleInfo_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetTileId() int32 {
	if m != nil {
		return m.TileId
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetDataEntry() *ST_Vector4Int_PB {
	if m != nil {
		return m.DataEntry
	}
	return nil
}

func (m *ST_WorldDataSimpleInfo_PB) GetGActionList() []uint64 {
	if m != nil {
		return m.GActionList
	}
	return nil
}

func (m *ST_WorldDataSimpleInfo_PB) GetCityID() []uint32 {
	if m != nil {
		return m.CityID
	}
	return nil
}

func (m *ST_WorldDataSimpleInfo_PB) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetLocationChangeTime() uint64 {
	if m != nil {
		return m.LocationChangeTime
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetAttackLeagueID() uint64 {
	if m != nil {
		return m.AttackLeagueID
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetMiracleStage() int32 {
	if m != nil {
		return m.MiracleStage
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetOccupyInfo() *ST_OccupyInfo_PB {
	if m != nil {
		return m.OccupyInfo
	}
	return nil
}

func (m *ST_WorldDataSimpleInfo_PB) GetSkinId() uint32 {
	if m != nil {
		return m.SkinId
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetPrisonCount() uint32 {
	if m != nil {
		return m.PrisonCount
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetHp() uint64 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetDid() uint64 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetRes() *ST_CashHouse_PB {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *ST_WorldDataSimpleInfo_PB) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetStagStartTime() uint64 {
	if m != nil {
		return m.StagStartTime
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *ST_WorldDataSimpleInfo_PB) GetFirst() bool {
	if m != nil {
		return m.First
	}
	return false
}

func (m *ST_WorldDataSimpleInfo_PB) GetMstLid() uint64 {
	if m != nil {
		return m.MstLid
	}
	return 0
}

func (m *ST_WorldDataSimpleInfo_PB) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

type ST_CashHouse_PB struct {
	List []*ST_Market_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_CashHouse_PB) Reset()                    { *m = ST_CashHouse_PB{} }
func (m *ST_CashHouse_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CashHouse_PB) ProtoMessage()               {}
func (*ST_CashHouse_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{37} }

func (m *ST_CashHouse_PB) GetList() []*ST_Market_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_WorldDataDetail_Mine_PB struct {
	CashType       uint32  `protobuf:"varint,1,opt,name=CashType" json:"CashType,omitempty"`
	CashTotalCount float64 `protobuf:"fixed64,2,opt,name=CashTotalCount" json:"CashTotalCount,omitempty"`
	CollectSpeed   uint32  `protobuf:"varint,3,opt,name=CollectSpeed" json:"CollectSpeed,omitempty"`
	CashLeftCount  float64 `protobuf:"fixed64,4,opt,name=CashLeftCount" json:"CashLeftCount,omitempty"`
	Playernum      uint32  `protobuf:"varint,5,opt,name=Playernum" json:"Playernum,omitempty"`
	Star           uint32  `protobuf:"varint,6,opt,name=Star" json:"Star,omitempty"`
	RealLeftCount  float64 `protobuf:"fixed64,7,opt,name=RealLeftCount" json:"RealLeftCount,omitempty"`
}

func (m *ST_WorldDataDetail_Mine_PB) Reset()                    { *m = ST_WorldDataDetail_Mine_PB{} }
func (m *ST_WorldDataDetail_Mine_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_Mine_PB) ProtoMessage()               {}
func (*ST_WorldDataDetail_Mine_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{38} }

func (m *ST_WorldDataDetail_Mine_PB) GetCashType() uint32 {
	if m != nil {
		return m.CashType
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetCashTotalCount() float64 {
	if m != nil {
		return m.CashTotalCount
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetCollectSpeed() uint32 {
	if m != nil {
		return m.CollectSpeed
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetCashLeftCount() float64 {
	if m != nil {
		return m.CashLeftCount
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetPlayernum() uint32 {
	if m != nil {
		return m.Playernum
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_WorldDataDetail_Mine_PB) GetRealLeftCount() float64 {
	if m != nil {
		return m.RealLeftCount
	}
	return 0
}

type ST_ColonyCapture_PB struct {
	UserID      uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	ProduceTime uint64 `protobuf:"varint,2,opt,name=produceTime" json:"produceTime,omitempty"`
}

func (m *ST_ColonyCapture_PB) Reset()                    { *m = ST_ColonyCapture_PB{} }
func (m *ST_ColonyCapture_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ColonyCapture_PB) ProtoMessage()               {}
func (*ST_ColonyCapture_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{39} }

func (m *ST_ColonyCapture_PB) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ST_ColonyCapture_PB) GetProduceTime() uint64 {
	if m != nil {
		return m.ProduceTime
	}
	return 0
}

type ST_WorldDataDetail_Colony_PB struct {
	CaptureUser        *ST_ColonyCapture_PB   `protobuf:"bytes,1,opt,name=captureUser" json:"captureUser,omitempty"`
	LeagueId           uint64                 `protobuf:"varint,2,opt,name=leagueId" json:"leagueId,omitempty"`
	UpdateTime         uint64                 `protobuf:"varint,3,opt,name=updateTime" json:"updateTime,omitempty"`
	SharedUser         []*ST_ColonyCapture_PB `protobuf:"bytes,4,rep,name=sharedUser" json:"sharedUser,omitempty"`
	Units              *ST_UnitAsset_PB       `protobuf:"bytes,5,opt,name=units" json:"units,omitempty"`
	Defense            *ST_DefenseAsset_PB    `protobuf:"bytes,6,opt,name=defense" json:"defense,omitempty"`
	NeedRecoverUnits   bool                   `protobuf:"varint,7,opt,name=needRecoverUnits" json:"needRecoverUnits,omitempty"`
	NeedRecoverDefense bool                   `protobuf:"varint,8,opt,name=needRecoverDefense" json:"needRecoverDefense,omitempty"`
	UnitsUpdateTime    uint64                 `protobuf:"varint,9,opt,name=unitsUpdateTime" json:"unitsUpdateTime,omitempty"`
}

func (m *ST_WorldDataDetail_Colony_PB) Reset()                    { *m = ST_WorldDataDetail_Colony_PB{} }
func (m *ST_WorldDataDetail_Colony_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_Colony_PB) ProtoMessage()               {}
func (*ST_WorldDataDetail_Colony_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{40} }

func (m *ST_WorldDataDetail_Colony_PB) GetCaptureUser() *ST_ColonyCapture_PB {
	if m != nil {
		return m.CaptureUser
	}
	return nil
}

func (m *ST_WorldDataDetail_Colony_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_WorldDataDetail_Colony_PB) GetUpdateTime() uint64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *ST_WorldDataDetail_Colony_PB) GetSharedUser() []*ST_ColonyCapture_PB {
	if m != nil {
		return m.SharedUser
	}
	return nil
}

func (m *ST_WorldDataDetail_Colony_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_WorldDataDetail_Colony_PB) GetDefense() *ST_DefenseAsset_PB {
	if m != nil {
		return m.Defense
	}
	return nil
}

func (m *ST_WorldDataDetail_Colony_PB) GetNeedRecoverUnits() bool {
	if m != nil {
		return m.NeedRecoverUnits
	}
	return false
}

func (m *ST_WorldDataDetail_Colony_PB) GetNeedRecoverDefense() bool {
	if m != nil {
		return m.NeedRecoverDefense
	}
	return false
}

func (m *ST_WorldDataDetail_Colony_PB) GetUnitsUpdateTime() uint64 {
	if m != nil {
		return m.UnitsUpdateTime
	}
	return 0
}

type ST_WorldDataDetail_NoUse_PB struct {
	NoUse int32 `protobuf:"varint,1,opt,name=NoUse" json:"NoUse,omitempty"`
}

func (m *ST_WorldDataDetail_NoUse_PB) Reset()                    { *m = ST_WorldDataDetail_NoUse_PB{} }
func (m *ST_WorldDataDetail_NoUse_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_NoUse_PB) ProtoMessage()               {}
func (*ST_WorldDataDetail_NoUse_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{41} }

func (m *ST_WorldDataDetail_NoUse_PB) GetNoUse() int32 {
	if m != nil {
		return m.NoUse
	}
	return 0
}

type ST_WorldDataDetail_Bestationed_PB struct {
	HeroIdList []uint32         `protobuf:"varint,1,rep,packed,name=heroIdList" json:"heroIdList,omitempty"`
	Units      *ST_UnitAsset_PB `protobuf:"bytes,2,opt,name=units" json:"units,omitempty"`
	Formation  uint32           `protobuf:"varint,3,opt,name=formation" json:"formation,omitempty"`
}

func (m *ST_WorldDataDetail_Bestationed_PB) Reset()         { *m = ST_WorldDataDetail_Bestationed_PB{} }
func (m *ST_WorldDataDetail_Bestationed_PB) String() string { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_Bestationed_PB) ProtoMessage()    {}
func (*ST_WorldDataDetail_Bestationed_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{42}
}

func (m *ST_WorldDataDetail_Bestationed_PB) GetHeroIdList() []uint32 {
	if m != nil {
		return m.HeroIdList
	}
	return nil
}

func (m *ST_WorldDataDetail_Bestationed_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ST_WorldDataDetail_Bestationed_PB) GetFormation() uint32 {
	if m != nil {
		return m.Formation
	}
	return 0
}

type ST_WorldDataDetail_MutiMonster_PB struct {
	Units *ST_UnitAsset_PB `protobuf:"bytes,1,opt,name=units" json:"units,omitempty"`
}

func (m *ST_WorldDataDetail_MutiMonster_PB) Reset()         { *m = ST_WorldDataDetail_MutiMonster_PB{} }
func (m *ST_WorldDataDetail_MutiMonster_PB) String() string { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_MutiMonster_PB) ProtoMessage()    {}
func (*ST_WorldDataDetail_MutiMonster_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{43}
}

func (m *ST_WorldDataDetail_MutiMonster_PB) GetUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.Units
	}
	return nil
}

type ST_WorldDataDetail_City_PB struct {
	LeagueId           uint64              `protobuf:"varint,1,opt,name=leagueId" json:"leagueId,omitempty"`
	StageStartTime     uint64              `protobuf:"varint,2,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	DefenseUpdateTime  uint64              `protobuf:"varint,3,opt,name=defenseUpdateTime" json:"defenseUpdateTime,omitempty"`
	Defense            *ST_DefenseAsset_PB `protobuf:"bytes,4,opt,name=defense" json:"defense,omitempty"`
	NpcUnits           *ST_UnitAsset_PB    `protobuf:"bytes,5,opt,name=npcUnits" json:"npcUnits,omitempty"`
	GarrisonCapalibity uint64              `protobuf:"varint,6,opt,name=garrisonCapalibity" json:"garrisonCapalibity,omitempty"`
	Stage              uint32              `protobuf:"varint,7,opt,name=stage" json:"stage,omitempty"`
	IsFirstCapture     bool                `protobuf:"varint,8,opt,name=isFirstCapture" json:"isFirstCapture,omitempty"`
	CurrentMonsterID   int64               `protobuf:"varint,9,opt,name=currentMonsterID" json:"currentMonsterID,omitempty"`
}

func (m *ST_WorldDataDetail_City_PB) Reset()                    { *m = ST_WorldDataDetail_City_PB{} }
func (m *ST_WorldDataDetail_City_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_City_PB) ProtoMessage()               {}
func (*ST_WorldDataDetail_City_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{44} }

func (m *ST_WorldDataDetail_City_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_WorldDataDetail_City_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_WorldDataDetail_City_PB) GetDefenseUpdateTime() uint64 {
	if m != nil {
		return m.DefenseUpdateTime
	}
	return 0
}

func (m *ST_WorldDataDetail_City_PB) GetDefense() *ST_DefenseAsset_PB {
	if m != nil {
		return m.Defense
	}
	return nil
}

func (m *ST_WorldDataDetail_City_PB) GetNpcUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.NpcUnits
	}
	return nil
}

func (m *ST_WorldDataDetail_City_PB) GetGarrisonCapalibity() uint64 {
	if m != nil {
		return m.GarrisonCapalibity
	}
	return 0
}

func (m *ST_WorldDataDetail_City_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_WorldDataDetail_City_PB) GetIsFirstCapture() bool {
	if m != nil {
		return m.IsFirstCapture
	}
	return false
}

func (m *ST_WorldDataDetail_City_PB) GetCurrentMonsterID() int64 {
	if m != nil {
		return m.CurrentMonsterID
	}
	return 0
}

type ST_WorldDataDetail_MainCity_PB struct {
	Defense *ST_DefenseAsset_PB `protobuf:"bytes,1,opt,name=defense" json:"defense,omitempty"`
}

func (m *ST_WorldDataDetail_MainCity_PB) Reset()                    { *m = ST_WorldDataDetail_MainCity_PB{} }
func (m *ST_WorldDataDetail_MainCity_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_MainCity_PB) ProtoMessage()               {}
func (*ST_WorldDataDetail_MainCity_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{45} }

func (m *ST_WorldDataDetail_MainCity_PB) GetDefense() *ST_DefenseAsset_PB {
	if m != nil {
		return m.Defense
	}
	return nil
}

type ST_WorldDataDetail_UndergroundPalace_PB struct {
	ContainUser []uint64 `protobuf:"varint,1,rep,packed,name=containUser" json:"containUser,omitempty"`
	LiveTime    uint64   `protobuf:"varint,2,opt,name=liveTime" json:"liveTime,omitempty"`
	CreateTime  uint64   `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
}

func (m *ST_WorldDataDetail_UndergroundPalace_PB) Reset() {
	*m = ST_WorldDataDetail_UndergroundPalace_PB{}
}
func (m *ST_WorldDataDetail_UndergroundPalace_PB) String() string { return proto.CompactTextString(m) }
func (*ST_WorldDataDetail_UndergroundPalace_PB) ProtoMessage()    {}
func (*ST_WorldDataDetail_UndergroundPalace_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{46}
}

func (m *ST_WorldDataDetail_UndergroundPalace_PB) GetContainUser() []uint64 {
	if m != nil {
		return m.ContainUser
	}
	return nil
}

func (m *ST_WorldDataDetail_UndergroundPalace_PB) GetLiveTime() uint64 {
	if m != nil {
		return m.LiveTime
	}
	return 0
}

func (m *ST_WorldDataDetail_UndergroundPalace_PB) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type ST_CityArchon_PB struct {
	LeagueID uint64 `protobuf:"varint,1,opt,name=LeagueID" json:"LeagueID,omitempty"`
	Uid      uint64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_CityArchon_PB) Reset()                    { *m = ST_CityArchon_PB{} }
func (m *ST_CityArchon_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CityArchon_PB) ProtoMessage()               {}
func (*ST_CityArchon_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{47} }

func (m *ST_CityArchon_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_CityArchon_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type ST_CityOccupyInfo_PB struct {
	Uid        uint64                  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Lid        uint64                  `protobuf:"varint,2,opt,name=lid" json:"lid,omitempty"`
	Tid        int32                   `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	KillValue  uint64                  `protobuf:"varint,4,opt,name=KillValue" json:"KillValue,omitempty"`
	HoldValue  uint64                  `protobuf:"varint,5,opt,name=HoldValue" json:"HoldValue,omitempty"`
	HoldTm     uint64                  `protobuf:"varint,6,opt,name=HoldTm" json:"HoldTm,omitempty"`
	HoldSpeed  uint64                  `protobuf:"varint,7,opt,name=HoldSpeed" json:"HoldSpeed,omitempty"`
	UName      string                  `protobuf:"bytes,8,opt,name=uName" json:"uName,omitempty"`
	LeagueFlag *ST_LeagueCustomFlag_PB `protobuf:"bytes,9,opt,name=leagueFlag" json:"leagueFlag,omitempty"`
	LShortName string                  `protobuf:"bytes,10,opt,name=lShortName" json:"lShortName,omitempty"`
	Aid        uint64                  `protobuf:"varint,11,opt,name=aid" json:"aid,omitempty"`
}

func (m *ST_CityOccupyInfo_PB) Reset()                    { *m = ST_CityOccupyInfo_PB{} }
func (m *ST_CityOccupyInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CityOccupyInfo_PB) ProtoMessage()               {}
func (*ST_CityOccupyInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{48} }

func (m *ST_CityOccupyInfo_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetKillValue() uint64 {
	if m != nil {
		return m.KillValue
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetHoldValue() uint64 {
	if m != nil {
		return m.HoldValue
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetHoldTm() uint64 {
	if m != nil {
		return m.HoldTm
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetHoldSpeed() uint64 {
	if m != nil {
		return m.HoldSpeed
	}
	return 0
}

func (m *ST_CityOccupyInfo_PB) GetUName() string {
	if m != nil {
		return m.UName
	}
	return ""
}

func (m *ST_CityOccupyInfo_PB) GetLeagueFlag() *ST_LeagueCustomFlag_PB {
	if m != nil {
		return m.LeagueFlag
	}
	return nil
}

func (m *ST_CityOccupyInfo_PB) GetLShortName() string {
	if m != nil {
		return m.LShortName
	}
	return ""
}

func (m *ST_CityOccupyInfo_PB) GetAid() uint64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

// 查询城市争霸
type ST_SC_CityWarList_PB struct {
	List []*ST_SC_CityWarInfo_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_SC_CityWarList_PB) Reset()                    { *m = ST_SC_CityWarList_PB{} }
func (m *ST_SC_CityWarList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SC_CityWarList_PB) ProtoMessage()               {}
func (*ST_SC_CityWarList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{49} }

func (m *ST_SC_CityWarList_PB) GetList() []*ST_SC_CityWarInfo_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_SC_CityWarInfo_PB struct {
	Cid            uint32 `protobuf:"varint,1,opt,name=cid" json:"cid,omitempty"`
	Stage          int32  `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	LeagueName     string `protobuf:"bytes,3,opt,name=LeagueName" json:"LeagueName,omitempty"`
	StageStartTime uint64 `protobuf:"varint,4,opt,name=StageStartTime" json:"StageStartTime,omitempty"`
	StageEndTime   uint64 `protobuf:"varint,5,opt,name=StageEndTime" json:"StageEndTime,omitempty"`
	End            bool   `protobuf:"varint,6,opt,name=End" json:"End,omitempty"`
}

func (m *ST_SC_CityWarInfo_PB) Reset()                    { *m = ST_SC_CityWarInfo_PB{} }
func (m *ST_SC_CityWarInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SC_CityWarInfo_PB) ProtoMessage()               {}
func (*ST_SC_CityWarInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{50} }

func (m *ST_SC_CityWarInfo_PB) GetCid() uint32 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *ST_SC_CityWarInfo_PB) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_SC_CityWarInfo_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_SC_CityWarInfo_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_SC_CityWarInfo_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_SC_CityWarInfo_PB) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

// 城市争霸
type ST_CityWar_PB struct {
	Stage          int32                   `protobuf:"varint,1,opt,name=stage" json:"stage,omitempty"`
	StageEndTime   uint64                  `protobuf:"varint,2,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	StageStartTime uint64                  `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	LeagueId       uint64                  `protobuf:"varint,4,opt,name=LeagueId" json:"LeagueId,omitempty"`
	Killer         uint64                  `protobuf:"varint,5,opt,name=Killer" json:"Killer,omitempty"`
	Holder         uint64                  `protobuf:"varint,6,opt,name=Holder" json:"Holder,omitempty"`
	Holder1        uint64                  `protobuf:"varint,7,opt,name=Holder1" json:"Holder1,omitempty"`
	Holder2        uint64                  `protobuf:"varint,8,opt,name=Holder2" json:"Holder2,omitempty"`
	Holder3        uint64                  `protobuf:"varint,9,opt,name=Holder3" json:"Holder3,omitempty"`
	Occupy         []*ST_CityOccupyInfo_PB `protobuf:"bytes,10,rep,name=occupy" json:"occupy,omitempty"`
	Killernum      uint64                  `protobuf:"varint,11,opt,name=Killernum" json:"Killernum,omitempty"`
	Holdernum      uint64                  `protobuf:"varint,12,opt,name=Holdernum" json:"Holdernum,omitempty"`
	// 活动结束
	End bool `protobuf:"varint,13,opt,name=End" json:"End,omitempty"`
}

func (m *ST_CityWar_PB) Reset()                    { *m = ST_CityWar_PB{} }
func (m *ST_CityWar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CityWar_PB) ProtoMessage()               {}
func (*ST_CityWar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{51} }

func (m *ST_CityWar_PB) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_CityWar_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_CityWar_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_CityWar_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_CityWar_PB) GetKiller() uint64 {
	if m != nil {
		return m.Killer
	}
	return 0
}

func (m *ST_CityWar_PB) GetHolder() uint64 {
	if m != nil {
		return m.Holder
	}
	return 0
}

func (m *ST_CityWar_PB) GetHolder1() uint64 {
	if m != nil {
		return m.Holder1
	}
	return 0
}

func (m *ST_CityWar_PB) GetHolder2() uint64 {
	if m != nil {
		return m.Holder2
	}
	return 0
}

func (m *ST_CityWar_PB) GetHolder3() uint64 {
	if m != nil {
		return m.Holder3
	}
	return 0
}

func (m *ST_CityWar_PB) GetOccupy() []*ST_CityOccupyInfo_PB {
	if m != nil {
		return m.Occupy
	}
	return nil
}

func (m *ST_CityWar_PB) GetKillernum() uint64 {
	if m != nil {
		return m.Killernum
	}
	return 0
}

func (m *ST_CityWar_PB) GetHoldernum() uint64 {
	if m != nil {
		return m.Holdernum
	}
	return 0
}

func (m *ST_CityWar_PB) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type ST_WorldDataDetailInfo_PB struct {
	DetailNouse        *ST_WorldDataDetail_NoUse_PB             `protobuf:"bytes,1,opt,name=detail_nouse,json=detailNouse" json:"detail_nouse,omitempty"`
	DetailMine         *ST_WorldDataDetail_Mine_PB              `protobuf:"bytes,2,opt,name=detail_mine,json=detailMine" json:"detail_mine,omitempty"`
	DetailColony       *ST_WorldDataDetail_Colony_PB            `protobuf:"bytes,3,opt,name=detail_colony,json=detailColony" json:"detail_colony,omitempty"`
	Detail_Bestationed *ST_WorldDataDetail_Bestationed_PB       `protobuf:"bytes,4,opt,name=detail_Bestationed,json=detailBestationed" json:"detail_Bestationed,omitempty"`
	Detail_MutiMonster *ST_WorldDataDetail_MutiMonster_PB       `protobuf:"bytes,5,opt,name=detail_MutiMonster,json=detailMutiMonster" json:"detail_MutiMonster,omitempty"`
	Detail_City        *ST_WorldDataDetail_City_PB              `protobuf:"bytes,6,opt,name=detail_City,json=detailCity" json:"detail_City,omitempty"`
	DetailMainCity     *ST_WorldDataDetail_MainCity_PB          `protobuf:"bytes,7,opt,name=detail_mainCity,json=detailMainCity" json:"detail_mainCity,omitempty"`
	DetailPalace       *ST_WorldDataDetail_UndergroundPalace_PB `protobuf:"bytes,8,opt,name=detail_palace,json=detailPalace" json:"detail_palace,omitempty"`
	DetailMiraclewar   *ST_MiracleWar_PB                        `protobuf:"bytes,9,opt,name=detail_miraclewar,json=detailMiraclewar" json:"detail_miraclewar,omitempty"`
	CityWar            *ST_CityWar_PB                           `protobuf:"bytes,10,opt,name=CityWar" json:"CityWar,omitempty"`
}

func (m *ST_WorldDataDetailInfo_PB) Reset()                    { *m = ST_WorldDataDetailInfo_PB{} }
func (m *ST_WorldDataDetailInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataDetailInfo_PB) ProtoMessage()               {}
func (*ST_WorldDataDetailInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{52} }

func (m *ST_WorldDataDetailInfo_PB) GetDetailNouse() *ST_WorldDataDetail_NoUse_PB {
	if m != nil {
		return m.DetailNouse
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetailMine() *ST_WorldDataDetail_Mine_PB {
	if m != nil {
		return m.DetailMine
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetailColony() *ST_WorldDataDetail_Colony_PB {
	if m != nil {
		return m.DetailColony
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetail_Bestationed() *ST_WorldDataDetail_Bestationed_PB {
	if m != nil {
		return m.Detail_Bestationed
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetail_MutiMonster() *ST_WorldDataDetail_MutiMonster_PB {
	if m != nil {
		return m.Detail_MutiMonster
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetail_City() *ST_WorldDataDetail_City_PB {
	if m != nil {
		return m.Detail_City
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetailMainCity() *ST_WorldDataDetail_MainCity_PB {
	if m != nil {
		return m.DetailMainCity
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetailPalace() *ST_WorldDataDetail_UndergroundPalace_PB {
	if m != nil {
		return m.DetailPalace
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetDetailMiraclewar() *ST_MiracleWar_PB {
	if m != nil {
		return m.DetailMiraclewar
	}
	return nil
}

func (m *ST_WorldDataDetailInfo_PB) GetCityWar() *ST_CityWar_PB {
	if m != nil {
		return m.CityWar
	}
	return nil
}

type ST_WorldDataEntry_PB struct {
	VersionEntry *ST_WorldDataVersion_PB    `protobuf:"bytes,1,opt,name=versionEntry" json:"versionEntry,omitempty"`
	SimpleEntry  *ST_WorldDataSimpleInfo_PB `protobuf:"bytes,2,opt,name=simpleEntry" json:"simpleEntry,omitempty"`
	DetailEntry  *ST_WorldDataDetailInfo_PB `protobuf:"bytes,3,opt,name=detailEntry" json:"detailEntry,omitempty"`
}

func (m *ST_WorldDataEntry_PB) Reset()                    { *m = ST_WorldDataEntry_PB{} }
func (m *ST_WorldDataEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataEntry_PB) ProtoMessage()               {}
func (*ST_WorldDataEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{53} }

func (m *ST_WorldDataEntry_PB) GetVersionEntry() *ST_WorldDataVersion_PB {
	if m != nil {
		return m.VersionEntry
	}
	return nil
}

func (m *ST_WorldDataEntry_PB) GetSimpleEntry() *ST_WorldDataSimpleInfo_PB {
	if m != nil {
		return m.SimpleEntry
	}
	return nil
}

func (m *ST_WorldDataEntry_PB) GetDetailEntry() *ST_WorldDataDetailInfo_PB {
	if m != nil {
		return m.DetailEntry
	}
	return nil
}

type ST_WorldDataEntryList_PB struct {
	DataList []*ST_WorldDataEntry_PB `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
}

func (m *ST_WorldDataEntryList_PB) Reset()                    { *m = ST_WorldDataEntryList_PB{} }
func (m *ST_WorldDataEntryList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDataEntryList_PB) ProtoMessage()               {}
func (*ST_WorldDataEntryList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{54} }

func (m *ST_WorldDataEntryList_PB) GetDataList() []*ST_WorldDataEntry_PB {
	if m != nil {
		return m.DataList
	}
	return nil
}

type ST_Research_PB struct {
	RID uint32 `protobuf:"varint,1,opt,name=rID" json:"rID,omitempty"`
}

func (m *ST_Research_PB) Reset()                    { *m = ST_Research_PB{} }
func (m *ST_Research_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Research_PB) ProtoMessage()               {}
func (*ST_Research_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{55} }

func (m *ST_Research_PB) GetRID() uint32 {
	if m != nil {
		return m.RID
	}
	return 0
}

type ST_ResearchEntryList_PB struct {
	EntryList []*ST_Research_PB `protobuf:"bytes,1,rep,name=entryList" json:"entryList,omitempty"`
}

func (m *ST_ResearchEntryList_PB) Reset()                    { *m = ST_ResearchEntryList_PB{} }
func (m *ST_ResearchEntryList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ResearchEntryList_PB) ProtoMessage()               {}
func (*ST_ResearchEntryList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{56} }

func (m *ST_ResearchEntryList_PB) GetEntryList() []*ST_Research_PB {
	if m != nil {
		return m.EntryList
	}
	return nil
}

type ST_ItemEntry_PB struct {
	ItemId  uint32 `protobuf:"varint,1,opt,name=itemId" json:"itemId,omitempty"`
	ItemNum uint32 `protobuf:"varint,2,opt,name=itemNum" json:"itemNum,omitempty"`
}

func (m *ST_ItemEntry_PB) Reset()                    { *m = ST_ItemEntry_PB{} }
func (m *ST_ItemEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ItemEntry_PB) ProtoMessage()               {}
func (*ST_ItemEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{57} }

func (m *ST_ItemEntry_PB) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ST_ItemEntry_PB) GetItemNum() uint32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type ST_Asset_ItemPack_PB struct {
	ItemList []*ST_ItemEntry_PB `protobuf:"bytes,1,rep,name=itemList" json:"itemList,omitempty"`
}

func (m *ST_Asset_ItemPack_PB) Reset()                    { *m = ST_Asset_ItemPack_PB{} }
func (m *ST_Asset_ItemPack_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_ItemPack_PB) ProtoMessage()               {}
func (*ST_Asset_ItemPack_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{58} }

func (m *ST_Asset_ItemPack_PB) GetItemList() []*ST_ItemEntry_PB {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type ST_Asset_Chat_Item_PB struct {
	TitleID        uint64 `protobuf:"varint,1,opt,name=titleID" json:"titleID,omitempty"`
	Timestamp      uint64 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	LastReplyCount uint32 `protobuf:"varint,3,opt,name=lastReplyCount" json:"lastReplyCount,omitempty"`
}

func (m *ST_Asset_Chat_Item_PB) Reset()                    { *m = ST_Asset_Chat_Item_PB{} }
func (m *ST_Asset_Chat_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Chat_Item_PB) ProtoMessage()               {}
func (*ST_Asset_Chat_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{59} }

func (m *ST_Asset_Chat_Item_PB) GetTitleID() uint64 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Asset_Chat_Item_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_Asset_Chat_Item_PB) GetLastReplyCount() uint32 {
	if m != nil {
		return m.LastReplyCount
	}
	return 0
}

type ST_ForbiddenChat_PB struct {
	ForbiddenType uint32 `protobuf:"varint,1,opt,name=forbiddenType" json:"forbiddenType,omitempty"`
	StartTime     uint64 `protobuf:"varint,2,opt,name=startTime" json:"startTime,omitempty"`
	Duration      uint64 `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	Msg           string `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
}

func (m *ST_ForbiddenChat_PB) Reset()                    { *m = ST_ForbiddenChat_PB{} }
func (m *ST_ForbiddenChat_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ForbiddenChat_PB) ProtoMessage()               {}
func (*ST_ForbiddenChat_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{60} }

func (m *ST_ForbiddenChat_PB) GetForbiddenType() uint32 {
	if m != nil {
		return m.ForbiddenType
	}
	return 0
}

func (m *ST_ForbiddenChat_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_ForbiddenChat_PB) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *ST_ForbiddenChat_PB) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ST_PrivateChat_PB struct {
	Uid          uint64                       `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	FTime        uint64                       `protobuf:"varint,2,opt,name=FTime" json:"FTime,omitempty"`
	NewCount     uint32                       `protobuf:"varint,3,opt,name=NewCount" json:"NewCount,omitempty"`
	Name         string                       `protobuf:"bytes,4,opt,name=Name" json:"Name,omitempty"`
	Avatar       string                       `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID  uint32                       `protobuf:"varint,6,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	AvatarID     string                       `protobuf:"bytes,7,opt,name=avatarID" json:"avatarID,omitempty"`
	LeagueName   string                       `protobuf:"bytes,8,opt,name=LeagueName" json:"LeagueName,omitempty"`
	ChatList     []*ST_PrivateChat_Content_PB `protobuf:"bytes,9,rep,name=ChatList" json:"ChatList,omitempty"`
	NextId       uint64                       `protobuf:"varint,10,opt,name=NextId" json:"NextId,omitempty"`
	KingWarTitle int32                        `protobuf:"varint,11,opt,name=kingWarTitle" json:"kingWarTitle,omitempty"`
	BubbleId     uint32                       `protobuf:"varint,12,opt,name=bubbleId" json:"bubbleId,omitempty"`
}

func (m *ST_PrivateChat_PB) Reset()                    { *m = ST_PrivateChat_PB{} }
func (m *ST_PrivateChat_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrivateChat_PB) ProtoMessage()               {}
func (*ST_PrivateChat_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{61} }

func (m *ST_PrivateChat_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetFTime() uint64 {
	if m != nil {
		return m.FTime
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetNewCount() uint32 {
	if m != nil {
		return m.NewCount
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_PrivateChat_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_PrivateChat_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetAvatarID() string {
	if m != nil {
		return m.AvatarID
	}
	return ""
}

func (m *ST_PrivateChat_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_PrivateChat_PB) GetChatList() []*ST_PrivateChat_Content_PB {
	if m != nil {
		return m.ChatList
	}
	return nil
}

func (m *ST_PrivateChat_PB) GetNextId() uint64 {
	if m != nil {
		return m.NextId
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetKingWarTitle() int32 {
	if m != nil {
		return m.KingWarTitle
	}
	return 0
}

func (m *ST_PrivateChat_PB) GetBubbleId() uint32 {
	if m != nil {
		return m.BubbleId
	}
	return 0
}

type ST_PrivateChat_Content_PB struct {
	SenderUid uint64 `protobuf:"varint,1,opt,name=SenderUid" json:"SenderUid,omitempty"`
	Time      uint64 `protobuf:"varint,2,opt,name=Time" json:"Time,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
	ID        uint64 `protobuf:"varint,4,opt,name=ID" json:"ID,omitempty"`
	Post      string `protobuf:"bytes,5,opt,name=post" json:"post,omitempty"`
}

func (m *ST_PrivateChat_Content_PB) Reset()                    { *m = ST_PrivateChat_Content_PB{} }
func (m *ST_PrivateChat_Content_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrivateChat_Content_PB) ProtoMessage()               {}
func (*ST_PrivateChat_Content_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{62} }

func (m *ST_PrivateChat_Content_PB) GetSenderUid() uint64 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *ST_PrivateChat_Content_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_PrivateChat_Content_PB) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ST_PrivateChat_Content_PB) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ST_PrivateChat_Content_PB) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

type ST_Asset_Chat_PB struct {
	FollowTitleIDList []*ST_Asset_Chat_Item_PB `protobuf:"bytes,1,rep,name=followTitleIDList" json:"followTitleIDList,omitempty"`
	PraiseTitleIDList []*ST_Asset_Chat_Item_PB `protobuf:"bytes,2,rep,name=praiseTitleIDList" json:"praiseTitleIDList,omitempty"`
	MyTitleIDList     []*ST_Asset_Chat_Item_PB `protobuf:"bytes,3,rep,name=myTitleIDList" json:"myTitleIDList,omitempty"`
	LastChatTime      uint64                   `protobuf:"varint,4,opt,name=lastChatTime" json:"lastChatTime,omitempty"`
	DayChatCount      uint32                   `protobuf:"varint,5,opt,name=dayChatCount" json:"dayChatCount,omitempty"`
	Forbidden         []*ST_ForbiddenChat_PB   `protobuf:"bytes,6,rep,name=forbidden" json:"forbidden,omitempty"`
	PrivateChatList   []*ST_PrivateChat_PB     `protobuf:"bytes,7,rep,name=PrivateChatList" json:"PrivateChatList,omitempty"`
}

func (m *ST_Asset_Chat_PB) Reset()                    { *m = ST_Asset_Chat_PB{} }
func (m *ST_Asset_Chat_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Chat_PB) ProtoMessage()               {}
func (*ST_Asset_Chat_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{63} }

func (m *ST_Asset_Chat_PB) GetFollowTitleIDList() []*ST_Asset_Chat_Item_PB {
	if m != nil {
		return m.FollowTitleIDList
	}
	return nil
}

func (m *ST_Asset_Chat_PB) GetPraiseTitleIDList() []*ST_Asset_Chat_Item_PB {
	if m != nil {
		return m.PraiseTitleIDList
	}
	return nil
}

func (m *ST_Asset_Chat_PB) GetMyTitleIDList() []*ST_Asset_Chat_Item_PB {
	if m != nil {
		return m.MyTitleIDList
	}
	return nil
}

func (m *ST_Asset_Chat_PB) GetLastChatTime() uint64 {
	if m != nil {
		return m.LastChatTime
	}
	return 0
}

func (m *ST_Asset_Chat_PB) GetDayChatCount() uint32 {
	if m != nil {
		return m.DayChatCount
	}
	return 0
}

func (m *ST_Asset_Chat_PB) GetForbidden() []*ST_ForbiddenChat_PB {
	if m != nil {
		return m.Forbidden
	}
	return nil
}

func (m *ST_Asset_Chat_PB) GetPrivateChatList() []*ST_PrivateChat_PB {
	if m != nil {
		return m.PrivateChatList
	}
	return nil
}

// ----------------主动侦查报告（不同等级能查看不同的侦查结果）----------------//
// 领主信息
type ST_ActiveSpy_Lord struct {
	LordInCity  bool   `protobuf:"varint,1,opt,name=lordInCity" json:"lordInCity,omitempty"`
	LordLevel   uint32 `protobuf:"varint,2,opt,name=lordLevel" json:"lordLevel,omitempty"`
	LordQuality uint32 `protobuf:"varint,3,opt,name=lordQuality" json:"lordQuality,omitempty"`
	LordRank    uint32 `protobuf:"varint,4,opt,name=lordRank" json:"lordRank,omitempty"`
	HeroID      uint64 `protobuf:"varint,5,opt,name=heroID" json:"heroID,omitempty"`
}

func (m *ST_ActiveSpy_Lord) Reset()                    { *m = ST_ActiveSpy_Lord{} }
func (m *ST_ActiveSpy_Lord) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Lord) ProtoMessage()               {}
func (*ST_ActiveSpy_Lord) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{64} }

func (m *ST_ActiveSpy_Lord) GetLordInCity() bool {
	if m != nil {
		return m.LordInCity
	}
	return false
}

func (m *ST_ActiveSpy_Lord) GetLordLevel() uint32 {
	if m != nil {
		return m.LordLevel
	}
	return 0
}

func (m *ST_ActiveSpy_Lord) GetLordQuality() uint32 {
	if m != nil {
		return m.LordQuality
	}
	return 0
}

func (m *ST_ActiveSpy_Lord) GetLordRank() uint32 {
	if m != nil {
		return m.LordRank
	}
	return 0
}

func (m *ST_ActiveSpy_Lord) GetHeroID() uint64 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

// 援军信息
type ST_GarrisonInfo_PB struct {
	Uid                      uint64                `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	GarrisonUserName         string                `protobuf:"bytes,2,opt,name=garrisonUserName" json:"garrisonUserName,omitempty"`
	MainCityLevel            uint32                `protobuf:"varint,3,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
	VagueReinforcementsUnit  *ST_UnitVagueAsset_PB `protobuf:"bytes,4,opt,name=vagueReinforcementsUnit" json:"vagueReinforcementsUnit,omitempty"`
	VagueReinforcementsCount *ST_Vector2Int64_PB   `protobuf:"bytes,5,opt,name=vagueReinforcementsCount" json:"vagueReinforcementsCount,omitempty"`
	ReinforcementsCount      *ST_UnitAsset_PB      `protobuf:"bytes,6,opt,name=reinforcementsCount" json:"reinforcementsCount,omitempty"`
}

func (m *ST_GarrisonInfo_PB) Reset()                    { *m = ST_GarrisonInfo_PB{} }
func (m *ST_GarrisonInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GarrisonInfo_PB) ProtoMessage()               {}
func (*ST_GarrisonInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{65} }

func (m *ST_GarrisonInfo_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_GarrisonInfo_PB) GetGarrisonUserName() string {
	if m != nil {
		return m.GarrisonUserName
	}
	return ""
}

func (m *ST_GarrisonInfo_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_GarrisonInfo_PB) GetVagueReinforcementsUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueReinforcementsUnit
	}
	return nil
}

func (m *ST_GarrisonInfo_PB) GetVagueReinforcementsCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueReinforcementsCount
	}
	return nil
}

func (m *ST_GarrisonInfo_PB) GetReinforcementsCount() *ST_UnitAsset_PB {
	if m != nil {
		return m.ReinforcementsCount
	}
	return nil
}

type ST_ActiveSpy_Reinforcements struct {
	GarrisonInfo                  []*ST_GarrisonInfo_PB `protobuf:"bytes,1,rep,name=garrisonInfo" json:"garrisonInfo,omitempty"`
	VagueReinforcementsTotalCount *ST_Vector2Int64_PB   `protobuf:"bytes,2,opt,name=vagueReinforcementsTotalCount" json:"vagueReinforcementsTotalCount,omitempty"`
	ReinforcementsTotalCount      uint64                `protobuf:"varint,3,opt,name=reinforcementsTotalCount" json:"reinforcementsTotalCount,omitempty"`
}

func (m *ST_ActiveSpy_Reinforcements) Reset()                    { *m = ST_ActiveSpy_Reinforcements{} }
func (m *ST_ActiveSpy_Reinforcements) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Reinforcements) ProtoMessage()               {}
func (*ST_ActiveSpy_Reinforcements) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{66} }

func (m *ST_ActiveSpy_Reinforcements) GetGarrisonInfo() []*ST_GarrisonInfo_PB {
	if m != nil {
		return m.GarrisonInfo
	}
	return nil
}

func (m *ST_ActiveSpy_Reinforcements) GetVagueReinforcementsTotalCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueReinforcementsTotalCount
	}
	return nil
}

func (m *ST_ActiveSpy_Reinforcements) GetReinforcementsTotalCount() uint64 {
	if m != nil {
		return m.ReinforcementsTotalCount
	}
	return 0
}

// 资源信息
type ST_ActiveSpy_Cash struct {
	Resources           *ST_CashAsset_PB `protobuf:"bytes,1,opt,name=resources" json:"resources,omitempty"`
	CanReceiveResources *ST_CashAsset_PB `protobuf:"bytes,2,opt,name=canReceiveResources" json:"canReceiveResources,omitempty"`
}

func (m *ST_ActiveSpy_Cash) Reset()                    { *m = ST_ActiveSpy_Cash{} }
func (m *ST_ActiveSpy_Cash) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Cash) ProtoMessage()               {}
func (*ST_ActiveSpy_Cash) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{67} }

func (m *ST_ActiveSpy_Cash) GetResources() *ST_CashAsset_PB {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ST_ActiveSpy_Cash) GetCanReceiveResources() *ST_CashAsset_PB {
	if m != nil {
		return m.CanReceiveResources
	}
	return nil
}

// 防守部队模糊信息
type ST_ActiveSpy_Vague struct {
	VagueTrapCount    *ST_Vector2Int64_PB   `protobuf:"bytes,1,opt,name=vagueTrapCount" json:"vagueTrapCount,omitempty"`
	VagueTrapUnit     *ST_UnitVagueAsset_PB `protobuf:"bytes,2,opt,name=vagueTrapUnit" json:"vagueTrapUnit,omitempty"`
	VagueUnitCount    *ST_Vector2Int64_PB   `protobuf:"bytes,3,opt,name=vagueUnitCount" json:"vagueUnitCount,omitempty"`
	VagueDefenceUnit  *ST_UnitVagueAsset_PB `protobuf:"bytes,4,opt,name=vagueDefenceUnit" json:"vagueDefenceUnit,omitempty"`
	VagueHospitalUnit *ST_UnitVagueAsset_PB `protobuf:"bytes,5,opt,name=vagueHospitalUnit" json:"vagueHospitalUnit,omitempty"`
}

func (m *ST_ActiveSpy_Vague) Reset()                    { *m = ST_ActiveSpy_Vague{} }
func (m *ST_ActiveSpy_Vague) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Vague) ProtoMessage()               {}
func (*ST_ActiveSpy_Vague) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{68} }

func (m *ST_ActiveSpy_Vague) GetVagueTrapCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueTrapCount
	}
	return nil
}

func (m *ST_ActiveSpy_Vague) GetVagueTrapUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueTrapUnit
	}
	return nil
}

func (m *ST_ActiveSpy_Vague) GetVagueUnitCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueUnitCount
	}
	return nil
}

func (m *ST_ActiveSpy_Vague) GetVagueDefenceUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueDefenceUnit
	}
	return nil
}

func (m *ST_ActiveSpy_Vague) GetVagueHospitalUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueHospitalUnit
	}
	return nil
}

// 防守部队精确信息
type ST_ActiveSpy_Exact struct {
	TrapCount    *ST_UnitAsset_PB `protobuf:"bytes,1,opt,name=trapCount" json:"trapCount,omitempty"`
	DefenceUnit  *ST_UnitAsset_PB `protobuf:"bytes,2,opt,name=defenceUnit" json:"defenceUnit,omitempty"`
	HospitalUnit *ST_UnitAsset_PB `protobuf:"bytes,3,opt,name=hospitalUnit" json:"hospitalUnit,omitempty"`
}

func (m *ST_ActiveSpy_Exact) Reset()                    { *m = ST_ActiveSpy_Exact{} }
func (m *ST_ActiveSpy_Exact) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Exact) ProtoMessage()               {}
func (*ST_ActiveSpy_Exact) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{69} }

func (m *ST_ActiveSpy_Exact) GetTrapCount() *ST_UnitAsset_PB {
	if m != nil {
		return m.TrapCount
	}
	return nil
}

func (m *ST_ActiveSpy_Exact) GetDefenceUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.DefenceUnit
	}
	return nil
}

func (m *ST_ActiveSpy_Exact) GetHospitalUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.HospitalUnit
	}
	return nil
}

// 防守方护盾信息
type ST_ActiveSpy_Hardiness struct {
	EnemyHardiness        uint32 `protobuf:"varint,1,opt,name=enemyHardiness" json:"enemyHardiness,omitempty"`
	EnemyCurrentHardiness uint32 `protobuf:"varint,2,opt,name=enemyCurrentHardiness" json:"enemyCurrentHardiness,omitempty"`
}

func (m *ST_ActiveSpy_Hardiness) Reset()                    { *m = ST_ActiveSpy_Hardiness{} }
func (m *ST_ActiveSpy_Hardiness) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpy_Hardiness) ProtoMessage()               {}
func (*ST_ActiveSpy_Hardiness) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{70} }

func (m *ST_ActiveSpy_Hardiness) GetEnemyHardiness() uint32 {
	if m != nil {
		return m.EnemyHardiness
	}
	return 0
}

func (m *ST_ActiveSpy_Hardiness) GetEnemyCurrentHardiness() uint32 {
	if m != nil {
		return m.EnemyCurrentHardiness
	}
	return 0
}

// 科技等级
type ST_Radar_TechInfo struct {
	HasTechnology   bool     `protobuf:"varint,1,opt,name=hasTechnology" json:"hasTechnology,omitempty"`
	TechnologyLevel []uint32 `protobuf:"varint,2,rep,packed,name=technologyLevel" json:"technologyLevel,omitempty"`
}

func (m *ST_Radar_TechInfo) Reset()                    { *m = ST_Radar_TechInfo{} }
func (m *ST_Radar_TechInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_Radar_TechInfo) ProtoMessage()               {}
func (*ST_Radar_TechInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{71} }

func (m *ST_Radar_TechInfo) GetHasTechnology() bool {
	if m != nil {
		return m.HasTechnology
	}
	return false
}

func (m *ST_Radar_TechInfo) GetTechnologyLevel() []uint32 {
	if m != nil {
		return m.TechnologyLevel
	}
	return nil
}

// 天赋
type ST_Radar_NaturalGift struct {
	HasNaturalGift bool     `protobuf:"varint,1,opt,name=hasNaturalGift" json:"hasNaturalGift,omitempty"`
	NaturalGift    []uint32 `protobuf:"varint,2,rep,packed,name=naturalGift" json:"naturalGift,omitempty"`
}

func (m *ST_Radar_NaturalGift) Reset()                    { *m = ST_Radar_NaturalGift{} }
func (m *ST_Radar_NaturalGift) String() string            { return proto.CompactTextString(m) }
func (*ST_Radar_NaturalGift) ProtoMessage()               {}
func (*ST_Radar_NaturalGift) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{72} }

func (m *ST_Radar_NaturalGift) GetHasNaturalGift() bool {
	if m != nil {
		return m.HasNaturalGift
	}
	return false
}

func (m *ST_Radar_NaturalGift) GetNaturalGift() []uint32 {
	if m != nil {
		return m.NaturalGift
	}
	return nil
}

type ST_Simple_Statue struct {
	EffectType  string `protobuf:"bytes,1,opt,name=effectType" json:"effectType,omitempty"`
	EffectValue uint32 `protobuf:"varint,2,opt,name=effectValue" json:"effectValue,omitempty"`
}

func (m *ST_Simple_Statue) Reset()                    { *m = ST_Simple_Statue{} }
func (m *ST_Simple_Statue) String() string            { return proto.CompactTextString(m) }
func (*ST_Simple_Statue) ProtoMessage()               {}
func (*ST_Simple_Statue) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{73} }

func (m *ST_Simple_Statue) GetEffectType() string {
	if m != nil {
		return m.EffectType
	}
	return ""
}

func (m *ST_Simple_Statue) GetEffectValue() uint32 {
	if m != nil {
		return m.EffectValue
	}
	return 0
}

// 雕像
type ST_Radar_Statue struct {
	HasStatue bool                `protobuf:"varint,1,opt,name=hasStatue" json:"hasStatue,omitempty"`
	Statue    []*ST_Simple_Statue `protobuf:"bytes,2,rep,name=statue" json:"statue,omitempty"`
}

func (m *ST_Radar_Statue) Reset()                    { *m = ST_Radar_Statue{} }
func (m *ST_Radar_Statue) String() string            { return proto.CompactTextString(m) }
func (*ST_Radar_Statue) ProtoMessage()               {}
func (*ST_Radar_Statue) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{74} }

func (m *ST_Radar_Statue) GetHasStatue() bool {
	if m != nil {
		return m.HasStatue
	}
	return false
}

func (m *ST_Radar_Statue) GetStatue() []*ST_Simple_Statue {
	if m != nil {
		return m.Statue
	}
	return nil
}

type ST_ArmyHerosDetail struct {
	UserId                 uint64             `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Name                   string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AvatarBoxID            uint32             `protobuf:"varint,3,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	Avatar                 string             `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	HeroList               []*ST_HeroEntry_PB `protobuf:"bytes,5,rep,name=heroList" json:"heroList,omitempty"`
	HeroAttrShow           bool               `protobuf:"varint,6,opt,name=heroAttrShow" json:"heroAttrShow,omitempty"`
	ComanderWearEquipsAttr []*ST_Attribute_PB `protobuf:"bytes,7,rep,name=comanderWearEquipsAttr" json:"comanderWearEquipsAttr,omitempty"`
	CmderEquipAttrShow     bool               `protobuf:"varint,8,opt,name=cmderEquipAttrShow" json:"cmderEquipAttrShow,omitempty"`
}

func (m *ST_ArmyHerosDetail) Reset()                    { *m = ST_ArmyHerosDetail{} }
func (m *ST_ArmyHerosDetail) String() string            { return proto.CompactTextString(m) }
func (*ST_ArmyHerosDetail) ProtoMessage()               {}
func (*ST_ArmyHerosDetail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{75} }

func (m *ST_ArmyHerosDetail) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ST_ArmyHerosDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_ArmyHerosDetail) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_ArmyHerosDetail) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_ArmyHerosDetail) GetHeroList() []*ST_HeroEntry_PB {
	if m != nil {
		return m.HeroList
	}
	return nil
}

func (m *ST_ArmyHerosDetail) GetHeroAttrShow() bool {
	if m != nil {
		return m.HeroAttrShow
	}
	return false
}

func (m *ST_ArmyHerosDetail) GetComanderWearEquipsAttr() []*ST_Attribute_PB {
	if m != nil {
		return m.ComanderWearEquipsAttr
	}
	return nil
}

func (m *ST_ArmyHerosDetail) GetCmderEquipAttrShow() bool {
	if m != nil {
		return m.CmderEquipAttrShow
	}
	return false
}

// 侦查信息
type ST_ActiveSpyReport_PB struct {
	LoadInfo           *ST_ActiveSpy_Lord           `protobuf:"bytes,1,opt,name=loadInfo" json:"loadInfo,omitempty"`
	ReinforcementsInfo *ST_ActiveSpy_Reinforcements `protobuf:"bytes,2,opt,name=reinforcementsInfo" json:"reinforcementsInfo,omitempty"`
	CashInfo           *ST_ActiveSpy_Cash           `protobuf:"bytes,3,opt,name=cashInfo" json:"cashInfo,omitempty"`
	VagueInfo          *ST_ActiveSpy_Vague          `protobuf:"bytes,4,opt,name=vagueInfo" json:"vagueInfo,omitempty"`
	ExactInfo          *ST_ActiveSpy_Exact          `protobuf:"bytes,5,opt,name=exactInfo" json:"exactInfo,omitempty"`
	HardinessInfo      *ST_ActiveSpy_Hardiness      `protobuf:"bytes,6,opt,name=hardinessInfo" json:"hardinessInfo,omitempty"`
	TechInfo           *ST_Radar_TechInfo           `protobuf:"bytes,7,opt,name=techInfo" json:"techInfo,omitempty"`
	NaturalGiftInfo    *ST_Radar_NaturalGift        `protobuf:"bytes,8,opt,name=naturalGiftInfo" json:"naturalGiftInfo,omitempty"`
	StatueInfo         *ST_Radar_Statue             `protobuf:"bytes,9,opt,name=statueInfo" json:"statueInfo,omitempty"`
	EnemyHerosInfo     *ST_ArmyHerosDetail          `protobuf:"bytes,10,opt,name=enemyHerosInfo" json:"enemyHerosInfo,omitempty"`
	IsArrest           bool                         `protobuf:"varint,11,opt,name=isArrest" json:"isArrest,omitempty"`
}

func (m *ST_ActiveSpyReport_PB) Reset()                    { *m = ST_ActiveSpyReport_PB{} }
func (m *ST_ActiveSpyReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpyReport_PB) ProtoMessage()               {}
func (*ST_ActiveSpyReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{76} }

func (m *ST_ActiveSpyReport_PB) GetLoadInfo() *ST_ActiveSpy_Lord {
	if m != nil {
		return m.LoadInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetReinforcementsInfo() *ST_ActiveSpy_Reinforcements {
	if m != nil {
		return m.ReinforcementsInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetCashInfo() *ST_ActiveSpy_Cash {
	if m != nil {
		return m.CashInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetVagueInfo() *ST_ActiveSpy_Vague {
	if m != nil {
		return m.VagueInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetExactInfo() *ST_ActiveSpy_Exact {
	if m != nil {
		return m.ExactInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetHardinessInfo() *ST_ActiveSpy_Hardiness {
	if m != nil {
		return m.HardinessInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetTechInfo() *ST_Radar_TechInfo {
	if m != nil {
		return m.TechInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetNaturalGiftInfo() *ST_Radar_NaturalGift {
	if m != nil {
		return m.NaturalGiftInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetStatueInfo() *ST_Radar_Statue {
	if m != nil {
		return m.StatueInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetEnemyHerosInfo() *ST_ArmyHerosDetail {
	if m != nil {
		return m.EnemyHerosInfo
	}
	return nil
}

func (m *ST_ActiveSpyReport_PB) GetIsArrest() bool {
	if m != nil {
		return m.IsArrest
	}
	return false
}

// 侦查信息（怪物）
type ST_ActiveSpyMonsterReport_PB struct {
	MonsterID    int64                `protobuf:"varint,1,opt,name=monsterID" json:"monsterID,omitempty"`
	TargetTileId int32                `protobuf:"varint,2,opt,name=targetTileId" json:"targetTileId,omitempty"`
	HeroIDList   []int64              `protobuf:"varint,3,rep,packed,name=heroIDList" json:"heroIDList,omitempty"`
	VagueInfo    *ST_MonsterSpy_Vague `protobuf:"bytes,4,opt,name=vagueInfo" json:"vagueInfo,omitempty"`
	ExactInfo    *ST_MonsterSpy_Exact `protobuf:"bytes,5,opt,name=exactInfo" json:"exactInfo,omitempty"`
	WallHp       int64                `protobuf:"varint,6,opt,name=wallHp" json:"wallHp,omitempty"`
	SpyWallFlag  bool                 `protobuf:"varint,7,opt,name=spyWallFlag" json:"spyWallFlag,omitempty"`
}

func (m *ST_ActiveSpyMonsterReport_PB) Reset()                    { *m = ST_ActiveSpyMonsterReport_PB{} }
func (m *ST_ActiveSpyMonsterReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActiveSpyMonsterReport_PB) ProtoMessage()               {}
func (*ST_ActiveSpyMonsterReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{77} }

func (m *ST_ActiveSpyMonsterReport_PB) GetMonsterID() int64 {
	if m != nil {
		return m.MonsterID
	}
	return 0
}

func (m *ST_ActiveSpyMonsterReport_PB) GetTargetTileId() int32 {
	if m != nil {
		return m.TargetTileId
	}
	return 0
}

func (m *ST_ActiveSpyMonsterReport_PB) GetHeroIDList() []int64 {
	if m != nil {
		return m.HeroIDList
	}
	return nil
}

func (m *ST_ActiveSpyMonsterReport_PB) GetVagueInfo() *ST_MonsterSpy_Vague {
	if m != nil {
		return m.VagueInfo
	}
	return nil
}

func (m *ST_ActiveSpyMonsterReport_PB) GetExactInfo() *ST_MonsterSpy_Exact {
	if m != nil {
		return m.ExactInfo
	}
	return nil
}

func (m *ST_ActiveSpyMonsterReport_PB) GetWallHp() int64 {
	if m != nil {
		return m.WallHp
	}
	return 0
}

func (m *ST_ActiveSpyMonsterReport_PB) GetSpyWallFlag() bool {
	if m != nil {
		return m.SpyWallFlag
	}
	return false
}

// 怪物模糊信息
type ST_MonsterSpy_Vague struct {
	VagueTrapCount   *ST_Vector2Int64_PB   `protobuf:"bytes,1,opt,name=vagueTrapCount" json:"vagueTrapCount,omitempty"`
	VagueTrapUnit    *ST_UnitVagueAsset_PB `protobuf:"bytes,2,opt,name=vagueTrapUnit" json:"vagueTrapUnit,omitempty"`
	VagueUnitCount   *ST_Vector2Int64_PB   `protobuf:"bytes,3,opt,name=vagueUnitCount" json:"vagueUnitCount,omitempty"`
	VagueDefenceUnit *ST_UnitVagueAsset_PB `protobuf:"bytes,4,opt,name=vagueDefenceUnit" json:"vagueDefenceUnit,omitempty"`
}

func (m *ST_MonsterSpy_Vague) Reset()                    { *m = ST_MonsterSpy_Vague{} }
func (m *ST_MonsterSpy_Vague) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterSpy_Vague) ProtoMessage()               {}
func (*ST_MonsterSpy_Vague) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{78} }

func (m *ST_MonsterSpy_Vague) GetVagueTrapCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueTrapCount
	}
	return nil
}

func (m *ST_MonsterSpy_Vague) GetVagueTrapUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueTrapUnit
	}
	return nil
}

func (m *ST_MonsterSpy_Vague) GetVagueUnitCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueUnitCount
	}
	return nil
}

func (m *ST_MonsterSpy_Vague) GetVagueDefenceUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueDefenceUnit
	}
	return nil
}

// 怪物精确信息
type ST_MonsterSpy_Exact struct {
	TrapCount   *ST_UnitAsset_PB `protobuf:"bytes,1,opt,name=trapCount" json:"trapCount,omitempty"`
	DefenceUnit *ST_UnitAsset_PB `protobuf:"bytes,2,opt,name=defenceUnit" json:"defenceUnit,omitempty"`
}

func (m *ST_MonsterSpy_Exact) Reset()                    { *m = ST_MonsterSpy_Exact{} }
func (m *ST_MonsterSpy_Exact) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterSpy_Exact) ProtoMessage()               {}
func (*ST_MonsterSpy_Exact) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{79} }

func (m *ST_MonsterSpy_Exact) GetTrapCount() *ST_UnitAsset_PB {
	if m != nil {
		return m.TrapCount
	}
	return nil
}

func (m *ST_MonsterSpy_Exact) GetDefenceUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.DefenceUnit
	}
	return nil
}

// ------------------预警报告（不同等级能查看不同的预警结果）------------------//
// 敌方指挥官信息
type ST_EarlyWarning_Commander struct {
	Uid           uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	CommanderName string `protobuf:"bytes,2,opt,name=commanderName" json:"commanderName,omitempty"`
}

func (m *ST_EarlyWarning_Commander) Reset()                    { *m = ST_EarlyWarning_Commander{} }
func (m *ST_EarlyWarning_Commander) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_Commander) ProtoMessage()               {}
func (*ST_EarlyWarning_Commander) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{80} }

func (m *ST_EarlyWarning_Commander) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_EarlyWarning_Commander) GetCommanderName() string {
	if m != nil {
		return m.CommanderName
	}
	return ""
}

// 敌方行军英雄信息
type ST_EarlyWarning_Hero struct {
	HasHero     bool   `protobuf:"varint,1,opt,name=hasHero" json:"hasHero,omitempty"`
	HeroID      uint32 `protobuf:"varint,2,opt,name=heroID" json:"heroID,omitempty"`
	HeroLevel   uint32 `protobuf:"varint,3,opt,name=heroLevel" json:"heroLevel,omitempty"`
	HeroQuality uint32 `protobuf:"varint,4,opt,name=heroQuality" json:"heroQuality,omitempty"`
	HeroRank    uint32 `protobuf:"varint,5,opt,name=heroRank" json:"heroRank,omitempty"`
}

func (m *ST_EarlyWarning_Hero) Reset()                    { *m = ST_EarlyWarning_Hero{} }
func (m *ST_EarlyWarning_Hero) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_Hero) ProtoMessage()               {}
func (*ST_EarlyWarning_Hero) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{81} }

func (m *ST_EarlyWarning_Hero) GetHasHero() bool {
	if m != nil {
		return m.HasHero
	}
	return false
}

func (m *ST_EarlyWarning_Hero) GetHeroID() uint32 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

func (m *ST_EarlyWarning_Hero) GetHeroLevel() uint32 {
	if m != nil {
		return m.HeroLevel
	}
	return 0
}

func (m *ST_EarlyWarning_Hero) GetHeroQuality() uint32 {
	if m != nil {
		return m.HeroQuality
	}
	return 0
}

func (m *ST_EarlyWarning_Hero) GetHeroRank() uint32 {
	if m != nil {
		return m.HeroRank
	}
	return 0
}

// 敌方行军部队模糊信息
type ST_EarlyWarning_Vague struct {
	VagueUnitCount *ST_Vector2Int64_PB   `protobuf:"bytes,1,opt,name=vagueUnitCount" json:"vagueUnitCount,omitempty"`
	VagueUnit      *ST_UnitVagueAsset_PB `protobuf:"bytes,2,opt,name=vagueUnit" json:"vagueUnit,omitempty"`
}

func (m *ST_EarlyWarning_Vague) Reset()                    { *m = ST_EarlyWarning_Vague{} }
func (m *ST_EarlyWarning_Vague) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_Vague) ProtoMessage()               {}
func (*ST_EarlyWarning_Vague) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{82} }

func (m *ST_EarlyWarning_Vague) GetVagueUnitCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueUnitCount
	}
	return nil
}

func (m *ST_EarlyWarning_Vague) GetVagueUnit() *ST_UnitVagueAsset_PB {
	if m != nil {
		return m.VagueUnit
	}
	return nil
}

// 敌方行军部队精确信息
type ST_EarlyWarning_Exact struct {
	ExactUnit *ST_UnitAsset_PB `protobuf:"bytes,1,opt,name=exactUnit" json:"exactUnit,omitempty"`
}

func (m *ST_EarlyWarning_Exact) Reset()                    { *m = ST_EarlyWarning_Exact{} }
func (m *ST_EarlyWarning_Exact) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_Exact) ProtoMessage()               {}
func (*ST_EarlyWarning_Exact) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{83} }

func (m *ST_EarlyWarning_Exact) GetExactUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.ExactUnit
	}
	return nil
}

// 敌方部队起始信息
type ST_EarlyWarning_StartInfo struct {
	ArriveTime    uint64 `protobuf:"varint,1,opt,name=arriveTime" json:"arriveTime,omitempty"`
	StartTileID   int32  `protobuf:"varint,2,opt,name=startTileID" json:"startTileID,omitempty"`
	MainCityLevel uint32 `protobuf:"varint,3,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
}

func (m *ST_EarlyWarning_StartInfo) Reset()                    { *m = ST_EarlyWarning_StartInfo{} }
func (m *ST_EarlyWarning_StartInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_StartInfo) ProtoMessage()               {}
func (*ST_EarlyWarning_StartInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{84} }

func (m *ST_EarlyWarning_StartInfo) GetArriveTime() uint64 {
	if m != nil {
		return m.ArriveTime
	}
	return 0
}

func (m *ST_EarlyWarning_StartInfo) GetStartTileID() int32 {
	if m != nil {
		return m.StartTileID
	}
	return 0
}

func (m *ST_EarlyWarning_StartInfo) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

// 敌方行军目的地信息
type ST_EarlyWarning_EndInfo struct {
	TargetDataEntry *ST_Vector4Int_PB `protobuf:"bytes,1,opt,name=targetDataEntry" json:"targetDataEntry,omitempty"`
	EndTileID       int32             `protobuf:"varint,2,opt,name=endTileID" json:"endTileID,omitempty"`
}

func (m *ST_EarlyWarning_EndInfo) Reset()                    { *m = ST_EarlyWarning_EndInfo{} }
func (m *ST_EarlyWarning_EndInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarning_EndInfo) ProtoMessage()               {}
func (*ST_EarlyWarning_EndInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{85} }

func (m *ST_EarlyWarning_EndInfo) GetTargetDataEntry() *ST_Vector4Int_PB {
	if m != nil {
		return m.TargetDataEntry
	}
	return nil
}

func (m *ST_EarlyWarning_EndInfo) GetEndTileID() int32 {
	if m != nil {
		return m.EndTileID
	}
	return 0
}

// 存储于邮件的预警信息(貌似没用了，不敢删除，只改了名字)
type ST_EarlyWarningReportMail_PB struct {
	GActionID       uint64                     `protobuf:"varint,1,opt,name=gActionID" json:"gActionID,omitempty"`
	ActionType      uint32                     `protobuf:"varint,2,opt,name=actionType" json:"actionType,omitempty"`
	StartInfo       *ST_EarlyWarning_StartInfo `protobuf:"bytes,3,opt,name=startInfo" json:"startInfo,omitempty"`
	EndInfo         *ST_EarlyWarning_EndInfo   `protobuf:"bytes,4,opt,name=endInfo" json:"endInfo,omitempty"`
	ConmmanderInfo  *ST_EarlyWarning_Commander `protobuf:"bytes,5,opt,name=conmmanderInfo" json:"conmmanderInfo,omitempty"`
	HeroInfo        *ST_EarlyWarning_Hero      `protobuf:"bytes,6,opt,name=heroInfo" json:"heroInfo,omitempty"`
	VagueInfo       *ST_EarlyWarning_Vague     `protobuf:"bytes,7,opt,name=vagueInfo" json:"vagueInfo,omitempty"`
	ExactInfo       *ST_EarlyWarning_Exact     `protobuf:"bytes,8,opt,name=exactInfo" json:"exactInfo,omitempty"`
	TechInfo        *ST_Radar_TechInfo         `protobuf:"bytes,9,opt,name=techInfo" json:"techInfo,omitempty"`
	NaturalGiftInfo *ST_Radar_NaturalGift      `protobuf:"bytes,10,opt,name=naturalGiftInfo" json:"naturalGiftInfo,omitempty"`
	StatueInfo      *ST_Radar_Statue           `protobuf:"bytes,11,opt,name=statueInfo" json:"statueInfo,omitempty"`
}

func (m *ST_EarlyWarningReportMail_PB) Reset()                    { *m = ST_EarlyWarningReportMail_PB{} }
func (m *ST_EarlyWarningReportMail_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarningReportMail_PB) ProtoMessage()               {}
func (*ST_EarlyWarningReportMail_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{86} }

func (m *ST_EarlyWarningReportMail_PB) GetGActionID() uint64 {
	if m != nil {
		return m.GActionID
	}
	return 0
}

func (m *ST_EarlyWarningReportMail_PB) GetActionType() uint32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ST_EarlyWarningReportMail_PB) GetStartInfo() *ST_EarlyWarning_StartInfo {
	if m != nil {
		return m.StartInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetEndInfo() *ST_EarlyWarning_EndInfo {
	if m != nil {
		return m.EndInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetConmmanderInfo() *ST_EarlyWarning_Commander {
	if m != nil {
		return m.ConmmanderInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetHeroInfo() *ST_EarlyWarning_Hero {
	if m != nil {
		return m.HeroInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetVagueInfo() *ST_EarlyWarning_Vague {
	if m != nil {
		return m.VagueInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetExactInfo() *ST_EarlyWarning_Exact {
	if m != nil {
		return m.ExactInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetTechInfo() *ST_Radar_TechInfo {
	if m != nil {
		return m.TechInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetNaturalGiftInfo() *ST_Radar_NaturalGift {
	if m != nil {
		return m.NaturalGiftInfo
	}
	return nil
}

func (m *ST_EarlyWarningReportMail_PB) GetStatueInfo() *ST_Radar_Statue {
	if m != nil {
		return m.StatueInfo
	}
	return nil
}

// 预警基本信息
type ST_BaseEarlyWarningReport_PB struct {
	GActionID      uint64                       `protobuf:"varint,1,opt,name=gActionID" json:"gActionID,omitempty"`
	ActionType     uint32                       `protobuf:"varint,2,opt,name=actionType" json:"actionType,omitempty"`
	StartInfo      *ST_EarlyWarning_StartInfo   `protobuf:"bytes,3,opt,name=startInfo" json:"startInfo,omitempty"`
	EndInfo        *ST_EarlyWarning_EndInfo     `protobuf:"bytes,4,opt,name=endInfo" json:"endInfo,omitempty"`
	ConmmanderInfo *ST_EarlyWarning_Commander   `protobuf:"bytes,5,opt,name=conmmanderInfo" json:"conmmanderInfo,omitempty"`
	MacInfo        *ST_MonsterAtkCityWarning_PB `protobuf:"bytes,6,opt,name=macInfo" json:"macInfo,omitempty"`
}

func (m *ST_BaseEarlyWarningReport_PB) Reset()                    { *m = ST_BaseEarlyWarningReport_PB{} }
func (m *ST_BaseEarlyWarningReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BaseEarlyWarningReport_PB) ProtoMessage()               {}
func (*ST_BaseEarlyWarningReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{87} }

func (m *ST_BaseEarlyWarningReport_PB) GetGActionID() uint64 {
	if m != nil {
		return m.GActionID
	}
	return 0
}

func (m *ST_BaseEarlyWarningReport_PB) GetActionType() uint32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ST_BaseEarlyWarningReport_PB) GetStartInfo() *ST_EarlyWarning_StartInfo {
	if m != nil {
		return m.StartInfo
	}
	return nil
}

func (m *ST_BaseEarlyWarningReport_PB) GetEndInfo() *ST_EarlyWarning_EndInfo {
	if m != nil {
		return m.EndInfo
	}
	return nil
}

func (m *ST_BaseEarlyWarningReport_PB) GetConmmanderInfo() *ST_EarlyWarning_Commander {
	if m != nil {
		return m.ConmmanderInfo
	}
	return nil
}

func (m *ST_BaseEarlyWarningReport_PB) GetMacInfo() *ST_MonsterAtkCityWarning_PB {
	if m != nil {
		return m.MacInfo
	}
	return nil
}

type ST_MonsterAtkCityWarning_PB struct {
	Monsterid uint64 `protobuf:"varint,1,opt,name=monsterid" json:"monsterid,omitempty"`
	Waves     uint32 `protobuf:"varint,2,opt,name=waves" json:"waves,omitempty"`
}

func (m *ST_MonsterAtkCityWarning_PB) Reset()                    { *m = ST_MonsterAtkCityWarning_PB{} }
func (m *ST_MonsterAtkCityWarning_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterAtkCityWarning_PB) ProtoMessage()               {}
func (*ST_MonsterAtkCityWarning_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{88} }

func (m *ST_MonsterAtkCityWarning_PB) GetMonsterid() uint64 {
	if m != nil {
		return m.Monsterid
	}
	return 0
}

func (m *ST_MonsterAtkCityWarning_PB) GetWaves() uint32 {
	if m != nil {
		return m.Waves
	}
	return 0
}

// 预警详细信息
type ST_EarlyWarningEx_PB struct {
	GActionID       uint64                           `protobuf:"varint,1,opt,name=gActionID" json:"gActionID,omitempty"`
	ActionType      uint32                           `protobuf:"varint,2,opt,name=actionType" json:"actionType,omitempty"`
	ActionStage     uint32                           `protobuf:"varint,3,opt,name=actionStage" json:"actionStage,omitempty"`
	TimeInfo        *ST_EarlyWarningTime_PB          `protobuf:"bytes,4,opt,name=timeInfo" json:"timeInfo,omitempty"`
	MultiplayerList []*ST_MultiplayerEarlyWarning_PB `protobuf:"bytes,5,rep,name=MultiplayerList" json:"MultiplayerList,omitempty"`
	UnitTotal       *ST_UnitTotal_PB                 `protobuf:"bytes,6,opt,name=unitTotal" json:"unitTotal,omitempty"`
	GreenData       *ST_EarlyWarningGreen_PB         `protobuf:"bytes,7,opt,name=greenData" json:"greenData,omitempty"`
	EnemyDetail     *ST_ArmyHerosDetail              `protobuf:"bytes,8,opt,name=enemyDetail" json:"enemyDetail,omitempty"`
}

func (m *ST_EarlyWarningEx_PB) Reset()                    { *m = ST_EarlyWarningEx_PB{} }
func (m *ST_EarlyWarningEx_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarningEx_PB) ProtoMessage()               {}
func (*ST_EarlyWarningEx_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{89} }

func (m *ST_EarlyWarningEx_PB) GetGActionID() uint64 {
	if m != nil {
		return m.GActionID
	}
	return 0
}

func (m *ST_EarlyWarningEx_PB) GetActionType() uint32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ST_EarlyWarningEx_PB) GetActionStage() uint32 {
	if m != nil {
		return m.ActionStage
	}
	return 0
}

func (m *ST_EarlyWarningEx_PB) GetTimeInfo() *ST_EarlyWarningTime_PB {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *ST_EarlyWarningEx_PB) GetMultiplayerList() []*ST_MultiplayerEarlyWarning_PB {
	if m != nil {
		return m.MultiplayerList
	}
	return nil
}

func (m *ST_EarlyWarningEx_PB) GetUnitTotal() *ST_UnitTotal_PB {
	if m != nil {
		return m.UnitTotal
	}
	return nil
}

func (m *ST_EarlyWarningEx_PB) GetGreenData() *ST_EarlyWarningGreen_PB {
	if m != nil {
		return m.GreenData
	}
	return nil
}

func (m *ST_EarlyWarningEx_PB) GetEnemyDetail() *ST_ArmyHerosDetail {
	if m != nil {
		return m.EnemyDetail
	}
	return nil
}

// 援助
type ST_EarlyWarningGreen_PB struct {
	Transport    *ST_CashAsset_PB `protobuf:"bytes,1,opt,name=transport" json:"transport,omitempty"`
	GarrisonUnit *ST_UnitAsset_PB `protobuf:"bytes,2,opt,name=garrisonUnit" json:"garrisonUnit,omitempty"`
}

func (m *ST_EarlyWarningGreen_PB) Reset()                    { *m = ST_EarlyWarningGreen_PB{} }
func (m *ST_EarlyWarningGreen_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarningGreen_PB) ProtoMessage()               {}
func (*ST_EarlyWarningGreen_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{90} }

func (m *ST_EarlyWarningGreen_PB) GetTransport() *ST_CashAsset_PB {
	if m != nil {
		return m.Transport
	}
	return nil
}

func (m *ST_EarlyWarningGreen_PB) GetGarrisonUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.GarrisonUnit
	}
	return nil
}

// 行军部队精确/模糊数量
type ST_UnitTotal_PB struct {
	VagueCount *ST_Vector2Int64_PB `protobuf:"bytes,1,opt,name=vagueCount" json:"vagueCount,omitempty"`
	ExactCount uint64              `protobuf:"varint,2,opt,name=exactCount" json:"exactCount,omitempty"`
}

func (m *ST_UnitTotal_PB) Reset()                    { *m = ST_UnitTotal_PB{} }
func (m *ST_UnitTotal_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitTotal_PB) ProtoMessage()               {}
func (*ST_UnitTotal_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{91} }

func (m *ST_UnitTotal_PB) GetVagueCount() *ST_Vector2Int64_PB {
	if m != nil {
		return m.VagueCount
	}
	return nil
}

func (m *ST_UnitTotal_PB) GetExactCount() uint64 {
	if m != nil {
		return m.ExactCount
	}
	return 0
}

type ST_EarlyWarningTime_PB struct {
	Starttime  uint64 `protobuf:"varint,1,opt,name=starttime" json:"starttime,omitempty"`
	Remaintime uint64 `protobuf:"varint,2,opt,name=remaintime" json:"remaintime,omitempty"`
	Totaltime  uint64 `protobuf:"varint,3,opt,name=totaltime" json:"totaltime,omitempty"`
}

func (m *ST_EarlyWarningTime_PB) Reset()                    { *m = ST_EarlyWarningTime_PB{} }
func (m *ST_EarlyWarningTime_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_EarlyWarningTime_PB) ProtoMessage()               {}
func (*ST_EarlyWarningTime_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{92} }

func (m *ST_EarlyWarningTime_PB) GetStarttime() uint64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *ST_EarlyWarningTime_PB) GetRemaintime() uint64 {
	if m != nil {
		return m.Remaintime
	}
	return 0
}

func (m *ST_EarlyWarningTime_PB) GetTotaltime() uint64 {
	if m != nil {
		return m.Totaltime
	}
	return 0
}

// 玩家的信息(预警)
type ST_MultiplayerEarlyWarning_PB struct {
	PlayerInfo      *ST_EarlyWarning_Commander `protobuf:"bytes,1,opt,name=playerInfo" json:"playerInfo,omitempty"`
	LeadheroInfo    *ST_EarlyWarning_Hero      `protobuf:"bytes,2,opt,name=leadheroInfo" json:"leadheroInfo,omitempty"`
	VagueInfo       *ST_EarlyWarning_Vague     `protobuf:"bytes,3,opt,name=vagueInfo" json:"vagueInfo,omitempty"`
	ExactInfo       *ST_EarlyWarning_Exact     `protobuf:"bytes,4,opt,name=exactInfo" json:"exactInfo,omitempty"`
	TechInfo        *ST_Radar_TechInfo         `protobuf:"bytes,5,opt,name=techInfo" json:"techInfo,omitempty"`
	NaturalGiftInfo *ST_Radar_NaturalGift      `protobuf:"bytes,6,opt,name=naturalGiftInfo" json:"naturalGiftInfo,omitempty"`
	StatueInfo      *ST_Radar_Statue           `protobuf:"bytes,7,opt,name=statueInfo" json:"statueInfo,omitempty"`
	IsMain          bool                       `protobuf:"varint,8,opt,name=isMain" json:"isMain,omitempty"`
	IsArrest        bool                       `protobuf:"varint,9,opt,name=isArrest" json:"isArrest,omitempty"`
}

func (m *ST_MultiplayerEarlyWarning_PB) Reset()                    { *m = ST_MultiplayerEarlyWarning_PB{} }
func (m *ST_MultiplayerEarlyWarning_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MultiplayerEarlyWarning_PB) ProtoMessage()               {}
func (*ST_MultiplayerEarlyWarning_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{93} }

func (m *ST_MultiplayerEarlyWarning_PB) GetPlayerInfo() *ST_EarlyWarning_Commander {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetLeadheroInfo() *ST_EarlyWarning_Hero {
	if m != nil {
		return m.LeadheroInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetVagueInfo() *ST_EarlyWarning_Vague {
	if m != nil {
		return m.VagueInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetExactInfo() *ST_EarlyWarning_Exact {
	if m != nil {
		return m.ExactInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetTechInfo() *ST_Radar_TechInfo {
	if m != nil {
		return m.TechInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetNaturalGiftInfo() *ST_Radar_NaturalGift {
	if m != nil {
		return m.NaturalGiftInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetStatueInfo() *ST_Radar_Statue {
	if m != nil {
		return m.StatueInfo
	}
	return nil
}

func (m *ST_MultiplayerEarlyWarning_PB) GetIsMain() bool {
	if m != nil {
		return m.IsMain
	}
	return false
}

func (m *ST_MultiplayerEarlyWarning_PB) GetIsArrest() bool {
	if m != nil {
		return m.IsArrest
	}
	return false
}

type ST_RadarAsset_PB struct {
	RadarList   []*ST_BaseEarlyWarningReport_PB `protobuf:"bytes,1,rep,name=radarList" json:"radarList,omitempty"`
	WarningType uint32                          `protobuf:"varint,2,opt,name=warningType" json:"warningType,omitempty"`
}

func (m *ST_RadarAsset_PB) Reset()                    { *m = ST_RadarAsset_PB{} }
func (m *ST_RadarAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_RadarAsset_PB) ProtoMessage()               {}
func (*ST_RadarAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{94} }

func (m *ST_RadarAsset_PB) GetRadarList() []*ST_BaseEarlyWarningReport_PB {
	if m != nil {
		return m.RadarList
	}
	return nil
}

func (m *ST_RadarAsset_PB) GetWarningType() uint32 {
	if m != nil {
		return m.WarningType
	}
	return 0
}

// 采集报告
type ST_CollectReport_PB struct {
	Resource *ST_CashAsset_PB   `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Unit     *ST_UnitAsset_PB   `protobuf:"bytes,2,opt,name=unit" json:"unit,omitempty"`
	Time     int64              `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	ItemList []*ST_ItemEntry_PB `protobuf:"bytes,4,rep,name=itemList" json:"itemList,omitempty"`
}

func (m *ST_CollectReport_PB) Reset()                    { *m = ST_CollectReport_PB{} }
func (m *ST_CollectReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CollectReport_PB) ProtoMessage()               {}
func (*ST_CollectReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{95} }

func (m *ST_CollectReport_PB) GetResource() *ST_CashAsset_PB {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ST_CollectReport_PB) GetUnit() *ST_UnitAsset_PB {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *ST_CollectReport_PB) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_CollectReport_PB) GetItemList() []*ST_ItemEntry_PB {
	if m != nil {
		return m.ItemList
	}
	return nil
}

// 联盟运输
type ST_LeagueTransportReport_PB struct {
	FromUserId uint64           `protobuf:"varint,1,opt,name=fromUserId" json:"fromUserId,omitempty"`
	ToUserId   uint64           `protobuf:"varint,2,opt,name=toUserId" json:"toUserId,omitempty"`
	Timestamp  uint64           `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Resource   *ST_CashAsset_PB `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
}

func (m *ST_LeagueTransportReport_PB) Reset()                    { *m = ST_LeagueTransportReport_PB{} }
func (m *ST_LeagueTransportReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueTransportReport_PB) ProtoMessage()               {}
func (*ST_LeagueTransportReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{96} }

func (m *ST_LeagueTransportReport_PB) GetFromUserId() uint64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *ST_LeagueTransportReport_PB) GetToUserId() uint64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *ST_LeagueTransportReport_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_LeagueTransportReport_PB) GetResource() *ST_CashAsset_PB {
	if m != nil {
		return m.Resource
	}
	return nil
}

// 联盟邀请邮件
type ST_LeagueInvitationJoinMail_PB struct {
	LeagueId           uint64 `protobuf:"varint,1,opt,name=leagueId" json:"leagueId,omitempty"`
	AcceptedOrRejected uint32 `protobuf:"varint,2,opt,name=acceptedOrRejected" json:"acceptedOrRejected,omitempty"`
}

func (m *ST_LeagueInvitationJoinMail_PB) Reset()                    { *m = ST_LeagueInvitationJoinMail_PB{} }
func (m *ST_LeagueInvitationJoinMail_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueInvitationJoinMail_PB) ProtoMessage()               {}
func (*ST_LeagueInvitationJoinMail_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{97} }

func (m *ST_LeagueInvitationJoinMail_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_LeagueInvitationJoinMail_PB) GetAcceptedOrRejected() uint32 {
	if m != nil {
		return m.AcceptedOrRejected
	}
	return 0
}

// 邮件基本信息
type ST_MailBasicInfo_PB struct {
	MailId        uint64 `protobuf:"varint,1,opt,name=mailId" json:"mailId,omitempty"`
	Mailtype      uint32 `protobuf:"varint,2,opt,name=mailtype" json:"mailtype,omitempty"`
	ReadStatus    bool   `protobuf:"varint,3,opt,name=readStatus" json:"readStatus,omitempty"`
	ReceiveStatus bool   `protobuf:"varint,4,opt,name=receiveStatus" json:"receiveStatus,omitempty"`
	Kept          bool   `protobuf:"varint,5,opt,name=kept" json:"kept,omitempty"`
	Locked        bool   `protobuf:"varint,6,opt,name=locked" json:"locked,omitempty"`
	ServerId      uint32 `protobuf:"varint,7,opt,name=serverId" json:"serverId,omitempty"`
	VersionId     int32  `protobuf:"varint,8,opt,name=versionId" json:"versionId,omitempty"`
}

func (m *ST_MailBasicInfo_PB) Reset()                    { *m = ST_MailBasicInfo_PB{} }
func (m *ST_MailBasicInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailBasicInfo_PB) ProtoMessage()               {}
func (*ST_MailBasicInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{98} }

func (m *ST_MailBasicInfo_PB) GetMailId() uint64 {
	if m != nil {
		return m.MailId
	}
	return 0
}

func (m *ST_MailBasicInfo_PB) GetMailtype() uint32 {
	if m != nil {
		return m.Mailtype
	}
	return 0
}

func (m *ST_MailBasicInfo_PB) GetReadStatus() bool {
	if m != nil {
		return m.ReadStatus
	}
	return false
}

func (m *ST_MailBasicInfo_PB) GetReceiveStatus() bool {
	if m != nil {
		return m.ReceiveStatus
	}
	return false
}

func (m *ST_MailBasicInfo_PB) GetKept() bool {
	if m != nil {
		return m.Kept
	}
	return false
}

func (m *ST_MailBasicInfo_PB) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *ST_MailBasicInfo_PB) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ST_MailBasicInfo_PB) GetVersionId() int32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

// 资产和奖励列表
type ST_MailRewardList_PB struct {
	Reward []*ST_Vector4Int_PB `protobuf:"bytes,1,rep,name=reward" json:"reward,omitempty"`
}

func (m *ST_MailRewardList_PB) Reset()                    { *m = ST_MailRewardList_PB{} }
func (m *ST_MailRewardList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailRewardList_PB) ProtoMessage()               {}
func (*ST_MailRewardList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{99} }

func (m *ST_MailRewardList_PB) GetReward() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Reward
	}
	return nil
}

type ST_Vector4IntList_PB struct {
	Reward []*ST_Vector4Int_PB `protobuf:"bytes,1,rep,name=reward" json:"reward,omitempty"`
}

func (m *ST_Vector4IntList_PB) Reset()                    { *m = ST_Vector4IntList_PB{} }
func (m *ST_Vector4IntList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Vector4IntList_PB) ProtoMessage()               {}
func (*ST_Vector4IntList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{100} }

func (m *ST_Vector4IntList_PB) GetReward() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 邮件简单信息
type ST_MailSimple_PB struct {
	SenderId           uint64                `protobuf:"varint,1,opt,name=senderId" json:"senderId,omitempty"`
	SenderName         string                `protobuf:"bytes,2,opt,name=senderName" json:"senderName,omitempty"`
	ReceiverId         uint64                `protobuf:"varint,3,opt,name=receiverId" json:"receiverId,omitempty"`
	Title              string                `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Content            string                `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	TitleTips          *ST_Tips_PB           `protobuf:"bytes,6,opt,name=titleTips" json:"titleTips,omitempty"`
	ContentTips        *ST_Tips_PB           `protobuf:"bytes,7,opt,name=contentTips" json:"contentTips,omitempty"`
	SendTime           int64                 `protobuf:"varint,8,opt,name=sendTime" json:"sendTime,omitempty"`
	TargetTileId       int32                 `protobuf:"varint,9,opt,name=targetTileId" json:"targetTileId,omitempty"`
	OtherId            uint64                `protobuf:"varint,10,opt,name=otherId" json:"otherId,omitempty"`
	OtherName          string                `protobuf:"bytes,11,opt,name=otherName" json:"otherName,omitempty"`
	OtherAvatar        string                `protobuf:"bytes,12,opt,name=otherAvatar" json:"otherAvatar,omitempty"`
	NpcID              uint64                `protobuf:"varint,13,opt,name=npcID" json:"npcID,omitempty"`
	Rewards            *ST_MailRewardList_PB `protobuf:"bytes,14,opt,name=rewards" json:"rewards,omitempty"`
	GiftPacketID       int32                 `protobuf:"varint,15,opt,name=giftPacketID" json:"giftPacketID,omitempty"`
	MailSource         int32                 `protobuf:"varint,16,opt,name=mailSource" json:"mailSource,omitempty"`
	IsPresidentRedward bool                  `protobuf:"varint,17,opt,name=isPresidentRedward" json:"isPresidentRedward,omitempty"`
	AppointTitle       int32                 `protobuf:"varint,18,opt,name=appointTitle" json:"appointTitle,omitempty"`
	RewardSource       int32                 `protobuf:"varint,19,opt,name=rewardSource" json:"rewardSource,omitempty"`
}

func (m *ST_MailSimple_PB) Reset()                    { *m = ST_MailSimple_PB{} }
func (m *ST_MailSimple_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailSimple_PB) ProtoMessage()               {}
func (*ST_MailSimple_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{101} }

func (m *ST_MailSimple_PB) GetSenderId() uint64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *ST_MailSimple_PB) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *ST_MailSimple_PB) GetReceiverId() uint64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *ST_MailSimple_PB) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ST_MailSimple_PB) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ST_MailSimple_PB) GetTitleTips() *ST_Tips_PB {
	if m != nil {
		return m.TitleTips
	}
	return nil
}

func (m *ST_MailSimple_PB) GetContentTips() *ST_Tips_PB {
	if m != nil {
		return m.ContentTips
	}
	return nil
}

func (m *ST_MailSimple_PB) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_MailSimple_PB) GetTargetTileId() int32 {
	if m != nil {
		return m.TargetTileId
	}
	return 0
}

func (m *ST_MailSimple_PB) GetOtherId() uint64 {
	if m != nil {
		return m.OtherId
	}
	return 0
}

func (m *ST_MailSimple_PB) GetOtherName() string {
	if m != nil {
		return m.OtherName
	}
	return ""
}

func (m *ST_MailSimple_PB) GetOtherAvatar() string {
	if m != nil {
		return m.OtherAvatar
	}
	return ""
}

func (m *ST_MailSimple_PB) GetNpcID() uint64 {
	if m != nil {
		return m.NpcID
	}
	return 0
}

func (m *ST_MailSimple_PB) GetRewards() *ST_MailRewardList_PB {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *ST_MailSimple_PB) GetGiftPacketID() int32 {
	if m != nil {
		return m.GiftPacketID
	}
	return 0
}

func (m *ST_MailSimple_PB) GetMailSource() int32 {
	if m != nil {
		return m.MailSource
	}
	return 0
}

func (m *ST_MailSimple_PB) GetIsPresidentRedward() bool {
	if m != nil {
		return m.IsPresidentRedward
	}
	return false
}

func (m *ST_MailSimple_PB) GetAppointTitle() int32 {
	if m != nil {
		return m.AppointTitle
	}
	return 0
}

func (m *ST_MailSimple_PB) GetRewardSource() int32 {
	if m != nil {
		return m.RewardSource
	}
	return 0
}

// 邮件数据
type ST_MailData_PB struct {
	Basic       *ST_MailBasicInfo_PB `protobuf:"bytes,1,opt,name=basic" json:"basic,omitempty"`
	Simple      *ST_MailSimple_PB    `protobuf:"bytes,2,opt,name=simple" json:"simple,omitempty"`
	UnreadCount int32                `protobuf:"varint,3,opt,name=unreadCount" json:"unreadCount,omitempty"`
	TotalCount  int32                `protobuf:"varint,4,opt,name=totalCount" json:"totalCount,omitempty"`
	// 添加邮件具体的PB
	BattleReport             *ST_BattleReport_PB             `protobuf:"bytes,5,opt,name=battleReport" json:"battleReport,omitempty"`
	MonsterKillReport        *ST_MonsterKill_PB              `protobuf:"bytes,6,opt,name=monsterKillReport" json:"monsterKillReport,omitempty"`
	CollectionReport         *ST_CollectReport_PB            `protobuf:"bytes,7,opt,name=collectionReport" json:"collectionReport,omitempty"`
	ActiveSpyReport          *ST_ActiveSpyReport_PB          `protobuf:"bytes,8,opt,name=activeSpyReport" json:"activeSpyReport,omitempty"`
	EarlyWarningReport       *ST_BaseEarlyWarningReport_PB   `protobuf:"bytes,9,opt,name=earlyWarningReport" json:"earlyWarningReport,omitempty"`
	LeagueTransportReport    *ST_LeagueTransportReport_PB    `protobuf:"bytes,10,opt,name=leagueTransportReport" json:"leagueTransportReport,omitempty"`
	LeagueInvitationJoinMail *ST_LeagueInvitationJoinMail_PB `protobuf:"bytes,11,opt,name=leagueInvitationJoinMail" json:"leagueInvitationJoinMail,omitempty"`
	ActiveSpyMonsterReport   *ST_ActiveSpyMonsterReport_PB   `protobuf:"bytes,12,opt,name=activeSpyMonsterReport" json:"activeSpyMonsterReport,omitempty"`
	BattleNoticeUID          int64                           `protobuf:"varint,13,opt,name=battleNoticeUID" json:"battleNoticeUID,omitempty"`
	Rank                     *ST_Rank_PB                     `protobuf:"bytes,14,opt,name=Rank" json:"Rank,omitempty"`
}

func (m *ST_MailData_PB) Reset()                    { *m = ST_MailData_PB{} }
func (m *ST_MailData_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailData_PB) ProtoMessage()               {}
func (*ST_MailData_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{102} }

func (m *ST_MailData_PB) GetBasic() *ST_MailBasicInfo_PB {
	if m != nil {
		return m.Basic
	}
	return nil
}

func (m *ST_MailData_PB) GetSimple() *ST_MailSimple_PB {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *ST_MailData_PB) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *ST_MailData_PB) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ST_MailData_PB) GetBattleReport() *ST_BattleReport_PB {
	if m != nil {
		return m.BattleReport
	}
	return nil
}

func (m *ST_MailData_PB) GetMonsterKillReport() *ST_MonsterKill_PB {
	if m != nil {
		return m.MonsterKillReport
	}
	return nil
}

func (m *ST_MailData_PB) GetCollectionReport() *ST_CollectReport_PB {
	if m != nil {
		return m.CollectionReport
	}
	return nil
}

func (m *ST_MailData_PB) GetActiveSpyReport() *ST_ActiveSpyReport_PB {
	if m != nil {
		return m.ActiveSpyReport
	}
	return nil
}

func (m *ST_MailData_PB) GetEarlyWarningReport() *ST_BaseEarlyWarningReport_PB {
	if m != nil {
		return m.EarlyWarningReport
	}
	return nil
}

func (m *ST_MailData_PB) GetLeagueTransportReport() *ST_LeagueTransportReport_PB {
	if m != nil {
		return m.LeagueTransportReport
	}
	return nil
}

func (m *ST_MailData_PB) GetLeagueInvitationJoinMail() *ST_LeagueInvitationJoinMail_PB {
	if m != nil {
		return m.LeagueInvitationJoinMail
	}
	return nil
}

func (m *ST_MailData_PB) GetActiveSpyMonsterReport() *ST_ActiveSpyMonsterReport_PB {
	if m != nil {
		return m.ActiveSpyMonsterReport
	}
	return nil
}

func (m *ST_MailData_PB) GetBattleNoticeUID() int64 {
	if m != nil {
		return m.BattleNoticeUID
	}
	return 0
}

func (m *ST_MailData_PB) GetRank() *ST_Rank_PB {
	if m != nil {
		return m.Rank
	}
	return nil
}

// 邮件资源
type ST_MailAsset_PB struct {
	MailList       []*ST_MailData_PB `protobuf:"bytes,1,rep,name=mailList" json:"mailList,omitempty"`
	LockedTypeList []uint32          `protobuf:"varint,2,rep,packed,name=lockedTypeList" json:"lockedTypeList,omitempty"`
}

func (m *ST_MailAsset_PB) Reset()                    { *m = ST_MailAsset_PB{} }
func (m *ST_MailAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailAsset_PB) ProtoMessage()               {}
func (*ST_MailAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{103} }

func (m *ST_MailAsset_PB) GetMailList() []*ST_MailData_PB {
	if m != nil {
		return m.MailList
	}
	return nil
}

func (m *ST_MailAsset_PB) GetLockedTypeList() []uint32 {
	if m != nil {
		return m.LockedTypeList
	}
	return nil
}

// 玩家身上的邮件资源，专门用于客户端做本地存储
type ST_MailAssetForClientSave_PB struct {
	MailData         *ST_MailAsset_PB             `protobuf:"bytes,1,opt,name=mailData" json:"mailData,omitempty"`
	PlayerUid        uint64                       `protobuf:"varint,2,opt,name=playerUid" json:"playerUid,omitempty"`
	SummaryEntryList []*ST_MailAssetSummary_Entry `protobuf:"bytes,3,rep,name=summaryEntryList" json:"summaryEntryList,omitempty"`
}

func (m *ST_MailAssetForClientSave_PB) Reset()                    { *m = ST_MailAssetForClientSave_PB{} }
func (m *ST_MailAssetForClientSave_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailAssetForClientSave_PB) ProtoMessage()               {}
func (*ST_MailAssetForClientSave_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{104} }

func (m *ST_MailAssetForClientSave_PB) GetMailData() *ST_MailAsset_PB {
	if m != nil {
		return m.MailData
	}
	return nil
}

func (m *ST_MailAssetForClientSave_PB) GetPlayerUid() uint64 {
	if m != nil {
		return m.PlayerUid
	}
	return 0
}

func (m *ST_MailAssetForClientSave_PB) GetSummaryEntryList() []*ST_MailAssetSummary_Entry {
	if m != nil {
		return m.SummaryEntryList
	}
	return nil
}

// 邮件资产列表
type ST_MailDBAsset_PB struct {
	MailIdList []*ST_MailBasicInfo_PB `protobuf:"bytes,1,rep,name=mailIdList" json:"mailIdList,omitempty"`
}

func (m *ST_MailDBAsset_PB) Reset()                    { *m = ST_MailDBAsset_PB{} }
func (m *ST_MailDBAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailDBAsset_PB) ProtoMessage()               {}
func (*ST_MailDBAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{105} }

func (m *ST_MailDBAsset_PB) GetMailIdList() []*ST_MailBasicInfo_PB {
	if m != nil {
		return m.MailIdList
	}
	return nil
}

// 邮件服务器存储结构
type ST_MailStorage_PB struct {
	Client                    *ST_MailAsset_PB   `protobuf:"bytes,1,opt,name=client" json:"client,omitempty"`
	Server                    *ST_MailDBAsset_PB `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	LastEveryoneMailTimestamp uint64             `protobuf:"varint,3,opt,name=lastEveryoneMailTimestamp" json:"lastEveryoneMailTimestamp,omitempty"`
	LanguageId                uint32             `protobuf:"varint,4,opt,name=languageId" json:"languageId,omitempty"`
	VersionId                 int32              `protobuf:"varint,5,opt,name=versionId" json:"versionId,omitempty"`
}

func (m *ST_MailStorage_PB) Reset()                    { *m = ST_MailStorage_PB{} }
func (m *ST_MailStorage_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailStorage_PB) ProtoMessage()               {}
func (*ST_MailStorage_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{106} }

func (m *ST_MailStorage_PB) GetClient() *ST_MailAsset_PB {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *ST_MailStorage_PB) GetServer() *ST_MailDBAsset_PB {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *ST_MailStorage_PB) GetLastEveryoneMailTimestamp() uint64 {
	if m != nil {
		return m.LastEveryoneMailTimestamp
	}
	return 0
}

func (m *ST_MailStorage_PB) GetLanguageId() uint32 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

func (m *ST_MailStorage_PB) GetVersionId() int32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

type ST_LeagueDepotUsedResource_PB struct {
	CureUnit    *ST_CashAsset_PB `protobuf:"bytes,1,opt,name=cureUnit" json:"cureUnit,omitempty"`
	ProduceUnit *ST_CashAsset_PB `protobuf:"bytes,2,opt,name=produceUnit" json:"produceUnit,omitempty"`
	Build       *ST_CashAsset_PB `protobuf:"bytes,3,opt,name=build" json:"build,omitempty"`
	Research    *ST_CashAsset_PB `protobuf:"bytes,4,opt,name=research" json:"research,omitempty"`
}

func (m *ST_LeagueDepotUsedResource_PB) Reset()                    { *m = ST_LeagueDepotUsedResource_PB{} }
func (m *ST_LeagueDepotUsedResource_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueDepotUsedResource_PB) ProtoMessage()               {}
func (*ST_LeagueDepotUsedResource_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{107} }

func (m *ST_LeagueDepotUsedResource_PB) GetCureUnit() *ST_CashAsset_PB {
	if m != nil {
		return m.CureUnit
	}
	return nil
}

func (m *ST_LeagueDepotUsedResource_PB) GetProduceUnit() *ST_CashAsset_PB {
	if m != nil {
		return m.ProduceUnit
	}
	return nil
}

func (m *ST_LeagueDepotUsedResource_PB) GetBuild() *ST_CashAsset_PB {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *ST_LeagueDepotUsedResource_PB) GetResearch() *ST_CashAsset_PB {
	if m != nil {
		return m.Research
	}
	return nil
}

// 拒绝列表
type ST_LeagueInvitationReject_PB struct {
	LeagueId        uint64 `protobuf:"varint,1,opt,name=leagueId" json:"leagueId,omitempty"`
	RejectTimestamp uint64 `protobuf:"varint,2,opt,name=rejectTimestamp" json:"rejectTimestamp,omitempty"`
}

func (m *ST_LeagueInvitationReject_PB) Reset()                    { *m = ST_LeagueInvitationReject_PB{} }
func (m *ST_LeagueInvitationReject_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueInvitationReject_PB) ProtoMessage()               {}
func (*ST_LeagueInvitationReject_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{108} }

func (m *ST_LeagueInvitationReject_PB) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_LeagueInvitationReject_PB) GetRejectTimestamp() uint64 {
	if m != nil {
		return m.RejectTimestamp
	}
	return 0
}

type ST_LeagueAsset_PB struct {
	InLeague               bool                            `protobuf:"varint,1,opt,name=inLeague" json:"inLeague,omitempty"`
	JoinedLeague           bool                            `protobuf:"varint,2,opt,name=joinedLeague" json:"joinedLeague,omitempty"`
	IsLeader               bool                            `protobuf:"varint,3,opt,name=isLeader" json:"isLeader,omitempty"`
	LeagueName             string                          `protobuf:"bytes,4,opt,name=leagueName" json:"leagueName,omitempty"`
	LeagueID               uint64                          `protobuf:"varint,5,opt,name=leagueID" json:"leagueID,omitempty"`
	DevoteCount            uint32                          `protobuf:"varint,6,opt,name=devoteCount" json:"devoteCount,omitempty"`
	GlodDevoteCount        uint32                          `protobuf:"varint,7,opt,name=glodDevoteCount" json:"glodDevoteCount,omitempty"`
	DevoteCost             uint32                          `protobuf:"varint,8,opt,name=devoteCost" json:"devoteCost,omitempty"`
	LastClearTime          uint64                          `protobuf:"varint,9,opt,name=lastClearTime" json:"lastClearTime,omitempty"`
	Memberlevel            int32                           `protobuf:"varint,10,opt,name=memberlevel" json:"memberlevel,omitempty"`
	TodayHelpCount         uint32                          `protobuf:"varint,11,opt,name=todayHelpCount" json:"todayHelpCount,omitempty"`
	LeagueDevote           uint32                          `protobuf:"varint,12,opt,name=leagueDevote" json:"leagueDevote,omitempty"`
	AppliedLeagueList      []uint64                        `protobuf:"varint,13,rep,packed,name=appliedLeagueList" json:"appliedLeagueList,omitempty"`
	LeagueMoveCityTime     uint64                          `protobuf:"varint,14,opt,name=leagueMoveCityTime" json:"leagueMoveCityTime,omitempty"`
	LeagueMoveCityCDTime   uint64                          `protobuf:"varint,15,opt,name=leagueMoveCityCDTime" json:"leagueMoveCityCDTime,omitempty"`
	DepotUsed              *ST_LeagueDepotUsedResource_PB  `protobuf:"bytes,16,opt,name=depotUsed" json:"depotUsed,omitempty"`
	RepairCityList         []uint32                        `protobuf:"varint,17,rep,packed,name=repairCityList" json:"repairCityList,omitempty"`
	HelpMemberCount        uint32                          `protobuf:"varint,18,opt,name=helpMemberCount" json:"helpMemberCount,omitempty"`
	JoinCDTime             uint64                          `protobuf:"varint,19,opt,name=joinCDTime" json:"joinCDTime,omitempty"`
	LastGetDevoteCountTime uint64                          `protobuf:"varint,20,opt,name=lastGetDevoteCountTime" json:"lastGetDevoteCountTime,omitempty"`
	InvitationRejectList   []*ST_LeagueInvitationReject_PB `protobuf:"bytes,21,rep,name=invitationRejectList" json:"invitationRejectList,omitempty"`
	LastTimeLeagueMessage  uint64                          `protobuf:"varint,22,opt,name=lastTimeLeagueMessage" json:"lastTimeLeagueMessage,omitempty"`
	GoldArrayIndex         uint32                          `protobuf:"varint,23,opt,name=goldArrayIndex" json:"goldArrayIndex,omitempty"`
	DevoteResetTimestamp   uint64                          `protobuf:"varint,24,opt,name=devoteResetTimestamp" json:"devoteResetTimestamp,omitempty"`
	JoinLeagueTime         uint64                          `protobuf:"varint,25,opt,name=joinLeagueTime" json:"joinLeagueTime,omitempty"`
	LeagueGiftScore        uint64                          `protobuf:"varint,26,opt,name=LeagueGiftScore" json:"LeagueGiftScore,omitempty"`
	KeyBoxInfo             *KeyBoxInfo                     `protobuf:"bytes,27,opt,name=keyBoxInfo" json:"keyBoxInfo,omitempty"`
}

func (m *ST_LeagueAsset_PB) Reset()                    { *m = ST_LeagueAsset_PB{} }
func (m *ST_LeagueAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueAsset_PB) ProtoMessage()               {}
func (*ST_LeagueAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{109} }

func (m *ST_LeagueAsset_PB) GetInLeague() bool {
	if m != nil {
		return m.InLeague
	}
	return false
}

func (m *ST_LeagueAsset_PB) GetJoinedLeague() bool {
	if m != nil {
		return m.JoinedLeague
	}
	return false
}

func (m *ST_LeagueAsset_PB) GetIsLeader() bool {
	if m != nil {
		return m.IsLeader
	}
	return false
}

func (m *ST_LeagueAsset_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_LeagueAsset_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetDevoteCount() uint32 {
	if m != nil {
		return m.DevoteCount
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetGlodDevoteCount() uint32 {
	if m != nil {
		return m.GlodDevoteCount
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetDevoteCost() uint32 {
	if m != nil {
		return m.DevoteCost
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetLastClearTime() uint64 {
	if m != nil {
		return m.LastClearTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetMemberlevel() int32 {
	if m != nil {
		return m.Memberlevel
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetTodayHelpCount() uint32 {
	if m != nil {
		return m.TodayHelpCount
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetLeagueDevote() uint32 {
	if m != nil {
		return m.LeagueDevote
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetAppliedLeagueList() []uint64 {
	if m != nil {
		return m.AppliedLeagueList
	}
	return nil
}

func (m *ST_LeagueAsset_PB) GetLeagueMoveCityTime() uint64 {
	if m != nil {
		return m.LeagueMoveCityTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetLeagueMoveCityCDTime() uint64 {
	if m != nil {
		return m.LeagueMoveCityCDTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetDepotUsed() *ST_LeagueDepotUsedResource_PB {
	if m != nil {
		return m.DepotUsed
	}
	return nil
}

func (m *ST_LeagueAsset_PB) GetRepairCityList() []uint32 {
	if m != nil {
		return m.RepairCityList
	}
	return nil
}

func (m *ST_LeagueAsset_PB) GetHelpMemberCount() uint32 {
	if m != nil {
		return m.HelpMemberCount
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetJoinCDTime() uint64 {
	if m != nil {
		return m.JoinCDTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetLastGetDevoteCountTime() uint64 {
	if m != nil {
		return m.LastGetDevoteCountTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetInvitationRejectList() []*ST_LeagueInvitationReject_PB {
	if m != nil {
		return m.InvitationRejectList
	}
	return nil
}

func (m *ST_LeagueAsset_PB) GetLastTimeLeagueMessage() uint64 {
	if m != nil {
		return m.LastTimeLeagueMessage
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetGoldArrayIndex() uint32 {
	if m != nil {
		return m.GoldArrayIndex
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetDevoteResetTimestamp() uint64 {
	if m != nil {
		return m.DevoteResetTimestamp
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetJoinLeagueTime() uint64 {
	if m != nil {
		return m.JoinLeagueTime
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetLeagueGiftScore() uint64 {
	if m != nil {
		return m.LeagueGiftScore
	}
	return 0
}

func (m *ST_LeagueAsset_PB) GetKeyBoxInfo() *KeyBoxInfo {
	if m != nil {
		return m.KeyBoxInfo
	}
	return nil
}

// 钥匙宝箱信息
type KeyBoxInfo struct {
	ItemId  uint32 `protobuf:"varint,1,opt,name=itemId" json:"itemId,omitempty"`
	EndTime uint64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *KeyBoxInfo) Reset()                    { *m = KeyBoxInfo{} }
func (m *KeyBoxInfo) String() string            { return proto.CompactTextString(m) }
func (*KeyBoxInfo) ProtoMessage()               {}
func (*KeyBoxInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{110} }

func (m *KeyBoxInfo) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *KeyBoxInfo) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ST_LeagueHelpBaisc_PB struct {
	Uid      uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	ActionID uint32 `protobuf:"varint,2,opt,name=actionID" json:"actionID,omitempty"`
}

func (m *ST_LeagueHelpBaisc_PB) Reset()                    { *m = ST_LeagueHelpBaisc_PB{} }
func (m *ST_LeagueHelpBaisc_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueHelpBaisc_PB) ProtoMessage()               {}
func (*ST_LeagueHelpBaisc_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{111} }

func (m *ST_LeagueHelpBaisc_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_LeagueHelpBaisc_PB) GetActionID() uint32 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

type ST_Gift_PB struct {
	LeagueGiftID uint32           `protobuf:"varint,1,opt,name=leagueGiftID" json:"leagueGiftID,omitempty"`
	State        uint32           `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	AddTime      uint64           `protobuf:"varint,3,opt,name=addTime" json:"addTime,omitempty"`
	ItemId       *ST_ItemEntry_PB `protobuf:"bytes,4,opt,name=itemId" json:"itemId,omitempty"`
	Buyer        string           `protobuf:"bytes,5,opt,name=buyer" json:"buyer,omitempty"`
	PackName     uint64           `protobuf:"varint,6,opt,name=packName" json:"packName,omitempty"`
	InitItemId   uint64           `protobuf:"varint,7,opt,name=initItemId" json:"initItemId,omitempty"`
}

func (m *ST_Gift_PB) Reset()                    { *m = ST_Gift_PB{} }
func (m *ST_Gift_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Gift_PB) ProtoMessage()               {}
func (*ST_Gift_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{112} }

func (m *ST_Gift_PB) GetLeagueGiftID() uint32 {
	if m != nil {
		return m.LeagueGiftID
	}
	return 0
}

func (m *ST_Gift_PB) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ST_Gift_PB) GetAddTime() uint64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *ST_Gift_PB) GetItemId() *ST_ItemEntry_PB {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (m *ST_Gift_PB) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

func (m *ST_Gift_PB) GetPackName() uint64 {
	if m != nil {
		return m.PackName
	}
	return 0
}

func (m *ST_Gift_PB) GetInitItemId() uint64 {
	if m != nil {
		return m.InitItemId
	}
	return 0
}

type ST_LeagueExtra_PB struct {
	MassList       []uint64                 `protobuf:"varint,1,rep,packed,name=massList" json:"massList,omitempty"`
	HelpList       []*ST_LeagueHelpBaisc_PB `protobuf:"bytes,2,rep,name=helpList" json:"helpList,omitempty"`
	GarrisonList   []uint64                 `protobuf:"varint,3,rep,packed,name=garrisonList" json:"garrisonList,omitempty"`
	LeagueGiftList []*ST_Gift_PB            `protobuf:"bytes,4,rep,name=leagueGiftList" json:"leagueGiftList,omitempty"`
	CanRepairCity  bool                     `protobuf:"varint,5,opt,name=canRepairCity" json:"canRepairCity,omitempty"`
}

func (m *ST_LeagueExtra_PB) Reset()                    { *m = ST_LeagueExtra_PB{} }
func (m *ST_LeagueExtra_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueExtra_PB) ProtoMessage()               {}
func (*ST_LeagueExtra_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{113} }

func (m *ST_LeagueExtra_PB) GetMassList() []uint64 {
	if m != nil {
		return m.MassList
	}
	return nil
}

func (m *ST_LeagueExtra_PB) GetHelpList() []*ST_LeagueHelpBaisc_PB {
	if m != nil {
		return m.HelpList
	}
	return nil
}

func (m *ST_LeagueExtra_PB) GetGarrisonList() []uint64 {
	if m != nil {
		return m.GarrisonList
	}
	return nil
}

func (m *ST_LeagueExtra_PB) GetLeagueGiftList() []*ST_Gift_PB {
	if m != nil {
		return m.LeagueGiftList
	}
	return nil
}

func (m *ST_LeagueExtra_PB) GetCanRepairCity() bool {
	if m != nil {
		return m.CanRepairCity
	}
	return false
}

type ST_LeagueBattleNOTJoin_PB struct {
	TargetWorldDataID uint64   `protobuf:"varint,1,opt,name=targetWorldDataID" json:"targetWorldDataID,omitempty"`
	AttackActionID    uint64   `protobuf:"varint,2,opt,name=attackActionID" json:"attackActionID,omitempty"`
	DefenceList       []uint64 `protobuf:"varint,3,rep,packed,name=defenceList" json:"defenceList,omitempty"`
	TargetTroopNum    uint64   `protobuf:"varint,4,opt,name=targetTroopNum" json:"targetTroopNum,omitempty"`
}

func (m *ST_LeagueBattleNOTJoin_PB) Reset()                    { *m = ST_LeagueBattleNOTJoin_PB{} }
func (m *ST_LeagueBattleNOTJoin_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBattleNOTJoin_PB) ProtoMessage()               {}
func (*ST_LeagueBattleNOTJoin_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{114} }

func (m *ST_LeagueBattleNOTJoin_PB) GetTargetWorldDataID() uint64 {
	if m != nil {
		return m.TargetWorldDataID
	}
	return 0
}

func (m *ST_LeagueBattleNOTJoin_PB) GetAttackActionID() uint64 {
	if m != nil {
		return m.AttackActionID
	}
	return 0
}

func (m *ST_LeagueBattleNOTJoin_PB) GetDefenceList() []uint64 {
	if m != nil {
		return m.DefenceList
	}
	return nil
}

func (m *ST_LeagueBattleNOTJoin_PB) GetTargetTroopNum() uint64 {
	if m != nil {
		return m.TargetTroopNum
	}
	return 0
}

type ST_LeagueBattle_PB struct {
	TargetWorldDataID uint64   `protobuf:"varint,1,opt,name=targetWorldDataID" json:"targetWorldDataID,omitempty"`
	AttackList        []uint64 `protobuf:"varint,2,rep,packed,name=attackList" json:"attackList,omitempty"`
	DefenceList       []uint64 `protobuf:"varint,3,rep,packed,name=defenceList" json:"defenceList,omitempty"`
	TargetTroopNum    uint64   `protobuf:"varint,4,opt,name=targetTroopNum" json:"targetTroopNum,omitempty"`
	AttLeagueID       uint64   `protobuf:"varint,5,opt,name=attLeagueID" json:"attLeagueID,omitempty"`
	AttackActionID    uint64   `protobuf:"varint,6,opt,name=attackActionID" json:"attackActionID,omitempty"`
}

func (m *ST_LeagueBattle_PB) Reset()                    { *m = ST_LeagueBattle_PB{} }
func (m *ST_LeagueBattle_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBattle_PB) ProtoMessage()               {}
func (*ST_LeagueBattle_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{115} }

func (m *ST_LeagueBattle_PB) GetTargetWorldDataID() uint64 {
	if m != nil {
		return m.TargetWorldDataID
	}
	return 0
}

func (m *ST_LeagueBattle_PB) GetAttackList() []uint64 {
	if m != nil {
		return m.AttackList
	}
	return nil
}

func (m *ST_LeagueBattle_PB) GetDefenceList() []uint64 {
	if m != nil {
		return m.DefenceList
	}
	return nil
}

func (m *ST_LeagueBattle_PB) GetTargetTroopNum() uint64 {
	if m != nil {
		return m.TargetTroopNum
	}
	return 0
}

func (m *ST_LeagueBattle_PB) GetAttLeagueID() uint64 {
	if m != nil {
		return m.AttLeagueID
	}
	return 0
}

func (m *ST_LeagueBattle_PB) GetAttackActionID() uint64 {
	if m != nil {
		return m.AttackActionID
	}
	return 0
}

// 客户端通信的数据，比存db的多一些项，比如玩家姓名等
type ST_League_Member_Info struct {
	Id                   uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level                int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	LastRefreshTimestamp uint64 `protobuf:"varint,3,opt,name=lastRefreshTimestamp" json:"lastRefreshTimestamp,omitempty"`
	Power                uint64 `protobuf:"varint,4,opt,name=power" json:"power,omitempty"`
	KillNum              uint64 `protobuf:"varint,5,opt,name=killNum" json:"killNum,omitempty"`
	Title                uint64 `protobuf:"varint,6,opt,name=title" json:"title,omitempty"`
	MainCityLevel        uint32 `protobuf:"varint,7,opt,name=MainCityLevel" json:"MainCityLevel,omitempty"`
}

func (m *ST_League_Member_Info) Reset()                    { *m = ST_League_Member_Info{} }
func (m *ST_League_Member_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Member_Info) ProtoMessage()               {}
func (*ST_League_Member_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{116} }

func (m *ST_League_Member_Info) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_League_Member_Info) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ST_League_Member_Info) GetLastRefreshTimestamp() uint64 {
	if m != nil {
		return m.LastRefreshTimestamp
	}
	return 0
}

func (m *ST_League_Member_Info) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_League_Member_Info) GetKillNum() uint64 {
	if m != nil {
		return m.KillNum
	}
	return 0
}

func (m *ST_League_Member_Info) GetTitle() uint64 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *ST_League_Member_Info) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

type ST_League_Simple_Info struct {
	Name            string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OwnerID         uint64                      `protobuf:"varint,2,opt,name=ownerID" json:"ownerID,omitempty"`
	OwnerName       string                      `protobuf:"bytes,3,opt,name=ownerName" json:"ownerName,omitempty"`
	ShortName       string                      `protobuf:"bytes,4,opt,name=shortName" json:"shortName,omitempty"`
	Slogan          string                      `protobuf:"bytes,5,opt,name=slogan" json:"slogan,omitempty"`
	MemberCount     uint32                      `protobuf:"varint,6,opt,name=memberCount" json:"memberCount,omitempty"`
	Battle          uint64                      `protobuf:"varint,7,opt,name=battle" json:"battle,omitempty"`
	LeagueID        uint64                      `protobuf:"varint,8,opt,name=leagueID" json:"leagueID,omitempty"`
	Score           uint64                      `protobuf:"varint,9,opt,name=score" json:"score,omitempty"`
	Versionid       uint32                      `protobuf:"varint,10,opt,name=versionid" json:"versionid,omitempty"`
	NeedReview      bool                        `protobuf:"varint,11,opt,name=needReview" json:"needReview,omitempty"`
	LeagueLanguage  uint32                      `protobuf:"varint,12,opt,name=leagueLanguage" json:"leagueLanguage,omitempty"`
	MainCityLevel   uint64                      `protobuf:"varint,13,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
	MinPower        uint64                      `protobuf:"varint,14,opt,name=minPower" json:"minPower,omitempty"`
	MessageList     []*ST_LeagueMessageEntry_PB `protobuf:"bytes,15,rep,name=messageList" json:"messageList,omitempty"`
	MemberCapacity  uint32                      `protobuf:"varint,16,opt,name=memberCapacity" json:"memberCapacity,omitempty"`
	PowerRank       uint32                      `protobuf:"varint,17,opt,name=powerRank" json:"powerRank,omitempty"`
	Flag            *ST_LeagueCustomFlag_PB     `protobuf:"bytes,18,opt,name=flag" json:"flag,omitempty"`
	GiftLevel       uint32                      `protobuf:"varint,19,opt,name=giftLevel" json:"giftLevel,omitempty"`
	OwnCitys        []uint32                    `protobuf:"varint,20,rep,packed,name=ownCitys" json:"ownCitys,omitempty"`
	CreateDate      uint64                      `protobuf:"varint,21,opt,name=createDate" json:"createDate,omitempty"`
	OutSlogan       string                      `protobuf:"bytes,22,opt,name=OutSlogan" json:"OutSlogan,omitempty"`
	AutoDismissTime uint64                      `protobuf:"varint,23,opt,name=autoDismissTime" json:"autoDismissTime,omitempty"`
	Sid             uint32                      `protobuf:"varint,24,opt,name=sid" json:"sid,omitempty"`
	Building        *ST_List_Uint64             `protobuf:"bytes,25,opt,name=Building" json:"Building,omitempty"`
	ChannelId       string                      `protobuf:"bytes,26,opt,name=channelId" json:"channelId,omitempty"`
}

func (m *ST_League_Simple_Info) Reset()                    { *m = ST_League_Simple_Info{} }
func (m *ST_League_Simple_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Simple_Info) ProtoMessage()               {}
func (*ST_League_Simple_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{117} }

func (m *ST_League_Simple_Info) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_League_Simple_Info) GetOwnerID() uint64 {
	if m != nil {
		return m.OwnerID
	}
	return 0
}

func (m *ST_League_Simple_Info) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *ST_League_Simple_Info) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *ST_League_Simple_Info) GetSlogan() string {
	if m != nil {
		return m.Slogan
	}
	return ""
}

func (m *ST_League_Simple_Info) GetMemberCount() uint32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *ST_League_Simple_Info) GetBattle() uint64 {
	if m != nil {
		return m.Battle
	}
	return 0
}

func (m *ST_League_Simple_Info) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_League_Simple_Info) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_League_Simple_Info) GetVersionid() uint32 {
	if m != nil {
		return m.Versionid
	}
	return 0
}

func (m *ST_League_Simple_Info) GetNeedReview() bool {
	if m != nil {
		return m.NeedReview
	}
	return false
}

func (m *ST_League_Simple_Info) GetLeagueLanguage() uint32 {
	if m != nil {
		return m.LeagueLanguage
	}
	return 0
}

func (m *ST_League_Simple_Info) GetMainCityLevel() uint64 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_League_Simple_Info) GetMinPower() uint64 {
	if m != nil {
		return m.MinPower
	}
	return 0
}

func (m *ST_League_Simple_Info) GetMessageList() []*ST_LeagueMessageEntry_PB {
	if m != nil {
		return m.MessageList
	}
	return nil
}

func (m *ST_League_Simple_Info) GetMemberCapacity() uint32 {
	if m != nil {
		return m.MemberCapacity
	}
	return 0
}

func (m *ST_League_Simple_Info) GetPowerRank() uint32 {
	if m != nil {
		return m.PowerRank
	}
	return 0
}

func (m *ST_League_Simple_Info) GetFlag() *ST_LeagueCustomFlag_PB {
	if m != nil {
		return m.Flag
	}
	return nil
}

func (m *ST_League_Simple_Info) GetGiftLevel() uint32 {
	if m != nil {
		return m.GiftLevel
	}
	return 0
}

func (m *ST_League_Simple_Info) GetOwnCitys() []uint32 {
	if m != nil {
		return m.OwnCitys
	}
	return nil
}

func (m *ST_League_Simple_Info) GetCreateDate() uint64 {
	if m != nil {
		return m.CreateDate
	}
	return 0
}

func (m *ST_League_Simple_Info) GetOutSlogan() string {
	if m != nil {
		return m.OutSlogan
	}
	return ""
}

func (m *ST_League_Simple_Info) GetAutoDismissTime() uint64 {
	if m != nil {
		return m.AutoDismissTime
	}
	return 0
}

func (m *ST_League_Simple_Info) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_League_Simple_Info) GetBuilding() *ST_List_Uint64 {
	if m != nil {
		return m.Building
	}
	return nil
}

func (m *ST_League_Simple_Info) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

type ST_List_Uint64 struct {
	List []uint64 `protobuf:"varint,1,rep,packed,name=List" json:"List,omitempty"`
}

func (m *ST_List_Uint64) Reset()                    { *m = ST_List_Uint64{} }
func (m *ST_List_Uint64) String() string            { return proto.CompactTextString(m) }
func (*ST_List_Uint64) ProtoMessage()               {}
func (*ST_List_Uint64) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{118} }

func (m *ST_List_Uint64) GetList() []uint64 {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_League_Operation_Result struct {
	Result LeagueResult `protobuf:"varint,1,opt,name=result,enum=proto_micro.LeagueResult" json:"result,omitempty"`
}

func (m *ST_League_Operation_Result) Reset()                    { *m = ST_League_Operation_Result{} }
func (m *ST_League_Operation_Result) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Operation_Result) ProtoMessage()               {}
func (*ST_League_Operation_Result) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{119} }

func (m *ST_League_Operation_Result) GetResult() LeagueResult {
	if m != nil {
		return m.Result
	}
	return LeagueResult_LeagueSuccess
}

type ST_League_Simple_Info_List struct {
	SimpleInfoList []*ST_League_Simple_Info `protobuf:"bytes,1,rep,name=simpleInfoList" json:"simpleInfoList,omitempty"`
}

func (m *ST_League_Simple_Info_List) Reset()                    { *m = ST_League_Simple_Info_List{} }
func (m *ST_League_Simple_Info_List) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Simple_Info_List) ProtoMessage()               {}
func (*ST_League_Simple_Info_List) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{120} }

func (m *ST_League_Simple_Info_List) GetSimpleInfoList() []*ST_League_Simple_Info {
	if m != nil {
		return m.SimpleInfoList
	}
	return nil
}

type ST_LeagueTechnology_PB struct {
	RID              uint32              `protobuf:"varint,1,opt,name=rID" json:"rID,omitempty"`
	Exp              uint32              `protobuf:"varint,2,opt,name=exp" json:"exp,omitempty"`
	DevoteRequest    []*ST_CashAsset_PB  `protobuf:"bytes,3,rep,name=devoteRequest" json:"devoteRequest,omitempty"`
	OnceDevoteIncome []*ST_Vector4Int_PB `protobuf:"bytes,4,rep,name=onceDevoteIncome" json:"onceDevoteIncome,omitempty"`
	GoldDevoteIncome []*ST_Vector4Int_PB `protobuf:"bytes,5,rep,name=goldDevoteIncome" json:"goldDevoteIncome,omitempty"`
}

func (m *ST_LeagueTechnology_PB) Reset()                    { *m = ST_LeagueTechnology_PB{} }
func (m *ST_LeagueTechnology_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueTechnology_PB) ProtoMessage()               {}
func (*ST_LeagueTechnology_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{121} }

func (m *ST_LeagueTechnology_PB) GetRID() uint32 {
	if m != nil {
		return m.RID
	}
	return 0
}

func (m *ST_LeagueTechnology_PB) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *ST_LeagueTechnology_PB) GetDevoteRequest() []*ST_CashAsset_PB {
	if m != nil {
		return m.DevoteRequest
	}
	return nil
}

func (m *ST_LeagueTechnology_PB) GetOnceDevoteIncome() []*ST_Vector4Int_PB {
	if m != nil {
		return m.OnceDevoteIncome
	}
	return nil
}

func (m *ST_LeagueTechnology_PB) GetGoldDevoteIncome() []*ST_Vector4Int_PB {
	if m != nil {
		return m.GoldDevoteIncome
	}
	return nil
}

type ST_League_Help_Simple_PB struct {
	Basic         *ST_LeagueHelpBaisc_PB `protobuf:"bytes,1,opt,name=basic" json:"basic,omitempty"`
	ActionType    uint32                 `protobuf:"varint,2,opt,name=actionType" json:"actionType,omitempty"`
	HelpCount     uint32                 `protobuf:"varint,3,opt,name=helpCount" json:"helpCount,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	BuildingType  uint32                 `protobuf:"varint,5,opt,name=buildingType" json:"buildingType,omitempty"`
	BuildingLevel uint32                 `protobuf:"varint,6,opt,name=buildingLevel" json:"buildingLevel,omitempty"`
	TechID        uint32                 `protobuf:"varint,7,opt,name=techID" json:"techID,omitempty"`
	MaxCount      uint32                 `protobuf:"varint,8,opt,name=maxCount" json:"maxCount,omitempty"`
}

func (m *ST_League_Help_Simple_PB) Reset()                    { *m = ST_League_Help_Simple_PB{} }
func (m *ST_League_Help_Simple_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Help_Simple_PB) ProtoMessage()               {}
func (*ST_League_Help_Simple_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{122} }

func (m *ST_League_Help_Simple_PB) GetBasic() *ST_LeagueHelpBaisc_PB {
	if m != nil {
		return m.Basic
	}
	return nil
}

func (m *ST_League_Help_Simple_PB) GetActionType() uint32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ST_League_Help_Simple_PB) GetHelpCount() uint32 {
	if m != nil {
		return m.HelpCount
	}
	return 0
}

func (m *ST_League_Help_Simple_PB) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ST_League_Help_Simple_PB) GetBuildingType() uint32 {
	if m != nil {
		return m.BuildingType
	}
	return 0
}

func (m *ST_League_Help_Simple_PB) GetBuildingLevel() uint32 {
	if m != nil {
		return m.BuildingLevel
	}
	return 0
}

func (m *ST_League_Help_Simple_PB) GetTechID() uint32 {
	if m != nil {
		return m.TechID
	}
	return 0
}

func (m *ST_League_Help_Simple_PB) GetMaxCount() uint32 {
	if m != nil {
		return m.MaxCount
	}
	return 0
}

type ST_LeagueHelpDetail_PB struct {
	HelpList []*ST_League_Help_Simple_PB `protobuf:"bytes,1,rep,name=helpList" json:"helpList,omitempty"`
}

func (m *ST_LeagueHelpDetail_PB) Reset()                    { *m = ST_LeagueHelpDetail_PB{} }
func (m *ST_LeagueHelpDetail_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueHelpDetail_PB) ProtoMessage()               {}
func (*ST_LeagueHelpDetail_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{123} }

func (m *ST_LeagueHelpDetail_PB) GetHelpList() []*ST_League_Help_Simple_PB {
	if m != nil {
		return m.HelpList
	}
	return nil
}

type ST_League_Help_Info_PB struct {
	Simple   *ST_League_Help_Simple_PB `protobuf:"bytes,1,opt,name=simple" json:"simple,omitempty"`
	HelperID []uint64                  `protobuf:"varint,2,rep,packed,name=helperID" json:"helperID,omitempty"`
}

func (m *ST_League_Help_Info_PB) Reset()                    { *m = ST_League_Help_Info_PB{} }
func (m *ST_League_Help_Info_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Help_Info_PB) ProtoMessage()               {}
func (*ST_League_Help_Info_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{124} }

func (m *ST_League_Help_Info_PB) GetSimple() *ST_League_Help_Simple_PB {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *ST_League_Help_Info_PB) GetHelperID() []uint64 {
	if m != nil {
		return m.HelperID
	}
	return nil
}

type ST_League_Help_Asset_PB struct {
	LeagueHelpList []*ST_League_Help_Info_PB `protobuf:"bytes,1,rep,name=leagueHelpList" json:"leagueHelpList,omitempty"`
}

func (m *ST_League_Help_Asset_PB) Reset()                    { *m = ST_League_Help_Asset_PB{} }
func (m *ST_League_Help_Asset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Help_Asset_PB) ProtoMessage()               {}
func (*ST_League_Help_Asset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{125} }

func (m *ST_League_Help_Asset_PB) GetLeagueHelpList() []*ST_League_Help_Info_PB {
	if m != nil {
		return m.LeagueHelpList
	}
	return nil
}

type ST_LeagueGift_PB struct {
	GiftID   uint32           `protobuf:"varint,1,opt,name=giftID" json:"giftID,omitempty"`
	GiftData *ST_ItemEntry_PB `protobuf:"bytes,2,opt,name=giftData" json:"giftData,omitempty"`
	AddTime  uint64           `protobuf:"varint,3,opt,name=addTime" json:"addTime,omitempty"`
}

func (m *ST_LeagueGift_PB) Reset()                    { *m = ST_LeagueGift_PB{} }
func (m *ST_LeagueGift_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueGift_PB) ProtoMessage()               {}
func (*ST_LeagueGift_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{126} }

func (m *ST_LeagueGift_PB) GetGiftID() uint32 {
	if m != nil {
		return m.GiftID
	}
	return 0
}

func (m *ST_LeagueGift_PB) GetGiftData() *ST_ItemEntry_PB {
	if m != nil {
		return m.GiftData
	}
	return nil
}

func (m *ST_LeagueGift_PB) GetAddTime() uint64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

type ST_LeagueGiftList_PB struct {
	GiftList []*ST_LeagueGift_PB `protobuf:"bytes,1,rep,name=giftList" json:"giftList,omitempty"`
}

func (m *ST_LeagueGiftList_PB) Reset()                    { *m = ST_LeagueGiftList_PB{} }
func (m *ST_LeagueGiftList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueGiftList_PB) ProtoMessage()               {}
func (*ST_LeagueGiftList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{127} }

func (m *ST_LeagueGiftList_PB) GetGiftList() []*ST_LeagueGift_PB {
	if m != nil {
		return m.GiftList
	}
	return nil
}

type ST_LeagueGiftSpecial_PB struct {
	CurrentGiftID   uint32 `protobuf:"varint,1,opt,name=currentGiftID" json:"currentGiftID,omitempty"`
	GiftExp         uint64 `protobuf:"varint,2,opt,name=giftExp" json:"giftExp,omitempty"`
	LeaguePackLevel uint32 `protobuf:"varint,3,opt,name=leaguePackLevel" json:"leaguePackLevel,omitempty"`
	LeagueExp       uint32 `protobuf:"varint,4,opt,name=leagueExp" json:"leagueExp,omitempty"`
	KeyNum          uint64 `protobuf:"varint,5,opt,name=keyNum" json:"keyNum,omitempty"`
	KeyBoxQuality   uint32 `protobuf:"varint,6,opt,name=keyBoxQuality" json:"keyBoxQuality,omitempty"`
}

func (m *ST_LeagueGiftSpecial_PB) Reset()                    { *m = ST_LeagueGiftSpecial_PB{} }
func (m *ST_LeagueGiftSpecial_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueGiftSpecial_PB) ProtoMessage()               {}
func (*ST_LeagueGiftSpecial_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{128} }

func (m *ST_LeagueGiftSpecial_PB) GetCurrentGiftID() uint32 {
	if m != nil {
		return m.CurrentGiftID
	}
	return 0
}

func (m *ST_LeagueGiftSpecial_PB) GetGiftExp() uint64 {
	if m != nil {
		return m.GiftExp
	}
	return 0
}

func (m *ST_LeagueGiftSpecial_PB) GetLeaguePackLevel() uint32 {
	if m != nil {
		return m.LeaguePackLevel
	}
	return 0
}

func (m *ST_LeagueGiftSpecial_PB) GetLeagueExp() uint32 {
	if m != nil {
		return m.LeagueExp
	}
	return 0
}

func (m *ST_LeagueGiftSpecial_PB) GetKeyNum() uint64 {
	if m != nil {
		return m.KeyNum
	}
	return 0
}

func (m *ST_LeagueGiftSpecial_PB) GetKeyBoxQuality() uint32 {
	if m != nil {
		return m.KeyBoxQuality
	}
	return 0
}

type ST_LeagueMemberTitleName_PB struct {
	MemberLevel uint32 `protobuf:"varint,1,opt,name=memberLevel" json:"memberLevel,omitempty"`
	TitleName   string `protobuf:"bytes,2,opt,name=titleName" json:"titleName,omitempty"`
}

func (m *ST_LeagueMemberTitleName_PB) Reset()                    { *m = ST_LeagueMemberTitleName_PB{} }
func (m *ST_LeagueMemberTitleName_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueMemberTitleName_PB) ProtoMessage()               {}
func (*ST_LeagueMemberTitleName_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{129} }

func (m *ST_LeagueMemberTitleName_PB) GetMemberLevel() uint32 {
	if m != nil {
		return m.MemberLevel
	}
	return 0
}

func (m *ST_LeagueMemberTitleName_PB) GetTitleName() string {
	if m != nil {
		return m.TitleName
	}
	return ""
}

type ST_LeagueDepot_PB struct {
	EnableDepot      bool             `protobuf:"varint,1,opt,name=enableDepot" json:"enableDepot,omitempty"`
	DepotCityid      uint32           `protobuf:"varint,2,opt,name=depotCityid" json:"depotCityid,omitempty"`
	DepotPercent     uint32           `protobuf:"varint,3,opt,name=depotPercent" json:"depotPercent,omitempty"`
	MaxAllowResource *ST_CashAsset_PB `protobuf:"bytes,4,opt,name=maxAllowResource" json:"maxAllowResource,omitempty"`
	OpenTime         uint64           `protobuf:"varint,5,opt,name=openTime" json:"openTime,omitempty"`
}

func (m *ST_LeagueDepot_PB) Reset()                    { *m = ST_LeagueDepot_PB{} }
func (m *ST_LeagueDepot_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueDepot_PB) ProtoMessage()               {}
func (*ST_LeagueDepot_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{130} }

func (m *ST_LeagueDepot_PB) GetEnableDepot() bool {
	if m != nil {
		return m.EnableDepot
	}
	return false
}

func (m *ST_LeagueDepot_PB) GetDepotCityid() uint32 {
	if m != nil {
		return m.DepotCityid
	}
	return 0
}

func (m *ST_LeagueDepot_PB) GetDepotPercent() uint32 {
	if m != nil {
		return m.DepotPercent
	}
	return 0
}

func (m *ST_LeagueDepot_PB) GetMaxAllowResource() *ST_CashAsset_PB {
	if m != nil {
		return m.MaxAllowResource
	}
	return nil
}

func (m *ST_LeagueDepot_PB) GetOpenTime() uint64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

type ST_LeagueManagement_PB struct {
	CureUnit    *ST_LeagueDepot_PB `protobuf:"bytes,1,opt,name=cureUnit" json:"cureUnit,omitempty"`
	ProduceUnit *ST_LeagueDepot_PB `protobuf:"bytes,2,opt,name=produceUnit" json:"produceUnit,omitempty"`
	Build       *ST_LeagueDepot_PB `protobuf:"bytes,3,opt,name=build" json:"build,omitempty"`
	Research    *ST_LeagueDepot_PB `protobuf:"bytes,4,opt,name=research" json:"research,omitempty"`
}

func (m *ST_LeagueManagement_PB) Reset()                    { *m = ST_LeagueManagement_PB{} }
func (m *ST_LeagueManagement_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueManagement_PB) ProtoMessage()               {}
func (*ST_LeagueManagement_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{131} }

func (m *ST_LeagueManagement_PB) GetCureUnit() *ST_LeagueDepot_PB {
	if m != nil {
		return m.CureUnit
	}
	return nil
}

func (m *ST_LeagueManagement_PB) GetProduceUnit() *ST_LeagueDepot_PB {
	if m != nil {
		return m.ProduceUnit
	}
	return nil
}

func (m *ST_LeagueManagement_PB) GetBuild() *ST_LeagueDepot_PB {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *ST_LeagueManagement_PB) GetResearch() *ST_LeagueDepot_PB {
	if m != nil {
		return m.Research
	}
	return nil
}

type ST_League_Detail_Info struct {
	SimpleInfo              *ST_League_Simple_Info         `protobuf:"bytes,1,opt,name=simpleInfo" json:"simpleInfo,omitempty"`
	MemberList              []*ST_League_Member_Info       `protobuf:"bytes,2,rep,name=memberList" json:"memberList,omitempty"`
	Shop                    []*ST_ItemEntry_PB             `protobuf:"bytes,3,rep,name=shop" json:"shop,omitempty"`
	TechnologyList          []*ST_LeagueTechnology_PB      `protobuf:"bytes,4,rep,name=technologyList" json:"technologyList,omitempty"`
	LeagueHelp              *ST_League_Help_Asset_PB       `protobuf:"bytes,5,opt,name=leagueHelp" json:"leagueHelp,omitempty"`
	GiftList                []*ST_LeagueGift_PB            `protobuf:"bytes,6,rep,name=giftList" json:"giftList,omitempty"`
	GiftSpecial             *ST_LeagueGiftSpecial_PB       `protobuf:"bytes,7,opt,name=giftSpecial" json:"giftSpecial,omitempty"`
	RequestJionList         []uint64                       `protobuf:"varint,8,rep,packed,name=requestJionList" json:"requestJionList,omitempty"`
	DevoteRank              *ST_LeagueDonationRank_PB      `protobuf:"bytes,9,opt,name=devoteRank" json:"devoteRank,omitempty"`
	LeagueStatus            *ST_LeagueStatus_PB            `protobuf:"bytes,10,opt,name=leagueStatus" json:"leagueStatus,omitempty"`
	MemberTitleList         []*ST_LeagueMemberTitleName_PB `protobuf:"bytes,11,rep,name=memberTitleList" json:"memberTitleList,omitempty"`
	Managerment             *ST_LeagueManagement_PB        `protobuf:"bytes,12,opt,name=managerment" json:"managerment,omitempty"`
	LeagueBattleList        []*ST_LeagueBattle_PB          `protobuf:"bytes,13,rep,name=leagueBattleList" json:"leagueBattleList,omitempty"`
	LeagueBattleNotJoinList []*ST_LeagueBattleNOTJoin_PB   `protobuf:"bytes,14,rep,name=leagueBattleNotJoinList" json:"leagueBattleNotJoinList,omitempty"`
	LeagueBox               []*ST_LeagueBox_Item_PB        `protobuf:"bytes,15,rep,name=leagueBox" json:"leagueBox,omitempty"`
	RecommendTechList       []uint32                       `protobuf:"varint,16,rep,packed,name=recommendTechList" json:"recommendTechList,omitempty"`
	LeagueCityScore         uint32                         `protobuf:"varint,17,opt,name=leagueCityScore" json:"leagueCityScore,omitempty"`
	LeagueCupClass          uint32                         `protobuf:"varint,18,opt,name=leagueCupClass" json:"leagueCupClass,omitempty"`
	CampInfo                []*ST_LeagueCampLeader_PB      `protobuf:"bytes,19,rep,name=campInfo" json:"campInfo,omitempty"`
	BuffTitle               []*ST_League_Member_BuffTitle  `protobuf:"bytes,20,rep,name=buffTitle" json:"buffTitle,omitempty"`
}

func (m *ST_League_Detail_Info) Reset()                    { *m = ST_League_Detail_Info{} }
func (m *ST_League_Detail_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Detail_Info) ProtoMessage()               {}
func (*ST_League_Detail_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{132} }

func (m *ST_League_Detail_Info) GetSimpleInfo() *ST_League_Simple_Info {
	if m != nil {
		return m.SimpleInfo
	}
	return nil
}

func (m *ST_League_Detail_Info) GetMemberList() []*ST_League_Member_Info {
	if m != nil {
		return m.MemberList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetShop() []*ST_ItemEntry_PB {
	if m != nil {
		return m.Shop
	}
	return nil
}

func (m *ST_League_Detail_Info) GetTechnologyList() []*ST_LeagueTechnology_PB {
	if m != nil {
		return m.TechnologyList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueHelp() *ST_League_Help_Asset_PB {
	if m != nil {
		return m.LeagueHelp
	}
	return nil
}

func (m *ST_League_Detail_Info) GetGiftList() []*ST_LeagueGift_PB {
	if m != nil {
		return m.GiftList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetGiftSpecial() *ST_LeagueGiftSpecial_PB {
	if m != nil {
		return m.GiftSpecial
	}
	return nil
}

func (m *ST_League_Detail_Info) GetRequestJionList() []uint64 {
	if m != nil {
		return m.RequestJionList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetDevoteRank() *ST_LeagueDonationRank_PB {
	if m != nil {
		return m.DevoteRank
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueStatus() *ST_LeagueStatus_PB {
	if m != nil {
		return m.LeagueStatus
	}
	return nil
}

func (m *ST_League_Detail_Info) GetMemberTitleList() []*ST_LeagueMemberTitleName_PB {
	if m != nil {
		return m.MemberTitleList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetManagerment() *ST_LeagueManagement_PB {
	if m != nil {
		return m.Managerment
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueBattleList() []*ST_LeagueBattle_PB {
	if m != nil {
		return m.LeagueBattleList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueBattleNotJoinList() []*ST_LeagueBattleNOTJoin_PB {
	if m != nil {
		return m.LeagueBattleNotJoinList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueBox() []*ST_LeagueBox_Item_PB {
	if m != nil {
		return m.LeagueBox
	}
	return nil
}

func (m *ST_League_Detail_Info) GetRecommendTechList() []uint32 {
	if m != nil {
		return m.RecommendTechList
	}
	return nil
}

func (m *ST_League_Detail_Info) GetLeagueCityScore() uint32 {
	if m != nil {
		return m.LeagueCityScore
	}
	return 0
}

func (m *ST_League_Detail_Info) GetLeagueCupClass() uint32 {
	if m != nil {
		return m.LeagueCupClass
	}
	return 0
}

func (m *ST_League_Detail_Info) GetCampInfo() []*ST_LeagueCampLeader_PB {
	if m != nil {
		return m.CampInfo
	}
	return nil
}

func (m *ST_League_Detail_Info) GetBuffTitle() []*ST_League_Member_BuffTitle {
	if m != nil {
		return m.BuffTitle
	}
	return nil
}

type ST_League_Member_BuffTitle struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Addtime uint64 `protobuf:"varint,2,opt,name=addtime" json:"addtime,omitempty"`
	Uid     uint64 `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_League_Member_BuffTitle) Reset()                    { *m = ST_League_Member_BuffTitle{} }
func (m *ST_League_Member_BuffTitle) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Member_BuffTitle) ProtoMessage()               {}
func (*ST_League_Member_BuffTitle) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{133} }

func (m *ST_League_Member_BuffTitle) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_League_Member_BuffTitle) GetAddtime() uint64 {
	if m != nil {
		return m.Addtime
	}
	return 0
}

func (m *ST_League_Member_BuffTitle) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type ST_LeagueCampLeader_PB struct {
	CampId    uint64 `protobuf:"varint,1,opt,name=campId" json:"campId,omitempty"`
	LeaderUid uint64 `protobuf:"varint,2,opt,name=leaderUid" json:"leaderUid,omitempty"`
}

func (m *ST_LeagueCampLeader_PB) Reset()                    { *m = ST_LeagueCampLeader_PB{} }
func (m *ST_LeagueCampLeader_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueCampLeader_PB) ProtoMessage()               {}
func (*ST_LeagueCampLeader_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{134} }

func (m *ST_LeagueCampLeader_PB) GetCampId() uint64 {
	if m != nil {
		return m.CampId
	}
	return 0
}

func (m *ST_LeagueCampLeader_PB) GetLeaderUid() uint64 {
	if m != nil {
		return m.LeaderUid
	}
	return 0
}

type ST_LeagueBox_List_PB struct {
	LeagueBoxList []*ST_LeagueBox_Item_PB `protobuf:"bytes,1,rep,name=leagueBoxList" json:"leagueBoxList,omitempty"`
}

func (m *ST_LeagueBox_List_PB) Reset()                    { *m = ST_LeagueBox_List_PB{} }
func (m *ST_LeagueBox_List_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBox_List_PB) ProtoMessage()               {}
func (*ST_LeagueBox_List_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{135} }

func (m *ST_LeagueBox_List_PB) GetLeagueBoxList() []*ST_LeagueBox_Item_PB {
	if m != nil {
		return m.LeagueBoxList
	}
	return nil
}

// 邀请我加入的联盟信息
type ST_InvitationLeague_Info struct {
	LeagueID   uint64 `protobuf:"varint,1,opt,name=leagueID" json:"leagueID,omitempty"`
	LeagueName string `protobuf:"bytes,2,opt,name=leagueName" json:"leagueName,omitempty"`
	InviterUID uint64 `protobuf:"varint,3,opt,name=inviterUID" json:"inviterUID,omitempty"`
}

func (m *ST_InvitationLeague_Info) Reset()                    { *m = ST_InvitationLeague_Info{} }
func (m *ST_InvitationLeague_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_InvitationLeague_Info) ProtoMessage()               {}
func (*ST_InvitationLeague_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{136} }

func (m *ST_InvitationLeague_Info) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_InvitationLeague_Info) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_InvitationLeague_Info) GetInviterUID() uint64 {
	if m != nil {
		return m.InviterUID
	}
	return 0
}

type ST_PopUpAsset_PB struct {
	LeagueInvitation  []*ST_InvitationLeague_Info `protobuf:"bytes,1,rep,name=leagueInvitation" json:"leagueInvitation,omitempty"`
	RecommendLeagueID uint64                      `protobuf:"varint,2,opt,name=recommendLeagueID" json:"recommendLeagueID,omitempty"`
}

func (m *ST_PopUpAsset_PB) Reset()                    { *m = ST_PopUpAsset_PB{} }
func (m *ST_PopUpAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PopUpAsset_PB) ProtoMessage()               {}
func (*ST_PopUpAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{137} }

func (m *ST_PopUpAsset_PB) GetLeagueInvitation() []*ST_InvitationLeague_Info {
	if m != nil {
		return m.LeagueInvitation
	}
	return nil
}

func (m *ST_PopUpAsset_PB) GetRecommendLeagueID() uint64 {
	if m != nil {
		return m.RecommendLeagueID
	}
	return 0
}

// 联盟留言数据
type ST_LeagueMessageEntry_PB struct {
	SenderUID uint64 `protobuf:"varint,1,opt,name=senderUID" json:"senderUID,omitempty"`
	SendTime  uint64 `protobuf:"varint,2,opt,name=sendTime" json:"sendTime,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Deleted   uint32 `protobuf:"varint,4,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *ST_LeagueMessageEntry_PB) Reset()                    { *m = ST_LeagueMessageEntry_PB{} }
func (m *ST_LeagueMessageEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueMessageEntry_PB) ProtoMessage()               {}
func (*ST_LeagueMessageEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{138} }

func (m *ST_LeagueMessageEntry_PB) GetSenderUID() uint64 {
	if m != nil {
		return m.SenderUID
	}
	return 0
}

func (m *ST_LeagueMessageEntry_PB) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_LeagueMessageEntry_PB) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ST_LeagueMessageEntry_PB) GetDeleted() uint32 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// 同类型单位数量
type ST_UnitCount_PB struct {
	UnitType  uint32 `protobuf:"varint,1,opt,name=unitType" json:"unitType,omitempty"`
	UnitCount uint32 `protobuf:"varint,2,opt,name=unitCount" json:"unitCount,omitempty"`
}

func (m *ST_UnitCount_PB) Reset()                    { *m = ST_UnitCount_PB{} }
func (m *ST_UnitCount_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitCount_PB) ProtoMessage()               {}
func (*ST_UnitCount_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{139} }

func (m *ST_UnitCount_PB) GetUnitType() uint32 {
	if m != nil {
		return m.UnitType
	}
	return 0
}

func (m *ST_UnitCount_PB) GetUnitCount() uint32 {
	if m != nil {
		return m.UnitCount
	}
	return 0
}

// 当前战斗回合的BUFF信息
type ST_BuffBattleInfo_PB struct {
	BuffID   uint32 `protobuf:"varint,1,opt,name=buffID" json:"buffID,omitempty"`
	BuffType uint32 `protobuf:"varint,2,opt,name=buffType" json:"buffType,omitempty"`
}

func (m *ST_BuffBattleInfo_PB) Reset()                    { *m = ST_BuffBattleInfo_PB{} }
func (m *ST_BuffBattleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BuffBattleInfo_PB) ProtoMessage()               {}
func (*ST_BuffBattleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{140} }

func (m *ST_BuffBattleInfo_PB) GetBuffID() uint32 {
	if m != nil {
		return m.BuffID
	}
	return 0
}

func (m *ST_BuffBattleInfo_PB) GetBuffType() uint32 {
	if m != nil {
		return m.BuffType
	}
	return 0
}

// 技能信息
type ST_HeroSkillInfo_PB struct {
	SkillID    uint32 `protobuf:"varint,1,opt,name=skillID" json:"skillID,omitempty"`
	TargetType uint32 `protobuf:"varint,2,opt,name=targetType" json:"targetType,omitempty"`
}

func (m *ST_HeroSkillInfo_PB) Reset()                    { *m = ST_HeroSkillInfo_PB{} }
func (m *ST_HeroSkillInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroSkillInfo_PB) ProtoMessage()               {}
func (*ST_HeroSkillInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{141} }

func (m *ST_HeroSkillInfo_PB) GetSkillID() uint32 {
	if m != nil {
		return m.SkillID
	}
	return 0
}

func (m *ST_HeroSkillInfo_PB) GetTargetType() uint32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

// 当前回合的英雄战斗信息
type ST_HeroBattleInfo_PB struct {
	HeroID       uint32                  `protobuf:"varint,1,opt,name=heroID" json:"heroID,omitempty"`
	BuffList     []*ST_BuffBattleInfo_PB `protobuf:"bytes,2,rep,name=buffList" json:"buffList,omitempty"`
	KillList     []*ST_Unit_PB           `protobuf:"bytes,3,rep,name=killList" json:"killList,omitempty"`
	RecoveryList []*ST_Unit_PB           `protobuf:"bytes,4,rep,name=recoveryList" json:"recoveryList,omitempty"`
	UseSkill     *ST_HeroSkillInfo_PB    `protobuf:"bytes,5,opt,name=useSkill" json:"useSkill,omitempty"`
	UseOrder     uint32                  `protobuf:"varint,6,opt,name=useOrder" json:"useOrder,omitempty"`
}

func (m *ST_HeroBattleInfo_PB) Reset()                    { *m = ST_HeroBattleInfo_PB{} }
func (m *ST_HeroBattleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroBattleInfo_PB) ProtoMessage()               {}
func (*ST_HeroBattleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{142} }

func (m *ST_HeroBattleInfo_PB) GetHeroID() uint32 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

func (m *ST_HeroBattleInfo_PB) GetBuffList() []*ST_BuffBattleInfo_PB {
	if m != nil {
		return m.BuffList
	}
	return nil
}

func (m *ST_HeroBattleInfo_PB) GetKillList() []*ST_Unit_PB {
	if m != nil {
		return m.KillList
	}
	return nil
}

func (m *ST_HeroBattleInfo_PB) GetRecoveryList() []*ST_Unit_PB {
	if m != nil {
		return m.RecoveryList
	}
	return nil
}

func (m *ST_HeroBattleInfo_PB) GetUseSkill() *ST_HeroSkillInfo_PB {
	if m != nil {
		return m.UseSkill
	}
	return nil
}

func (m *ST_HeroBattleInfo_PB) GetUseOrder() uint32 {
	if m != nil {
		return m.UseOrder
	}
	return 0
}

// 当前回合的战斗单位信息
type ST_CorpBattleInfo_PB struct {
	UnitType uint32                  `protobuf:"varint,1,opt,name=unitType" json:"unitType,omitempty"`
	UnitNum  uint32                  `protobuf:"varint,2,opt,name=unitNum" json:"unitNum,omitempty"`
	BuffList []*ST_BuffBattleInfo_PB `protobuf:"bytes,3,rep,name=buffList" json:"buffList,omitempty"`
	UnitKill []*ST_Unit_PB           `protobuf:"bytes,4,rep,name=unitKill" json:"unitKill,omitempty"`
	UnitLost []*ST_Unit_PB           `protobuf:"bytes,5,rep,name=unitLost" json:"unitLost,omitempty"`
	UnitId   uint32                  `protobuf:"varint,6,opt,name=unitId" json:"unitId,omitempty"`
}

func (m *ST_CorpBattleInfo_PB) Reset()                    { *m = ST_CorpBattleInfo_PB{} }
func (m *ST_CorpBattleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CorpBattleInfo_PB) ProtoMessage()               {}
func (*ST_CorpBattleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{143} }

func (m *ST_CorpBattleInfo_PB) GetUnitType() uint32 {
	if m != nil {
		return m.UnitType
	}
	return 0
}

func (m *ST_CorpBattleInfo_PB) GetUnitNum() uint32 {
	if m != nil {
		return m.UnitNum
	}
	return 0
}

func (m *ST_CorpBattleInfo_PB) GetBuffList() []*ST_BuffBattleInfo_PB {
	if m != nil {
		return m.BuffList
	}
	return nil
}

func (m *ST_CorpBattleInfo_PB) GetUnitKill() []*ST_Unit_PB {
	if m != nil {
		return m.UnitKill
	}
	return nil
}

func (m *ST_CorpBattleInfo_PB) GetUnitLost() []*ST_Unit_PB {
	if m != nil {
		return m.UnitLost
	}
	return nil
}

func (m *ST_CorpBattleInfo_PB) GetUnitId() uint32 {
	if m != nil {
		return m.UnitId
	}
	return 0
}

// 回合基础信息
type ST_RoundBaseInfo_PB struct {
	CurPower uint64                  `protobuf:"varint,1,opt,name=curPower" json:"curPower,omitempty"`
	HeroList []*ST_HeroBattleInfo_PB `protobuf:"bytes,2,rep,name=heroList" json:"heroList,omitempty"`
	CorpList []*ST_CorpBattleInfo_PB `protobuf:"bytes,3,rep,name=CorpList" json:"CorpList,omitempty"`
	WallHp   *ST_WallReport_PB       `protobuf:"bytes,4,opt,name=wallHp" json:"wallHp,omitempty"`
}

func (m *ST_RoundBaseInfo_PB) Reset()                    { *m = ST_RoundBaseInfo_PB{} }
func (m *ST_RoundBaseInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_RoundBaseInfo_PB) ProtoMessage()               {}
func (*ST_RoundBaseInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{144} }

func (m *ST_RoundBaseInfo_PB) GetCurPower() uint64 {
	if m != nil {
		return m.CurPower
	}
	return 0
}

func (m *ST_RoundBaseInfo_PB) GetHeroList() []*ST_HeroBattleInfo_PB {
	if m != nil {
		return m.HeroList
	}
	return nil
}

func (m *ST_RoundBaseInfo_PB) GetCorpList() []*ST_CorpBattleInfo_PB {
	if m != nil {
		return m.CorpList
	}
	return nil
}

func (m *ST_RoundBaseInfo_PB) GetWallHp() *ST_WallReport_PB {
	if m != nil {
		return m.WallHp
	}
	return nil
}

// 战斗回合信息
type ST_BattleRoundInfo_PB struct {
	Round        uint32               `protobuf:"varint,1,opt,name=round" json:"round,omitempty"`
	AtkRoundInfo *ST_RoundBaseInfo_PB `protobuf:"bytes,2,opt,name=atkRoundInfo" json:"atkRoundInfo,omitempty"`
	DefRoundInfo *ST_RoundBaseInfo_PB `protobuf:"bytes,3,opt,name=defRoundInfo" json:"defRoundInfo,omitempty"`
}

func (m *ST_BattleRoundInfo_PB) Reset()                    { *m = ST_BattleRoundInfo_PB{} }
func (m *ST_BattleRoundInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleRoundInfo_PB) ProtoMessage()               {}
func (*ST_BattleRoundInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{145} }

func (m *ST_BattleRoundInfo_PB) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ST_BattleRoundInfo_PB) GetAtkRoundInfo() *ST_RoundBaseInfo_PB {
	if m != nil {
		return m.AtkRoundInfo
	}
	return nil
}

func (m *ST_BattleRoundInfo_PB) GetDefRoundInfo() *ST_RoundBaseInfo_PB {
	if m != nil {
		return m.DefRoundInfo
	}
	return nil
}

// 战场显示的战斗单位ID
type ST_ShowUnit_PB struct {
	ShowUnitType uint32 `protobuf:"varint,1,opt,name=showUnitType" json:"showUnitType,omitempty"`
	ShowUnitID   int64  `protobuf:"varint,2,opt,name=showUnitID" json:"showUnitID,omitempty"`
}

func (m *ST_ShowUnit_PB) Reset()                    { *m = ST_ShowUnit_PB{} }
func (m *ST_ShowUnit_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ShowUnit_PB) ProtoMessage()               {}
func (*ST_ShowUnit_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{146} }

func (m *ST_ShowUnit_PB) GetShowUnitType() uint32 {
	if m != nil {
		return m.ShowUnitType
	}
	return 0
}

func (m *ST_ShowUnit_PB) GetShowUnitID() int64 {
	if m != nil {
		return m.ShowUnitID
	}
	return 0
}

// 起始信息
type ST_SimpleStartInfo_PB struct {
	AllStartPower uint64             `protobuf:"varint,1,opt,name=allStartPower" json:"allStartPower,omitempty"`
	StartWallHp   uint64             `protobuf:"varint,2,opt,name=startWallHp" json:"startWallHp,omitempty"`
	StartHeroList []uint32           `protobuf:"varint,3,rep,packed,name=startHeroList" json:"startHeroList,omitempty"`
	StartUnitList []*ST_UnitCount_PB `protobuf:"bytes,4,rep,name=startUnitList" json:"startUnitList,omitempty"`
	ShowUnit      []*ST_ShowUnit_PB  `protobuf:"bytes,5,rep,name=showUnit" json:"showUnit,omitempty"`
	WallLevel     uint32             `protobuf:"varint,6,opt,name=wallLevel" json:"wallLevel,omitempty"`
	HeroPower     uint64             `protobuf:"varint,7,opt,name=heroPower" json:"heroPower,omitempty"`
}

func (m *ST_SimpleStartInfo_PB) Reset()                    { *m = ST_SimpleStartInfo_PB{} }
func (m *ST_SimpleStartInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SimpleStartInfo_PB) ProtoMessage()               {}
func (*ST_SimpleStartInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{147} }

func (m *ST_SimpleStartInfo_PB) GetAllStartPower() uint64 {
	if m != nil {
		return m.AllStartPower
	}
	return 0
}

func (m *ST_SimpleStartInfo_PB) GetStartWallHp() uint64 {
	if m != nil {
		return m.StartWallHp
	}
	return 0
}

func (m *ST_SimpleStartInfo_PB) GetStartHeroList() []uint32 {
	if m != nil {
		return m.StartHeroList
	}
	return nil
}

func (m *ST_SimpleStartInfo_PB) GetStartUnitList() []*ST_UnitCount_PB {
	if m != nil {
		return m.StartUnitList
	}
	return nil
}

func (m *ST_SimpleStartInfo_PB) GetShowUnit() []*ST_ShowUnit_PB {
	if m != nil {
		return m.ShowUnit
	}
	return nil
}

func (m *ST_SimpleStartInfo_PB) GetWallLevel() uint32 {
	if m != nil {
		return m.WallLevel
	}
	return 0
}

func (m *ST_SimpleStartInfo_PB) GetHeroPower() uint64 {
	if m != nil {
		return m.HeroPower
	}
	return 0
}

// 战斗信息(非战斗报告，用于战斗回放)
type ST_BattleInfo_PB struct {
	RoundInfo          []*ST_BattleRoundInfo_PB `protobuf:"bytes,1,rep,name=roundInfo" json:"roundInfo,omitempty"`
	AtkFormation       uint32                   `protobuf:"varint,2,opt,name=atkFormation" json:"atkFormation,omitempty"`
	DefFormation       uint32                   `protobuf:"varint,3,opt,name=defFormation" json:"defFormation,omitempty"`
	AtkSimpleStartInfo *ST_SimpleStartInfo_PB   `protobuf:"bytes,4,opt,name=atkSimpleStartInfo" json:"atkSimpleStartInfo,omitempty"`
	DefSimpleStartInfo *ST_SimpleStartInfo_PB   `protobuf:"bytes,5,opt,name=defSimpleStartInfo" json:"defSimpleStartInfo,omitempty"`
	IsAtkWin           bool                     `protobuf:"varint,6,opt,name=isAtkWin" json:"isAtkWin,omitempty"`
	TargetType         uint32                   `protobuf:"varint,7,opt,name=targetType" json:"targetType,omitempty"`
}

func (m *ST_BattleInfo_PB) Reset()                    { *m = ST_BattleInfo_PB{} }
func (m *ST_BattleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleInfo_PB) ProtoMessage()               {}
func (*ST_BattleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{148} }

func (m *ST_BattleInfo_PB) GetRoundInfo() []*ST_BattleRoundInfo_PB {
	if m != nil {
		return m.RoundInfo
	}
	return nil
}

func (m *ST_BattleInfo_PB) GetAtkFormation() uint32 {
	if m != nil {
		return m.AtkFormation
	}
	return 0
}

func (m *ST_BattleInfo_PB) GetDefFormation() uint32 {
	if m != nil {
		return m.DefFormation
	}
	return 0
}

func (m *ST_BattleInfo_PB) GetAtkSimpleStartInfo() *ST_SimpleStartInfo_PB {
	if m != nil {
		return m.AtkSimpleStartInfo
	}
	return nil
}

func (m *ST_BattleInfo_PB) GetDefSimpleStartInfo() *ST_SimpleStartInfo_PB {
	if m != nil {
		return m.DefSimpleStartInfo
	}
	return nil
}

func (m *ST_BattleInfo_PB) GetIsAtkWin() bool {
	if m != nil {
		return m.IsAtkWin
	}
	return false
}

func (m *ST_BattleInfo_PB) GetTargetType() uint32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

// 指挥官简单信息
type ST_BattleCommanderSimpleInfo_PB struct {
	Uid        uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LeagueName string `protobuf:"bytes,3,opt,name=leagueName" json:"leagueName,omitempty"`
	TileID     uint32 `protobuf:"varint,4,opt,name=tileID" json:"tileID,omitempty"`
	AddExp     uint64 `protobuf:"varint,5,opt,name=addExp" json:"addExp,omitempty"`
}

func (m *ST_BattleCommanderSimpleInfo_PB) Reset()         { *m = ST_BattleCommanderSimpleInfo_PB{} }
func (m *ST_BattleCommanderSimpleInfo_PB) String() string { return proto.CompactTextString(m) }
func (*ST_BattleCommanderSimpleInfo_PB) ProtoMessage()    {}
func (*ST_BattleCommanderSimpleInfo_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{149}
}

func (m *ST_BattleCommanderSimpleInfo_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_BattleCommanderSimpleInfo_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_BattleCommanderSimpleInfo_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_BattleCommanderSimpleInfo_PB) GetTileID() uint32 {
	if m != nil {
		return m.TileID
	}
	return 0
}

func (m *ST_BattleCommanderSimpleInfo_PB) GetAddExp() uint64 {
	if m != nil {
		return m.AddExp
	}
	return 0
}

// 出征英雄报告
type ST_HeroBattleReport_PB struct {
	Id                uint32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level             uint32             `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Star              uint32             `protobuf:"varint,3,opt,name=star" json:"star,omitempty"`
	Rank              uint32             `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
	Exp               uint64             `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	SkillList         []*ST_HeroSkill_PB `protobuf:"bytes,6,rep,name=skillList" json:"skillList,omitempty"`
	BranchValue       []uint32           `protobuf:"varint,7,rep,packed,name=branchValue" json:"branchValue,omitempty"`
	Power             uint64             `protobuf:"varint,8,opt,name=power" json:"power,omitempty"`
	UseSkillTimes     uint32             `protobuf:"varint,9,opt,name=useSkillTimes" json:"useSkillTimes,omitempty"`
	DestoryUnitCount  uint64             `protobuf:"varint,10,opt,name=destoryUnitCount" json:"destoryUnitCount,omitempty"`
	RecoveryUnitCount uint64             `protobuf:"varint,11,opt,name=recoveryUnitCount" json:"recoveryUnitCount,omitempty"`
	AddExp            uint64             `protobuf:"varint,12,opt,name=addExp" json:"addExp,omitempty"`
	IsLevelUp         bool               `protobuf:"varint,13,opt,name=isLevelUp" json:"isLevelUp,omitempty"`
	KillList          []*ST_Unit_PB      `protobuf:"bytes,14,rep,name=killList" json:"killList,omitempty"`
}

func (m *ST_HeroBattleReport_PB) Reset()                    { *m = ST_HeroBattleReport_PB{} }
func (m *ST_HeroBattleReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroBattleReport_PB) ProtoMessage()               {}
func (*ST_HeroBattleReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{150} }

func (m *ST_HeroBattleReport_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetSkillList() []*ST_HeroSkill_PB {
	if m != nil {
		return m.SkillList
	}
	return nil
}

func (m *ST_HeroBattleReport_PB) GetBranchValue() []uint32 {
	if m != nil {
		return m.BranchValue
	}
	return nil
}

func (m *ST_HeroBattleReport_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetUseSkillTimes() uint32 {
	if m != nil {
		return m.UseSkillTimes
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetDestoryUnitCount() uint64 {
	if m != nil {
		return m.DestoryUnitCount
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetRecoveryUnitCount() uint64 {
	if m != nil {
		return m.RecoveryUnitCount
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetAddExp() uint64 {
	if m != nil {
		return m.AddExp
	}
	return 0
}

func (m *ST_HeroBattleReport_PB) GetIsLevelUp() bool {
	if m != nil {
		return m.IsLevelUp
	}
	return false
}

func (m *ST_HeroBattleReport_PB) GetKillList() []*ST_Unit_PB {
	if m != nil {
		return m.KillList
	}
	return nil
}

type ST_GetExp_PB struct {
	HeroID       uint32 `protobuf:"varint,1,opt,name=heroID" json:"heroID,omitempty"`
	CommanderExp uint64 `protobuf:"varint,2,opt,name=commanderExp" json:"commanderExp,omitempty"`
}

func (m *ST_GetExp_PB) Reset()                    { *m = ST_GetExp_PB{} }
func (m *ST_GetExp_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GetExp_PB) ProtoMessage()               {}
func (*ST_GetExp_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{151} }

func (m *ST_GetExp_PB) GetHeroID() uint32 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

func (m *ST_GetExp_PB) GetCommanderExp() uint64 {
	if m != nil {
		return m.CommanderExp
	}
	return 0
}

// 单一战斗单位报告
type ST_UnitBattleReport_PB struct {
	UnitID   uint32           `protobuf:"varint,1,opt,name=unitID" json:"unitID,omitempty"`
	Join     uint32           `protobuf:"varint,2,opt,name=join" json:"join,omitempty"`
	Survival uint32           `protobuf:"varint,3,opt,name=survival" json:"survival,omitempty"`
	Injured  uint32           `protobuf:"varint,4,opt,name=injured" json:"injured,omitempty"`
	Death    uint32           `protobuf:"varint,5,opt,name=death" json:"death,omitempty"`
	Kill     uint32           `protobuf:"varint,6,opt,name=kill" json:"kill,omitempty"`
	KillList *ST_UnitAsset_PB `protobuf:"bytes,7,opt,name=killList" json:"killList,omitempty"`
}

func (m *ST_UnitBattleReport_PB) Reset()                    { *m = ST_UnitBattleReport_PB{} }
func (m *ST_UnitBattleReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UnitBattleReport_PB) ProtoMessage()               {}
func (*ST_UnitBattleReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{152} }

func (m *ST_UnitBattleReport_PB) GetUnitID() uint32 {
	if m != nil {
		return m.UnitID
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetJoin() uint32 {
	if m != nil {
		return m.Join
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetSurvival() uint32 {
	if m != nil {
		return m.Survival
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetInjured() uint32 {
	if m != nil {
		return m.Injured
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetDeath() uint32 {
	if m != nil {
		return m.Death
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetKill() uint32 {
	if m != nil {
		return m.Kill
	}
	return 0
}

func (m *ST_UnitBattleReport_PB) GetKillList() *ST_UnitAsset_PB {
	if m != nil {
		return m.KillList
	}
	return nil
}

// 城墙报告
type ST_WallReport_PB struct {
	BeforeHp uint32 `protobuf:"varint,1,opt,name=beforeHp" json:"beforeHp,omitempty"`
	AfterHp  uint32 `protobuf:"varint,2,opt,name=afterHp" json:"afterHp,omitempty"`
	Level    uint32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
}

func (m *ST_WallReport_PB) Reset()                    { *m = ST_WallReport_PB{} }
func (m *ST_WallReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WallReport_PB) ProtoMessage()               {}
func (*ST_WallReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{153} }

func (m *ST_WallReport_PB) GetBeforeHp() uint32 {
	if m != nil {
		return m.BeforeHp
	}
	return 0
}

func (m *ST_WallReport_PB) GetAfterHp() uint32 {
	if m != nil {
		return m.AfterHp
	}
	return 0
}

func (m *ST_WallReport_PB) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 属性加成报告
type ST_OtherAddition_PB struct {
	BuffID    uint32 `protobuf:"varint,1,opt,name=buffID" json:"buffID,omitempty"`
	BuffValue uint32 `protobuf:"varint,2,opt,name=buffValue" json:"buffValue,omitempty"`
}

func (m *ST_OtherAddition_PB) Reset()                    { *m = ST_OtherAddition_PB{} }
func (m *ST_OtherAddition_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_OtherAddition_PB) ProtoMessage()               {}
func (*ST_OtherAddition_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{154} }

func (m *ST_OtherAddition_PB) GetBuffID() uint32 {
	if m != nil {
		return m.BuffID
	}
	return 0
}

func (m *ST_OtherAddition_PB) GetBuffValue() uint32 {
	if m != nil {
		return m.BuffValue
	}
	return 0
}

// 单个指挥官的详细报告
type ST_BattleReportDetail_PB struct {
	IsBigBrother    bool                             `protobuf:"varint,1,opt,name=isBigBrother" json:"isBigBrother,omitempty"`
	CommanderReport *ST_BattleCommanderSimpleInfo_PB `protobuf:"bytes,2,opt,name=commanderReport" json:"commanderReport,omitempty"`
	HeroListReport  []*ST_HeroBattleReport_PB        `protobuf:"bytes,3,rep,name=heroListReport" json:"heroListReport,omitempty"`
	UnitListReport  []*ST_UnitBattleReport_PB        `protobuf:"bytes,4,rep,name=unitListReport" json:"unitListReport,omitempty"`
	TotalPower      int64                            `protobuf:"varint,5,opt,name=totalPower" json:"totalPower,omitempty"`
	WallReport      *ST_WallReport_PB                `protobuf:"bytes,6,opt,name=wallReport" json:"wallReport,omitempty"`
	NaturalGift     []uint32                         `protobuf:"varint,7,rep,packed,name=naturalGift" json:"naturalGift,omitempty"`
	TechnologyLevel []uint32                         `protobuf:"varint,8,rep,packed,name=technologyLevel" json:"technologyLevel,omitempty"`
	Statue          []*ST_Simple_Statue              `protobuf:"bytes,9,rep,name=statue" json:"statue,omitempty"`
	EquipList       []uint32                         `protobuf:"varint,10,rep,packed,name=equipList" json:"equipList,omitempty"`
	ActionID        uint64                           `protobuf:"varint,11,opt,name=actionID" json:"actionID,omitempty"`
	Reward          string                           `protobuf:"bytes,12,opt,name=reward" json:"reward,omitempty"`
	MutirMonReward  []*ST_ItemEntry_PB               `protobuf:"bytes,13,rep,name=mutirMonReward" json:"mutirMonReward,omitempty"`
	IsArrest        bool                             `protobuf:"varint,14,opt,name=isArrest" json:"isArrest,omitempty"`
	MacScore        uint32                           `protobuf:"varint,15,opt,name=macScore" json:"macScore,omitempty"`
}

func (m *ST_BattleReportDetail_PB) Reset()                    { *m = ST_BattleReportDetail_PB{} }
func (m *ST_BattleReportDetail_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleReportDetail_PB) ProtoMessage()               {}
func (*ST_BattleReportDetail_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{155} }

func (m *ST_BattleReportDetail_PB) GetIsBigBrother() bool {
	if m != nil {
		return m.IsBigBrother
	}
	return false
}

func (m *ST_BattleReportDetail_PB) GetCommanderReport() *ST_BattleCommanderSimpleInfo_PB {
	if m != nil {
		return m.CommanderReport
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetHeroListReport() []*ST_HeroBattleReport_PB {
	if m != nil {
		return m.HeroListReport
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetUnitListReport() []*ST_UnitBattleReport_PB {
	if m != nil {
		return m.UnitListReport
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetTotalPower() int64 {
	if m != nil {
		return m.TotalPower
	}
	return 0
}

func (m *ST_BattleReportDetail_PB) GetWallReport() *ST_WallReport_PB {
	if m != nil {
		return m.WallReport
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetNaturalGift() []uint32 {
	if m != nil {
		return m.NaturalGift
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetTechnologyLevel() []uint32 {
	if m != nil {
		return m.TechnologyLevel
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetStatue() []*ST_Simple_Statue {
	if m != nil {
		return m.Statue
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetEquipList() []uint32 {
	if m != nil {
		return m.EquipList
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetActionID() uint64 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_BattleReportDetail_PB) GetReward() string {
	if m != nil {
		return m.Reward
	}
	return ""
}

func (m *ST_BattleReportDetail_PB) GetMutirMonReward() []*ST_ItemEntry_PB {
	if m != nil {
		return m.MutirMonReward
	}
	return nil
}

func (m *ST_BattleReportDetail_PB) GetIsArrest() bool {
	if m != nil {
		return m.IsArrest
	}
	return false
}

func (m *ST_BattleReportDetail_PB) GetMacScore() uint32 {
	if m != nil {
		return m.MacScore
	}
	return 0
}

// 战损比报告
type ST_PowerReport_PB struct {
	LossValue int64   `protobuf:"varint,1,opt,name=lossValue" json:"lossValue,omitempty"`
	LossRatio float32 `protobuf:"fixed32,2,opt,name=lossRatio" json:"lossRatio,omitempty"`
	AllPower  int64   `protobuf:"varint,3,opt,name=allPower" json:"allPower,omitempty"`
}

func (m *ST_PowerReport_PB) Reset()                    { *m = ST_PowerReport_PB{} }
func (m *ST_PowerReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PowerReport_PB) ProtoMessage()               {}
func (*ST_PowerReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{156} }

func (m *ST_PowerReport_PB) GetLossValue() int64 {
	if m != nil {
		return m.LossValue
	}
	return 0
}

func (m *ST_PowerReport_PB) GetLossRatio() float32 {
	if m != nil {
		return m.LossRatio
	}
	return 0
}

func (m *ST_PowerReport_PB) GetAllPower() int64 {
	if m != nil {
		return m.AllPower
	}
	return 0
}

// 守城方失败信息
type ST_DefFailInfo_PB struct {
	BurningTime uint32 `protobuf:"varint,1,opt,name=burningTime" json:"burningTime,omitempty"`
	PrisonID    uint64 `protobuf:"varint,2,opt,name=prisonID" json:"prisonID,omitempty"`
}

func (m *ST_DefFailInfo_PB) Reset()                    { *m = ST_DefFailInfo_PB{} }
func (m *ST_DefFailInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DefFailInfo_PB) ProtoMessage()               {}
func (*ST_DefFailInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{157} }

func (m *ST_DefFailInfo_PB) GetBurningTime() uint32 {
	if m != nil {
		return m.BurningTime
	}
	return 0
}

func (m *ST_DefFailInfo_PB) GetPrisonID() uint64 {
	if m != nil {
		return m.PrisonID
	}
	return 0
}

// 战斗报告
type ST_BattleReport_PB struct {
	IsWin              bool                        `protobuf:"varint,1,opt,name=isWin" json:"isWin,omitempty"`
	AtkInfo            []*ST_BattleReportDetail_PB `protobuf:"bytes,2,rep,name=atkInfo" json:"atkInfo,omitempty"`
	DefInfo            []*ST_BattleReportDetail_PB `protobuf:"bytes,3,rep,name=defInfo" json:"defInfo,omitempty"`
	AtkPowerReport     *ST_PowerReport_PB          `protobuf:"bytes,4,opt,name=atkPowerReport" json:"atkPowerReport,omitempty"`
	DefPowerReport     *ST_PowerReport_PB          `protobuf:"bytes,5,opt,name=defPowerReport" json:"defPowerReport,omitempty"`
	TotalReward        string                      `protobuf:"bytes,6,opt,name=totalReward" json:"totalReward,omitempty"`
	DefFailInfo        *ST_DefFailInfo_PB          `protobuf:"bytes,7,opt,name=defFailInfo" json:"defFailInfo,omitempty"`
	TargetType         uint32                      `protobuf:"varint,8,opt,name=targetType" json:"targetType,omitempty"`
	WorldEntryConfigID int64                       `protobuf:"varint,9,opt,name=WorldEntryConfigID" json:"WorldEntryConfigID,omitempty"`
	ReturnUnitsTotal   int64                       `protobuf:"varint,10,opt,name=returnUnitsTotal" json:"returnUnitsTotal,omitempty"`
	ReturnUnitsList    []*ST_ReturnUnits_PB        `protobuf:"bytes,11,rep,name=returnUnitsList" json:"returnUnitsList,omitempty"`
	AtkAllBattleAttri  *ST_AttributeList_PB        `protobuf:"bytes,12,opt,name=atkAllBattleAttri" json:"atkAllBattleAttri,omitempty"`
	DefAllBattleAttri  *ST_AttributeList_PB        `protobuf:"bytes,13,opt,name=defAllBattleAttri" json:"defAllBattleAttri,omitempty"`
}

func (m *ST_BattleReport_PB) Reset()                    { *m = ST_BattleReport_PB{} }
func (m *ST_BattleReport_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleReport_PB) ProtoMessage()               {}
func (*ST_BattleReport_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{158} }

func (m *ST_BattleReport_PB) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *ST_BattleReport_PB) GetAtkInfo() []*ST_BattleReportDetail_PB {
	if m != nil {
		return m.AtkInfo
	}
	return nil
}

func (m *ST_BattleReport_PB) GetDefInfo() []*ST_BattleReportDetail_PB {
	if m != nil {
		return m.DefInfo
	}
	return nil
}

func (m *ST_BattleReport_PB) GetAtkPowerReport() *ST_PowerReport_PB {
	if m != nil {
		return m.AtkPowerReport
	}
	return nil
}

func (m *ST_BattleReport_PB) GetDefPowerReport() *ST_PowerReport_PB {
	if m != nil {
		return m.DefPowerReport
	}
	return nil
}

func (m *ST_BattleReport_PB) GetTotalReward() string {
	if m != nil {
		return m.TotalReward
	}
	return ""
}

func (m *ST_BattleReport_PB) GetDefFailInfo() *ST_DefFailInfo_PB {
	if m != nil {
		return m.DefFailInfo
	}
	return nil
}

func (m *ST_BattleReport_PB) GetTargetType() uint32 {
	if m != nil {
		return m.TargetType
	}
	return 0
}

func (m *ST_BattleReport_PB) GetWorldEntryConfigID() int64 {
	if m != nil {
		return m.WorldEntryConfigID
	}
	return 0
}

func (m *ST_BattleReport_PB) GetReturnUnitsTotal() int64 {
	if m != nil {
		return m.ReturnUnitsTotal
	}
	return 0
}

func (m *ST_BattleReport_PB) GetReturnUnitsList() []*ST_ReturnUnits_PB {
	if m != nil {
		return m.ReturnUnitsList
	}
	return nil
}

func (m *ST_BattleReport_PB) GetAtkAllBattleAttri() *ST_AttributeList_PB {
	if m != nil {
		return m.AtkAllBattleAttri
	}
	return nil
}

func (m *ST_BattleReport_PB) GetDefAllBattleAttri() *ST_AttributeList_PB {
	if m != nil {
		return m.DefAllBattleAttri
	}
	return nil
}

// 返还兵力详细信息
type ST_ReturnUnits_PB struct {
	ActionID       uint64           `protobuf:"varint,1,opt,name=actionID" json:"actionID,omitempty"`
	ReturnUnitInfo *ST_UnitAsset_PB `protobuf:"bytes,2,opt,name=returnUnitInfo" json:"returnUnitInfo,omitempty"`
}

func (m *ST_ReturnUnits_PB) Reset()                    { *m = ST_ReturnUnits_PB{} }
func (m *ST_ReturnUnits_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ReturnUnits_PB) ProtoMessage()               {}
func (*ST_ReturnUnits_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{159} }

func (m *ST_ReturnUnits_PB) GetActionID() uint64 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_ReturnUnits_PB) GetReturnUnitInfo() *ST_UnitAsset_PB {
	if m != nil {
		return m.ReturnUnitInfo
	}
	return nil
}

// 怪物猎杀报告
type ST_MonsterInfo_PB struct {
	CurrentHP uint32 `protobuf:"varint,1,opt,name=currentHP" json:"currentHP,omitempty"`
	DropHP    uint32 `protobuf:"varint,2,opt,name=dropHP" json:"dropHP,omitempty"`
	Times     uint32 `protobuf:"varint,3,opt,name=times" json:"times,omitempty"`
	Count     uint32 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	TileID    uint64 `protobuf:"varint,5,opt,name=tileID" json:"tileID,omitempty"`
	AddDamage uint32 `protobuf:"varint,6,opt,name=addDamage" json:"addDamage,omitempty"`
}

func (m *ST_MonsterInfo_PB) Reset()                    { *m = ST_MonsterInfo_PB{} }
func (m *ST_MonsterInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterInfo_PB) ProtoMessage()               {}
func (*ST_MonsterInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{160} }

func (m *ST_MonsterInfo_PB) GetCurrentHP() uint32 {
	if m != nil {
		return m.CurrentHP
	}
	return 0
}

func (m *ST_MonsterInfo_PB) GetDropHP() uint32 {
	if m != nil {
		return m.DropHP
	}
	return 0
}

func (m *ST_MonsterInfo_PB) GetTimes() uint32 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *ST_MonsterInfo_PB) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ST_MonsterInfo_PB) GetTileID() uint64 {
	if m != nil {
		return m.TileID
	}
	return 0
}

func (m *ST_MonsterInfo_PB) GetAddDamage() uint32 {
	if m != nil {
		return m.AddDamage
	}
	return 0
}

// 目前用于单人boss怪和推图
type ST_MonsterKill_PB struct {
	Uints          *ST_UnitAsset_PB          `protobuf:"bytes,1,opt,name=uints" json:"uints,omitempty"`
	Reward         []*ST_ItemEntry_PB        `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	CommanderExp   uint32                    `protobuf:"varint,3,opt,name=commanderExp" json:"commanderExp,omitempty"`
	HeroListReport []*ST_HeroBattleReport_PB `protobuf:"bytes,4,rep,name=heroListReport" json:"heroListReport,omitempty"`
	MonsterInf     *ST_MonsterInfo_PB        `protobuf:"bytes,5,opt,name=monsterInf" json:"monsterInf,omitempty"`
	Monsterid      int64                     `protobuf:"varint,6,opt,name=monsterid" json:"monsterid,omitempty"`
	Uid            uint64                    `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_MonsterKill_PB) Reset()                    { *m = ST_MonsterKill_PB{} }
func (m *ST_MonsterKill_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterKill_PB) ProtoMessage()               {}
func (*ST_MonsterKill_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{161} }

func (m *ST_MonsterKill_PB) GetUints() *ST_UnitAsset_PB {
	if m != nil {
		return m.Uints
	}
	return nil
}

func (m *ST_MonsterKill_PB) GetReward() []*ST_ItemEntry_PB {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *ST_MonsterKill_PB) GetCommanderExp() uint32 {
	if m != nil {
		return m.CommanderExp
	}
	return 0
}

func (m *ST_MonsterKill_PB) GetHeroListReport() []*ST_HeroBattleReport_PB {
	if m != nil {
		return m.HeroListReport
	}
	return nil
}

func (m *ST_MonsterKill_PB) GetMonsterInf() *ST_MonsterInfo_PB {
	if m != nil {
		return m.MonsterInf
	}
	return nil
}

func (m *ST_MonsterKill_PB) GetMonsterid() int64 {
	if m != nil {
		return m.Monsterid
	}
	return 0
}

func (m *ST_MonsterKill_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type ST_BattleNotice_PB struct {
	NoticeUID        int64    `protobuf:"varint,1,opt,name=noticeUID" json:"noticeUID,omitempty"`
	LanguageID       uint32   `protobuf:"varint,2,opt,name=languageID" json:"languageID,omitempty"`
	ParaUint32       []uint32 `protobuf:"varint,3,rep,packed,name=paraUint32" json:"paraUint32,omitempty"`
	ParaString       []string `protobuf:"bytes,4,rep,name=paraString" json:"paraString,omitempty"`
	Timestamp        uint64   `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	BattleRlt        bool     `protobuf:"varint,6,opt,name=battleRlt" json:"battleRlt,omitempty"`
	IsHaveBattleInfo bool     `protobuf:"varint,7,opt,name=isHaveBattleInfo" json:"isHaveBattleInfo,omitempty"`
	MailID           uint64   `protobuf:"varint,8,opt,name=mailID" json:"mailID,omitempty"`
	Type             int32    `protobuf:"varint,9,opt,name=type" json:"type,omitempty"`
}

func (m *ST_BattleNotice_PB) Reset()                    { *m = ST_BattleNotice_PB{} }
func (m *ST_BattleNotice_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleNotice_PB) ProtoMessage()               {}
func (*ST_BattleNotice_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{162} }

func (m *ST_BattleNotice_PB) GetNoticeUID() int64 {
	if m != nil {
		return m.NoticeUID
	}
	return 0
}

func (m *ST_BattleNotice_PB) GetLanguageID() uint32 {
	if m != nil {
		return m.LanguageID
	}
	return 0
}

func (m *ST_BattleNotice_PB) GetParaUint32() []uint32 {
	if m != nil {
		return m.ParaUint32
	}
	return nil
}

func (m *ST_BattleNotice_PB) GetParaString() []string {
	if m != nil {
		return m.ParaString
	}
	return nil
}

func (m *ST_BattleNotice_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_BattleNotice_PB) GetBattleRlt() bool {
	if m != nil {
		return m.BattleRlt
	}
	return false
}

func (m *ST_BattleNotice_PB) GetIsHaveBattleInfo() bool {
	if m != nil {
		return m.IsHaveBattleInfo
	}
	return false
}

func (m *ST_BattleNotice_PB) GetMailID() uint64 {
	if m != nil {
		return m.MailID
	}
	return 0
}

func (m *ST_BattleNotice_PB) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// 战后右下角弹框信息
type ST_BattleNoticesAsset_PB struct {
	Notices []*ST_BattleNotice_PB `protobuf:"bytes,1,rep,name=notices" json:"notices,omitempty"`
}

func (m *ST_BattleNoticesAsset_PB) Reset()                    { *m = ST_BattleNoticesAsset_PB{} }
func (m *ST_BattleNoticesAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BattleNoticesAsset_PB) ProtoMessage()               {}
func (*ST_BattleNoticesAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{163} }

func (m *ST_BattleNoticesAsset_PB) GetNotices() []*ST_BattleNotice_PB {
	if m != nil {
		return m.Notices
	}
	return nil
}

type ST_TileInfo_PB struct {
	LeagueID   uint64  `protobuf:"varint,1,opt,name=leagueID" json:"leagueID,omitempty"`
	TileIDList []int32 `protobuf:"varint,2,rep,packed,name=tileIDList" json:"tileIDList,omitempty"`
}

func (m *ST_TileInfo_PB) Reset()                    { *m = ST_TileInfo_PB{} }
func (m *ST_TileInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TileInfo_PB) ProtoMessage()               {}
func (*ST_TileInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{164} }

func (m *ST_TileInfo_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_TileInfo_PB) GetTileIDList() []int32 {
	if m != nil {
		return m.TileIDList
	}
	return nil
}

type ST_TileInfo_List struct {
	LeagueTileList []*ST_TileInfo_PB `protobuf:"bytes,1,rep,name=leagueTileList" json:"leagueTileList,omitempty"`
}

func (m *ST_TileInfo_List) Reset()                    { *m = ST_TileInfo_List{} }
func (m *ST_TileInfo_List) String() string            { return proto.CompactTextString(m) }
func (*ST_TileInfo_List) ProtoMessage()               {}
func (*ST_TileInfo_List) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{165} }

func (m *ST_TileInfo_List) GetLeagueTileList() []*ST_TileInfo_PB {
	if m != nil {
		return m.LeagueTileList
	}
	return nil
}

// 聊天条目
type ST_Chat_Entry_PB struct {
	EntryIndex   uint32 `protobuf:"varint,1,opt,name=entryIndex" json:"entryIndex,omitempty"`
	SenderID     uint64 `protobuf:"varint,2,opt,name=senderID" json:"senderID,omitempty"`
	SendTime     uint64 `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	ChatContent  string `protobuf:"bytes,4,opt,name=chatContent" json:"chatContent,omitempty"`
	ChatType     uint32 `protobuf:"varint,5,opt,name=chatType" json:"chatType,omitempty"`
	Name         string `protobuf:"bytes,6,opt,name=Name" json:"Name,omitempty"`
	Avatar       string `protobuf:"bytes,7,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID  uint32 `protobuf:"varint,8,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	LoardIcon    string `protobuf:"bytes,9,opt,name=loardIcon" json:"loardIcon,omitempty"`
	LeagueName   string `protobuf:"bytes,10,opt,name=LeagueName" json:"LeagueName,omitempty"`
	KingWarTitle int32  `protobuf:"varint,11,opt,name=kingWarTitle" json:"kingWarTitle,omitempty"`
	Bubbleid     uint32 `protobuf:"varint,12,opt,name=bubbleid" json:"bubbleid,omitempty"`
}

func (m *ST_Chat_Entry_PB) Reset()                    { *m = ST_Chat_Entry_PB{} }
func (m *ST_Chat_Entry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_Entry_PB) ProtoMessage()               {}
func (*ST_Chat_Entry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{166} }

func (m *ST_Chat_Entry_PB) GetEntryIndex() uint32 {
	if m != nil {
		return m.EntryIndex
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetSenderID() uint64 {
	if m != nil {
		return m.SenderID
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetChatContent() string {
	if m != nil {
		return m.ChatContent
	}
	return ""
}

func (m *ST_Chat_Entry_PB) GetChatType() uint32 {
	if m != nil {
		return m.ChatType
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_Chat_Entry_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_Chat_Entry_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetLoardIcon() string {
	if m != nil {
		return m.LoardIcon
	}
	return ""
}

func (m *ST_Chat_Entry_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_Chat_Entry_PB) GetKingWarTitle() int32 {
	if m != nil {
		return m.KingWarTitle
	}
	return 0
}

func (m *ST_Chat_Entry_PB) GetBubbleid() uint32 {
	if m != nil {
		return m.Bubbleid
	}
	return 0
}

// 聊天话题
type ST_Chat_Title_PB struct {
	TitleID          uint64 `protobuf:"varint,1,opt,name=titleID" json:"titleID,omitempty"`
	SenderID         uint64 `protobuf:"varint,2,opt,name=senderID" json:"senderID,omitempty"`
	SendTime         uint64 `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	ChatContent      string `protobuf:"bytes,4,opt,name=chatContent" json:"chatContent,omitempty"`
	PraiseCount      uint32 `protobuf:"varint,5,opt,name=praiseCount" json:"praiseCount,omitempty"`
	ReplyCount       uint32 `protobuf:"varint,6,opt,name=replyCount" json:"replyCount,omitempty"`
	SortValue        uint64 `protobuf:"varint,7,opt,name=sortValue" json:"sortValue,omitempty"`
	Praised          uint32 `protobuf:"varint,8,opt,name=praised" json:"praised,omitempty"`
	SenderLanguageID uint32 `protobuf:"varint,9,opt,name=senderLanguageID" json:"senderLanguageID,omitempty"`
	ChatType         uint32 `protobuf:"varint,10,opt,name=chatType" json:"chatType,omitempty"`
	Name             string `protobuf:"bytes,11,opt,name=Name" json:"Name,omitempty"`
	Avatar           string `protobuf:"bytes,12,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID      uint32 `protobuf:"varint,13,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	LoardIcon        string `protobuf:"bytes,14,opt,name=loardIcon" json:"loardIcon,omitempty"`
	LeagueName       string `protobuf:"bytes,15,opt,name=LeagueName" json:"LeagueName,omitempty"`
	KingWarTitle     int32  `protobuf:"varint,16,opt,name=kingWarTitle" json:"kingWarTitle,omitempty"`
	Bubbleid         uint32 `protobuf:"varint,17,opt,name=bubbleid" json:"bubbleid,omitempty"`
	CurrentSid       uint32 `protobuf:"varint,18,opt,name=currentSid" json:"currentSid,omitempty"`
	Photourl         string `protobuf:"bytes,19,opt,name=photourl" json:"photourl,omitempty"`
	Photowindth      int32  `protobuf:"varint,20,opt,name=photowindth" json:"photowindth,omitempty"`
	Photoheight      int32  `protobuf:"varint,21,opt,name=photoheight" json:"photoheight,omitempty"`
}

func (m *ST_Chat_Title_PB) Reset()                    { *m = ST_Chat_Title_PB{} }
func (m *ST_Chat_Title_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_Title_PB) ProtoMessage()               {}
func (*ST_Chat_Title_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{167} }

func (m *ST_Chat_Title_PB) GetTitleID() uint64 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetSenderID() uint64 {
	if m != nil {
		return m.SenderID
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetChatContent() string {
	if m != nil {
		return m.ChatContent
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetPraiseCount() uint32 {
	if m != nil {
		return m.PraiseCount
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetReplyCount() uint32 {
	if m != nil {
		return m.ReplyCount
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetSortValue() uint64 {
	if m != nil {
		return m.SortValue
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetPraised() uint32 {
	if m != nil {
		return m.Praised
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetSenderLanguageID() uint32 {
	if m != nil {
		return m.SenderLanguageID
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetChatType() uint32 {
	if m != nil {
		return m.ChatType
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetLoardIcon() string {
	if m != nil {
		return m.LoardIcon
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetKingWarTitle() int32 {
	if m != nil {
		return m.KingWarTitle
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetBubbleid() uint32 {
	if m != nil {
		return m.Bubbleid
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetPhotourl() string {
	if m != nil {
		return m.Photourl
	}
	return ""
}

func (m *ST_Chat_Title_PB) GetPhotowindth() int32 {
	if m != nil {
		return m.Photowindth
	}
	return 0
}

func (m *ST_Chat_Title_PB) GetPhotoheight() int32 {
	if m != nil {
		return m.Photoheight
	}
	return 0
}

type ST_Chat_League_PB struct {
	Titles []*ST_Chat_Title_PB `protobuf:"bytes,1,rep,name=titles" json:"titles,omitempty"`
}

func (m *ST_Chat_League_PB) Reset()                    { *m = ST_Chat_League_PB{} }
func (m *ST_Chat_League_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_League_PB) ProtoMessage()               {}
func (*ST_Chat_League_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{168} }

func (m *ST_Chat_League_PB) GetTitles() []*ST_Chat_Title_PB {
	if m != nil {
		return m.Titles
	}
	return nil
}

// 聊天话题列表
type ST_Chat_TitleList_PB struct {
	Channle    int32               `protobuf:"varint,1,opt,name=channle" json:"channle,omitempty"`
	TitleList  []*ST_Chat_Title_PB `protobuf:"bytes,2,rep,name=titleList" json:"titleList,omitempty"`
	SubChannel int32               `protobuf:"varint,3,opt,name=subChannel" json:"subChannel,omitempty"`
}

func (m *ST_Chat_TitleList_PB) Reset()                    { *m = ST_Chat_TitleList_PB{} }
func (m *ST_Chat_TitleList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_TitleList_PB) ProtoMessage()               {}
func (*ST_Chat_TitleList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{169} }

func (m *ST_Chat_TitleList_PB) GetChannle() int32 {
	if m != nil {
		return m.Channle
	}
	return 0
}

func (m *ST_Chat_TitleList_PB) GetTitleList() []*ST_Chat_Title_PB {
	if m != nil {
		return m.TitleList
	}
	return nil
}

func (m *ST_Chat_TitleList_PB) GetSubChannel() int32 {
	if m != nil {
		return m.SubChannel
	}
	return 0
}

// 聊天条目列表
type ST_Chat_EntryList_PB struct {
	Channle   int32               `protobuf:"varint,1,opt,name=channle" json:"channle,omitempty"`
	TitleID   uint64              `protobuf:"varint,2,opt,name=titleID" json:"titleID,omitempty"`
	EntryList []*ST_Chat_Entry_PB `protobuf:"bytes,3,rep,name=entryList" json:"entryList,omitempty"`
}

func (m *ST_Chat_EntryList_PB) Reset()                    { *m = ST_Chat_EntryList_PB{} }
func (m *ST_Chat_EntryList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_EntryList_PB) ProtoMessage()               {}
func (*ST_Chat_EntryList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{170} }

func (m *ST_Chat_EntryList_PB) GetChannle() int32 {
	if m != nil {
		return m.Channle
	}
	return 0
}

func (m *ST_Chat_EntryList_PB) GetTitleID() uint64 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Chat_EntryList_PB) GetEntryList() []*ST_Chat_Entry_PB {
	if m != nil {
		return m.EntryList
	}
	return nil
}

// 聊天频道概述
type ST_Chat_ChannelInfo_PB struct {
	Channle            int32                       `protobuf:"varint,1,opt,name=channle" json:"channle,omitempty"`
	ChildChannle       int32                       `protobuf:"varint,2,opt,name=childChannle" json:"childChannle,omitempty"`
	Version            uint64                      `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	WorldChatTitleList []*ST_WorldChatTitleInfo_PB `protobuf:"bytes,4,rep,name=worldChatTitleList" json:"worldChatTitleList,omitempty"`
	Timestamp          uint64                      `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	SenderUID          uint64                      `protobuf:"varint,6,opt,name=senderUID" json:"senderUID,omitempty"`
}

func (m *ST_Chat_ChannelInfo_PB) Reset()                    { *m = ST_Chat_ChannelInfo_PB{} }
func (m *ST_Chat_ChannelInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_ChannelInfo_PB) ProtoMessage()               {}
func (*ST_Chat_ChannelInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{171} }

func (m *ST_Chat_ChannelInfo_PB) GetChannle() int32 {
	if m != nil {
		return m.Channle
	}
	return 0
}

func (m *ST_Chat_ChannelInfo_PB) GetChildChannle() int32 {
	if m != nil {
		return m.ChildChannle
	}
	return 0
}

func (m *ST_Chat_ChannelInfo_PB) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ST_Chat_ChannelInfo_PB) GetWorldChatTitleList() []*ST_WorldChatTitleInfo_PB {
	if m != nil {
		return m.WorldChatTitleList
	}
	return nil
}

func (m *ST_Chat_ChannelInfo_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_Chat_ChannelInfo_PB) GetSenderUID() uint64 {
	if m != nil {
		return m.SenderUID
	}
	return 0
}

type ST_WorldChatTitleInfo_PB struct {
	ChatTitleID uint64 `protobuf:"varint,1,opt,name=chatTitleID" json:"chatTitleID,omitempty"`
	ReplayCount uint32 `protobuf:"varint,2,opt,name=replayCount" json:"replayCount,omitempty"`
	PraiseCount uint32 `protobuf:"varint,3,opt,name=praiseCount" json:"praiseCount,omitempty"`
}

func (m *ST_WorldChatTitleInfo_PB) Reset()                    { *m = ST_WorldChatTitleInfo_PB{} }
func (m *ST_WorldChatTitleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldChatTitleInfo_PB) ProtoMessage()               {}
func (*ST_WorldChatTitleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{172} }

func (m *ST_WorldChatTitleInfo_PB) GetChatTitleID() uint64 {
	if m != nil {
		return m.ChatTitleID
	}
	return 0
}

func (m *ST_WorldChatTitleInfo_PB) GetReplayCount() uint32 {
	if m != nil {
		return m.ReplayCount
	}
	return 0
}

func (m *ST_WorldChatTitleInfo_PB) GetPraiseCount() uint32 {
	if m != nil {
		return m.PraiseCount
	}
	return 0
}

type ST_Chat_ReplyList_PB struct {
	ReplyList []*ST_Chat_Entry_PB `protobuf:"bytes,1,rep,name=replyList" json:"replyList,omitempty"`
}

func (m *ST_Chat_ReplyList_PB) Reset()                    { *m = ST_Chat_ReplyList_PB{} }
func (m *ST_Chat_ReplyList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_ReplyList_PB) ProtoMessage()               {}
func (*ST_Chat_ReplyList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{173} }

func (m *ST_Chat_ReplyList_PB) GetReplyList() []*ST_Chat_Entry_PB {
	if m != nil {
		return m.ReplyList
	}
	return nil
}

type ST_Hot_Chat_Item_PB struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ST_Hot_Chat_Item_PB) Reset()                    { *m = ST_Hot_Chat_Item_PB{} }
func (m *ST_Hot_Chat_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Hot_Chat_Item_PB) ProtoMessage()               {}
func (*ST_Hot_Chat_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{174} }

func (m *ST_Hot_Chat_Item_PB) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ST_Hot_Chat_Item_PB) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ST_Hot_Chat_Info_PB struct {
	CurrentHotInfo []*ST_Hot_Chat_Item_PB `protobuf:"bytes,1,rep,name=currentHotInfo" json:"currentHotInfo,omitempty"`
	CountedHotInfo *ST_Int32List_PB       `protobuf:"bytes,2,opt,name=countedHotInfo" json:"countedHotInfo,omitempty"`
	Ftime          uint64                 `protobuf:"varint,3,opt,name=ftime" json:"ftime,omitempty"`
}

func (m *ST_Hot_Chat_Info_PB) Reset()                    { *m = ST_Hot_Chat_Info_PB{} }
func (m *ST_Hot_Chat_Info_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Hot_Chat_Info_PB) ProtoMessage()               {}
func (*ST_Hot_Chat_Info_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{175} }

func (m *ST_Hot_Chat_Info_PB) GetCurrentHotInfo() []*ST_Hot_Chat_Item_PB {
	if m != nil {
		return m.CurrentHotInfo
	}
	return nil
}

func (m *ST_Hot_Chat_Info_PB) GetCountedHotInfo() *ST_Int32List_PB {
	if m != nil {
		return m.CountedHotInfo
	}
	return nil
}

func (m *ST_Hot_Chat_Info_PB) GetFtime() uint64 {
	if m != nil {
		return m.Ftime
	}
	return 0
}

// 聊天频道概述列表
type ST_Chat_ChannelInfoList_PB struct {
	List []*ST_Chat_ChannelInfo_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_Chat_ChannelInfoList_PB) Reset()                    { *m = ST_Chat_ChannelInfoList_PB{} }
func (m *ST_Chat_ChannelInfoList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_ChannelInfoList_PB) ProtoMessage()               {}
func (*ST_Chat_ChannelInfoList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{176} }

func (m *ST_Chat_ChannelInfoList_PB) GetList() []*ST_Chat_ChannelInfo_PB {
	if m != nil {
		return m.List
	}
	return nil
}

// 聊天条目概述
type ST_Chat_TitleInfo_PB struct {
	TitleID     uint64 `protobuf:"varint,1,opt,name=titleID" json:"titleID,omitempty"`
	PraiseCount int32  `protobuf:"varint,2,opt,name=praiseCount" json:"praiseCount,omitempty"`
	ReplyCount  int32  `protobuf:"varint,3,opt,name=replyCount" json:"replyCount,omitempty"`
}

func (m *ST_Chat_TitleInfo_PB) Reset()                    { *m = ST_Chat_TitleInfo_PB{} }
func (m *ST_Chat_TitleInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_TitleInfo_PB) ProtoMessage()               {}
func (*ST_Chat_TitleInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{177} }

func (m *ST_Chat_TitleInfo_PB) GetTitleID() uint64 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Chat_TitleInfo_PB) GetPraiseCount() int32 {
	if m != nil {
		return m.PraiseCount
	}
	return 0
}

func (m *ST_Chat_TitleInfo_PB) GetReplyCount() int32 {
	if m != nil {
		return m.ReplyCount
	}
	return 0
}

// 聊天条目概述列表
type ST_Chat_TitleInfoList_PB struct {
	Channle    int32  `protobuf:"varint,1,opt,name=channle" json:"channle,omitempty"`
	MaxtitleID uint64 `protobuf:"varint,2,opt,name=maxtitleID" json:"maxtitleID,omitempty"`
}

func (m *ST_Chat_TitleInfoList_PB) Reset()                    { *m = ST_Chat_TitleInfoList_PB{} }
func (m *ST_Chat_TitleInfoList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_TitleInfoList_PB) ProtoMessage()               {}
func (*ST_Chat_TitleInfoList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{178} }

func (m *ST_Chat_TitleInfoList_PB) GetChannle() int32 {
	if m != nil {
		return m.Channle
	}
	return 0
}

func (m *ST_Chat_TitleInfoList_PB) GetMaxtitleID() uint64 {
	if m != nil {
		return m.MaxtitleID
	}
	return 0
}

// 英雄信息
type ST_HeroEntry_PB struct {
	Id           uint32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level        uint32             `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Star         uint32             `protobuf:"varint,3,opt,name=star" json:"star,omitempty"`
	Exp          uint64             `protobuf:"varint,4,opt,name=exp" json:"exp,omitempty"`
	HeroStatus   uint32             `protobuf:"varint,6,opt,name=heroStatus" json:"heroStatus,omitempty"`
	SkillList    []*ST_HeroSkill_PB `protobuf:"bytes,12,rep,name=skillList" json:"skillList,omitempty"`
	BranchValue  []uint32           `protobuf:"varint,13,rep,packed,name=branchValue" json:"branchValue,omitempty"`
	Power        uint64             `protobuf:"varint,14,opt,name=power" json:"power,omitempty"`
	SkillUpTimes uint32             `protobuf:"varint,17,opt,name=skillUpTimes" json:"skillUpTimes,omitempty"`
	ManuCap      bool               `protobuf:"varint,18,opt,name=manuCap" json:"manuCap,omitempty"`
	ManuIdx      uint32             `protobuf:"varint,19,opt,name=manuIdx" json:"manuIdx,omitempty"`
}

func (m *ST_HeroEntry_PB) Reset()                    { *m = ST_HeroEntry_PB{} }
func (m *ST_HeroEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroEntry_PB) ProtoMessage()               {}
func (*ST_HeroEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{179} }

func (m *ST_HeroEntry_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetExp() uint64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetHeroStatus() uint32 {
	if m != nil {
		return m.HeroStatus
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetSkillList() []*ST_HeroSkill_PB {
	if m != nil {
		return m.SkillList
	}
	return nil
}

func (m *ST_HeroEntry_PB) GetBranchValue() []uint32 {
	if m != nil {
		return m.BranchValue
	}
	return nil
}

func (m *ST_HeroEntry_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetSkillUpTimes() uint32 {
	if m != nil {
		return m.SkillUpTimes
	}
	return 0
}

func (m *ST_HeroEntry_PB) GetManuCap() bool {
	if m != nil {
		return m.ManuCap
	}
	return false
}

func (m *ST_HeroEntry_PB) GetManuIdx() uint32 {
	if m != nil {
		return m.ManuIdx
	}
	return 0
}

type ST_HeroSkill_PB struct {
	SkillLogicType uint32 `protobuf:"varint,1,opt,name=skillLogicType" json:"skillLogicType,omitempty"`
	SkillID        uint32 `protobuf:"varint,2,opt,name=skillID" json:"skillID,omitempty"`
	CurExp         uint64 `protobuf:"varint,3,opt,name=curExp" json:"curExp,omitempty"`
}

func (m *ST_HeroSkill_PB) Reset()                    { *m = ST_HeroSkill_PB{} }
func (m *ST_HeroSkill_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroSkill_PB) ProtoMessage()               {}
func (*ST_HeroSkill_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{180} }

func (m *ST_HeroSkill_PB) GetSkillLogicType() uint32 {
	if m != nil {
		return m.SkillLogicType
	}
	return 0
}

func (m *ST_HeroSkill_PB) GetSkillID() uint32 {
	if m != nil {
		return m.SkillID
	}
	return 0
}

func (m *ST_HeroSkill_PB) GetCurExp() uint64 {
	if m != nil {
		return m.CurExp
	}
	return 0
}

// 英雄非正常状态详细信息
type ST_Prison_PB struct {
	HeroId         uint32            `protobuf:"varint,1,opt,name=heroId" json:"heroId,omitempty"`
	HeroLevel      uint32            `protobuf:"varint,2,opt,name=heroLevel" json:"heroLevel,omitempty"`
	HeroQuality    uint32            `protobuf:"varint,3,opt,name=heroQuality" json:"heroQuality,omitempty"`
	Owner          uint64            `protobuf:"varint,4,opt,name=Owner" json:"Owner,omitempty"`
	StepStartTime  uint64            `protobuf:"varint,5,opt,name=stepStartTime" json:"stepStartTime,omitempty"`
	StepRemainTime uint64            `protobuf:"varint,6,opt,name=stepRemainTime" json:"stepRemainTime,omitempty"`
	ResourceType   uint32            `protobuf:"varint,7,opt,name=resourceType" json:"resourceType,omitempty"`
	ResourceSpeed  uint32            `protobuf:"varint,8,opt,name=resourceSpeed" json:"resourceSpeed,omitempty"`
	HeroExp        uint64            `protobuf:"varint,9,opt,name=heroExp" json:"heroExp,omitempty"`
	Ransom         *ST_Vector4Int_PB `protobuf:"bytes,10,opt,name=ransom" json:"ransom,omitempty"`
	Bounty         *ST_Vector4Int_PB `protobuf:"bytes,11,opt,name=bounty" json:"bounty,omitempty"`
}

func (m *ST_Prison_PB) Reset()                    { *m = ST_Prison_PB{} }
func (m *ST_Prison_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Prison_PB) ProtoMessage()               {}
func (*ST_Prison_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{181} }

func (m *ST_Prison_PB) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *ST_Prison_PB) GetHeroLevel() uint32 {
	if m != nil {
		return m.HeroLevel
	}
	return 0
}

func (m *ST_Prison_PB) GetHeroQuality() uint32 {
	if m != nil {
		return m.HeroQuality
	}
	return 0
}

func (m *ST_Prison_PB) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *ST_Prison_PB) GetStepStartTime() uint64 {
	if m != nil {
		return m.StepStartTime
	}
	return 0
}

func (m *ST_Prison_PB) GetStepRemainTime() uint64 {
	if m != nil {
		return m.StepRemainTime
	}
	return 0
}

func (m *ST_Prison_PB) GetResourceType() uint32 {
	if m != nil {
		return m.ResourceType
	}
	return 0
}

func (m *ST_Prison_PB) GetResourceSpeed() uint32 {
	if m != nil {
		return m.ResourceSpeed
	}
	return 0
}

func (m *ST_Prison_PB) GetHeroExp() uint64 {
	if m != nil {
		return m.HeroExp
	}
	return 0
}

func (m *ST_Prison_PB) GetRansom() *ST_Vector4Int_PB {
	if m != nil {
		return m.Ransom
	}
	return nil
}

func (m *ST_Prison_PB) GetBounty() *ST_Vector4Int_PB {
	if m != nil {
		return m.Bounty
	}
	return nil
}

type ST_PrisonAsset_PB struct {
	HeroList       []*ST_Prison_PB `protobuf:"bytes,1,rep,name=heroList" json:"heroList,omitempty"`
	PrisonMaxLevel uint32          `protobuf:"varint,2,opt,name=prisonMaxLevel" json:"prisonMaxLevel,omitempty"`
}

func (m *ST_PrisonAsset_PB) Reset()                    { *m = ST_PrisonAsset_PB{} }
func (m *ST_PrisonAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrisonAsset_PB) ProtoMessage()               {}
func (*ST_PrisonAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{182} }

func (m *ST_PrisonAsset_PB) GetHeroList() []*ST_Prison_PB {
	if m != nil {
		return m.HeroList
	}
	return nil
}

func (m *ST_PrisonAsset_PB) GetPrisonMaxLevel() uint32 {
	if m != nil {
		return m.PrisonMaxLevel
	}
	return 0
}

// 英雄资产
type ST_HeroAsset_PB struct {
	HeroList    []*ST_HeroEntry_PB `protobuf:"bytes,1,rep,name=heroList" json:"heroList,omitempty"`
	LevelUpList []uint32           `protobuf:"varint,2,rep,packed,name=levelUpList" json:"levelUpList,omitempty"`
}

func (m *ST_HeroAsset_PB) Reset()                    { *m = ST_HeroAsset_PB{} }
func (m *ST_HeroAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HeroAsset_PB) ProtoMessage()               {}
func (*ST_HeroAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{183} }

func (m *ST_HeroAsset_PB) GetHeroList() []*ST_HeroEntry_PB {
	if m != nil {
		return m.HeroList
	}
	return nil
}

func (m *ST_HeroAsset_PB) GetLevelUpList() []uint32 {
	if m != nil {
		return m.LevelUpList
	}
	return nil
}

// buff资产
type ST_Buff_PB struct {
	Id         uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Startime   uint64 `protobuf:"varint,2,opt,name=startime" json:"startime,omitempty"`
	Remaintime uint64 `protobuf:"varint,3,opt,name=remaintime" json:"remaintime,omitempty"`
	Value      uint32 `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
}

func (m *ST_Buff_PB) Reset()                    { *m = ST_Buff_PB{} }
func (m *ST_Buff_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Buff_PB) ProtoMessage()               {}
func (*ST_Buff_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{184} }

func (m *ST_Buff_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_Buff_PB) GetStartime() uint64 {
	if m != nil {
		return m.Startime
	}
	return 0
}

func (m *ST_Buff_PB) GetRemaintime() uint64 {
	if m != nil {
		return m.Remaintime
	}
	return 0
}

func (m *ST_Buff_PB) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ST_BuffAsset_PB struct {
	List []*ST_Buff_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_BuffAsset_PB) Reset()                    { *m = ST_BuffAsset_PB{} }
func (m *ST_BuffAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BuffAsset_PB) ProtoMessage()               {}
func (*ST_BuffAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{185} }

func (m *ST_BuffAsset_PB) GetList() []*ST_Buff_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_GlobalBuff_PB struct {
	ServerID       uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ActivityID     uint32 `protobuf:"varint,2,opt,name=activityID" json:"activityID,omitempty"`
	ActivityType   uint32 `protobuf:"varint,3,opt,name=activityType" json:"activityType,omitempty"`
	Stage          uint32 `protobuf:"varint,4,opt,name=stage" json:"stage,omitempty"`
	StageStartTime uint64 `protobuf:"varint,5,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime   uint64 `protobuf:"varint,6,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
}

func (m *ST_GlobalBuff_PB) Reset()                    { *m = ST_GlobalBuff_PB{} }
func (m *ST_GlobalBuff_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalBuff_PB) ProtoMessage()               {}
func (*ST_GlobalBuff_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{186} }

func (m *ST_GlobalBuff_PB) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_GlobalBuff_PB) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

func (m *ST_GlobalBuff_PB) GetActivityType() uint32 {
	if m != nil {
		return m.ActivityType
	}
	return 0
}

func (m *ST_GlobalBuff_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_GlobalBuff_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_GlobalBuff_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

// 天赋
type ST_TalentAsset_PB struct {
	CanUsePoint uint32   `protobuf:"varint,1,opt,name=canUsePoint" json:"canUsePoint,omitempty"`
	TotalPoint  uint32   `protobuf:"varint,2,opt,name=totalPoint" json:"totalPoint,omitempty"`
	TalentList  []uint32 `protobuf:"varint,3,rep,packed,name=talentList" json:"talentList,omitempty"`
}

func (m *ST_TalentAsset_PB) Reset()                    { *m = ST_TalentAsset_PB{} }
func (m *ST_TalentAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TalentAsset_PB) ProtoMessage()               {}
func (*ST_TalentAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{187} }

func (m *ST_TalentAsset_PB) GetCanUsePoint() uint32 {
	if m != nil {
		return m.CanUsePoint
	}
	return 0
}

func (m *ST_TalentAsset_PB) GetTotalPoint() uint32 {
	if m != nil {
		return m.TotalPoint
	}
	return 0
}

func (m *ST_TalentAsset_PB) GetTalentList() []uint32 {
	if m != nil {
		return m.TalentList
	}
	return nil
}

// 召唤师技能
type ST_Skill_PB struct {
	CDTime      uint64 `protobuf:"varint,1,opt,name=CDTime" json:"CDTime,omitempty"`
	SkillID     uint32 `protobuf:"varint,2,opt,name=skillID" json:"skillID,omitempty"`
	CanUse      bool   `protobuf:"varint,3,opt,name=canUse" json:"canUse,omitempty"`
	LastUseTime uint64 `protobuf:"varint,4,opt,name=lastUseTime" json:"lastUseTime,omitempty"`
}

func (m *ST_Skill_PB) Reset()                    { *m = ST_Skill_PB{} }
func (m *ST_Skill_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Skill_PB) ProtoMessage()               {}
func (*ST_Skill_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{188} }

func (m *ST_Skill_PB) GetCDTime() uint64 {
	if m != nil {
		return m.CDTime
	}
	return 0
}

func (m *ST_Skill_PB) GetSkillID() uint32 {
	if m != nil {
		return m.SkillID
	}
	return 0
}

func (m *ST_Skill_PB) GetCanUse() bool {
	if m != nil {
		return m.CanUse
	}
	return false
}

func (m *ST_Skill_PB) GetLastUseTime() uint64 {
	if m != nil {
		return m.LastUseTime
	}
	return 0
}

type ST_SkillAsset_PB struct {
	TotalCD   uint64         `protobuf:"varint,4,opt,name=totalCD" json:"totalCD,omitempty"`
	SkillList []*ST_Skill_PB `protobuf:"bytes,5,rep,name=skillList" json:"skillList,omitempty"`
}

func (m *ST_SkillAsset_PB) Reset()                    { *m = ST_SkillAsset_PB{} }
func (m *ST_SkillAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SkillAsset_PB) ProtoMessage()               {}
func (*ST_SkillAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{189} }

func (m *ST_SkillAsset_PB) GetTotalCD() uint64 {
	if m != nil {
		return m.TotalCD
	}
	return 0
}

func (m *ST_SkillAsset_PB) GetSkillList() []*ST_Skill_PB {
	if m != nil {
		return m.SkillList
	}
	return nil
}

// TIPS
type ST_Tips_PB struct {
	LanguageID uint32   `protobuf:"varint,1,opt,name=languageID" json:"languageID,omitempty"`
	ParaString []string `protobuf:"bytes,2,rep,name=paraString" json:"paraString,omitempty"`
	ParaUint32 []uint32 `protobuf:"varint,3,rep,packed,name=paraUint32" json:"paraUint32,omitempty"`
	Timestamp  uint64   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	ParaInt32  []int32  `protobuf:"varint,5,rep,packed,name=paraInt32" json:"paraInt32,omitempty"`
}

func (m *ST_Tips_PB) Reset()                    { *m = ST_Tips_PB{} }
func (m *ST_Tips_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Tips_PB) ProtoMessage()               {}
func (*ST_Tips_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{190} }

func (m *ST_Tips_PB) GetLanguageID() uint32 {
	if m != nil {
		return m.LanguageID
	}
	return 0
}

func (m *ST_Tips_PB) GetParaString() []string {
	if m != nil {
		return m.ParaString
	}
	return nil
}

func (m *ST_Tips_PB) GetParaUint32() []uint32 {
	if m != nil {
		return m.ParaUint32
	}
	return nil
}

func (m *ST_Tips_PB) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_Tips_PB) GetParaInt32() []int32 {
	if m != nil {
		return m.ParaInt32
	}
	return nil
}

type ST_TipsAsset_PB struct {
	TipsList []*ST_Tips_PB `protobuf:"bytes,1,rep,name=tipsList" json:"tipsList,omitempty"`
}

func (m *ST_TipsAsset_PB) Reset()                    { *m = ST_TipsAsset_PB{} }
func (m *ST_TipsAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TipsAsset_PB) ProtoMessage()               {}
func (*ST_TipsAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{191} }

func (m *ST_TipsAsset_PB) GetTipsList() []*ST_Tips_PB {
	if m != nil {
		return m.TipsList
	}
	return nil
}

// 任务
type ST_TaskAsset_PB struct {
	TaskList []uint32 `protobuf:"varint,1,rep,packed,name=taskList" json:"taskList,omitempty"`
}

func (m *ST_TaskAsset_PB) Reset()                    { *m = ST_TaskAsset_PB{} }
func (m *ST_TaskAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TaskAsset_PB) ProtoMessage()               {}
func (*ST_TaskAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{192} }

func (m *ST_TaskAsset_PB) GetTaskList() []uint32 {
	if m != nil {
		return m.TaskList
	}
	return nil
}

// VIP
type ST_Vip_PB struct {
	VipID                uint32                `protobuf:"varint,1,opt,name=vipID" json:"vipID,omitempty"`
	VipPoint             uint64                `protobuf:"varint,2,opt,name=vipPoint" json:"vipPoint,omitempty"`
	VipLevel             uint32                `protobuf:"varint,3,opt,name=vipLevel" json:"vipLevel,omitempty"`
	NextLoginGetVIPPoint uint32                `protobuf:"varint,4,opt,name=nextLoginGetVIPPoint" json:"nextLoginGetVIPPoint,omitempty"`
	VipGift              uint32                `protobuf:"varint,5,opt,name=vipGift" json:"vipGift,omitempty"`
	CanGetDailyReward    bool                  `protobuf:"varint,6,opt,name=canGetDailyReward" json:"canGetDailyReward,omitempty"`
	VipStoreItems        *ST_Vector2IntList_PB `protobuf:"bytes,7,opt,name=VipStoreItems" json:"VipStoreItems,omitempty"`
	VipStoreRefreshTime  uint64                `protobuf:"varint,8,opt,name=VipStoreRefreshTime" json:"VipStoreRefreshTime,omitempty"`
}

func (m *ST_Vip_PB) Reset()                    { *m = ST_Vip_PB{} }
func (m *ST_Vip_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Vip_PB) ProtoMessage()               {}
func (*ST_Vip_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{193} }

func (m *ST_Vip_PB) GetVipID() uint32 {
	if m != nil {
		return m.VipID
	}
	return 0
}

func (m *ST_Vip_PB) GetVipPoint() uint64 {
	if m != nil {
		return m.VipPoint
	}
	return 0
}

func (m *ST_Vip_PB) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *ST_Vip_PB) GetNextLoginGetVIPPoint() uint32 {
	if m != nil {
		return m.NextLoginGetVIPPoint
	}
	return 0
}

func (m *ST_Vip_PB) GetVipGift() uint32 {
	if m != nil {
		return m.VipGift
	}
	return 0
}

func (m *ST_Vip_PB) GetCanGetDailyReward() bool {
	if m != nil {
		return m.CanGetDailyReward
	}
	return false
}

func (m *ST_Vip_PB) GetVipStoreItems() *ST_Vector2IntList_PB {
	if m != nil {
		return m.VipStoreItems
	}
	return nil
}

func (m *ST_Vip_PB) GetVipStoreRefreshTime() uint64 {
	if m != nil {
		return m.VipStoreRefreshTime
	}
	return 0
}

// 属性加成
type ST_Attribute_PB struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ST_Attribute_PB) Reset()                    { *m = ST_Attribute_PB{} }
func (m *ST_Attribute_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Attribute_PB) ProtoMessage()               {}
func (*ST_Attribute_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{194} }

func (m *ST_Attribute_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_Attribute_PB) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ST_AttributeList_PB struct {
	List []*ST_Attribute_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ST_AttributeList_PB) Reset()                    { *m = ST_AttributeList_PB{} }
func (m *ST_AttributeList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AttributeList_PB) ProtoMessage()               {}
func (*ST_AttributeList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{195} }

func (m *ST_AttributeList_PB) GetList() []*ST_Attribute_PB {
	if m != nil {
		return m.List
	}
	return nil
}

// ------------指挥官装备相关--------------//
// 指挥官装备资产
type ST_Asset_CommanderEquipInfo struct {
	UnLockPos     []uint32        `protobuf:"varint,1,rep,packed,name=unLockPos" json:"unLockPos,omitempty"`
	WearEquipList []*ST_WearEquip `protobuf:"bytes,2,rep,name=wearEquipList" json:"wearEquipList,omitempty"`
}

func (m *ST_Asset_CommanderEquipInfo) Reset()                    { *m = ST_Asset_CommanderEquipInfo{} }
func (m *ST_Asset_CommanderEquipInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_CommanderEquipInfo) ProtoMessage()               {}
func (*ST_Asset_CommanderEquipInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{196} }

func (m *ST_Asset_CommanderEquipInfo) GetUnLockPos() []uint32 {
	if m != nil {
		return m.UnLockPos
	}
	return nil
}

func (m *ST_Asset_CommanderEquipInfo) GetWearEquipList() []*ST_WearEquip {
	if m != nil {
		return m.WearEquipList
	}
	return nil
}

// 装备穿戴信息
type ST_WearEquip struct {
	WearPos  uint32 `protobuf:"varint,1,opt,name=wearPos" json:"wearPos,omitempty"`
	EquipUID uint64 `protobuf:"varint,2,opt,name=equipUID" json:"equipUID,omitempty"`
	Csvid    uint32 `protobuf:"varint,3,opt,name=csvid" json:"csvid,omitempty"`
}

func (m *ST_WearEquip) Reset()                    { *m = ST_WearEquip{} }
func (m *ST_WearEquip) String() string            { return proto.CompactTextString(m) }
func (*ST_WearEquip) ProtoMessage()               {}
func (*ST_WearEquip) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{197} }

func (m *ST_WearEquip) GetWearPos() uint32 {
	if m != nil {
		return m.WearPos
	}
	return 0
}

func (m *ST_WearEquip) GetEquipUID() uint64 {
	if m != nil {
		return m.EquipUID
	}
	return 0
}

func (m *ST_WearEquip) GetCsvid() uint32 {
	if m != nil {
		return m.Csvid
	}
	return 0
}

// 指挥官各类道具资产
type ST_Asset_FactoryPackage struct {
	EquipVarID uint64             `protobuf:"varint,1,opt,name=EquipVarID" json:"EquipVarID,omitempty"`
	EquipList  []*ST_EquipBasic   `protobuf:"bytes,2,rep,name=equipList" json:"equipList,omitempty"`
	ItemList   []*ST_MaterialBase `protobuf:"bytes,3,rep,name=itemList" json:"itemList,omitempty"`
}

func (m *ST_Asset_FactoryPackage) Reset()                    { *m = ST_Asset_FactoryPackage{} }
func (m *ST_Asset_FactoryPackage) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_FactoryPackage) ProtoMessage()               {}
func (*ST_Asset_FactoryPackage) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{198} }

func (m *ST_Asset_FactoryPackage) GetEquipVarID() uint64 {
	if m != nil {
		return m.EquipVarID
	}
	return 0
}

func (m *ST_Asset_FactoryPackage) GetEquipList() []*ST_EquipBasic {
	if m != nil {
		return m.EquipList
	}
	return nil
}

func (m *ST_Asset_FactoryPackage) GetItemList() []*ST_MaterialBase {
	if m != nil {
		return m.ItemList
	}
	return nil
}

// 装备基础信息
type ST_EquipBasic struct {
	Uid    uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Csvid  uint32 `protobuf:"varint,2,opt,name=csvid" json:"csvid,omitempty"`
	IsWear uint32 `protobuf:"varint,3,opt,name=isWear" json:"isWear,omitempty"`
}

func (m *ST_EquipBasic) Reset()                    { *m = ST_EquipBasic{} }
func (m *ST_EquipBasic) String() string            { return proto.CompactTextString(m) }
func (*ST_EquipBasic) ProtoMessage()               {}
func (*ST_EquipBasic) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{199} }

func (m *ST_EquipBasic) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_EquipBasic) GetCsvid() uint32 {
	if m != nil {
		return m.Csvid
	}
	return 0
}

func (m *ST_EquipBasic) GetIsWear() uint32 {
	if m != nil {
		return m.IsWear
	}
	return 0
}

// 材料基础信息
type ST_MaterialBase struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ST_MaterialBase) Reset()                    { *m = ST_MaterialBase{} }
func (m *ST_MaterialBase) String() string            { return proto.CompactTextString(m) }
func (*ST_MaterialBase) ProtoMessage()               {}
func (*ST_MaterialBase) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{200} }

func (m *ST_MaterialBase) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_MaterialBase) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 存入玩家资产的数据
type ST_Asset_TakeCard struct {
	TakeCardList []*ST_TakeCard_Basic `protobuf:"bytes,1,rep,name=takeCardList" json:"takeCardList,omitempty"`
}

func (m *ST_Asset_TakeCard) Reset()                    { *m = ST_Asset_TakeCard{} }
func (m *ST_Asset_TakeCard) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_TakeCard) ProtoMessage()               {}
func (*ST_Asset_TakeCard) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{201} }

func (m *ST_Asset_TakeCard) GetTakeCardList() []*ST_TakeCard_Basic {
	if m != nil {
		return m.TakeCardList
	}
	return nil
}

// 抽卡基本信息
type ST_TakeCard_Basic struct {
	CardPoolID       uint32 `protobuf:"varint,1,opt,name=cardPoolID" json:"cardPoolID,omitempty"`
	LastFreeTimes    uint32 `protobuf:"varint,2,opt,name=lastFreeTimes" json:"lastFreeTimes,omitempty"`
	NomalExtra       uint32 `protobuf:"varint,3,opt,name=nomalExtra" json:"nomalExtra,omitempty"`
	RefreshTime      uint64 `protobuf:"varint,4,opt,name=refreshTime" json:"refreshTime,omitempty"`
	FreeOpenTime     uint64 `protobuf:"varint,5,opt,name=freeOpenTime" json:"freeOpenTime,omitempty"`
	GetFirstReward   bool   `protobuf:"varint,6,opt,name=getFirstReward" json:"getFirstReward,omitempty"`
	ExtraRewardTimes uint32 `protobuf:"varint,7,opt,name=extraRewardTimes" json:"extraRewardTimes,omitempty"`
}

func (m *ST_TakeCard_Basic) Reset()                    { *m = ST_TakeCard_Basic{} }
func (m *ST_TakeCard_Basic) String() string            { return proto.CompactTextString(m) }
func (*ST_TakeCard_Basic) ProtoMessage()               {}
func (*ST_TakeCard_Basic) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{202} }

func (m *ST_TakeCard_Basic) GetCardPoolID() uint32 {
	if m != nil {
		return m.CardPoolID
	}
	return 0
}

func (m *ST_TakeCard_Basic) GetLastFreeTimes() uint32 {
	if m != nil {
		return m.LastFreeTimes
	}
	return 0
}

func (m *ST_TakeCard_Basic) GetNomalExtra() uint32 {
	if m != nil {
		return m.NomalExtra
	}
	return 0
}

func (m *ST_TakeCard_Basic) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *ST_TakeCard_Basic) GetFreeOpenTime() uint64 {
	if m != nil {
		return m.FreeOpenTime
	}
	return 0
}

func (m *ST_TakeCard_Basic) GetGetFirstReward() bool {
	if m != nil {
		return m.GetFirstReward
	}
	return false
}

func (m *ST_TakeCard_Basic) GetExtraRewardTimes() uint32 {
	if m != nil {
		return m.ExtraRewardTimes
	}
	return 0
}

// 发送给客户端的
type ST_Client_CardPool struct {
	OpenCardPoolList []*ST_CardPoolBasic `protobuf:"bytes,1,rep,name=openCardPoolList" json:"openCardPoolList,omitempty"`
}

func (m *ST_Client_CardPool) Reset()                    { *m = ST_Client_CardPool{} }
func (m *ST_Client_CardPool) String() string            { return proto.CompactTextString(m) }
func (*ST_Client_CardPool) ProtoMessage()               {}
func (*ST_Client_CardPool) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{203} }

func (m *ST_Client_CardPool) GetOpenCardPoolList() []*ST_CardPoolBasic {
	if m != nil {
		return m.OpenCardPoolList
	}
	return nil
}

// 卡池信息
type ST_CardPoolBasic struct {
	CardPoolID       uint32 `protobuf:"varint,1,opt,name=cardPoolID" json:"cardPoolID,omitempty"`
	FreeTimes        uint32 `protobuf:"varint,2,opt,name=freeTimes" json:"freeTimes,omitempty"`
	FreeOpenTime     uint64 `protobuf:"varint,3,opt,name=freeOpenTime" json:"freeOpenTime,omitempty"`
	ExtraRewardTimes uint32 `protobuf:"varint,4,opt,name=extraRewardTimes" json:"extraRewardTimes,omitempty"`
}

func (m *ST_CardPoolBasic) Reset()                    { *m = ST_CardPoolBasic{} }
func (m *ST_CardPoolBasic) String() string            { return proto.CompactTextString(m) }
func (*ST_CardPoolBasic) ProtoMessage()               {}
func (*ST_CardPoolBasic) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{204} }

func (m *ST_CardPoolBasic) GetCardPoolID() uint32 {
	if m != nil {
		return m.CardPoolID
	}
	return 0
}

func (m *ST_CardPoolBasic) GetFreeTimes() uint32 {
	if m != nil {
		return m.FreeTimes
	}
	return 0
}

func (m *ST_CardPoolBasic) GetFreeOpenTime() uint64 {
	if m != nil {
		return m.FreeOpenTime
	}
	return 0
}

func (m *ST_CardPoolBasic) GetExtraRewardTimes() uint32 {
	if m != nil {
		return m.ExtraRewardTimes
	}
	return 0
}

// ------------抽卡相关--------------//
type ST_GiftHistory struct {
	GiftID  uint64 `protobuf:"varint,1,opt,name=giftID" json:"giftID,omitempty"`
	GiftNum uint32 `protobuf:"varint,2,opt,name=giftNum" json:"giftNum,omitempty"`
}

func (m *ST_GiftHistory) Reset()                    { *m = ST_GiftHistory{} }
func (m *ST_GiftHistory) String() string            { return proto.CompactTextString(m) }
func (*ST_GiftHistory) ProtoMessage()               {}
func (*ST_GiftHistory) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{205} }

func (m *ST_GiftHistory) GetGiftID() uint64 {
	if m != nil {
		return m.GiftID
	}
	return 0
}

func (m *ST_GiftHistory) GetGiftNum() uint32 {
	if m != nil {
		return m.GiftNum
	}
	return 0
}

// 用户折扣礼包资产
type ST_Asset_OfferGift struct {
	Data []*ST_OfferGiftPack `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *ST_Asset_OfferGift) Reset()                    { *m = ST_Asset_OfferGift{} }
func (m *ST_Asset_OfferGift) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_OfferGift) ProtoMessage()               {}
func (*ST_Asset_OfferGift) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{206} }

func (m *ST_Asset_OfferGift) GetData() []*ST_OfferGiftPack {
	if m != nil {
		return m.Data
	}
	return nil
}

type ST_OfferGiftPack struct {
	// 配置id （GM后台唯一id）
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// 条件类型
	Cond uint32 `protobuf:"varint,2,opt,name=cond" json:"cond,omitempty"`
	// 唯一值或最小值
	Condvalue1 string `protobuf:"bytes,3,opt,name=condvalue1" json:"condvalue1,omitempty"`
	// 最大值
	Condvalue2 string `protobuf:"bytes,4,opt,name=condvalue2" json:"condvalue2,omitempty"`
	// 开始时间
	Tmstart int64 `protobuf:"varint,5,opt,name=tmstart" json:"tmstart,omitempty"`
	// 结束时间
	Tmend int64 `protobuf:"varint,6,opt,name=tmend" json:"tmend,omitempty"`
	// 此次更新操作类型 1更新 2删除 3重置 4添加
	Op int32 `protobuf:"varint,7,opt,name=op" json:"op,omitempty"`
	// 礼包配置
	Conf []*ST_OfferGiftPackConf `protobuf:"bytes,8,rep,name=conf" json:"conf,omitempty"`
	// 服务器id
	Sids       string `protobuf:"bytes,9,opt,name=sids" json:"sids,omitempty"`
	Ver        int64  `protobuf:"varint,10,opt,name=ver" json:"ver,omitempty"`
	Condvalue3 string `protobuf:"bytes,11,opt,name=condvalue3" json:"condvalue3,omitempty"`
}

func (m *ST_OfferGiftPack) Reset()                    { *m = ST_OfferGiftPack{} }
func (m *ST_OfferGiftPack) String() string            { return proto.CompactTextString(m) }
func (*ST_OfferGiftPack) ProtoMessage()               {}
func (*ST_OfferGiftPack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{207} }

func (m *ST_OfferGiftPack) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_OfferGiftPack) GetCond() uint32 {
	if m != nil {
		return m.Cond
	}
	return 0
}

func (m *ST_OfferGiftPack) GetCondvalue1() string {
	if m != nil {
		return m.Condvalue1
	}
	return ""
}

func (m *ST_OfferGiftPack) GetCondvalue2() string {
	if m != nil {
		return m.Condvalue2
	}
	return ""
}

func (m *ST_OfferGiftPack) GetTmstart() int64 {
	if m != nil {
		return m.Tmstart
	}
	return 0
}

func (m *ST_OfferGiftPack) GetTmend() int64 {
	if m != nil {
		return m.Tmend
	}
	return 0
}

func (m *ST_OfferGiftPack) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *ST_OfferGiftPack) GetConf() []*ST_OfferGiftPackConf {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *ST_OfferGiftPack) GetSids() string {
	if m != nil {
		return m.Sids
	}
	return ""
}

func (m *ST_OfferGiftPack) GetVer() int64 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *ST_OfferGiftPack) GetCondvalue3() string {
	if m != nil {
		return m.Condvalue3
	}
	return ""
}

type ST_OfferGiftPackConf struct {
	// 模板id
	Offergiftid int64 `protobuf:"varint,1,opt,name=offergiftid" json:"offergiftid,omitempty"`
	// 名称
	Name int64 `protobuf:"varint,2,opt,name=name" json:"name,omitempty"`
	// 图标
	Icon int64 `protobuf:"varint,3,opt,name=icon" json:"icon,omitempty"`
	// banner
	Banner int64 `protobuf:"varint,4,opt,name=banner" json:"banner,omitempty"`
	// 特殊标志
	Artname int64 `protobuf:"varint,5,opt,name=artname" json:"artname,omitempty"`
	// 文本
	Txt int64 `protobuf:"varint,6,opt,name=txt" json:"txt,omitempty"`
	// 文本参数
	Txtarg string `protobuf:"bytes,7,opt,name=txtarg" json:"txtarg,omitempty"`
	// 倍率
	Offer int64 `protobuf:"varint,8,opt,name=offer" json:"offer,omitempty"`
	// 价格id
	Product int64 `protobuf:"varint,9,opt,name=product" json:"product,omitempty"`
	// 钻石
	Cash100 int64 `protobuf:"varint,10,opt,name=cash100" json:"cash100,omitempty"`
	// 奖励
	Award *ST_Vector4IntList_PB `protobuf:"bytes,11,opt,name=award" json:"award,omitempty"`
	// 购买次数
	Buynum int64 `protobuf:"varint,12,opt,name=buynum" json:"buynum,omitempty"`
	// 可以购买次数
	Canbuynum int64 `protobuf:"varint,13,opt,name=canbuynum" json:"canbuynum,omitempty"`
}

func (m *ST_OfferGiftPackConf) Reset()                    { *m = ST_OfferGiftPackConf{} }
func (m *ST_OfferGiftPackConf) String() string            { return proto.CompactTextString(m) }
func (*ST_OfferGiftPackConf) ProtoMessage()               {}
func (*ST_OfferGiftPackConf) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{208} }

func (m *ST_OfferGiftPackConf) GetOffergiftid() int64 {
	if m != nil {
		return m.Offergiftid
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetName() int64 {
	if m != nil {
		return m.Name
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetIcon() int64 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetBanner() int64 {
	if m != nil {
		return m.Banner
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetArtname() int64 {
	if m != nil {
		return m.Artname
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetTxt() int64 {
	if m != nil {
		return m.Txt
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetTxtarg() string {
	if m != nil {
		return m.Txtarg
	}
	return ""
}

func (m *ST_OfferGiftPackConf) GetOffer() int64 {
	if m != nil {
		return m.Offer
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetProduct() int64 {
	if m != nil {
		return m.Product
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetCash100() int64 {
	if m != nil {
		return m.Cash100
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetAward() *ST_Vector4IntList_PB {
	if m != nil {
		return m.Award
	}
	return nil
}

func (m *ST_OfferGiftPackConf) GetBuynum() int64 {
	if m != nil {
		return m.Buynum
	}
	return 0
}

func (m *ST_OfferGiftPackConf) GetCanbuynum() int64 {
	if m != nil {
		return m.Canbuynum
	}
	return 0
}

// 用户礼包资产
type ST_Asset_GiftPack struct {
	GiftList                []*ST_GiftPackBasic       `protobuf:"bytes,1,rep,name=giftList" json:"giftList,omitempty"`
	MonthGiftPacks          []*ST_Asset_MonthGiftPack `protobuf:"bytes,2,rep,name=monthGiftPacks" json:"monthGiftPacks,omitempty"`
	PurchasedGiftPackIDList []uint64                  `protobuf:"varint,3,rep,packed,name=purchasedGiftPackIDList" json:"purchasedGiftPackIDList,omitempty"`
	OrderId                 string                    `protobuf:"bytes,4,opt,name=orderId" json:"orderId,omitempty"`
	LastClearTime           uint64                    `protobuf:"varint,5,opt,name=lastClearTime" json:"lastClearTime,omitempty"`
	LastPayYearDay          uint32                    `protobuf:"varint,6,opt,name=lastPayYearDay" json:"lastPayYearDay,omitempty"`
	// double	 	   		totalPay 		        = 7; //玩家总付费数
	PayHistory             []*ST_GiftHistory       `protobuf:"bytes,8,rep,name=payHistory" json:"payHistory,omitempty"`
	SubscribeGiftPacks     []*ST_SubscribeGiftPack `protobuf:"bytes,9,rep,name=subscribeGiftPacks" json:"subscribeGiftPacks,omitempty"`
	FirBuyRewardGiftIDList []uint64                `protobuf:"varint,10,rep,packed,name=firBuyRewardGiftIDList" json:"firBuyRewardGiftIDList,omitempty"`
	AlreadyBuyGiftIDList   []uint64                `protobuf:"varint,11,rep,packed,name=alreadyBuyGiftIDList" json:"alreadyBuyGiftIDList,omitempty"`
	// 档次
	Cashlv uint64 `protobuf:"varint,12,opt,name=Cashlv" json:"Cashlv,omitempty"`
	// 剩余钻石
	Cash100   int64    `protobuf:"varint,13,opt,name=Cash100" json:"Cash100,omitempty"`
	GiftCodes []string `protobuf:"bytes,14,rep,name=giftCodes" json:"giftCodes,omitempty"`
}

func (m *ST_Asset_GiftPack) Reset()                    { *m = ST_Asset_GiftPack{} }
func (m *ST_Asset_GiftPack) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_GiftPack) ProtoMessage()               {}
func (*ST_Asset_GiftPack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{209} }

func (m *ST_Asset_GiftPack) GetGiftList() []*ST_GiftPackBasic {
	if m != nil {
		return m.GiftList
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetMonthGiftPacks() []*ST_Asset_MonthGiftPack {
	if m != nil {
		return m.MonthGiftPacks
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetPurchasedGiftPackIDList() []uint64 {
	if m != nil {
		return m.PurchasedGiftPackIDList
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ST_Asset_GiftPack) GetLastClearTime() uint64 {
	if m != nil {
		return m.LastClearTime
	}
	return 0
}

func (m *ST_Asset_GiftPack) GetLastPayYearDay() uint32 {
	if m != nil {
		return m.LastPayYearDay
	}
	return 0
}

func (m *ST_Asset_GiftPack) GetPayHistory() []*ST_GiftHistory {
	if m != nil {
		return m.PayHistory
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetSubscribeGiftPacks() []*ST_SubscribeGiftPack {
	if m != nil {
		return m.SubscribeGiftPacks
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetFirBuyRewardGiftIDList() []uint64 {
	if m != nil {
		return m.FirBuyRewardGiftIDList
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetAlreadyBuyGiftIDList() []uint64 {
	if m != nil {
		return m.AlreadyBuyGiftIDList
	}
	return nil
}

func (m *ST_Asset_GiftPack) GetCashlv() uint64 {
	if m != nil {
		return m.Cashlv
	}
	return 0
}

func (m *ST_Asset_GiftPack) GetCash100() int64 {
	if m != nil {
		return m.Cash100
	}
	return 0
}

func (m *ST_Asset_GiftPack) GetGiftCodes() []string {
	if m != nil {
		return m.GiftCodes
	}
	return nil
}

// 礼包基本信息
type ST_GiftPackBasic struct {
	Type            uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id              uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	ProductId       string `protobuf:"bytes,3,opt,name=productId" json:"productId,omitempty"`
	StartTimeStamp  uint64 `protobuf:"varint,4,opt,name=startTimeStamp" json:"startTimeStamp,omitempty"`
	EndTimeStamp    uint64 `protobuf:"varint,5,opt,name=endTimeStamp" json:"endTimeStamp,omitempty"`
	GiftLimitTimes  uint64 `protobuf:"varint,6,opt,name=giftLimitTimes" json:"giftLimitTimes,omitempty"`
	OnSale          bool   `protobuf:"varint,7,opt,name=onSale" json:"onSale,omitempty"`
	RandomID        int64  `protobuf:"varint,8,opt,name=randomID" json:"randomID,omitempty"`
	OldEndTimeStamp uint64 `protobuf:"varint,9,opt,name=oldEndTimeStamp" json:"oldEndTimeStamp,omitempty"`
	IsOssControl    bool   `protobuf:"varint,10,opt,name=isOssControl" json:"isOssControl,omitempty"`
	NeedPop         bool   `protobuf:"varint,11,opt,name=needPop" json:"needPop,omitempty"`
}

func (m *ST_GiftPackBasic) Reset()                    { *m = ST_GiftPackBasic{} }
func (m *ST_GiftPackBasic) String() string            { return proto.CompactTextString(m) }
func (*ST_GiftPackBasic) ProtoMessage()               {}
func (*ST_GiftPackBasic) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{210} }

func (m *ST_GiftPackBasic) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_GiftPackBasic) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_GiftPackBasic) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ST_GiftPackBasic) GetStartTimeStamp() uint64 {
	if m != nil {
		return m.StartTimeStamp
	}
	return 0
}

func (m *ST_GiftPackBasic) GetEndTimeStamp() uint64 {
	if m != nil {
		return m.EndTimeStamp
	}
	return 0
}

func (m *ST_GiftPackBasic) GetGiftLimitTimes() uint64 {
	if m != nil {
		return m.GiftLimitTimes
	}
	return 0
}

func (m *ST_GiftPackBasic) GetOnSale() bool {
	if m != nil {
		return m.OnSale
	}
	return false
}

func (m *ST_GiftPackBasic) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *ST_GiftPackBasic) GetOldEndTimeStamp() uint64 {
	if m != nil {
		return m.OldEndTimeStamp
	}
	return 0
}

func (m *ST_GiftPackBasic) GetIsOssControl() bool {
	if m != nil {
		return m.IsOssControl
	}
	return false
}

func (m *ST_GiftPackBasic) GetNeedPop() bool {
	if m != nil {
		return m.NeedPop
	}
	return false
}

// 用户限时礼包数据
type ST_Asset_MonthGiftPack struct {
	Id                         uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MonthGiftPurchaseTimestamp uint64 `protobuf:"varint,2,opt,name=monthGiftPurchaseTimestamp" json:"monthGiftPurchaseTimestamp,omitempty"`
	MonthGiftRemainTimes       uint32 `protobuf:"varint,3,opt,name=monthGiftRemainTimes" json:"monthGiftRemainTimes,omitempty"`
	MonthGiftLastGetTimestamp  uint64 `protobuf:"varint,4,opt,name=monthGiftLastGetTimestamp" json:"monthGiftLastGetTimestamp,omitempty"`
	Expired                    bool   `protobuf:"varint,9,opt,name=expired" json:"expired,omitempty"`
}

func (m *ST_Asset_MonthGiftPack) Reset()                    { *m = ST_Asset_MonthGiftPack{} }
func (m *ST_Asset_MonthGiftPack) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_MonthGiftPack) ProtoMessage()               {}
func (*ST_Asset_MonthGiftPack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{211} }

func (m *ST_Asset_MonthGiftPack) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_Asset_MonthGiftPack) GetMonthGiftPurchaseTimestamp() uint64 {
	if m != nil {
		return m.MonthGiftPurchaseTimestamp
	}
	return 0
}

func (m *ST_Asset_MonthGiftPack) GetMonthGiftRemainTimes() uint32 {
	if m != nil {
		return m.MonthGiftRemainTimes
	}
	return 0
}

func (m *ST_Asset_MonthGiftPack) GetMonthGiftLastGetTimestamp() uint64 {
	if m != nil {
		return m.MonthGiftLastGetTimestamp
	}
	return 0
}

func (m *ST_Asset_MonthGiftPack) GetExpired() bool {
	if m != nil {
		return m.Expired
	}
	return false
}

// 用户订阅礼包数据
type ST_SubscribeGiftPack struct {
	Id               uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GetGiftTimes     uint32 `protobuf:"varint,2,opt,name=getGiftTimes" json:"getGiftTimes,omitempty"`
	TotalGiftTimes   uint32 `protobuf:"varint,3,opt,name=totalGiftTimes" json:"totalGiftTimes,omitempty"`
	EndTimestamp     uint64 `protobuf:"varint,4,opt,name=endTimestamp" json:"endTimestamp,omitempty"`
	LastGetTimestamp uint64 `protobuf:"varint,5,opt,name=lastGetTimestamp" json:"lastGetTimestamp,omitempty"`
	PayNum           uint64 `protobuf:"varint,6,opt,name=PayNum" json:"PayNum,omitempty"`
}

func (m *ST_SubscribeGiftPack) Reset()                    { *m = ST_SubscribeGiftPack{} }
func (m *ST_SubscribeGiftPack) String() string            { return proto.CompactTextString(m) }
func (*ST_SubscribeGiftPack) ProtoMessage()               {}
func (*ST_SubscribeGiftPack) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{212} }

func (m *ST_SubscribeGiftPack) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_SubscribeGiftPack) GetGetGiftTimes() uint32 {
	if m != nil {
		return m.GetGiftTimes
	}
	return 0
}

func (m *ST_SubscribeGiftPack) GetTotalGiftTimes() uint32 {
	if m != nil {
		return m.TotalGiftTimes
	}
	return 0
}

func (m *ST_SubscribeGiftPack) GetEndTimestamp() uint64 {
	if m != nil {
		return m.EndTimestamp
	}
	return 0
}

func (m *ST_SubscribeGiftPack) GetLastGetTimestamp() uint64 {
	if m != nil {
		return m.LastGetTimestamp
	}
	return 0
}

func (m *ST_SubscribeGiftPack) GetPayNum() uint64 {
	if m != nil {
		return m.PayNum
	}
	return 0
}

// 角色简单信息
type ST_CharSimpleInfo struct {
	IsValid            bool                        `protobuf:"varint,1,opt,name=isValid" json:"isValid,omitempty"`
	Sid                uint32                      `protobuf:"varint,2,opt,name=sid" json:"sid,omitempty"`
	TileId             uint32                      `protobuf:"varint,3,opt,name=tileId" json:"tileId,omitempty"`
	UserId             uint64                      `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	AvatarBoxID        uint32                      `protobuf:"varint,5,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	Avatar             string                      `protobuf:"bytes,6,opt,name=avatar" json:"avatar,omitempty"`
	CharName           string                      `protobuf:"bytes,7,opt,name=charName" json:"charName,omitempty"`
	LeagueID           uint64                      `protobuf:"varint,8,opt,name=leagueID" json:"leagueID,omitempty"`
	LeagueName         string                      `protobuf:"bytes,9,opt,name=leagueName" json:"leagueName,omitempty"`
	CapacityOfGarrison uint32                      `protobuf:"varint,10,opt,name=capacityOfGarrison" json:"capacityOfGarrison,omitempty"`
	CurGarrisonValue   uint32                      `protobuf:"varint,11,opt,name=curGarrisonValue" json:"curGarrisonValue,omitempty"`
	LanguageID         uint32                      `protobuf:"varint,12,opt,name=languageID" json:"languageID,omitempty"`
	Power              uint64                      `protobuf:"varint,13,opt,name=power" json:"power,omitempty"`
	MainCityLevel      uint32                      `protobuf:"varint,14,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
	VipID              uint32                      `protobuf:"varint,15,opt,name=vipID" json:"vipID,omitempty"`
	CommanderLevel     uint32                      `protobuf:"varint,16,opt,name=commanderLevel" json:"commanderLevel,omitempty"`
	Signature          string                      `protobuf:"bytes,17,opt,name=signature" json:"signature,omitempty"`
	CommanderID        uint32                      `protobuf:"varint,18,opt,name=commanderID" json:"commanderID,omitempty"`
	CommanderQuality   uint32                      `protobuf:"varint,19,opt,name=commanderQuality" json:"commanderQuality,omitempty"`
	CommanderStatus    uint32                      `protobuf:"varint,20,opt,name=commanderStatus" json:"commanderStatus,omitempty"`
	NickName           string                      `protobuf:"bytes,21,opt,name=nickName" json:"nickName,omitempty"`
	LeagueShortName    string                      `protobuf:"bytes,22,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
	Kingwartitle       int32                       `protobuf:"varint,23,opt,name=kingwartitle" json:"kingwartitle,omitempty"`
	CommanderModelId   uint32                      `protobuf:"varint,24,opt,name=commanderModelId" json:"commanderModelId,omitempty"`
	BoxExt             *ST_CommanderFashionInfo_PB `protobuf:"bytes,25,opt,name=boxExt" json:"boxExt,omitempty"`
	BubbleExt          *ST_CommanderFashionInfo_PB `protobuf:"bytes,26,opt,name=bubbleExt" json:"bubbleExt,omitempty"`
	CurrentSid         uint32                      `protobuf:"varint,27,opt,name=currentSid" json:"currentSid,omitempty"`
}

func (m *ST_CharSimpleInfo) Reset()                    { *m = ST_CharSimpleInfo{} }
func (m *ST_CharSimpleInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_CharSimpleInfo) ProtoMessage()               {}
func (*ST_CharSimpleInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{213} }

func (m *ST_CharSimpleInfo) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *ST_CharSimpleInfo) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetTileId() uint32 {
	if m != nil {
		return m.TileId
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetCharName() string {
	if m != nil {
		return m.CharName
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetCapacityOfGarrison() uint32 {
	if m != nil {
		return m.CapacityOfGarrison
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetCurGarrisonValue() uint32 {
	if m != nil {
		return m.CurGarrisonValue
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetLanguageID() uint32 {
	if m != nil {
		return m.LanguageID
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetVipID() uint32 {
	if m != nil {
		return m.VipID
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetCommanderLevel() uint32 {
	if m != nil {
		return m.CommanderLevel
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetCommanderID() uint32 {
	if m != nil {
		return m.CommanderID
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetCommanderQuality() uint32 {
	if m != nil {
		return m.CommanderQuality
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetCommanderStatus() uint32 {
	if m != nil {
		return m.CommanderStatus
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_CharSimpleInfo) GetKingwartitle() int32 {
	if m != nil {
		return m.Kingwartitle
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetCommanderModelId() uint32 {
	if m != nil {
		return m.CommanderModelId
	}
	return 0
}

func (m *ST_CharSimpleInfo) GetBoxExt() *ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.BoxExt
	}
	return nil
}

func (m *ST_CharSimpleInfo) GetBubbleExt() *ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.BubbleExt
	}
	return nil
}

func (m *ST_CharSimpleInfo) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

// 角色简单信息
type ST_CharSimpleInfoList struct {
	SimpleInfoList []*ST_CharSimpleInfo `protobuf:"bytes,1,rep,name=simpleInfoList" json:"simpleInfoList,omitempty"`
}

func (m *ST_CharSimpleInfoList) Reset()                    { *m = ST_CharSimpleInfoList{} }
func (m *ST_CharSimpleInfoList) String() string            { return proto.CompactTextString(m) }
func (*ST_CharSimpleInfoList) ProtoMessage()               {}
func (*ST_CharSimpleInfoList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{214} }

func (m *ST_CharSimpleInfoList) GetSimpleInfoList() []*ST_CharSimpleInfo {
	if m != nil {
		return m.SimpleInfoList
	}
	return nil
}

type ST_WorldCharSimple_PB struct {
	UserID     uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	UserName   string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	LeagueName string `protobuf:"bytes,3,opt,name=leagueName" json:"leagueName,omitempty"`
	Signature  string `protobuf:"bytes,4,opt,name=signature" json:"signature,omitempty"`
	TitleID    int32  `protobuf:"varint,5,opt,name=titleID" json:"titleID,omitempty"`
	BubbleId   uint32 `protobuf:"varint,6,opt,name=bubbleId" json:"bubbleId,omitempty"`
}

func (m *ST_WorldCharSimple_PB) Reset()                    { *m = ST_WorldCharSimple_PB{} }
func (m *ST_WorldCharSimple_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldCharSimple_PB) ProtoMessage()               {}
func (*ST_WorldCharSimple_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{215} }

func (m *ST_WorldCharSimple_PB) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ST_WorldCharSimple_PB) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ST_WorldCharSimple_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_WorldCharSimple_PB) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ST_WorldCharSimple_PB) GetTitleID() int32 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_WorldCharSimple_PB) GetBubbleId() uint32 {
	if m != nil {
		return m.BubbleId
	}
	return 0
}

type ST_WorldCharSimpleList_PB struct {
	DataList []*ST_WorldCharSimple_PB `protobuf:"bytes,4,rep,name=dataList" json:"dataList,omitempty"`
}

func (m *ST_WorldCharSimpleList_PB) Reset()                    { *m = ST_WorldCharSimpleList_PB{} }
func (m *ST_WorldCharSimpleList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldCharSimpleList_PB) ProtoMessage()               {}
func (*ST_WorldCharSimpleList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{216} }

func (m *ST_WorldCharSimpleList_PB) GetDataList() []*ST_WorldCharSimple_PB {
	if m != nil {
		return m.DataList
	}
	return nil
}

// 战力排行榜条目
type ST_PowerRankingListItem struct {
	Avatar          string                `protobuf:"bytes,1,opt,name=avatar" json:"avatar,omitempty"`
	UserId          uint64                `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	UserName        string                `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	LeagueId        uint64                `protobuf:"varint,4,opt,name=leagueId" json:"leagueId,omitempty"`
	LeagueName      string                `protobuf:"bytes,5,opt,name=leagueName" json:"leagueName,omitempty"`
	LeagueShortName string                `protobuf:"bytes,6,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
	PowerValue      uint64                `protobuf:"varint,7,opt,name=powerValue" json:"powerValue,omitempty"`
	PrisonCount     uint32                `protobuf:"varint,8,opt,name=prisonCount" json:"prisonCount,omitempty"`
	Bounty          uint32                `protobuf:"varint,9,opt,name=bounty" json:"bounty,omitempty"`
	HeroInfo        *ST_RankingHeroInfo   `protobuf:"bytes,10,opt,name=heroInfo" json:"heroInfo,omitempty"`
	GlobalRanking   *ST_GlobalRankingItem `protobuf:"bytes,11,opt,name=globalRanking" json:"globalRanking,omitempty"`
}

func (m *ST_PowerRankingListItem) Reset()                    { *m = ST_PowerRankingListItem{} }
func (m *ST_PowerRankingListItem) String() string            { return proto.CompactTextString(m) }
func (*ST_PowerRankingListItem) ProtoMessage()               {}
func (*ST_PowerRankingListItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{217} }

func (m *ST_PowerRankingListItem) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_PowerRankingListItem) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ST_PowerRankingListItem) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ST_PowerRankingListItem) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_PowerRankingListItem) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_PowerRankingListItem) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_PowerRankingListItem) GetPowerValue() uint64 {
	if m != nil {
		return m.PowerValue
	}
	return 0
}

func (m *ST_PowerRankingListItem) GetPrisonCount() uint32 {
	if m != nil {
		return m.PrisonCount
	}
	return 0
}

func (m *ST_PowerRankingListItem) GetBounty() uint32 {
	if m != nil {
		return m.Bounty
	}
	return 0
}

func (m *ST_PowerRankingListItem) GetHeroInfo() *ST_RankingHeroInfo {
	if m != nil {
		return m.HeroInfo
	}
	return nil
}

func (m *ST_PowerRankingListItem) GetGlobalRanking() *ST_GlobalRankingItem {
	if m != nil {
		return m.GlobalRanking
	}
	return nil
}

type ST_GlobalRankingItem struct {
	ServerId    uint32 `protobuf:"varint,1,opt,name=serverId" json:"serverId,omitempty"`
	AvatarBoxID uint32 `protobuf:"varint,2,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	HeaderId    uint32 `protobuf:"varint,3,opt,name=headerId" json:"headerId,omitempty"`
}

func (m *ST_GlobalRankingItem) Reset()                    { *m = ST_GlobalRankingItem{} }
func (m *ST_GlobalRankingItem) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalRankingItem) ProtoMessage()               {}
func (*ST_GlobalRankingItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{218} }

func (m *ST_GlobalRankingItem) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ST_GlobalRankingItem) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_GlobalRankingItem) GetHeaderId() uint32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

// 排行榜英雄信息
type ST_RankingHeroInfo struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Lv    uint32 `protobuf:"varint,2,opt,name=lv" json:"lv,omitempty"`
	Star  uint32 `protobuf:"varint,3,opt,name=star" json:"star,omitempty"`
	Color uint32 `protobuf:"varint,4,opt,name=color" json:"color,omitempty"`
}

func (m *ST_RankingHeroInfo) Reset()                    { *m = ST_RankingHeroInfo{} }
func (m *ST_RankingHeroInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_RankingHeroInfo) ProtoMessage()               {}
func (*ST_RankingHeroInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{219} }

func (m *ST_RankingHeroInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_RankingHeroInfo) GetLv() uint32 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *ST_RankingHeroInfo) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_RankingHeroInfo) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

// 战力排行榜
type ST_PowerRankingList struct {
	RankingType        uint32                     `protobuf:"varint,1,opt,name=rankingType" json:"rankingType,omitempty"`
	RankingList        []*ST_PowerRankingListItem `protobuf:"bytes,2,rep,name=rankingList" json:"rankingList,omitempty"`
	MyRank             int32                      `protobuf:"varint,3,opt,name=myRank" json:"myRank,omitempty"`
	MaxRankingListSize int32                      `protobuf:"varint,4,opt,name=maxRankingListSize" json:"maxRankingListSize,omitempty"`
	MyValue            uint64                     `protobuf:"varint,5,opt,name=MyValue" json:"MyValue,omitempty"`
}

func (m *ST_PowerRankingList) Reset()                    { *m = ST_PowerRankingList{} }
func (m *ST_PowerRankingList) String() string            { return proto.CompactTextString(m) }
func (*ST_PowerRankingList) ProtoMessage()               {}
func (*ST_PowerRankingList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{220} }

func (m *ST_PowerRankingList) GetRankingType() uint32 {
	if m != nil {
		return m.RankingType
	}
	return 0
}

func (m *ST_PowerRankingList) GetRankingList() []*ST_PowerRankingListItem {
	if m != nil {
		return m.RankingList
	}
	return nil
}

func (m *ST_PowerRankingList) GetMyRank() int32 {
	if m != nil {
		return m.MyRank
	}
	return 0
}

func (m *ST_PowerRankingList) GetMaxRankingListSize() int32 {
	if m != nil {
		return m.MaxRankingListSize
	}
	return 0
}

func (m *ST_PowerRankingList) GetMyValue() uint64 {
	if m != nil {
		return m.MyValue
	}
	return 0
}

type ST_RecommendUserAsset_PB struct {
	UserList []uint64 `protobuf:"varint,4,rep,packed,name=userList" json:"userList,omitempty"`
}

func (m *ST_RecommendUserAsset_PB) Reset()                    { *m = ST_RecommendUserAsset_PB{} }
func (m *ST_RecommendUserAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_RecommendUserAsset_PB) ProtoMessage()               {}
func (*ST_RecommendUserAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{221} }

func (m *ST_RecommendUserAsset_PB) GetUserList() []uint64 {
	if m != nil {
		return m.UserList
	}
	return nil
}

// 联盟捐献排行榜
type ST_LeagueDonationRankEntry_PB struct {
	Uid        uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Devote     uint64 `protobuf:"varint,2,opt,name=devote" json:"devote,omitempty"`
	TechDevote uint64 `protobuf:"varint,3,opt,name=tech_devote,json=techDevote" json:"tech_devote,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *ST_LeagueDonationRankEntry_PB) Reset()                    { *m = ST_LeagueDonationRankEntry_PB{} }
func (m *ST_LeagueDonationRankEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueDonationRankEntry_PB) ProtoMessage()               {}
func (*ST_LeagueDonationRankEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{222} }

func (m *ST_LeagueDonationRankEntry_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_LeagueDonationRankEntry_PB) GetDevote() uint64 {
	if m != nil {
		return m.Devote
	}
	return 0
}

func (m *ST_LeagueDonationRankEntry_PB) GetTechDevote() uint64 {
	if m != nil {
		return m.TechDevote
	}
	return 0
}

func (m *ST_LeagueDonationRankEntry_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ST_LeagueDonationRank_PB struct {
	DailyRankList   []*ST_LeagueDonationRankEntry_PB `protobuf:"bytes,1,rep,name=dailyRankList" json:"dailyRankList,omitempty"`
	WeeklyRankList  []*ST_LeagueDonationRankEntry_PB `protobuf:"bytes,2,rep,name=weeklyRankList" json:"weeklyRankList,omitempty"`
	HistoryRankList []*ST_LeagueDonationRankEntry_PB `protobuf:"bytes,3,rep,name=historyRankList" json:"historyRankList,omitempty"`
	DailyClearTime  uint64                           `protobuf:"varint,4,opt,name=dailyClearTime" json:"dailyClearTime,omitempty"`
	WeeklyClearTime uint64                           `protobuf:"varint,5,opt,name=weeklyClearTime" json:"weeklyClearTime,omitempty"`
}

func (m *ST_LeagueDonationRank_PB) Reset()                    { *m = ST_LeagueDonationRank_PB{} }
func (m *ST_LeagueDonationRank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueDonationRank_PB) ProtoMessage()               {}
func (*ST_LeagueDonationRank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{223} }

func (m *ST_LeagueDonationRank_PB) GetDailyRankList() []*ST_LeagueDonationRankEntry_PB {
	if m != nil {
		return m.DailyRankList
	}
	return nil
}

func (m *ST_LeagueDonationRank_PB) GetWeeklyRankList() []*ST_LeagueDonationRankEntry_PB {
	if m != nil {
		return m.WeeklyRankList
	}
	return nil
}

func (m *ST_LeagueDonationRank_PB) GetHistoryRankList() []*ST_LeagueDonationRankEntry_PB {
	if m != nil {
		return m.HistoryRankList
	}
	return nil
}

func (m *ST_LeagueDonationRank_PB) GetDailyClearTime() uint64 {
	if m != nil {
		return m.DailyClearTime
	}
	return 0
}

func (m *ST_LeagueDonationRank_PB) GetWeeklyClearTime() uint64 {
	if m != nil {
		return m.WeeklyClearTime
	}
	return 0
}

// 联盟状态条目
type ST_LeagueStatusEntry_PB struct {
	Type        uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Time        uint64 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	PlayerID    uint64 `protobuf:"varint,3,opt,name=playerID" json:"playerID,omitempty"`
	OldLevel    uint32 `protobuf:"varint,4,opt,name=oldLevel" json:"oldLevel,omitempty"`
	ManagerName string `protobuf:"bytes,5,opt,name=managerName" json:"managerName,omitempty"`
	ManagerID   uint64 `protobuf:"varint,6,opt,name=managerID" json:"managerID,omitempty"`
	BuffTitleId int64  `protobuf:"varint,7,opt,name=buffTitleId" json:"buffTitleId,omitempty"`
}

func (m *ST_LeagueStatusEntry_PB) Reset()                    { *m = ST_LeagueStatusEntry_PB{} }
func (m *ST_LeagueStatusEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueStatusEntry_PB) ProtoMessage()               {}
func (*ST_LeagueStatusEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{224} }

func (m *ST_LeagueStatusEntry_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_LeagueStatusEntry_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_LeagueStatusEntry_PB) GetPlayerID() uint64 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *ST_LeagueStatusEntry_PB) GetOldLevel() uint32 {
	if m != nil {
		return m.OldLevel
	}
	return 0
}

func (m *ST_LeagueStatusEntry_PB) GetManagerName() string {
	if m != nil {
		return m.ManagerName
	}
	return ""
}

func (m *ST_LeagueStatusEntry_PB) GetManagerID() uint64 {
	if m != nil {
		return m.ManagerID
	}
	return 0
}

func (m *ST_LeagueStatusEntry_PB) GetBuffTitleId() int64 {
	if m != nil {
		return m.BuffTitleId
	}
	return 0
}

type ST_LeagueStatus_PB struct {
	StatusList []*ST_LeagueStatusEntry_PB `protobuf:"bytes,1,rep,name=statusList" json:"statusList,omitempty"`
}

func (m *ST_LeagueStatus_PB) Reset()                    { *m = ST_LeagueStatus_PB{} }
func (m *ST_LeagueStatus_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueStatus_PB) ProtoMessage()               {}
func (*ST_LeagueStatus_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{225} }

func (m *ST_LeagueStatus_PB) GetStatusList() []*ST_LeagueStatusEntry_PB {
	if m != nil {
		return m.StatusList
	}
	return nil
}

// 成就完成列表
type ST_AchievementFinishedItem_PB struct {
	TaskType uint32 `protobuf:"varint,1,opt,name=taskType" json:"taskType,omitempty"`
	TaskId   uint64 `protobuf:"varint,2,opt,name=taskId" json:"taskId,omitempty"`
	NeedNum  uint64 `protobuf:"varint,3,opt,name=needNum" json:"needNum,omitempty"`
	AccNum   uint64 `protobuf:"varint,4,opt,name=accNum" json:"accNum,omitempty"`
}

func (m *ST_AchievementFinishedItem_PB) Reset()                    { *m = ST_AchievementFinishedItem_PB{} }
func (m *ST_AchievementFinishedItem_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AchievementFinishedItem_PB) ProtoMessage()               {}
func (*ST_AchievementFinishedItem_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{226} }

func (m *ST_AchievementFinishedItem_PB) GetTaskType() uint32 {
	if m != nil {
		return m.TaskType
	}
	return 0
}

func (m *ST_AchievementFinishedItem_PB) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *ST_AchievementFinishedItem_PB) GetNeedNum() uint64 {
	if m != nil {
		return m.NeedNum
	}
	return 0
}

func (m *ST_AchievementFinishedItem_PB) GetAccNum() uint64 {
	if m != nil {
		return m.AccNum
	}
	return 0
}

// 成就资产列表
type ST_AchievementAsset_PB struct {
	FinishedList []*ST_AchievementFinishedItem_PB `protobuf:"bytes,2,rep,name=finishedList" json:"finishedList,omitempty"`
}

func (m *ST_AchievementAsset_PB) Reset()                    { *m = ST_AchievementAsset_PB{} }
func (m *ST_AchievementAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AchievementAsset_PB) ProtoMessage()               {}
func (*ST_AchievementAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{227} }

func (m *ST_AchievementAsset_PB) GetFinishedList() []*ST_AchievementFinishedItem_PB {
	if m != nil {
		return m.FinishedList
	}
	return nil
}

// 联盟自定义旗帜
type ST_LeagueCustomFlag_PB struct {
	Color      uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	Background uint32 `protobuf:"varint,2,opt,name=background" json:"background,omitempty"`
	Icon       uint32 `protobuf:"varint,3,opt,name=icon" json:"icon,omitempty"`
	CustomFlag string `protobuf:"bytes,4,opt,name=customFlag" json:"customFlag,omitempty"`
}

func (m *ST_LeagueCustomFlag_PB) Reset()                    { *m = ST_LeagueCustomFlag_PB{} }
func (m *ST_LeagueCustomFlag_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueCustomFlag_PB) ProtoMessage()               {}
func (*ST_LeagueCustomFlag_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{228} }

func (m *ST_LeagueCustomFlag_PB) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *ST_LeagueCustomFlag_PB) GetBackground() uint32 {
	if m != nil {
		return m.Background
	}
	return 0
}

func (m *ST_LeagueCustomFlag_PB) GetIcon() uint32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *ST_LeagueCustomFlag_PB) GetCustomFlag() string {
	if m != nil {
		return m.CustomFlag
	}
	return ""
}

// 主城事件资产
type ST_MainCityEvent_PB struct {
	Id                    uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EventID               uint64 `protobuf:"varint,2,opt,name=eventID" json:"eventID,omitempty"`
	EventType             uint64 `protobuf:"varint,3,opt,name=eventType" json:"eventType,omitempty"`
	EventStartTime        uint64 `protobuf:"varint,4,opt,name=eventStartTime" json:"eventStartTime,omitempty"`
	EventTotalTime        uint64 `protobuf:"varint,5,opt,name=eventTotalTime" json:"eventTotalTime,omitempty"`
	EventExecuteStartTime uint64 `protobuf:"varint,6,opt,name=eventExecuteStartTime" json:"eventExecuteStartTime,omitempty"`
	EventExecuteTotalTime uint64 `protobuf:"varint,7,opt,name=eventExecuteTotalTime" json:"eventExecuteTotalTime,omitempty"`
	Px                    uint32 `protobuf:"varint,8,opt,name=px" json:"px,omitempty"`
	Py                    uint32 `protobuf:"varint,9,opt,name=py" json:"py,omitempty"`
	ActionID              uint32 `protobuf:"varint,10,opt,name=actionID" json:"actionID,omitempty"`
	Progress              uint32 `protobuf:"varint,11,opt,name=progress" json:"progress,omitempty"`
}

func (m *ST_MainCityEvent_PB) Reset()                    { *m = ST_MainCityEvent_PB{} }
func (m *ST_MainCityEvent_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MainCityEvent_PB) ProtoMessage()               {}
func (*ST_MainCityEvent_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{229} }

func (m *ST_MainCityEvent_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventID() uint64 {
	if m != nil {
		return m.EventID
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventType() uint64 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventStartTime() uint64 {
	if m != nil {
		return m.EventStartTime
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventTotalTime() uint64 {
	if m != nil {
		return m.EventTotalTime
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventExecuteStartTime() uint64 {
	if m != nil {
		return m.EventExecuteStartTime
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetEventExecuteTotalTime() uint64 {
	if m != nil {
		return m.EventExecuteTotalTime
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetPx() uint32 {
	if m != nil {
		return m.Px
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetPy() uint32 {
	if m != nil {
		return m.Py
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetActionID() uint32 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_MainCityEvent_PB) GetProgress() uint32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

// 主城事件资产（服务器)
type ST_MainCityEvent_Server_Asset_PB struct {
	NextEventID      uint64                 `protobuf:"varint,1,opt,name=nextEventID" json:"nextEventID,omitempty"`
	RandomEventList  []*ST_MainCityEvent_PB `protobuf:"bytes,2,rep,name=randomEventList" json:"randomEventList,omitempty"`
	StaticEventList  []*ST_MainCityEvent_PB `protobuf:"bytes,3,rep,name=staticEventList" json:"staticEventList,omitempty"`
	AllEventList     []*ST_MainCityEvent_PB `protobuf:"bytes,4,rep,name=allEventList" json:"allEventList,omitempty"`
	UnlockLandIDList []uint64               `protobuf:"varint,5,rep,packed,name=unlockLandIDList" json:"unlockLandIDList,omitempty"`
	MaxEventNumber   uint32                 `protobuf:"varint,6,opt,name=maxEventNumber" json:"maxEventNumber,omitempty"`
}

func (m *ST_MainCityEvent_Server_Asset_PB) Reset()         { *m = ST_MainCityEvent_Server_Asset_PB{} }
func (m *ST_MainCityEvent_Server_Asset_PB) String() string { return proto.CompactTextString(m) }
func (*ST_MainCityEvent_Server_Asset_PB) ProtoMessage()    {}
func (*ST_MainCityEvent_Server_Asset_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{230}
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetNextEventID() uint64 {
	if m != nil {
		return m.NextEventID
	}
	return 0
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetRandomEventList() []*ST_MainCityEvent_PB {
	if m != nil {
		return m.RandomEventList
	}
	return nil
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetStaticEventList() []*ST_MainCityEvent_PB {
	if m != nil {
		return m.StaticEventList
	}
	return nil
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetAllEventList() []*ST_MainCityEvent_PB {
	if m != nil {
		return m.AllEventList
	}
	return nil
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetUnlockLandIDList() []uint64 {
	if m != nil {
		return m.UnlockLandIDList
	}
	return nil
}

func (m *ST_MainCityEvent_Server_Asset_PB) GetMaxEventNumber() uint32 {
	if m != nil {
		return m.MaxEventNumber
	}
	return 0
}

// 主城事件资产
type ST_MainCityEventAsset_PB struct {
	RandomEventList  []*ST_MainCityEvent_PB `protobuf:"bytes,1,rep,name=randomEventList" json:"randomEventList,omitempty"`
	StaticEventList  []*ST_MainCityEvent_PB `protobuf:"bytes,2,rep,name=staticEventList" json:"staticEventList,omitempty"`
	UnlockLandIDList []uint64               `protobuf:"varint,3,rep,packed,name=unlockLandIDList" json:"unlockLandIDList,omitempty"`
}

func (m *ST_MainCityEventAsset_PB) Reset()                    { *m = ST_MainCityEventAsset_PB{} }
func (m *ST_MainCityEventAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MainCityEventAsset_PB) ProtoMessage()               {}
func (*ST_MainCityEventAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{231} }

func (m *ST_MainCityEventAsset_PB) GetRandomEventList() []*ST_MainCityEvent_PB {
	if m != nil {
		return m.RandomEventList
	}
	return nil
}

func (m *ST_MainCityEventAsset_PB) GetStaticEventList() []*ST_MainCityEvent_PB {
	if m != nil {
		return m.StaticEventList
	}
	return nil
}

func (m *ST_MainCityEventAsset_PB) GetUnlockLandIDList() []uint64 {
	if m != nil {
		return m.UnlockLandIDList
	}
	return nil
}

// 派遣任务
type ST_DispatchTaskEntry_PB struct {
	Id               uint64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TaskID           uint32   `protobuf:"varint,2,opt,name=taskID" json:"taskID,omitempty"`
	Status           uint32   `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	CreateTime       uint64   `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	StartTime        uint64   `protobuf:"varint,5,opt,name=startTime" json:"startTime,omitempty"`
	LactionID        uint32   `protobuf:"varint,6,opt,name=lactionID" json:"lactionID,omitempty"`
	DispatchHeroList []uint32 `protobuf:"varint,7,rep,packed,name=dispatchHeroList" json:"dispatchHeroList,omitempty"`
	FinishedPercent  uint32   `protobuf:"varint,8,opt,name=finishedPercent" json:"finishedPercent,omitempty"`
}

func (m *ST_DispatchTaskEntry_PB) Reset()                    { *m = ST_DispatchTaskEntry_PB{} }
func (m *ST_DispatchTaskEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DispatchTaskEntry_PB) ProtoMessage()               {}
func (*ST_DispatchTaskEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{232} }

func (m *ST_DispatchTaskEntry_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetTaskID() uint32 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetLactionID() uint32 {
	if m != nil {
		return m.LactionID
	}
	return 0
}

func (m *ST_DispatchTaskEntry_PB) GetDispatchHeroList() []uint32 {
	if m != nil {
		return m.DispatchHeroList
	}
	return nil
}

func (m *ST_DispatchTaskEntry_PB) GetFinishedPercent() uint32 {
	if m != nil {
		return m.FinishedPercent
	}
	return 0
}

// 派遣任务资产
type ST_DispatchTaskAsset_PB struct {
	TaskList        []*ST_DispatchTaskEntry_PB `protobuf:"bytes,1,rep,name=taskList" json:"taskList,omitempty"`
	LastRefreshTime uint64                     `protobuf:"varint,2,opt,name=lastRefreshTime" json:"lastRefreshTime,omitempty"`
}

func (m *ST_DispatchTaskAsset_PB) Reset()                    { *m = ST_DispatchTaskAsset_PB{} }
func (m *ST_DispatchTaskAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DispatchTaskAsset_PB) ProtoMessage()               {}
func (*ST_DispatchTaskAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{233} }

func (m *ST_DispatchTaskAsset_PB) GetTaskList() []*ST_DispatchTaskEntry_PB {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func (m *ST_DispatchTaskAsset_PB) GetLastRefreshTime() uint64 {
	if m != nil {
		return m.LastRefreshTime
	}
	return 0
}

// 雕像资产
type ST_Statue_PB struct {
	ActionID          uint32              `protobuf:"varint,1,opt,name=actionID" json:"actionID,omitempty"`
	BuildingId        uint32              `protobuf:"varint,2,opt,name=buildingId" json:"buildingId,omitempty"`
	StatueStatus      uint32              `protobuf:"varint,3,opt,name=statueStatus" json:"statueStatus,omitempty"`
	StatueID          uint32              `protobuf:"varint,4,opt,name=statueID" json:"statueID,omitempty"`
	StatueLevel       uint32              `protobuf:"varint,5,opt,name=statueLevel" json:"statueLevel,omitempty"`
	StatueClass       uint32              `protobuf:"varint,6,opt,name=statueClass" json:"statueClass,omitempty"`
	BuildStartTime    uint64              `protobuf:"varint,7,opt,name=buildStartTime" json:"buildStartTime,omitempty"`
	BuildRemainTime   uint64              `protobuf:"varint,8,opt,name=buildRemainTime" json:"buildRemainTime,omitempty"`
	BuildTotalTime    uint64              `protobuf:"varint,9,opt,name=buildTotalTime" json:"buildTotalTime,omitempty"`
	LocationX         uint32              `protobuf:"varint,10,opt,name=locationX" json:"locationX,omitempty"`
	LocationY         uint32              `protobuf:"varint,11,opt,name=locationY" json:"locationY,omitempty"`
	BorderX           uint32              `protobuf:"varint,12,opt,name=borderX" json:"borderX,omitempty"`
	BorderY           uint32              `protobuf:"varint,13,opt,name=borderY" json:"borderY,omitempty"`
	FuncKeyArr        []string            `protobuf:"bytes,14,rep,name=funcKeyArr" json:"funcKeyArr,omitempty"`
	FuncValueArr      []uint32            `protobuf:"varint,15,rep,packed,name=funcValueArr" json:"funcValueArr,omitempty"`
	Costs             []*ST_Vector4Int_PB `protobuf:"bytes,16,rep,name=costs" json:"costs,omitempty"`
	HasOpen           bool                `protobuf:"varint,17,opt,name=hasOpen" json:"hasOpen,omitempty"`
	EnhanceStartTime  uint64              `protobuf:"varint,18,opt,name=EnhanceStartTime" json:"EnhanceStartTime,omitempty"`
	EnhanceTotalTime  uint64              `protobuf:"varint,19,opt,name=EnhanceTotalTime" json:"EnhanceTotalTime,omitempty"`
	EnhanceRemainTime uint64              `protobuf:"varint,20,opt,name=EnhanceRemainTime" json:"EnhanceRemainTime,omitempty"`
}

func (m *ST_Statue_PB) Reset()                    { *m = ST_Statue_PB{} }
func (m *ST_Statue_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Statue_PB) ProtoMessage()               {}
func (*ST_Statue_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{234} }

func (m *ST_Statue_PB) GetActionID() uint32 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_Statue_PB) GetBuildingId() uint32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

func (m *ST_Statue_PB) GetStatueStatus() uint32 {
	if m != nil {
		return m.StatueStatus
	}
	return 0
}

func (m *ST_Statue_PB) GetStatueID() uint32 {
	if m != nil {
		return m.StatueID
	}
	return 0
}

func (m *ST_Statue_PB) GetStatueLevel() uint32 {
	if m != nil {
		return m.StatueLevel
	}
	return 0
}

func (m *ST_Statue_PB) GetStatueClass() uint32 {
	if m != nil {
		return m.StatueClass
	}
	return 0
}

func (m *ST_Statue_PB) GetBuildStartTime() uint64 {
	if m != nil {
		return m.BuildStartTime
	}
	return 0
}

func (m *ST_Statue_PB) GetBuildRemainTime() uint64 {
	if m != nil {
		return m.BuildRemainTime
	}
	return 0
}

func (m *ST_Statue_PB) GetBuildTotalTime() uint64 {
	if m != nil {
		return m.BuildTotalTime
	}
	return 0
}

func (m *ST_Statue_PB) GetLocationX() uint32 {
	if m != nil {
		return m.LocationX
	}
	return 0
}

func (m *ST_Statue_PB) GetLocationY() uint32 {
	if m != nil {
		return m.LocationY
	}
	return 0
}

func (m *ST_Statue_PB) GetBorderX() uint32 {
	if m != nil {
		return m.BorderX
	}
	return 0
}

func (m *ST_Statue_PB) GetBorderY() uint32 {
	if m != nil {
		return m.BorderY
	}
	return 0
}

func (m *ST_Statue_PB) GetFuncKeyArr() []string {
	if m != nil {
		return m.FuncKeyArr
	}
	return nil
}

func (m *ST_Statue_PB) GetFuncValueArr() []uint32 {
	if m != nil {
		return m.FuncValueArr
	}
	return nil
}

func (m *ST_Statue_PB) GetCosts() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Costs
	}
	return nil
}

func (m *ST_Statue_PB) GetHasOpen() bool {
	if m != nil {
		return m.HasOpen
	}
	return false
}

func (m *ST_Statue_PB) GetEnhanceStartTime() uint64 {
	if m != nil {
		return m.EnhanceStartTime
	}
	return 0
}

func (m *ST_Statue_PB) GetEnhanceTotalTime() uint64 {
	if m != nil {
		return m.EnhanceTotalTime
	}
	return 0
}

func (m *ST_Statue_PB) GetEnhanceRemainTime() uint64 {
	if m != nil {
		return m.EnhanceRemainTime
	}
	return 0
}

// 雕像相关资产
type ST_StatueAsset_PB struct {
	StatueList []*ST_Statue_PB `protobuf:"bytes,1,rep,name=statueList" json:"statueList,omitempty"`
}

func (m *ST_StatueAsset_PB) Reset()                    { *m = ST_StatueAsset_PB{} }
func (m *ST_StatueAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StatueAsset_PB) ProtoMessage()               {}
func (*ST_StatueAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{235} }

func (m *ST_StatueAsset_PB) GetStatueList() []*ST_Statue_PB {
	if m != nil {
		return m.StatueList
	}
	return nil
}

// 每日签到任务
type ST_SignInAsset_PB struct {
	Id                 uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartTime          uint64 `protobuf:"varint,2,opt,name=startTime" json:"startTime,omitempty"`
	LastDailyLoginTime uint64 `protobuf:"varint,3,opt,name=lastDailyLoginTime" json:"lastDailyLoginTime,omitempty"`
	LastDailyLoginId   uint32 `protobuf:"varint,4,opt,name=lastDailyLoginId" json:"lastDailyLoginId,omitempty"`
	DailyLoginId       uint32 `protobuf:"varint,5,opt,name=dailyLoginId" json:"dailyLoginId,omitempty"`
	PopDailyLogin      uint32 `protobuf:"varint,6,opt,name=popDailyLogin" json:"popDailyLogin,omitempty"`
	DailyLoginCount    uint32 `protobuf:"varint,7,opt,name=dailyLoginCount" json:"dailyLoginCount,omitempty"`
	EndTime            uint64 `protobuf:"varint,8,opt,name=endTime" json:"endTime,omitempty"`
	RewardTimes        uint32 `protobuf:"varint,9,opt,name=rewardTimes" json:"rewardTimes,omitempty"`
}

func (m *ST_SignInAsset_PB) Reset()                    { *m = ST_SignInAsset_PB{} }
func (m *ST_SignInAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SignInAsset_PB) ProtoMessage()               {}
func (*ST_SignInAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{236} }

func (m *ST_SignInAsset_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetLastDailyLoginTime() uint64 {
	if m != nil {
		return m.LastDailyLoginTime
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetLastDailyLoginId() uint32 {
	if m != nil {
		return m.LastDailyLoginId
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetDailyLoginId() uint32 {
	if m != nil {
		return m.DailyLoginId
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetPopDailyLogin() uint32 {
	if m != nil {
		return m.PopDailyLogin
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetDailyLoginCount() uint32 {
	if m != nil {
		return m.DailyLoginCount
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_SignInAsset_PB) GetRewardTimes() uint32 {
	if m != nil {
		return m.RewardTimes
	}
	return 0
}

// 城市信息
type ST_WorldCity_PB struct {
	CityID   uint32 `protobuf:"varint,1,opt,name=cityID" json:"cityID,omitempty"`
	LeagueID uint64 `protobuf:"varint,2,opt,name=leagueID" json:"leagueID,omitempty"`
}

func (m *ST_WorldCity_PB) Reset()                    { *m = ST_WorldCity_PB{} }
func (m *ST_WorldCity_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldCity_PB) ProtoMessage()               {}
func (*ST_WorldCity_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{237} }

func (m *ST_WorldCity_PB) GetCityID() uint32 {
	if m != nil {
		return m.CityID
	}
	return 0
}

func (m *ST_WorldCity_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

type ST_WorldCityList_PB struct {
	CityList []*ST_WorldCity_PB `protobuf:"bytes,1,rep,name=cityList" json:"cityList,omitempty"`
}

func (m *ST_WorldCityList_PB) Reset()                    { *m = ST_WorldCityList_PB{} }
func (m *ST_WorldCityList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldCityList_PB) ProtoMessage()               {}
func (*ST_WorldCityList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{238} }

func (m *ST_WorldCityList_PB) GetCityList() []*ST_WorldCity_PB {
	if m != nil {
		return m.CityList
	}
	return nil
}

// 翻译结果
type ST_TranslateResult_PB struct {
	Status         uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	TransResult    string `protobuf:"bytes,2,opt,name=transResult" json:"transResult,omitempty"`
	ChannelID      int32  `protobuf:"varint,3,opt,name=channelID" json:"channelID,omitempty"`
	SubChannelID   int32  `protobuf:"varint,4,opt,name=subChannelID" json:"subChannelID,omitempty"`
	TitleID        uint64 `protobuf:"varint,5,opt,name=titleID" json:"titleID,omitempty"`
	ChatEntryIndex uint64 `protobuf:"varint,6,opt,name=chatEntryIndex" json:"chatEntryIndex,omitempty"`
	TranslateType  uint32 `protobuf:"varint,7,opt,name=translateType" json:"translateType,omitempty"`
}

func (m *ST_TranslateResult_PB) Reset()                    { *m = ST_TranslateResult_PB{} }
func (m *ST_TranslateResult_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_TranslateResult_PB) ProtoMessage()               {}
func (*ST_TranslateResult_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{239} }

func (m *ST_TranslateResult_PB) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_TranslateResult_PB) GetTransResult() string {
	if m != nil {
		return m.TransResult
	}
	return ""
}

func (m *ST_TranslateResult_PB) GetChannelID() int32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *ST_TranslateResult_PB) GetSubChannelID() int32 {
	if m != nil {
		return m.SubChannelID
	}
	return 0
}

func (m *ST_TranslateResult_PB) GetTitleID() uint64 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_TranslateResult_PB) GetChatEntryIndex() uint64 {
	if m != nil {
		return m.ChatEntryIndex
	}
	return 0
}

func (m *ST_TranslateResult_PB) GetTranslateType() uint32 {
	if m != nil {
		return m.TranslateType
	}
	return 0
}

// 个人信息
type ST_RoleInformation_PB struct {
	MyRank           uint32           `protobuf:"varint,1,opt,name=myRank" json:"myRank,omitempty"`
	Power            uint64           `protobuf:"varint,2,opt,name=power" json:"power,omitempty"`
	LossUnits        *ST_UnitAsset_PB `protobuf:"bytes,3,opt,name=lossUnits" json:"lossUnits,omitempty"`
	AttackWin        uint32           `protobuf:"varint,4,opt,name=attackWin" json:"attackWin,omitempty"`
	DefenceWin       uint32           `protobuf:"varint,5,opt,name=defenceWin" json:"defenceWin,omitempty"`
	AttackFail       uint32           `protobuf:"varint,6,opt,name=attackFail" json:"attackFail,omitempty"`
	DefenceFail      uint32           `protobuf:"varint,7,opt,name=defenceFail" json:"defenceFail,omitempty"`
	KillUnits        *ST_UnitAsset_PB `protobuf:"bytes,8,opt,name=killUnits" json:"killUnits,omitempty"`
	RepairUnits      *ST_UnitAsset_PB `protobuf:"bytes,9,opt,name=repairUnits" json:"repairUnits,omitempty"`
	SpyTimes         uint32           `protobuf:"varint,10,opt,name=spyTimes" json:"spyTimes,omitempty"`
	ArrestHero       uint32           `protobuf:"varint,11,opt,name=arrestHero" json:"arrestHero,omitempty"`
	KillHero         uint32           `protobuf:"varint,12,opt,name=killHero" json:"killHero,omitempty"`
	GetReward        uint64           `protobuf:"varint,13,opt,name=getReward" json:"getReward,omitempty"`
	CaptivedTime     uint32           `protobuf:"varint,14,opt,name=captivedTime" json:"captivedTime,omitempty"`
	EscapeTime       uint32           `protobuf:"varint,15,opt,name=escapeTime" json:"escapeTime,omitempty"`
	ExecutedTime     uint32           `protobuf:"varint,16,opt,name=executedTime" json:"executedTime,omitempty"`
	LeagueHelpTime   uint32           `protobuf:"varint,17,opt,name=leagueHelpTime" json:"leagueHelpTime,omitempty"`
	MassLimit        uint64           `protobuf:"varint,18,opt,name=massLimit" json:"massLimit,omitempty"`
	TransforResource *ST_CashAsset_PB `protobuf:"bytes,19,opt,name=transforResource" json:"transforResource,omitempty"`
	CollectResource  *ST_CashAsset_PB `protobuf:"bytes,20,opt,name=collectResource" json:"collectResource,omitempty"`
}

func (m *ST_RoleInformation_PB) Reset()                    { *m = ST_RoleInformation_PB{} }
func (m *ST_RoleInformation_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_RoleInformation_PB) ProtoMessage()               {}
func (*ST_RoleInformation_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{240} }

func (m *ST_RoleInformation_PB) GetMyRank() uint32 {
	if m != nil {
		return m.MyRank
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetLossUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.LossUnits
	}
	return nil
}

func (m *ST_RoleInformation_PB) GetAttackWin() uint32 {
	if m != nil {
		return m.AttackWin
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetDefenceWin() uint32 {
	if m != nil {
		return m.DefenceWin
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetAttackFail() uint32 {
	if m != nil {
		return m.AttackFail
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetDefenceFail() uint32 {
	if m != nil {
		return m.DefenceFail
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetKillUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.KillUnits
	}
	return nil
}

func (m *ST_RoleInformation_PB) GetRepairUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.RepairUnits
	}
	return nil
}

func (m *ST_RoleInformation_PB) GetSpyTimes() uint32 {
	if m != nil {
		return m.SpyTimes
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetArrestHero() uint32 {
	if m != nil {
		return m.ArrestHero
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetKillHero() uint32 {
	if m != nil {
		return m.KillHero
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetGetReward() uint64 {
	if m != nil {
		return m.GetReward
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetCaptivedTime() uint32 {
	if m != nil {
		return m.CaptivedTime
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetEscapeTime() uint32 {
	if m != nil {
		return m.EscapeTime
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetExecutedTime() uint32 {
	if m != nil {
		return m.ExecutedTime
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetLeagueHelpTime() uint32 {
	if m != nil {
		return m.LeagueHelpTime
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetMassLimit() uint64 {
	if m != nil {
		return m.MassLimit
	}
	return 0
}

func (m *ST_RoleInformation_PB) GetTransforResource() *ST_CashAsset_PB {
	if m != nil {
		return m.TransforResource
	}
	return nil
}

func (m *ST_RoleInformation_PB) GetCollectResource() *ST_CashAsset_PB {
	if m != nil {
		return m.CollectResource
	}
	return nil
}

// 跑马灯消息
type ST_GlobalMessage_PB struct {
	TipsContent *ST_Tips_PB                 `protobuf:"bytes,1,opt,name=tipsContent" json:"tipsContent,omitempty"`
	TextContent string                      `protobuf:"bytes,2,opt,name=textContent" json:"textContent,omitempty"`
	Conditions  []*ST_EveryoneMailCondition `protobuf:"bytes,3,rep,name=conditions" json:"conditions,omitempty"`
}

func (m *ST_GlobalMessage_PB) Reset()                    { *m = ST_GlobalMessage_PB{} }
func (m *ST_GlobalMessage_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalMessage_PB) ProtoMessage()               {}
func (*ST_GlobalMessage_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{241} }

func (m *ST_GlobalMessage_PB) GetTipsContent() *ST_Tips_PB {
	if m != nil {
		return m.TipsContent
	}
	return nil
}

func (m *ST_GlobalMessage_PB) GetTextContent() string {
	if m != nil {
		return m.TextContent
	}
	return ""
}

func (m *ST_GlobalMessage_PB) GetConditions() []*ST_EveryoneMailCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

type ST_GlobalMessageList_PB struct {
	Messages []*ST_GlobalMessage_PB `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (m *ST_GlobalMessageList_PB) Reset()                    { *m = ST_GlobalMessageList_PB{} }
func (m *ST_GlobalMessageList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalMessageList_PB) ProtoMessage()               {}
func (*ST_GlobalMessageList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{242} }

func (m *ST_GlobalMessageList_PB) GetMessages() []*ST_GlobalMessage_PB {
	if m != nil {
		return m.Messages
	}
	return nil
}

// 主城漫步英雄时间资产
type ST_StrollHeroEventAsset_PB struct {
	EventList []*ST_StrollHeroEvent_PB `protobuf:"bytes,1,rep,name=eventList" json:"eventList,omitempty"`
}

func (m *ST_StrollHeroEventAsset_PB) Reset()                    { *m = ST_StrollHeroEventAsset_PB{} }
func (m *ST_StrollHeroEventAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StrollHeroEventAsset_PB) ProtoMessage()               {}
func (*ST_StrollHeroEventAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{243} }

func (m *ST_StrollHeroEventAsset_PB) GetEventList() []*ST_StrollHeroEvent_PB {
	if m != nil {
		return m.EventList
	}
	return nil
}

type ST_StrollHeroEvent_PB struct {
	Id            uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EventID       uint64 `protobuf:"varint,2,opt,name=eventID" json:"eventID,omitempty"`
	HeroID        uint32 `protobuf:"varint,3,opt,name=heroID" json:"heroID,omitempty"`
	HeroQuality   uint32 `protobuf:"varint,4,opt,name=heroQuality" json:"heroQuality,omitempty"`
	OwnerUID      uint64 `protobuf:"varint,5,opt,name=ownerUID" json:"ownerUID,omitempty"`
	OwnerLeagueID uint64 `protobuf:"varint,6,opt,name=ownerLeagueID" json:"ownerLeagueID,omitempty"`
	PosX          uint32 `protobuf:"varint,7,opt,name=posX" json:"posX,omitempty"`
	PosY          uint32 `protobuf:"varint,8,opt,name=posY" json:"posY,omitempty"`
	HeroType      uint32 `protobuf:"varint,9,opt,name=heroType" json:"heroType,omitempty"`
	HeroLevel     uint32 `protobuf:"varint,10,opt,name=heroLevel" json:"heroLevel,omitempty"`
}

func (m *ST_StrollHeroEvent_PB) Reset()                    { *m = ST_StrollHeroEvent_PB{} }
func (m *ST_StrollHeroEvent_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StrollHeroEvent_PB) ProtoMessage()               {}
func (*ST_StrollHeroEvent_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{244} }

func (m *ST_StrollHeroEvent_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetEventID() uint64 {
	if m != nil {
		return m.EventID
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetHeroID() uint32 {
	if m != nil {
		return m.HeroID
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetHeroQuality() uint32 {
	if m != nil {
		return m.HeroQuality
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetOwnerUID() uint64 {
	if m != nil {
		return m.OwnerUID
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetOwnerLeagueID() uint64 {
	if m != nil {
		return m.OwnerLeagueID
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetPosX() uint32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetPosY() uint32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetHeroType() uint32 {
	if m != nil {
		return m.HeroType
	}
	return 0
}

func (m *ST_StrollHeroEvent_PB) GetHeroLevel() uint32 {
	if m != nil {
		return m.HeroLevel
	}
	return 0
}

type ST_LeagueShopRecordList_PB struct {
	ItemList []*ST_LeagueShopRecord_PB `protobuf:"bytes,1,rep,name=itemList" json:"itemList,omitempty"`
}

func (m *ST_LeagueShopRecordList_PB) Reset()                    { *m = ST_LeagueShopRecordList_PB{} }
func (m *ST_LeagueShopRecordList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueShopRecordList_PB) ProtoMessage()               {}
func (*ST_LeagueShopRecordList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{245} }

func (m *ST_LeagueShopRecordList_PB) GetItemList() []*ST_LeagueShopRecord_PB {
	if m != nil {
		return m.ItemList
	}
	return nil
}

type ST_LeagueShopRecord_PB struct {
	Uid      uint64           `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Time     uint64           `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	ItemData *ST_ItemEntry_PB `protobuf:"bytes,3,opt,name=itemData" json:"itemData,omitempty"`
}

func (m *ST_LeagueShopRecord_PB) Reset()                    { *m = ST_LeagueShopRecord_PB{} }
func (m *ST_LeagueShopRecord_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueShopRecord_PB) ProtoMessage()               {}
func (*ST_LeagueShopRecord_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{246} }

func (m *ST_LeagueShopRecord_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_LeagueShopRecord_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_LeagueShopRecord_PB) GetItemData() *ST_ItemEntry_PB {
	if m != nil {
		return m.ItemData
	}
	return nil
}

// 全员邮件文本内容
type ST_EveryoneMailItem struct {
	LanguageId uint32 `protobuf:"varint,1,opt,name=languageId" json:"languageId,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *ST_EveryoneMailItem) Reset()                    { *m = ST_EveryoneMailItem{} }
func (m *ST_EveryoneMailItem) String() string            { return proto.CompactTextString(m) }
func (*ST_EveryoneMailItem) ProtoMessage()               {}
func (*ST_EveryoneMailItem) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{247} }

func (m *ST_EveryoneMailItem) GetLanguageId() uint32 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

func (m *ST_EveryoneMailItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ST_EveryoneMailItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 全员邮件领取条件
type ST_EveryoneMailCondition struct {
	ConditionType   EveryoneMailConditionType `protobuf:"varint,1,opt,name=conditionType,enum=proto_micro.EveryoneMailConditionType" json:"conditionType,omitempty"`
	ConditionValues []string                  `protobuf:"bytes,2,rep,name=conditionValues" json:"conditionValues,omitempty"`
}

func (m *ST_EveryoneMailCondition) Reset()                    { *m = ST_EveryoneMailCondition{} }
func (m *ST_EveryoneMailCondition) String() string            { return proto.CompactTextString(m) }
func (*ST_EveryoneMailCondition) ProtoMessage()               {}
func (*ST_EveryoneMailCondition) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{248} }

func (m *ST_EveryoneMailCondition) GetConditionType() EveryoneMailConditionType {
	if m != nil {
		return m.ConditionType
	}
	return EveryoneMailConditionType_EMCT_VipLevel
}

func (m *ST_EveryoneMailCondition) GetConditionValues() []string {
	if m != nil {
		return m.ConditionValues
	}
	return nil
}

// 全员邮件
type ST_EveryoneMailContent struct {
	Content    []*ST_EveryoneMailItem      `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
	Conditions []*ST_EveryoneMailCondition `protobuf:"bytes,2,rep,name=conditions" json:"conditions,omitempty"`
	MailId     string                      `protobuf:"bytes,3,opt,name=mailId" json:"mailId,omitempty"`
}

func (m *ST_EveryoneMailContent) Reset()                    { *m = ST_EveryoneMailContent{} }
func (m *ST_EveryoneMailContent) String() string            { return proto.CompactTextString(m) }
func (*ST_EveryoneMailContent) ProtoMessage()               {}
func (*ST_EveryoneMailContent) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{249} }

func (m *ST_EveryoneMailContent) GetContent() []*ST_EveryoneMailItem {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ST_EveryoneMailContent) GetConditions() []*ST_EveryoneMailCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *ST_EveryoneMailContent) GetMailId() string {
	if m != nil {
		return m.MailId
	}
	return ""
}

// 设置
type ST_SettingAsset_PB struct {
	BlockListUid   []uint64                  `protobuf:"varint,1,rep,packed,name=blockListUid" json:"blockListUid,omitempty"`
	Audio          *ST_AudioSetting_PB       `protobuf:"bytes,2,opt,name=audio" json:"audio,omitempty"`
	Notifiction    *ST_NotifictionSetting_PB `protobuf:"bytes,3,opt,name=notifiction" json:"notifiction,omitempty"`
	Power          []*ST_PowerChat_PB        `protobuf:"bytes,4,rep,name=power" json:"power,omitempty"`
	LastReportTime uint64                    `protobuf:"varint,5,opt,name=lastReportTime" json:"lastReportTime,omitempty"`
	DayReportCount uint32                    `protobuf:"varint,6,opt,name=dayReportCount" json:"dayReportCount,omitempty"`
	FeedMark       *ST_FeedbackMark          `protobuf:"bytes,7,opt,name=feedMark" json:"feedMark,omitempty"`
}

func (m *ST_SettingAsset_PB) Reset()                    { *m = ST_SettingAsset_PB{} }
func (m *ST_SettingAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SettingAsset_PB) ProtoMessage()               {}
func (*ST_SettingAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{250} }

func (m *ST_SettingAsset_PB) GetBlockListUid() []uint64 {
	if m != nil {
		return m.BlockListUid
	}
	return nil
}

func (m *ST_SettingAsset_PB) GetAudio() *ST_AudioSetting_PB {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *ST_SettingAsset_PB) GetNotifiction() *ST_NotifictionSetting_PB {
	if m != nil {
		return m.Notifiction
	}
	return nil
}

func (m *ST_SettingAsset_PB) GetPower() []*ST_PowerChat_PB {
	if m != nil {
		return m.Power
	}
	return nil
}

func (m *ST_SettingAsset_PB) GetLastReportTime() uint64 {
	if m != nil {
		return m.LastReportTime
	}
	return 0
}

func (m *ST_SettingAsset_PB) GetDayReportCount() uint32 {
	if m != nil {
		return m.DayReportCount
	}
	return 0
}

func (m *ST_SettingAsset_PB) GetFeedMark() *ST_FeedbackMark {
	if m != nil {
		return m.FeedMark
	}
	return nil
}

type ST_PowerChat_PB struct {
	Power  uint64 `protobuf:"varint,1,opt,name=power" json:"power,omitempty"`
	IsChat bool   `protobuf:"varint,2,opt,name=isChat" json:"isChat,omitempty"`
}

func (m *ST_PowerChat_PB) Reset()                    { *m = ST_PowerChat_PB{} }
func (m *ST_PowerChat_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PowerChat_PB) ProtoMessage()               {}
func (*ST_PowerChat_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{251} }

func (m *ST_PowerChat_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_PowerChat_PB) GetIsChat() bool {
	if m != nil {
		return m.IsChat
	}
	return false
}

// 声音设置
type ST_AudioSetting_PB struct {
	BgmChannel bool `protobuf:"varint,1,opt,name=BgmChannel" json:"BgmChannel,omitempty"`
	SfxChannel bool `protobuf:"varint,2,opt,name=SfxChannel" json:"SfxChannel,omitempty"`
}

func (m *ST_AudioSetting_PB) Reset()                    { *m = ST_AudioSetting_PB{} }
func (m *ST_AudioSetting_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AudioSetting_PB) ProtoMessage()               {}
func (*ST_AudioSetting_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{252} }

func (m *ST_AudioSetting_PB) GetBgmChannel() bool {
	if m != nil {
		return m.BgmChannel
	}
	return false
}

func (m *ST_AudioSetting_PB) GetSfxChannel() bool {
	if m != nil {
		return m.SfxChannel
	}
	return false
}

// 通知设置
type ST_NotifictionSetting_PB struct {
	Setting int64 `protobuf:"varint,1,opt,name=setting" json:"setting,omitempty"`
}

func (m *ST_NotifictionSetting_PB) Reset()                    { *m = ST_NotifictionSetting_PB{} }
func (m *ST_NotifictionSetting_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_NotifictionSetting_PB) ProtoMessage()               {}
func (*ST_NotifictionSetting_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{253} }

func (m *ST_NotifictionSetting_PB) GetSetting() int64 {
	if m != nil {
		return m.Setting
	}
	return 0
}

// 评分反馈弹窗
type ST_FeedbackMark struct {
	FirstOrangeHero bool     `protobuf:"varint,1,opt,name=firstOrangeHero" json:"firstOrangeHero,omitempty"`
	FirstWinPlayer  bool     `protobuf:"varint,2,opt,name=firstWinPlayer" json:"firstWinPlayer,omitempty"`
	Power           uint32   `protobuf:"varint,3,opt,name=power" json:"power,omitempty"`
	PopIds          []uint32 `protobuf:"varint,4,rep,packed,name=popIds" json:"popIds,omitempty"`
	CancelTms       uint32   `protobuf:"varint,5,opt,name=cancelTms" json:"cancelTms,omitempty"`
	Marked          bool     `protobuf:"varint,6,opt,name=marked" json:"marked,omitempty"`
	Rewarded        bool     `protobuf:"varint,7,opt,name=rewarded" json:"rewarded,omitempty"`
}

func (m *ST_FeedbackMark) Reset()                    { *m = ST_FeedbackMark{} }
func (m *ST_FeedbackMark) String() string            { return proto.CompactTextString(m) }
func (*ST_FeedbackMark) ProtoMessage()               {}
func (*ST_FeedbackMark) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{254} }

func (m *ST_FeedbackMark) GetFirstOrangeHero() bool {
	if m != nil {
		return m.FirstOrangeHero
	}
	return false
}

func (m *ST_FeedbackMark) GetFirstWinPlayer() bool {
	if m != nil {
		return m.FirstWinPlayer
	}
	return false
}

func (m *ST_FeedbackMark) GetPower() uint32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_FeedbackMark) GetPopIds() []uint32 {
	if m != nil {
		return m.PopIds
	}
	return nil
}

func (m *ST_FeedbackMark) GetCancelTms() uint32 {
	if m != nil {
		return m.CancelTms
	}
	return 0
}

func (m *ST_FeedbackMark) GetMarked() bool {
	if m != nil {
		return m.Marked
	}
	return false
}

func (m *ST_FeedbackMark) GetRewarded() bool {
	if m != nil {
		return m.Rewarded
	}
	return false
}

// 设置修改结构
type ST_UserSettingsAlterParams struct {
	LanguageId   uint32                    `protobuf:"varint,1,opt,name=languageId" json:"languageId,omitempty"`
	AddIdList    []uint64                  `protobuf:"varint,2,rep,packed,name=addIdList" json:"addIdList,omitempty"`
	RemoveIdList []uint64                  `protobuf:"varint,3,rep,packed,name=removeIdList" json:"removeIdList,omitempty"`
	Audio        *ST_AudioSetting_PB       `protobuf:"bytes,4,opt,name=audio" json:"audio,omitempty"`
	Notifiction  *ST_NotifictionSetting_PB `protobuf:"bytes,5,opt,name=notifiction" json:"notifiction,omitempty"`
}

func (m *ST_UserSettingsAlterParams) Reset()                    { *m = ST_UserSettingsAlterParams{} }
func (m *ST_UserSettingsAlterParams) String() string            { return proto.CompactTextString(m) }
func (*ST_UserSettingsAlterParams) ProtoMessage()               {}
func (*ST_UserSettingsAlterParams) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{255} }

func (m *ST_UserSettingsAlterParams) GetLanguageId() uint32 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

func (m *ST_UserSettingsAlterParams) GetAddIdList() []uint64 {
	if m != nil {
		return m.AddIdList
	}
	return nil
}

func (m *ST_UserSettingsAlterParams) GetRemoveIdList() []uint64 {
	if m != nil {
		return m.RemoveIdList
	}
	return nil
}

func (m *ST_UserSettingsAlterParams) GetAudio() *ST_AudioSetting_PB {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *ST_UserSettingsAlterParams) GetNotifiction() *ST_NotifictionSetting_PB {
	if m != nil {
		return m.Notifiction
	}
	return nil
}

// 新手引导资产
type ST_BeginnerTutorialAsset_PB struct {
	FinishedTutorialList []uint32                    `protobuf:"varint,1,rep,packed,name=FinishedTutorialList" json:"FinishedTutorialList,omitempty"`
	FirstEnterBigMap     bool                        `protobuf:"varint,2,opt,name=FirstEnterBigMap" json:"FirstEnterBigMap,omitempty"`
	FirstEnterGame       bool                        `protobuf:"varint,3,opt,name=FirstEnterGame" json:"FirstEnterGame,omitempty"`
	FirstTutorialTime    []*ST_FirstTutorialAsset_PB `protobuf:"bytes,4,rep,name=FirstTutorialTime" json:"FirstTutorialTime,omitempty"`
	FirstLeagueBox       bool                        `protobuf:"varint,5,opt,name=FirstLeagueBox" json:"FirstLeagueBox,omitempty"`
	FirstLordPage        bool                        `protobuf:"varint,6,opt,name=FirstLordPage" json:"FirstLordPage,omitempty"`
	FirstTechPage        bool                        `protobuf:"varint,7,opt,name=FirstTechPage" json:"FirstTechPage,omitempty"`
	FirstPay             bool                        `protobuf:"varint,8,opt,name=FirstPay" json:"FirstPay,omitempty"`
	FirstProduceUnit     bool                        `protobuf:"varint,9,opt,name=FirstProduceUnit" json:"FirstProduceUnit,omitempty"`
	FirstCash5           bool                        `protobuf:"varint,10,opt,name=FirstCash5" json:"FirstCash5,omitempty"`
	FirstCash3           bool                        `protobuf:"varint,11,opt,name=FirstCash3" json:"FirstCash3,omitempty"`
}

func (m *ST_BeginnerTutorialAsset_PB) Reset()                    { *m = ST_BeginnerTutorialAsset_PB{} }
func (m *ST_BeginnerTutorialAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BeginnerTutorialAsset_PB) ProtoMessage()               {}
func (*ST_BeginnerTutorialAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{256} }

func (m *ST_BeginnerTutorialAsset_PB) GetFinishedTutorialList() []uint32 {
	if m != nil {
		return m.FinishedTutorialList
	}
	return nil
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstEnterBigMap() bool {
	if m != nil {
		return m.FirstEnterBigMap
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstEnterGame() bool {
	if m != nil {
		return m.FirstEnterGame
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstTutorialTime() []*ST_FirstTutorialAsset_PB {
	if m != nil {
		return m.FirstTutorialTime
	}
	return nil
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstLeagueBox() bool {
	if m != nil {
		return m.FirstLeagueBox
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstLordPage() bool {
	if m != nil {
		return m.FirstLordPage
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstTechPage() bool {
	if m != nil {
		return m.FirstTechPage
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstPay() bool {
	if m != nil {
		return m.FirstPay
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstProduceUnit() bool {
	if m != nil {
		return m.FirstProduceUnit
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstCash5() bool {
	if m != nil {
		return m.FirstCash5
	}
	return false
}

func (m *ST_BeginnerTutorialAsset_PB) GetFirstCash3() bool {
	if m != nil {
		return m.FirstCash3
	}
	return false
}

// 首次引导次数
type ST_FirstTutorialAsset_PB struct {
	TutorialType uint32 `protobuf:"varint,1,opt,name=tutorialType" json:"tutorialType,omitempty"`
	TutorialTime uint32 `protobuf:"varint,2,opt,name=tutorialTime" json:"tutorialTime,omitempty"`
}

func (m *ST_FirstTutorialAsset_PB) Reset()                    { *m = ST_FirstTutorialAsset_PB{} }
func (m *ST_FirstTutorialAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_FirstTutorialAsset_PB) ProtoMessage()               {}
func (*ST_FirstTutorialAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{257} }

func (m *ST_FirstTutorialAsset_PB) GetTutorialType() uint32 {
	if m != nil {
		return m.TutorialType
	}
	return 0
}

func (m *ST_FirstTutorialAsset_PB) GetTutorialTime() uint32 {
	if m != nil {
		return m.TutorialTime
	}
	return 0
}

type ST_SetMemberTitles_PB struct {
	Titles []*ST_LeagueMemberTitleName_PB `protobuf:"bytes,1,rep,name=titles" json:"titles,omitempty"`
}

func (m *ST_SetMemberTitles_PB) Reset()                    { *m = ST_SetMemberTitles_PB{} }
func (m *ST_SetMemberTitles_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SetMemberTitles_PB) ProtoMessage()               {}
func (*ST_SetMemberTitles_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{258} }

func (m *ST_SetMemberTitles_PB) GetTitles() []*ST_LeagueMemberTitleName_PB {
	if m != nil {
		return m.Titles
	}
	return nil
}

type ST_Activity_PB struct {
	ServerID     uint32 `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	ActivityId   uint32 `protobuf:"varint,2,opt,name=activityId" json:"activityId,omitempty"`
	ActivityType uint32 `protobuf:"varint,3,opt,name=activityType" json:"activityType,omitempty"`
	// 随机组
	GroupId uint32 `protobuf:"varint,4,opt,name=groupId" json:"groupId,omitempty"`
	// 活动场次
	Number         uint32 `protobuf:"varint,5,opt,name=number" json:"number,omitempty"`
	Stage          uint32 `protobuf:"varint,6,opt,name=stage" json:"stage,omitempty"`
	StageStartTime uint64 `protobuf:"varint,7,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StagetEndTime  uint64 `protobuf:"varint,8,opt,name=stagetEndTime" json:"stagetEndTime,omitempty"`
	// 排行总榜
	TotalList *ST_ActivityDetail_PB `protobuf:"bytes,10,opt,name=totalList" json:"totalList,omitempty"`
	Idx       uint32                `protobuf:"varint,11,opt,name=idx" json:"idx,omitempty"`
	Isdirty   bool                  `protobuf:"varint,12,opt,name=isdirty" json:"isdirty,omitempty"`
	Ver       int64                 `protobuf:"varint,13,opt,name=ver" json:"ver,omitempty"`
	// 联盟杯报名阶段
	Substage uint32 `protobuf:"varint,14,opt,name=substage" json:"substage,omitempty"`
	// 阶段时长
	Time           string `protobuf:"bytes,15,opt,name=Time" json:"Time,omitempty"`
	RankingGroupId uint32 `protobuf:"varint,16,opt,name=rankingGroupId" json:"rankingGroupId,omitempty"`
}

func (m *ST_Activity_PB) Reset()                    { *m = ST_Activity_PB{} }
func (m *ST_Activity_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Activity_PB) ProtoMessage()               {}
func (*ST_Activity_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{259} }

func (m *ST_Activity_PB) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *ST_Activity_PB) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ST_Activity_PB) GetActivityType() uint32 {
	if m != nil {
		return m.ActivityType
	}
	return 0
}

func (m *ST_Activity_PB) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ST_Activity_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Activity_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Activity_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Activity_PB) GetStagetEndTime() uint64 {
	if m != nil {
		return m.StagetEndTime
	}
	return 0
}

func (m *ST_Activity_PB) GetTotalList() *ST_ActivityDetail_PB {
	if m != nil {
		return m.TotalList
	}
	return nil
}

func (m *ST_Activity_PB) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *ST_Activity_PB) GetIsdirty() bool {
	if m != nil {
		return m.Isdirty
	}
	return false
}

func (m *ST_Activity_PB) GetVer() int64 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *ST_Activity_PB) GetSubstage() uint32 {
	if m != nil {
		return m.Substage
	}
	return 0
}

func (m *ST_Activity_PB) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ST_Activity_PB) GetRankingGroupId() uint32 {
	if m != nil {
		return m.RankingGroupId
	}
	return 0
}

type ST_ActivityScore_PB struct {
	Uid       uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Luid      uint64 `protobuf:"varint,3,opt,name=luid" json:"luid,omitempty"`
	Lname     string `protobuf:"bytes,4,opt,name=lname" json:"lname,omitempty"`
	Llname    string `protobuf:"bytes,5,opt,name=llname" json:"llname,omitempty"`
	Score     uint32 `protobuf:"varint,6,opt,name=score" json:"score,omitempty"`
	RankOrder uint32 `protobuf:"varint,7,opt,name=rankOrder" json:"rankOrder,omitempty"`
	ContentID uint32 `protobuf:"varint,8,opt,name=contentID" json:"contentID,omitempty"`
}

func (m *ST_ActivityScore_PB) Reset()                    { *m = ST_ActivityScore_PB{} }
func (m *ST_ActivityScore_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_PB) ProtoMessage()               {}
func (*ST_ActivityScore_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{260} }

func (m *ST_ActivityScore_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityScore_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_ActivityScore_PB) GetLuid() uint64 {
	if m != nil {
		return m.Luid
	}
	return 0
}

func (m *ST_ActivityScore_PB) GetLname() string {
	if m != nil {
		return m.Lname
	}
	return ""
}

func (m *ST_ActivityScore_PB) GetLlname() string {
	if m != nil {
		return m.Llname
	}
	return ""
}

func (m *ST_ActivityScore_PB) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_ActivityScore_PB) GetRankOrder() uint32 {
	if m != nil {
		return m.RankOrder
	}
	return 0
}

func (m *ST_ActivityScore_PB) GetContentID() uint32 {
	if m != nil {
		return m.ContentID
	}
	return 0
}

type ST_ActivityLeague_Task struct {
	OpenTime uint64 `protobuf:"varint,1,opt,name=openTime" json:"openTime,omitempty"`
	TaskID   uint32 `protobuf:"varint,2,opt,name=taskID" json:"taskID,omitempty"`
	Order    uint32 `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
}

func (m *ST_ActivityLeague_Task) Reset()                    { *m = ST_ActivityLeague_Task{} }
func (m *ST_ActivityLeague_Task) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityLeague_Task) ProtoMessage()               {}
func (*ST_ActivityLeague_Task) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{261} }

func (m *ST_ActivityLeague_Task) GetOpenTime() uint64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *ST_ActivityLeague_Task) GetTaskID() uint32 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *ST_ActivityLeague_Task) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type ST_ActivityLeague_TaskAction struct {
	ActionEnd uint64 `protobuf:"varint,1,opt,name=actionEnd" json:"actionEnd,omitempty"`
	ActionVal uint32 `protobuf:"varint,2,opt,name=actionVal" json:"actionVal,omitempty"`
}

func (m *ST_ActivityLeague_TaskAction) Reset()                    { *m = ST_ActivityLeague_TaskAction{} }
func (m *ST_ActivityLeague_TaskAction) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityLeague_TaskAction) ProtoMessage()               {}
func (*ST_ActivityLeague_TaskAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{262} }

func (m *ST_ActivityLeague_TaskAction) GetActionEnd() uint64 {
	if m != nil {
		return m.ActionEnd
	}
	return 0
}

func (m *ST_ActivityLeague_TaskAction) GetActionVal() uint32 {
	if m != nil {
		return m.ActionVal
	}
	return 0
}

type ST_MemberInfo_Base struct {
	UID    uint64 `protobuf:"varint,1,opt,name=uID" json:"uID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Luid   uint64 `protobuf:"varint,3,opt,name=luid" json:"luid,omitempty"`
	Lname  string `protobuf:"bytes,4,opt,name=lname" json:"lname,omitempty"`
	Llname string `protobuf:"bytes,5,opt,name=llname" json:"llname,omitempty"`
}

func (m *ST_MemberInfo_Base) Reset()                    { *m = ST_MemberInfo_Base{} }
func (m *ST_MemberInfo_Base) String() string            { return proto.CompactTextString(m) }
func (*ST_MemberInfo_Base) ProtoMessage()               {}
func (*ST_MemberInfo_Base) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{263} }

func (m *ST_MemberInfo_Base) GetUID() uint64 {
	if m != nil {
		return m.UID
	}
	return 0
}

func (m *ST_MemberInfo_Base) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_MemberInfo_Base) GetLuid() uint64 {
	if m != nil {
		return m.Luid
	}
	return 0
}

func (m *ST_MemberInfo_Base) GetLname() string {
	if m != nil {
		return m.Lname
	}
	return ""
}

func (m *ST_MemberInfo_Base) GetLlname() string {
	if m != nil {
		return m.Llname
	}
	return ""
}

type ST_ActivityScore_User struct {
	Uid      uint64                 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	BaMember *ST_MemberInfo_Base    `protobuf:"bytes,2,opt,name=baMember" json:"baMember,omitempty"`
	BaScore  *ST_ActivityScore_Base `protobuf:"bytes,3,opt,name=baScore" json:"baScore,omitempty"`
}

func (m *ST_ActivityScore_User) Reset()                    { *m = ST_ActivityScore_User{} }
func (m *ST_ActivityScore_User) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_User) ProtoMessage()               {}
func (*ST_ActivityScore_User) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{264} }

func (m *ST_ActivityScore_User) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityScore_User) GetBaMember() *ST_MemberInfo_Base {
	if m != nil {
		return m.BaMember
	}
	return nil
}

func (m *ST_ActivityScore_User) GetBaScore() *ST_ActivityScore_Base {
	if m != nil {
		return m.BaScore
	}
	return nil
}

type ST_ActivityScore_LeagueUser struct {
	Uid           uint64                          `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	BaMember      *ST_MemberInfo_Base             `protobuf:"bytes,2,opt,name=baMember" json:"baMember,omitempty"`
	BaScore       *ST_ActivityScore_Base          `protobuf:"bytes,3,opt,name=baScore" json:"baScore,omitempty"`
	ActionData    []*ST_ActivityLeague_TaskAction `protobuf:"bytes,9,rep,name=actionData" json:"actionData,omitempty"`
	ScoreLvStatue []int32                         `protobuf:"varint,11,rep,packed,name=scoreLvStatue" json:"scoreLvStatue,omitempty"`
	UserTask      *ST_ActivityScore_UserTask      `protobuf:"bytes,13,opt,name=userTask" json:"userTask,omitempty"`
}

func (m *ST_ActivityScore_LeagueUser) Reset()                    { *m = ST_ActivityScore_LeagueUser{} }
func (m *ST_ActivityScore_LeagueUser) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_LeagueUser) ProtoMessage()               {}
func (*ST_ActivityScore_LeagueUser) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{265} }

func (m *ST_ActivityScore_LeagueUser) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityScore_LeagueUser) GetBaMember() *ST_MemberInfo_Base {
	if m != nil {
		return m.BaMember
	}
	return nil
}

func (m *ST_ActivityScore_LeagueUser) GetBaScore() *ST_ActivityScore_Base {
	if m != nil {
		return m.BaScore
	}
	return nil
}

func (m *ST_ActivityScore_LeagueUser) GetActionData() []*ST_ActivityLeague_TaskAction {
	if m != nil {
		return m.ActionData
	}
	return nil
}

func (m *ST_ActivityScore_LeagueUser) GetScoreLvStatue() []int32 {
	if m != nil {
		return m.ScoreLvStatue
	}
	return nil
}

func (m *ST_ActivityScore_LeagueUser) GetUserTask() *ST_ActivityScore_UserTask {
	if m != nil {
		return m.UserTask
	}
	return nil
}

type ST_ActivityScore_UserTask struct {
	WinTask   uint32 `protobuf:"varint,1,opt,name=winTask" json:"winTask,omitempty"`
	LeftTask  uint32 `protobuf:"varint,2,opt,name=leftTask" json:"leftTask,omitempty"`
	TotalTask uint32 `protobuf:"varint,3,opt,name=totalTask" json:"totalTask,omitempty"`
	TaskID    uint32 `protobuf:"varint,4,opt,name=taskID" json:"taskID,omitempty"`
	Progress  uint64 `protobuf:"varint,5,opt,name=progress" json:"progress,omitempty"`
	FailTime  uint64 `protobuf:"varint,6,opt,name=failTime" json:"failTime,omitempty"`
	Status    int32  `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	Uid       uint64 `protobuf:"varint,8,opt,name=uid" json:"uid,omitempty"`
	Luid      uint64 `protobuf:"varint,9,opt,name=luid" json:"luid,omitempty"`
}

func (m *ST_ActivityScore_UserTask) Reset()                    { *m = ST_ActivityScore_UserTask{} }
func (m *ST_ActivityScore_UserTask) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_UserTask) ProtoMessage()               {}
func (*ST_ActivityScore_UserTask) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{266} }

func (m *ST_ActivityScore_UserTask) GetWinTask() uint32 {
	if m != nil {
		return m.WinTask
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetLeftTask() uint32 {
	if m != nil {
		return m.LeftTask
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetTotalTask() uint32 {
	if m != nil {
		return m.TotalTask
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetTaskID() uint32 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetProgress() uint64 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetFailTime() uint64 {
	if m != nil {
		return m.FailTime
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityScore_UserTask) GetLuid() uint64 {
	if m != nil {
		return m.Luid
	}
	return 0
}

// 公会基本信息数据结构
type ST_LeagueInfo_Base struct {
	LeagueID   uint64 `protobuf:"varint,1,opt,name=leagueID" json:"leagueID,omitempty"`
	Icon       string `protobuf:"bytes,4,opt,name=Icon" json:"Icon,omitempty"`
	Name       string `protobuf:"bytes,5,opt,name=Name" json:"Name,omitempty"`
	LName      string `protobuf:"bytes,6,opt,name=lName" json:"lName,omitempty"`
	LeaderIcon string `protobuf:"bytes,7,opt,name=LeaderIcon" json:"LeaderIcon,omitempty"`
	LeaderName string `protobuf:"bytes,8,opt,name=LeaderName" json:"LeaderName,omitempty"`
	MemNum     uint32 `protobuf:"varint,9,opt,name=memNum" json:"memNum,omitempty"`
	Power      uint64 `protobuf:"varint,10,opt,name=power" json:"power,omitempty"`
	ServerID   uint32 `protobuf:"varint,11,opt,name=serverID" json:"serverID,omitempty"`
}

func (m *ST_LeagueInfo_Base) Reset()                    { *m = ST_LeagueInfo_Base{} }
func (m *ST_LeagueInfo_Base) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueInfo_Base) ProtoMessage()               {}
func (*ST_LeagueInfo_Base) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{267} }

func (m *ST_LeagueInfo_Base) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_LeagueInfo_Base) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ST_LeagueInfo_Base) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_LeagueInfo_Base) GetLName() string {
	if m != nil {
		return m.LName
	}
	return ""
}

func (m *ST_LeagueInfo_Base) GetLeaderIcon() string {
	if m != nil {
		return m.LeaderIcon
	}
	return ""
}

func (m *ST_LeagueInfo_Base) GetLeaderName() string {
	if m != nil {
		return m.LeaderName
	}
	return ""
}

func (m *ST_LeagueInfo_Base) GetMemNum() uint32 {
	if m != nil {
		return m.MemNum
	}
	return 0
}

func (m *ST_LeagueInfo_Base) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_LeagueInfo_Base) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

// 活动基本积分结构
type ST_ActivityScore_Base struct {
	UID        uint64 `protobuf:"varint,1,opt,name=uID" json:"uID,omitempty"`
	Score      uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Content    uint32 `protobuf:"varint,3,opt,name=Content" json:"Content,omitempty"`
	RankOrder  uint32 `protobuf:"varint,4,opt,name=rankOrder" json:"rankOrder,omitempty"`
	ScoreLevel uint32 `protobuf:"varint,5,opt,name=scoreLevel" json:"scoreLevel,omitempty"`
}

func (m *ST_ActivityScore_Base) Reset()                    { *m = ST_ActivityScore_Base{} }
func (m *ST_ActivityScore_Base) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_Base) ProtoMessage()               {}
func (*ST_ActivityScore_Base) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{268} }

func (m *ST_ActivityScore_Base) GetUID() uint64 {
	if m != nil {
		return m.UID
	}
	return 0
}

func (m *ST_ActivityScore_Base) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_ActivityScore_Base) GetContent() uint32 {
	if m != nil {
		return m.Content
	}
	return 0
}

func (m *ST_ActivityScore_Base) GetRankOrder() uint32 {
	if m != nil {
		return m.RankOrder
	}
	return 0
}

func (m *ST_ActivityScore_Base) GetScoreLevel() uint32 {
	if m != nil {
		return m.ScoreLevel
	}
	return 0
}

type ST_ActivityScore_League struct {
	LeagueID  uint64                    `protobuf:"varint,1,opt,name=leagueID" json:"leagueID,omitempty"`
	ClassID   uint32                    `protobuf:"varint,2,opt,name=classID" json:"classID,omitempty"`
	NextClass uint32                    `protobuf:"varint,3,opt,name=nextClass" json:"nextClass,omitempty"`
	Isdirty   bool                      `protobuf:"varint,4,opt,name=isdirty" json:"isdirty,omitempty"`
	Tasks     []*ST_ActivityLeague_Task `protobuf:"bytes,5,rep,name=tasks" json:"tasks,omitempty"`
	BaInfo    *ST_LeagueInfo_Base       `protobuf:"bytes,6,opt,name=baInfo" json:"baInfo,omitempty"`
	BaScore   *ST_ActivityScore_Base    `protobuf:"bytes,7,opt,name=baScore" json:"baScore,omitempty"`
	MemList   *ST_Uint64List_PB         `protobuf:"bytes,8,opt,name=memList" json:"memList,omitempty"`
	Ver       int64                     `protobuf:"varint,9,opt,name=ver" json:"ver,omitempty"`
}

func (m *ST_ActivityScore_League) Reset()                    { *m = ST_ActivityScore_League{} }
func (m *ST_ActivityScore_League) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityScore_League) ProtoMessage()               {}
func (*ST_ActivityScore_League) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{269} }

func (m *ST_ActivityScore_League) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_ActivityScore_League) GetClassID() uint32 {
	if m != nil {
		return m.ClassID
	}
	return 0
}

func (m *ST_ActivityScore_League) GetNextClass() uint32 {
	if m != nil {
		return m.NextClass
	}
	return 0
}

func (m *ST_ActivityScore_League) GetIsdirty() bool {
	if m != nil {
		return m.Isdirty
	}
	return false
}

func (m *ST_ActivityScore_League) GetTasks() []*ST_ActivityLeague_Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_ActivityScore_League) GetBaInfo() *ST_LeagueInfo_Base {
	if m != nil {
		return m.BaInfo
	}
	return nil
}

func (m *ST_ActivityScore_League) GetBaScore() *ST_ActivityScore_Base {
	if m != nil {
		return m.BaScore
	}
	return nil
}

func (m *ST_ActivityScore_League) GetMemList() *ST_Uint64List_PB {
	if m != nil {
		return m.MemList
	}
	return nil
}

func (m *ST_ActivityScore_League) GetVer() int64 {
	if m != nil {
		return m.Ver
	}
	return 0
}

type ST_ActivityDetail_PB struct {
	ContentID uint32                 `protobuf:"varint,1,opt,name=contentID" json:"contentID,omitempty"`
	Scores    []*ST_ActivityScore_PB `protobuf:"bytes,2,rep,name=scores" json:"scores,omitempty"`
}

func (m *ST_ActivityDetail_PB) Reset()                    { *m = ST_ActivityDetail_PB{} }
func (m *ST_ActivityDetail_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityDetail_PB) ProtoMessage()               {}
func (*ST_ActivityDetail_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{270} }

func (m *ST_ActivityDetail_PB) GetContentID() uint32 {
	if m != nil {
		return m.ContentID
	}
	return 0
}

func (m *ST_ActivityDetail_PB) GetScores() []*ST_ActivityScore_PB {
	if m != nil {
		return m.Scores
	}
	return nil
}

type ST_ActivityContent_PB struct {
	CupClass     uint32                     `protobuf:"varint,1,opt,name=cupClass" json:"cupClass,omitempty"`
	ContentID    uint32                     `protobuf:"varint,2,opt,name=contentID" json:"contentID,omitempty"`
	LeagueScores []*ST_ActivityScore_League `protobuf:"bytes,3,rep,name=leagueScores" json:"leagueScores,omitempty"`
	ActivityId   uint32                     `protobuf:"varint,4,opt,name=ActivityId" json:"ActivityId,omitempty"`
	Isdirty      bool                       `protobuf:"varint,5,opt,name=isdirty" json:"isdirty,omitempty"`
	Ver          int64                      `protobuf:"varint,6,opt,name=ver" json:"ver,omitempty"`
	RankLeague   *ST_ActivityRank_PB        `protobuf:"bytes,7,opt,name=RankLeague" json:"RankLeague,omitempty"`
}

func (m *ST_ActivityContent_PB) Reset()                    { *m = ST_ActivityContent_PB{} }
func (m *ST_ActivityContent_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityContent_PB) ProtoMessage()               {}
func (*ST_ActivityContent_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{271} }

func (m *ST_ActivityContent_PB) GetCupClass() uint32 {
	if m != nil {
		return m.CupClass
	}
	return 0
}

func (m *ST_ActivityContent_PB) GetContentID() uint32 {
	if m != nil {
		return m.ContentID
	}
	return 0
}

func (m *ST_ActivityContent_PB) GetLeagueScores() []*ST_ActivityScore_League {
	if m != nil {
		return m.LeagueScores
	}
	return nil
}

func (m *ST_ActivityContent_PB) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ST_ActivityContent_PB) GetIsdirty() bool {
	if m != nil {
		return m.Isdirty
	}
	return false
}

func (m *ST_ActivityContent_PB) GetVer() int64 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *ST_ActivityContent_PB) GetRankLeague() *ST_ActivityRank_PB {
	if m != nil {
		return m.RankLeague
	}
	return nil
}

type ST_ActivityRank_League struct {
	Uid       uint64                 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	NextClass uint32                 `protobuf:"varint,2,opt,name=nextClass" json:"nextClass,omitempty"`
	BaInfo    *ST_LeagueInfo_Base    `protobuf:"bytes,6,opt,name=baInfo" json:"baInfo,omitempty"`
	BaScore   *ST_ActivityScore_Base `protobuf:"bytes,7,opt,name=baScore" json:"baScore,omitempty"`
}

func (m *ST_ActivityRank_League) Reset()                    { *m = ST_ActivityRank_League{} }
func (m *ST_ActivityRank_League) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityRank_League) ProtoMessage()               {}
func (*ST_ActivityRank_League) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{272} }

func (m *ST_ActivityRank_League) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityRank_League) GetNextClass() uint32 {
	if m != nil {
		return m.NextClass
	}
	return 0
}

func (m *ST_ActivityRank_League) GetBaInfo() *ST_LeagueInfo_Base {
	if m != nil {
		return m.BaInfo
	}
	return nil
}

func (m *ST_ActivityRank_League) GetBaScore() *ST_ActivityScore_Base {
	if m != nil {
		return m.BaScore
	}
	return nil
}

type ST_ActivityRank_LeagueUser struct {
	Uid       uint64                 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	BaMember  *ST_MemberInfo_Base    `protobuf:"bytes,2,opt,name=baMember" json:"baMember,omitempty"`
	BaScore   *ST_ActivityScore_Base `protobuf:"bytes,3,opt,name=baScore" json:"baScore,omitempty"`
	WinTask   uint32                 `protobuf:"varint,4,opt,name=winTask" json:"winTask,omitempty"`
	TotalTask uint32                 `protobuf:"varint,6,opt,name=totalTask" json:"totalTask,omitempty"`
}

func (m *ST_ActivityRank_LeagueUser) Reset()                    { *m = ST_ActivityRank_LeagueUser{} }
func (m *ST_ActivityRank_LeagueUser) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityRank_LeagueUser) ProtoMessage()               {}
func (*ST_ActivityRank_LeagueUser) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{273} }

func (m *ST_ActivityRank_LeagueUser) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_ActivityRank_LeagueUser) GetBaMember() *ST_MemberInfo_Base {
	if m != nil {
		return m.BaMember
	}
	return nil
}

func (m *ST_ActivityRank_LeagueUser) GetBaScore() *ST_ActivityScore_Base {
	if m != nil {
		return m.BaScore
	}
	return nil
}

func (m *ST_ActivityRank_LeagueUser) GetWinTask() uint32 {
	if m != nil {
		return m.WinTask
	}
	return 0
}

func (m *ST_ActivityRank_LeagueUser) GetTotalTask() uint32 {
	if m != nil {
		return m.TotalTask
	}
	return 0
}

type ST_ActivityRank_PB struct {
	ContentID   uint32                        `protobuf:"varint,1,opt,name=contentID" json:"contentID,omitempty"`
	UserScore   []*ST_ActivityScore_User      `protobuf:"bytes,2,rep,name=userScore" json:"userScore,omitempty"`
	LeagueScore []*ST_ActivityRank_League     `protobuf:"bytes,3,rep,name=leagueScore" json:"leagueScore,omitempty"`
	LeagueUser  []*ST_ActivityRank_LeagueUser `protobuf:"bytes,4,rep,name=leagueUser" json:"leagueUser,omitempty"`
	NextFresh   uint64                        `protobuf:"varint,5,opt,name=nextFresh" json:"nextFresh,omitempty"`
}

func (m *ST_ActivityRank_PB) Reset()                    { *m = ST_ActivityRank_PB{} }
func (m *ST_ActivityRank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityRank_PB) ProtoMessage()               {}
func (*ST_ActivityRank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{274} }

func (m *ST_ActivityRank_PB) GetContentID() uint32 {
	if m != nil {
		return m.ContentID
	}
	return 0
}

func (m *ST_ActivityRank_PB) GetUserScore() []*ST_ActivityScore_User {
	if m != nil {
		return m.UserScore
	}
	return nil
}

func (m *ST_ActivityRank_PB) GetLeagueScore() []*ST_ActivityRank_League {
	if m != nil {
		return m.LeagueScore
	}
	return nil
}

func (m *ST_ActivityRank_PB) GetLeagueUser() []*ST_ActivityRank_LeagueUser {
	if m != nil {
		return m.LeagueUser
	}
	return nil
}

func (m *ST_ActivityRank_PB) GetNextFresh() uint64 {
	if m != nil {
		return m.NextFresh
	}
	return 0
}

type ST_Asset_Activity_PB struct {
	Activities      []*ST_Asset_Activity_Item_PB `protobuf:"bytes,1,rep,name=activities" json:"activities,omitempty"`
	SpeExchangeEnd  int64                        `protobuf:"varint,2,opt,name=speExchangeEnd" json:"speExchangeEnd,omitempty"`
	ResetTime       int64                        `protobuf:"varint,3,opt,name=resetTime" json:"resetTime,omitempty"`
	SpeDailyTaskEnd int64                        `protobuf:"varint,4,opt,name=speDailyTaskEnd" json:"speDailyTaskEnd,omitempty"`
}

func (m *ST_Asset_Activity_PB) Reset()                    { *m = ST_Asset_Activity_PB{} }
func (m *ST_Asset_Activity_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Activity_PB) ProtoMessage()               {}
func (*ST_Asset_Activity_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{275} }

func (m *ST_Asset_Activity_PB) GetActivities() []*ST_Asset_Activity_Item_PB {
	if m != nil {
		return m.Activities
	}
	return nil
}

func (m *ST_Asset_Activity_PB) GetSpeExchangeEnd() int64 {
	if m != nil {
		return m.SpeExchangeEnd
	}
	return 0
}

func (m *ST_Asset_Activity_PB) GetResetTime() int64 {
	if m != nil {
		return m.ResetTime
	}
	return 0
}

func (m *ST_Asset_Activity_PB) GetSpeDailyTaskEnd() int64 {
	if m != nil {
		return m.SpeDailyTaskEnd
	}
	return 0
}

type ST_Asset_Activity_Item_PB struct {
	ActivityType uint32 `protobuf:"varint,1,opt,name=activityType" json:"activityType,omitempty"`
	// contentID,不是活动id
	ActivityId     uint32                       `protobuf:"varint,2,opt,name=activityId" json:"activityId,omitempty"`
	Number         uint32                       `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	Scroe          uint32                       `protobuf:"varint,4,opt,name=scroe" json:"scroe,omitempty"`
	Stage          uint32                       `protobuf:"varint,5,opt,name=stage" json:"stage,omitempty"`
	StageStartTime uint64                       `protobuf:"varint,6,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime   uint64                       `protobuf:"varint,7,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	LeagueScore    bool                         `protobuf:"varint,8,opt,name=leagueScore" json:"leagueScore,omitempty"`
	ParentID       uint32                       `protobuf:"varint,9,opt,name=parentID" json:"parentID,omitempty"`
	LeagueCupClass uint32                       `protobuf:"varint,10,opt,name=leagueCupClass" json:"leagueCupClass,omitempty"`
	Rewarded       bool                         `protobuf:"varint,11,opt,name=rewarded" json:"rewarded,omitempty"`
	NewMarks       bool                         `protobuf:"varint,12,opt,name=newMarks" json:"newMarks,omitempty"`
	ExchangeTimes  []*ST_Vector2Int_PB          `protobuf:"bytes,13,rep,name=exchangeTimes" json:"exchangeTimes,omitempty"`
	LeagueActivity *ST_ActivityScore_LeagueUser `protobuf:"bytes,14,opt,name=LeagueActivity" json:"LeagueActivity,omitempty"`
	Task           *ST_Vector4IntList_PB        `protobuf:"bytes,15,opt,name=Task" json:"Task,omitempty"`
	DailyTask      *ST_DailyTask_PB             `protobuf:"bytes,16,opt,name=dailyTask" json:"dailyTask,omitempty"`
	Uid            uint64                       `protobuf:"varint,17,opt,name=Uid" json:"Uid,omitempty"`
	Lottery        *ST_Lottery_PB               `protobuf:"bytes,18,opt,name=lottery" json:"lottery,omitempty"`
	Time           string                       `protobuf:"bytes,19,opt,name=Time" json:"Time,omitempty"`
	MacInfo        *ST_MacActifityInfo          `protobuf:"bytes,20,opt,name=macInfo" json:"macInfo,omitempty"`
	// 玩家参加活动时的等级
	MainCityLevel uint32       `protobuf:"varint,21,opt,name=MainCityLevel" json:"MainCityLevel,omitempty"`
	FoolsDay      *ST_FoolsDay `protobuf:"bytes,22,opt,name=foolsDay" json:"foolsDay,omitempty"`
}

func (m *ST_Asset_Activity_Item_PB) Reset()                    { *m = ST_Asset_Activity_Item_PB{} }
func (m *ST_Asset_Activity_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Activity_Item_PB) ProtoMessage()               {}
func (*ST_Asset_Activity_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{276} }

func (m *ST_Asset_Activity_Item_PB) GetActivityType() uint32 {
	if m != nil {
		return m.ActivityType
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetScroe() uint32 {
	if m != nil {
		return m.Scroe
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetLeagueScore() bool {
	if m != nil {
		return m.LeagueScore
	}
	return false
}

func (m *ST_Asset_Activity_Item_PB) GetParentID() uint32 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetLeagueCupClass() uint32 {
	if m != nil {
		return m.LeagueCupClass
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetRewarded() bool {
	if m != nil {
		return m.Rewarded
	}
	return false
}

func (m *ST_Asset_Activity_Item_PB) GetNewMarks() bool {
	if m != nil {
		return m.NewMarks
	}
	return false
}

func (m *ST_Asset_Activity_Item_PB) GetExchangeTimes() []*ST_Vector2Int_PB {
	if m != nil {
		return m.ExchangeTimes
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetLeagueActivity() *ST_ActivityScore_LeagueUser {
	if m != nil {
		return m.LeagueActivity
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetTask() *ST_Vector4IntList_PB {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetDailyTask() *ST_DailyTask_PB {
	if m != nil {
		return m.DailyTask
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetLottery() *ST_Lottery_PB {
	if m != nil {
		return m.Lottery
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ST_Asset_Activity_Item_PB) GetMacInfo() *ST_MacActifityInfo {
	if m != nil {
		return m.MacInfo
	}
	return nil
}

func (m *ST_Asset_Activity_Item_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_Asset_Activity_Item_PB) GetFoolsDay() *ST_FoolsDay {
	if m != nil {
		return m.FoolsDay
	}
	return nil
}

type ST_MacActifityInfo struct {
	LeagueId      uint64 `protobuf:"varint,1,opt,name=leagueId" json:"leagueId,omitempty"`
	FailedTms     uint32 `protobuf:"varint,2,opt,name=failedTms" json:"failedTms,omitempty"`
	Rewarded      bool   `protobuf:"varint,3,opt,name=rewarded" json:"rewarded,omitempty"`
	LeagueRewards bool   `protobuf:"varint,4,opt,name=leagueRewards" json:"leagueRewards,omitempty"`
}

func (m *ST_MacActifityInfo) Reset()                    { *m = ST_MacActifityInfo{} }
func (m *ST_MacActifityInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_MacActifityInfo) ProtoMessage()               {}
func (*ST_MacActifityInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{277} }

func (m *ST_MacActifityInfo) GetLeagueId() uint64 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *ST_MacActifityInfo) GetFailedTms() uint32 {
	if m != nil {
		return m.FailedTms
	}
	return 0
}

func (m *ST_MacActifityInfo) GetRewarded() bool {
	if m != nil {
		return m.Rewarded
	}
	return false
}

func (m *ST_MacActifityInfo) GetLeagueRewards() bool {
	if m != nil {
		return m.LeagueRewards
	}
	return false
}

// 愚人节兑换活动
type ST_FoolsDay struct {
	Unlocked bool                   `protobuf:"varint,1,opt,name=unlocked" json:"unlocked,omitempty"`
	Exp      uint32                 `protobuf:"varint,2,opt,name=exp" json:"exp,omitempty"`
	Rewards  []*ST_FoolsDay_Rewards `protobuf:"bytes,3,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *ST_FoolsDay) Reset()                    { *m = ST_FoolsDay{} }
func (m *ST_FoolsDay) String() string            { return proto.CompactTextString(m) }
func (*ST_FoolsDay) ProtoMessage()               {}
func (*ST_FoolsDay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{278} }

func (m *ST_FoolsDay) GetUnlocked() bool {
	if m != nil {
		return m.Unlocked
	}
	return false
}

func (m *ST_FoolsDay) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *ST_FoolsDay) GetRewards() []*ST_FoolsDay_Rewards {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type ST_FoolsDay_Rewards struct {
	RewardsId uint32 `protobuf:"varint,1,opt,name=rewardsId" json:"rewardsId,omitempty"`
	Normal    bool   `protobuf:"varint,2,opt,name=normal" json:"normal,omitempty"`
	Advanced  bool   `protobuf:"varint,3,opt,name=advanced" json:"advanced,omitempty"`
}

func (m *ST_FoolsDay_Rewards) Reset()                    { *m = ST_FoolsDay_Rewards{} }
func (m *ST_FoolsDay_Rewards) String() string            { return proto.CompactTextString(m) }
func (*ST_FoolsDay_Rewards) ProtoMessage()               {}
func (*ST_FoolsDay_Rewards) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{279} }

func (m *ST_FoolsDay_Rewards) GetRewardsId() uint32 {
	if m != nil {
		return m.RewardsId
	}
	return 0
}

func (m *ST_FoolsDay_Rewards) GetNormal() bool {
	if m != nil {
		return m.Normal
	}
	return false
}

func (m *ST_FoolsDay_Rewards) GetAdvanced() bool {
	if m != nil {
		return m.Advanced
	}
	return false
}

type ST_DailyTask_PB struct {
	Level     uint32              `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Tasks     []*ST_Vector4Int_PB `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	ResetTime uint32              `protobuf:"varint,3,opt,name=resetTime" json:"resetTime,omitempty"`
}

func (m *ST_DailyTask_PB) Reset()                    { *m = ST_DailyTask_PB{} }
func (m *ST_DailyTask_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DailyTask_PB) ProtoMessage()               {}
func (*ST_DailyTask_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{280} }

func (m *ST_DailyTask_PB) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ST_DailyTask_PB) GetTasks() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_DailyTask_PB) GetResetTime() uint32 {
	if m != nil {
		return m.ResetTime
	}
	return 0
}

type ST_Lottery_PB struct {
	LottTimes      uint32   `protobuf:"varint,1,opt,name=lottTimes" json:"lottTimes,omitempty"`
	ExtraRewardIds []uint32 `protobuf:"varint,2,rep,packed,name=extraRewardIds" json:"extraRewardIds,omitempty"`
	LottTimesToday uint32   `protobuf:"varint,3,opt,name=lottTimesToday" json:"lottTimesToday,omitempty"`
	First          bool     `protobuf:"varint,4,opt,name=first" json:"first,omitempty"`
	TodayFirst     bool     `protobuf:"varint,5,opt,name=todayFirst" json:"todayFirst,omitempty"`
}

func (m *ST_Lottery_PB) Reset()                    { *m = ST_Lottery_PB{} }
func (m *ST_Lottery_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Lottery_PB) ProtoMessage()               {}
func (*ST_Lottery_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{281} }

func (m *ST_Lottery_PB) GetLottTimes() uint32 {
	if m != nil {
		return m.LottTimes
	}
	return 0
}

func (m *ST_Lottery_PB) GetExtraRewardIds() []uint32 {
	if m != nil {
		return m.ExtraRewardIds
	}
	return nil
}

func (m *ST_Lottery_PB) GetLottTimesToday() uint32 {
	if m != nil {
		return m.LottTimesToday
	}
	return 0
}

func (m *ST_Lottery_PB) GetFirst() bool {
	if m != nil {
		return m.First
	}
	return false
}

func (m *ST_Lottery_PB) GetTodayFirst() bool {
	if m != nil {
		return m.TodayFirst
	}
	return false
}

type ST_BookmarkEntry_PB struct {
	TileID      uint32 `protobuf:"varint,1,opt,name=tileID" json:"tileID,omitempty"`
	Type        uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *ST_BookmarkEntry_PB) Reset()                    { *m = ST_BookmarkEntry_PB{} }
func (m *ST_BookmarkEntry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BookmarkEntry_PB) ProtoMessage()               {}
func (*ST_BookmarkEntry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{282} }

func (m *ST_BookmarkEntry_PB) GetTileID() uint32 {
	if m != nil {
		return m.TileID
	}
	return 0
}

func (m *ST_BookmarkEntry_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_BookmarkEntry_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ST_BookmarkEntry_PB) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// 大地图收藏夹资产
type ST_Asset_Bookmark_PB struct {
	EntryList []*ST_BookmarkEntry_PB `protobuf:"bytes,1,rep,name=entryList" json:"entryList,omitempty"`
}

func (m *ST_Asset_Bookmark_PB) Reset()                    { *m = ST_Asset_Bookmark_PB{} }
func (m *ST_Asset_Bookmark_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Bookmark_PB) ProtoMessage()               {}
func (*ST_Asset_Bookmark_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{283} }

func (m *ST_Asset_Bookmark_PB) GetEntryList() []*ST_BookmarkEntry_PB {
	if m != nil {
		return m.EntryList
	}
	return nil
}

// 王战战争记录
type ST_MiracleWarRecord_PB struct {
	Time   uint64      `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Record *ST_Tips_PB `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *ST_MiracleWarRecord_PB) Reset()                    { *m = ST_MiracleWarRecord_PB{} }
func (m *ST_MiracleWarRecord_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWarRecord_PB) ProtoMessage()               {}
func (*ST_MiracleWarRecord_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{284} }

func (m *ST_MiracleWarRecord_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_MiracleWarRecord_PB) GetRecord() *ST_Tips_PB {
	if m != nil {
		return m.Record
	}
	return nil
}

// 王战历任行政官记录
type ST_HistoryArchon_PB struct {
	Number     int32                   `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Uid        uint64                  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Time       uint64                  `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	LeagueFlag *ST_LeagueCustomFlag_PB `protobuf:"bytes,4,opt,name=leagueFlag" json:"leagueFlag,omitempty"`
	LShortName string                  `protobuf:"bytes,5,opt,name=lShortName" json:"lShortName,omitempty"`
	UName      string                  `protobuf:"bytes,6,opt,name=uName" json:"uName,omitempty"`
}

func (m *ST_HistoryArchon_PB) Reset()                    { *m = ST_HistoryArchon_PB{} }
func (m *ST_HistoryArchon_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_HistoryArchon_PB) ProtoMessage()               {}
func (*ST_HistoryArchon_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{285} }

func (m *ST_HistoryArchon_PB) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_HistoryArchon_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_HistoryArchon_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_HistoryArchon_PB) GetLeagueFlag() *ST_LeagueCustomFlag_PB {
	if m != nil {
		return m.LeagueFlag
	}
	return nil
}

func (m *ST_HistoryArchon_PB) GetLShortName() string {
	if m != nil {
		return m.LShortName
	}
	return ""
}

func (m *ST_HistoryArchon_PB) GetUName() string {
	if m != nil {
		return m.UName
	}
	return ""
}

// 王战当前大奇迹的占领信息
type ST_OccupyInfo_PB struct {
	Uid            uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Lid            uint64 `protobuf:"varint,2,opt,name=lid" json:"lid,omitempty"`
	StartTime      uint64 `protobuf:"varint,3,opt,name=startTime" json:"startTime,omitempty"`
	NeedOccupyTime uint64 `protobuf:"varint,4,opt,name=needOccupyTime" json:"needOccupyTime,omitempty"`
	Notify         int32  `protobuf:"varint,5,opt,name=notify" json:"notify,omitempty"`
}

func (m *ST_OccupyInfo_PB) Reset()                    { *m = ST_OccupyInfo_PB{} }
func (m *ST_OccupyInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_OccupyInfo_PB) ProtoMessage()               {}
func (*ST_OccupyInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{286} }

func (m *ST_OccupyInfo_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_OccupyInfo_PB) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_OccupyInfo_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_OccupyInfo_PB) GetNeedOccupyTime() uint64 {
	if m != nil {
		return m.NeedOccupyTime
	}
	return 0
}

func (m *ST_OccupyInfo_PB) GetNotify() int32 {
	if m != nil {
		return m.Notify
	}
	return 0
}

// 官职信息
type ST_Title_PB struct {
	TitleID int32  `protobuf:"varint,1,opt,name=titleID" json:"titleID,omitempty"`
	Cd      uint64 `protobuf:"varint,2,opt,name=cd" json:"cd,omitempty"`
	Uid     uint64 `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_Title_PB) Reset()                    { *m = ST_Title_PB{} }
func (m *ST_Title_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Title_PB) ProtoMessage()               {}
func (*ST_Title_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{287} }

func (m *ST_Title_PB) GetTitleID() int32 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Title_PB) GetCd() uint64 {
	if m != nil {
		return m.Cd
	}
	return 0
}

func (m *ST_Title_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 王战赏赐礼包信息
type ST_WarGift_PB struct {
	GiftId  int64    `protobuf:"varint,1,opt,name=giftId" json:"giftId,omitempty"`
	LeftNum int32    `protobuf:"varint,2,opt,name=leftNum" json:"leftNum,omitempty"`
	Uids    []uint64 `protobuf:"varint,3,rep,packed,name=uids" json:"uids,omitempty"`
}

func (m *ST_WarGift_PB) Reset()                    { *m = ST_WarGift_PB{} }
func (m *ST_WarGift_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WarGift_PB) ProtoMessage()               {}
func (*ST_WarGift_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{288} }

func (m *ST_WarGift_PB) GetGiftId() int64 {
	if m != nil {
		return m.GiftId
	}
	return 0
}

func (m *ST_WarGift_PB) GetLeftNum() int32 {
	if m != nil {
		return m.LeftNum
	}
	return 0
}

func (m *ST_WarGift_PB) GetUids() []uint64 {
	if m != nil {
		return m.Uids
	}
	return nil
}

// 王战全局buff信息
type ST_MiracleWarBuff_PB struct {
	BuffID     int32  `protobuf:"varint,1,opt,name=buffID" json:"buffID,omitempty"`
	BuffCD     uint64 `protobuf:"varint,2,opt,name=buffCD" json:"buffCD,omitempty"`
	ExpireTime uint64 `protobuf:"varint,3,opt,name=expireTime" json:"expireTime,omitempty"`
}

func (m *ST_MiracleWarBuff_PB) Reset()                    { *m = ST_MiracleWarBuff_PB{} }
func (m *ST_MiracleWarBuff_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWarBuff_PB) ProtoMessage()               {}
func (*ST_MiracleWarBuff_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{289} }

func (m *ST_MiracleWarBuff_PB) GetBuffID() int32 {
	if m != nil {
		return m.BuffID
	}
	return 0
}

func (m *ST_MiracleWarBuff_PB) GetBuffCD() uint64 {
	if m != nil {
		return m.BuffCD
	}
	return 0
}

func (m *ST_MiracleWarBuff_PB) GetExpireTime() uint64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

// 王战特权信息
type ST_MiracleWarRight struct {
	RightID int32  `protobuf:"varint,1,opt,name=rightID" json:"rightID,omitempty"`
	Cd      uint64 `protobuf:"varint,2,opt,name=cd" json:"cd,omitempty"`
}

func (m *ST_MiracleWarRight) Reset()                    { *m = ST_MiracleWarRight{} }
func (m *ST_MiracleWarRight) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWarRight) ProtoMessage()               {}
func (*ST_MiracleWarRight) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{290} }

func (m *ST_MiracleWarRight) GetRightID() int32 {
	if m != nil {
		return m.RightID
	}
	return 0
}

func (m *ST_MiracleWarRight) GetCd() uint64 {
	if m != nil {
		return m.Cd
	}
	return 0
}

// 执政官全服公告
type ST_GlobalNotice struct {
	Notice string `protobuf:"bytes,1,opt,name=notice" json:"notice,omitempty"`
	Time   uint64 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Cd     uint64 `protobuf:"varint,3,opt,name=cd" json:"cd,omitempty"`
	Uid    uint64 `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_GlobalNotice) Reset()                    { *m = ST_GlobalNotice{} }
func (m *ST_GlobalNotice) String() string            { return proto.CompactTextString(m) }
func (*ST_GlobalNotice) ProtoMessage()               {}
func (*ST_GlobalNotice) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{291} }

func (m *ST_GlobalNotice) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

func (m *ST_GlobalNotice) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ST_GlobalNotice) GetCd() uint64 {
	if m != nil {
		return m.Cd
	}
	return 0
}

func (m *ST_GlobalNotice) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 王战全局资产
type ST_MiracleWar_PB struct {
	Stage             int32                     `protobuf:"varint,1,opt,name=stage" json:"stage,omitempty"`
	StageEndTime      uint64                    `protobuf:"varint,2,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	StageStartTime    uint64                    `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	SubStage          int32                     `protobuf:"varint,4,opt,name=subStage" json:"subStage,omitempty"`
	SubStageStartTime uint64                    `protobuf:"varint,5,opt,name=subStageStartTime" json:"subStageStartTime,omitempty"`
	SubStageEndTime   uint64                    `protobuf:"varint,6,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	NoticeTime        uint64                    `protobuf:"varint,7,opt,name=noticeTime" json:"noticeTime,omitempty"`
	OwnerLeagueID     uint64                    `protobuf:"varint,8,opt,name=ownerLeagueID" json:"ownerLeagueID,omitempty"`
	OwnerUid          uint64                    `protobuf:"varint,9,opt,name=ownerUid" json:"ownerUid,omitempty"`
	WarRecords        []*ST_MiracleWarRecord_PB `protobuf:"bytes,10,rep,name=warRecords" json:"warRecords,omitempty"`
	HistoryArchons    []*ST_HistoryArchon_PB    `protobuf:"bytes,11,rep,name=historyArchons" json:"historyArchons,omitempty"`
	Number            int32                     `protobuf:"varint,12,opt,name=number" json:"number,omitempty"`
	OccupyInfo        *ST_OccupyInfo_PB         `protobuf:"bytes,13,opt,name=occupyInfo" json:"occupyInfo,omitempty"`
	Titles            []*ST_Title_PB            `protobuf:"bytes,14,rep,name=titles" json:"titles,omitempty"`
	Buffs             []*ST_MiracleWarBuff_PB   `protobuf:"bytes,15,rep,name=buffs" json:"buffs,omitempty"`
	Rights            []*ST_MiracleWarRight     `protobuf:"bytes,16,rep,name=rights" json:"rights,omitempty"`
	GiftRecords       []*ST_MiracleWarRecord_PB `protobuf:"bytes,17,rep,name=giftRecords" json:"giftRecords,omitempty"`
	BuffRecords       []*ST_MiracleWarRecord_PB `protobuf:"bytes,18,rep,name=buffRecords" json:"buffRecords,omitempty"`
	Notice            *ST_GlobalNotice          `protobuf:"bytes,19,opt,name=notice" json:"notice,omitempty"`
	Gifts             []*ST_WarGift_PB          `protobuf:"bytes,20,rep,name=gifts" json:"gifts,omitempty"`
	PowerLimit        int32                     `protobuf:"varint,21,opt,name=powerLimit" json:"powerLimit,omitempty"`
}

func (m *ST_MiracleWar_PB) Reset()                    { *m = ST_MiracleWar_PB{} }
func (m *ST_MiracleWar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWar_PB) ProtoMessage()               {}
func (*ST_MiracleWar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{292} }

func (m *ST_MiracleWar_PB) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetSubStage() int32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetSubStageStartTime() uint64 {
	if m != nil {
		return m.SubStageStartTime
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetNoticeTime() uint64 {
	if m != nil {
		return m.NoticeTime
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetOwnerLeagueID() uint64 {
	if m != nil {
		return m.OwnerLeagueID
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetOwnerUid() uint64 {
	if m != nil {
		return m.OwnerUid
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetWarRecords() []*ST_MiracleWarRecord_PB {
	if m != nil {
		return m.WarRecords
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetHistoryArchons() []*ST_HistoryArchon_PB {
	if m != nil {
		return m.HistoryArchons
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_MiracleWar_PB) GetOccupyInfo() *ST_OccupyInfo_PB {
	if m != nil {
		return m.OccupyInfo
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetTitles() []*ST_Title_PB {
	if m != nil {
		return m.Titles
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetBuffs() []*ST_MiracleWarBuff_PB {
	if m != nil {
		return m.Buffs
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetRights() []*ST_MiracleWarRight {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetGiftRecords() []*ST_MiracleWarRecord_PB {
	if m != nil {
		return m.GiftRecords
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetBuffRecords() []*ST_MiracleWarRecord_PB {
	if m != nil {
		return m.BuffRecords
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetNotice() *ST_GlobalNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetGifts() []*ST_WarGift_PB {
	if m != nil {
		return m.Gifts
	}
	return nil
}

func (m *ST_MiracleWar_PB) GetPowerLimit() int32 {
	if m != nil {
		return m.PowerLimit
	}
	return 0
}

type ST_MiracleWarRecords_PB struct {
	Records []*ST_MiracleWarRecord_PB `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *ST_MiracleWarRecords_PB) Reset()                    { *m = ST_MiracleWarRecords_PB{} }
func (m *ST_MiracleWarRecords_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWarRecords_PB) ProtoMessage()               {}
func (*ST_MiracleWarRecords_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{293} }

func (m *ST_MiracleWarRecords_PB) GetRecords() []*ST_MiracleWarRecord_PB {
	if m != nil {
		return m.Records
	}
	return nil
}

type ST_MiracleWarHistoryArchons_PB struct {
	Records []*ST_HistoryArchon_PB `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *ST_MiracleWarHistoryArchons_PB) Reset()         { *m = ST_MiracleWarHistoryArchons_PB{} }
func (m *ST_MiracleWarHistoryArchons_PB) String() string { return proto.CompactTextString(m) }
func (*ST_MiracleWarHistoryArchons_PB) ProtoMessage()    {}
func (*ST_MiracleWarHistoryArchons_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{294}
}

func (m *ST_MiracleWarHistoryArchons_PB) GetRecords() []*ST_HistoryArchon_PB {
	if m != nil {
		return m.Records
	}
	return nil
}

// 王战个人资产
type ST_Asset_MiracleWar_PB struct {
	TitleID        int32            `protobuf:"varint,1,opt,name=titleID" json:"titleID,omitempty"`
	GiftID         int64            `protobuf:"varint,2,opt,name=giftID" json:"giftID,omitempty"`
	WarNumber      int32            `protobuf:"varint,3,opt,name=warNumber" json:"warNumber,omitempty"`
	LastNoticeTime uint64           `protobuf:"varint,4,opt,name=lastNoticeTime" json:"lastNoticeTime,omitempty"`
	Notice         *ST_GlobalNotice `protobuf:"bytes,5,opt,name=notice" json:"notice,omitempty"`
	Stage          int32            `protobuf:"varint,6,opt,name=stage" json:"stage,omitempty"`
	Stage1         int32            `protobuf:"varint,7,opt,name=stage1" json:"stage1,omitempty"`
	Stage2         int32            `protobuf:"varint,8,opt,name=stage2" json:"stage2,omitempty"`
	Stage3         int32            `protobuf:"varint,9,opt,name=stage3" json:"stage3,omitempty"`
	Stage4         int32            `protobuf:"varint,10,opt,name=stage4" json:"stage4,omitempty"`
}

func (m *ST_Asset_MiracleWar_PB) Reset()                    { *m = ST_Asset_MiracleWar_PB{} }
func (m *ST_Asset_MiracleWar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_MiracleWar_PB) ProtoMessage()               {}
func (*ST_Asset_MiracleWar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{295} }

func (m *ST_Asset_MiracleWar_PB) GetTitleID() int32 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetGiftID() int64 {
	if m != nil {
		return m.GiftID
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetWarNumber() int32 {
	if m != nil {
		return m.WarNumber
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetLastNoticeTime() uint64 {
	if m != nil {
		return m.LastNoticeTime
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetNotice() *ST_GlobalNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

func (m *ST_Asset_MiracleWar_PB) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetStage1() int32 {
	if m != nil {
		return m.Stage1
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetStage2() int32 {
	if m != nil {
		return m.Stage2
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetStage3() int32 {
	if m != nil {
		return m.Stage3
	}
	return 0
}

func (m *ST_Asset_MiracleWar_PB) GetStage4() int32 {
	if m != nil {
		return m.Stage4
	}
	return 0
}

type ST_Server_PB struct {
	Sid              uint32 `protobuf:"varint,1,opt,name=sid" json:"sid,omitempty"`
	SName            string `protobuf:"bytes,2,opt,name=sName" json:"sName,omitempty"`
	KingLeague       string `protobuf:"bytes,3,opt,name=kingLeague" json:"kingLeague,omitempty"`
	King             string `protobuf:"bytes,4,opt,name=king" json:"king,omitempty"`
	ServerInitTime   uint64 `protobuf:"varint,5,opt,name=serverInitTime" json:"serverInitTime,omitempty"`
	SAddr            string `protobuf:"bytes,6,opt,name=sAddr" json:"sAddr,omitempty"`
	CanMoveInto      bool   `protobuf:"varint,7,opt,name=canMoveInto" json:"canMoveInto,omitempty"`
	KingServerName   string `protobuf:"bytes,8,opt,name=kingServerName" json:"kingServerName,omitempty"`
	RpcAddr          string `protobuf:"bytes,9,opt,name=rpcAddr" json:"rpcAddr,omitempty"`
	StarPioneerPower uint64 `protobuf:"varint,10,opt,name=starPioneerPower" json:"starPioneerPower,omitempty"`
	StarPioneerRank  int32  `protobuf:"varint,11,opt,name=starPioneerRank" json:"starPioneerRank,omitempty"`
	PowerLimit       int32  `protobuf:"varint,12,opt,name=powerLimit" json:"powerLimit,omitempty"`
	KingSid          uint32 `protobuf:"varint,13,opt,name=kingSid" json:"kingSid,omitempty"`
}

func (m *ST_Server_PB) Reset()                    { *m = ST_Server_PB{} }
func (m *ST_Server_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Server_PB) ProtoMessage()               {}
func (*ST_Server_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{296} }

func (m *ST_Server_PB) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_Server_PB) GetSName() string {
	if m != nil {
		return m.SName
	}
	return ""
}

func (m *ST_Server_PB) GetKingLeague() string {
	if m != nil {
		return m.KingLeague
	}
	return ""
}

func (m *ST_Server_PB) GetKing() string {
	if m != nil {
		return m.King
	}
	return ""
}

func (m *ST_Server_PB) GetServerInitTime() uint64 {
	if m != nil {
		return m.ServerInitTime
	}
	return 0
}

func (m *ST_Server_PB) GetSAddr() string {
	if m != nil {
		return m.SAddr
	}
	return ""
}

func (m *ST_Server_PB) GetCanMoveInto() bool {
	if m != nil {
		return m.CanMoveInto
	}
	return false
}

func (m *ST_Server_PB) GetKingServerName() string {
	if m != nil {
		return m.KingServerName
	}
	return ""
}

func (m *ST_Server_PB) GetRpcAddr() string {
	if m != nil {
		return m.RpcAddr
	}
	return ""
}

func (m *ST_Server_PB) GetStarPioneerPower() uint64 {
	if m != nil {
		return m.StarPioneerPower
	}
	return 0
}

func (m *ST_Server_PB) GetStarPioneerRank() int32 {
	if m != nil {
		return m.StarPioneerRank
	}
	return 0
}

func (m *ST_Server_PB) GetPowerLimit() int32 {
	if m != nil {
		return m.PowerLimit
	}
	return 0
}

func (m *ST_Server_PB) GetKingSid() uint32 {
	if m != nil {
		return m.KingSid
	}
	return 0
}

type ST_ServerList_PB struct {
	ServerList []*ST_Server_PB `protobuf:"bytes,1,rep,name=serverList" json:"serverList,omitempty"`
}

func (m *ST_ServerList_PB) Reset()                    { *m = ST_ServerList_PB{} }
func (m *ST_ServerList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ServerList_PB) ProtoMessage()               {}
func (*ST_ServerList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{297} }

func (m *ST_ServerList_PB) GetServerList() []*ST_Server_PB {
	if m != nil {
		return m.ServerList
	}
	return nil
}

// 账户信息
type ST_Asset_Account_PB struct {
	GgName         string `protobuf:"bytes,1,opt,name=ggName" json:"ggName,omitempty"`
	FbName         string `protobuf:"bytes,2,opt,name=fbName" json:"fbName,omitempty"`
	TtName         string `protobuf:"bytes,3,opt,name=ttName" json:"ttName,omitempty"`
	GamecenterName string `protobuf:"bytes,4,opt,name=gamecenterName" json:"gamecenterName,omitempty"`
}

func (m *ST_Asset_Account_PB) Reset()                    { *m = ST_Asset_Account_PB{} }
func (m *ST_Asset_Account_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Account_PB) ProtoMessage()               {}
func (*ST_Asset_Account_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{298} }

func (m *ST_Asset_Account_PB) GetGgName() string {
	if m != nil {
		return m.GgName
	}
	return ""
}

func (m *ST_Asset_Account_PB) GetFbName() string {
	if m != nil {
		return m.FbName
	}
	return ""
}

func (m *ST_Asset_Account_PB) GetTtName() string {
	if m != nil {
		return m.TtName
	}
	return ""
}

func (m *ST_Asset_Account_PB) GetGamecenterName() string {
	if m != nil {
		return m.GamecenterName
	}
	return ""
}

// 联盟独立数据版本信息
type ST_League_IndependData_Version_PB struct {
	UnreadMessgaeCount      uint32 `protobuf:"varint,1,opt,name=UnreadMessgaeCount" json:"UnreadMessgaeCount,omitempty"`
	LeagueHelpCount         uint32 `protobuf:"varint,2,opt,name=LeagueHelpCount" json:"LeagueHelpCount,omitempty"`
	LeagueGiftCount         uint32 `protobuf:"varint,3,opt,name=LeagueGiftCount" json:"LeagueGiftCount,omitempty"`
	LeagueBattleLogCount    uint32 `protobuf:"varint,4,opt,name=LeagueBattleLogCount" json:"LeagueBattleLogCount,omitempty"`
	ReadLeagueBattleLogTime uint64 `protobuf:"varint,5,opt,name=ReadLeagueBattleLogTime" json:"ReadLeagueBattleLogTime,omitempty"`
}

func (m *ST_League_IndependData_Version_PB) Reset()         { *m = ST_League_IndependData_Version_PB{} }
func (m *ST_League_IndependData_Version_PB) String() string { return proto.CompactTextString(m) }
func (*ST_League_IndependData_Version_PB) ProtoMessage()    {}
func (*ST_League_IndependData_Version_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{299}
}

func (m *ST_League_IndependData_Version_PB) GetUnreadMessgaeCount() uint32 {
	if m != nil {
		return m.UnreadMessgaeCount
	}
	return 0
}

func (m *ST_League_IndependData_Version_PB) GetLeagueHelpCount() uint32 {
	if m != nil {
		return m.LeagueHelpCount
	}
	return 0
}

func (m *ST_League_IndependData_Version_PB) GetLeagueGiftCount() uint32 {
	if m != nil {
		return m.LeagueGiftCount
	}
	return 0
}

func (m *ST_League_IndependData_Version_PB) GetLeagueBattleLogCount() uint32 {
	if m != nil {
		return m.LeagueBattleLogCount
	}
	return 0
}

func (m *ST_League_IndependData_Version_PB) GetReadLeagueBattleLogTime() uint64 {
	if m != nil {
		return m.ReadLeagueBattleLogTime
	}
	return 0
}

// 联盟留言列表数据
type ST_League_Message_List_PB struct {
	MessageList []*ST_LeagueMessageEntry_PB `protobuf:"bytes,1,rep,name=messageList" json:"messageList,omitempty"`
}

func (m *ST_League_Message_List_PB) Reset()                    { *m = ST_League_Message_List_PB{} }
func (m *ST_League_Message_List_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_League_Message_List_PB) ProtoMessage()               {}
func (*ST_League_Message_List_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{300} }

func (m *ST_League_Message_List_PB) GetMessageList() []*ST_LeagueMessageEntry_PB {
	if m != nil {
		return m.MessageList
	}
	return nil
}

// 黑市商品Item
type ST_BlackMarket_Item_PB struct {
	IsLocked  bool `protobuf:"varint,1,opt,name=isLocked" json:"isLocked,omitempty"`
	Exchanged bool `protobuf:"varint,2,opt,name=exchanged" json:"exchanged,omitempty"`
	// int32 goodsId = 3;					//[OLD]商品ID
	// int32 giftPackID = 4;				//[OLD]礼包Id
	// bool giftPurchased = 5;				//[OLD]礼包是否已经购买
	GoodsContent *ST_Vector4Int_PB `protobuf:"bytes,6,opt,name=goodsContent" json:"goodsContent,omitempty"`
	GoodsCost    *ST_Vector4Int_PB `protobuf:"bytes,7,opt,name=goodsCost" json:"goodsCost,omitempty"`
	Discount     uint32            `protobuf:"varint,8,opt,name=discount" json:"discount,omitempty"`
	SlotIdx      uint32            `protobuf:"varint,9,opt,name=slotIdx" json:"slotIdx,omitempty"`
}

func (m *ST_BlackMarket_Item_PB) Reset()                    { *m = ST_BlackMarket_Item_PB{} }
func (m *ST_BlackMarket_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BlackMarket_Item_PB) ProtoMessage()               {}
func (*ST_BlackMarket_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{301} }

func (m *ST_BlackMarket_Item_PB) GetIsLocked() bool {
	if m != nil {
		return m.IsLocked
	}
	return false
}

func (m *ST_BlackMarket_Item_PB) GetExchanged() bool {
	if m != nil {
		return m.Exchanged
	}
	return false
}

func (m *ST_BlackMarket_Item_PB) GetGoodsContent() *ST_Vector4Int_PB {
	if m != nil {
		return m.GoodsContent
	}
	return nil
}

func (m *ST_BlackMarket_Item_PB) GetGoodsCost() *ST_Vector4Int_PB {
	if m != nil {
		return m.GoodsCost
	}
	return nil
}

func (m *ST_BlackMarket_Item_PB) GetDiscount() uint32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *ST_BlackMarket_Item_PB) GetSlotIdx() uint32 {
	if m != nil {
		return m.SlotIdx
	}
	return 0
}

// 个人黑市资产
type ST_Asset_BlackMarket_PB struct {
	RefreshTime uint64                    `protobuf:"varint,1,opt,name=refreshTime" json:"refreshTime,omitempty"`
	IsClicked   bool                      `protobuf:"varint,2,opt,name=isClicked" json:"isClicked,omitempty"`
	Items       []*ST_BlackMarket_Item_PB `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	// int32 giftPackID = 4;				//[OLD]上次刷新并没有购买的礼包id
	LeftReset  uint32 `protobuf:"varint,5,opt,name=leftReset" json:"leftReset,omitempty"`
	NeedNotice bool   `protobuf:"varint,6,opt,name=needNotice" json:"needNotice,omitempty"`
	NotOpen    bool   `protobuf:"varint,7,opt,name=notOpen" json:"notOpen,omitempty"`
	LeftOpen   uint32 `protobuf:"varint,8,opt,name=leftOpen" json:"leftOpen,omitempty"`
}

func (m *ST_Asset_BlackMarket_PB) Reset()                    { *m = ST_Asset_BlackMarket_PB{} }
func (m *ST_Asset_BlackMarket_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_BlackMarket_PB) ProtoMessage()               {}
func (*ST_Asset_BlackMarket_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{302} }

func (m *ST_Asset_BlackMarket_PB) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *ST_Asset_BlackMarket_PB) GetIsClicked() bool {
	if m != nil {
		return m.IsClicked
	}
	return false
}

func (m *ST_Asset_BlackMarket_PB) GetItems() []*ST_BlackMarket_Item_PB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ST_Asset_BlackMarket_PB) GetLeftReset() uint32 {
	if m != nil {
		return m.LeftReset
	}
	return 0
}

func (m *ST_Asset_BlackMarket_PB) GetNeedNotice() bool {
	if m != nil {
		return m.NeedNotice
	}
	return false
}

func (m *ST_Asset_BlackMarket_PB) GetNotOpen() bool {
	if m != nil {
		return m.NotOpen
	}
	return false
}

func (m *ST_Asset_BlackMarket_PB) GetLeftOpen() uint32 {
	if m != nil {
		return m.LeftOpen
	}
	return 0
}

// 后勤补给资产
type ST_Asset_Supply_PB struct {
	FreeTimes     uint32              `protobuf:"varint,1,opt,name=freeTimes" json:"freeTimes,omitempty"`
	BuyTimes      []*ST_Vector2Int_PB `protobuf:"bytes,2,rep,name=buyTimes" json:"buyTimes,omitempty"`
	TotleTimes    []*ST_Vector2Int_PB `protobuf:"bytes,3,rep,name=totleTimes" json:"totleTimes,omitempty"`
	LastClearTime uint64              `protobuf:"varint,4,opt,name=lastClearTime" json:"lastClearTime,omitempty"`
}

func (m *ST_Asset_Supply_PB) Reset()                    { *m = ST_Asset_Supply_PB{} }
func (m *ST_Asset_Supply_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Supply_PB) ProtoMessage()               {}
func (*ST_Asset_Supply_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{303} }

func (m *ST_Asset_Supply_PB) GetFreeTimes() uint32 {
	if m != nil {
		return m.FreeTimes
	}
	return 0
}

func (m *ST_Asset_Supply_PB) GetBuyTimes() []*ST_Vector2Int_PB {
	if m != nil {
		return m.BuyTimes
	}
	return nil
}

func (m *ST_Asset_Supply_PB) GetTotleTimes() []*ST_Vector2Int_PB {
	if m != nil {
		return m.TotleTimes
	}
	return nil
}

func (m *ST_Asset_Supply_PB) GetLastClearTime() uint64 {
	if m != nil {
		return m.LastClearTime
	}
	return 0
}

// 后勤补给获取资源信息
type ST_ResourceObtain_Supply_PB struct {
	Multiple uint32                `protobuf:"varint,1,opt,name=multiple" json:"multiple,omitempty"`
	Count    uint64                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	CashType uint32                `protobuf:"varint,3,opt,name=cashType" json:"cashType,omitempty"`
	DropList *ST_Vector4IntList_PB `protobuf:"bytes,4,opt,name=dropList" json:"dropList,omitempty"`
}

func (m *ST_ResourceObtain_Supply_PB) Reset()                    { *m = ST_ResourceObtain_Supply_PB{} }
func (m *ST_ResourceObtain_Supply_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ResourceObtain_Supply_PB) ProtoMessage()               {}
func (*ST_ResourceObtain_Supply_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{304} }

func (m *ST_ResourceObtain_Supply_PB) GetMultiple() uint32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *ST_ResourceObtain_Supply_PB) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ST_ResourceObtain_Supply_PB) GetCashType() uint32 {
	if m != nil {
		return m.CashType
	}
	return 0
}

func (m *ST_ResourceObtain_Supply_PB) GetDropList() *ST_Vector4IntList_PB {
	if m != nil {
		return m.DropList
	}
	return nil
}

// 联盟宝箱Item
type ST_LeagueBox_Item_PB struct {
	Id             uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TypeId         int64  `protobuf:"varint,2,opt,name=typeId" json:"typeId,omitempty"`
	PosX           uint32 `protobuf:"varint,3,opt,name=posX" json:"posX,omitempty"`
	PosY           uint32 `protobuf:"varint,4,opt,name=posY" json:"posY,omitempty"`
	EndTime        uint64 `protobuf:"varint,5,opt,name=endTime" json:"endTime,omitempty"`
	IsHelped       bool   `protobuf:"varint,6,opt,name=isHelped" json:"isHelped,omitempty"`
	Uid            uint64 `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	ActionID       uint32 `protobuf:"varint,8,opt,name=actionID" json:"actionID,omitempty"`
	IsSendMsg      bool   `protobuf:"varint,9,opt,name=isSendMsg" json:"isSendMsg,omitempty"`
	OwnerName      string `protobuf:"bytes,10,opt,name=ownerName" json:"ownerName,omitempty"`
	HelpName       string `protobuf:"bytes,11,opt,name=helpName" json:"helpName,omitempty"`
	CommanderLevel uint32 `protobuf:"varint,12,opt,name=commanderLevel" json:"commanderLevel,omitempty"`
}

func (m *ST_LeagueBox_Item_PB) Reset()                    { *m = ST_LeagueBox_Item_PB{} }
func (m *ST_LeagueBox_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBox_Item_PB) ProtoMessage()               {}
func (*ST_LeagueBox_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{305} }

func (m *ST_LeagueBox_Item_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetPosX() uint32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetPosY() uint32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetIsHelped() bool {
	if m != nil {
		return m.IsHelped
	}
	return false
}

func (m *ST_LeagueBox_Item_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetActionID() uint32 {
	if m != nil {
		return m.ActionID
	}
	return 0
}

func (m *ST_LeagueBox_Item_PB) GetIsSendMsg() bool {
	if m != nil {
		return m.IsSendMsg
	}
	return false
}

func (m *ST_LeagueBox_Item_PB) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *ST_LeagueBox_Item_PB) GetHelpName() string {
	if m != nil {
		return m.HelpName
	}
	return ""
}

func (m *ST_LeagueBox_Item_PB) GetCommanderLevel() uint32 {
	if m != nil {
		return m.CommanderLevel
	}
	return 0
}

// 个人联盟宝箱资产
type ST_Asset_LeagueBox_PB struct {
	OwnerBoxes     []*ST_LeagueBox_Item_PB `protobuf:"bytes,1,rep,name=ownerBoxes" json:"ownerBoxes,omitempty"`
	HelpedBoxes    []*ST_LeagueBox_Item_PB `protobuf:"bytes,2,rep,name=helpedBoxes" json:"helpedBoxes,omitempty"`
	Refresh        bool                    `protobuf:"varint,3,opt,name=refresh" json:"refresh,omitempty"`
	RefreshBoxTime uint64                  `protobuf:"varint,4,opt,name=refreshBoxTime" json:"refreshBoxTime,omitempty"`
	MaxId          uint64                  `protobuf:"varint,5,opt,name=maxId" json:"maxId,omitempty"`
	LastResetTime  uint64                  `protobuf:"varint,6,opt,name=lastResetTime" json:"lastResetTime,omitempty"`
	LeftTimes      uint32                  `protobuf:"varint,7,opt,name=leftTimes" json:"leftTimes,omitempty"`
	LeftOpenNum    uint32                  `protobuf:"varint,8,opt,name=leftOpenNum" json:"leftOpenNum,omitempty"`
	FreeRefresh    uint32                  `protobuf:"varint,9,opt,name=freeRefresh" json:"freeRefresh,omitempty"`
	CostRefresh    uint32                  `protobuf:"varint,10,opt,name=costRefresh" json:"costRefresh,omitempty"`
	FreeOpenTime   uint64                  `protobuf:"varint,11,opt,name=freeOpenTime" json:"freeOpenTime,omitempty"`
}

func (m *ST_Asset_LeagueBox_PB) Reset()                    { *m = ST_Asset_LeagueBox_PB{} }
func (m *ST_Asset_LeagueBox_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_LeagueBox_PB) ProtoMessage()               {}
func (*ST_Asset_LeagueBox_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{306} }

func (m *ST_Asset_LeagueBox_PB) GetOwnerBoxes() []*ST_LeagueBox_Item_PB {
	if m != nil {
		return m.OwnerBoxes
	}
	return nil
}

func (m *ST_Asset_LeagueBox_PB) GetHelpedBoxes() []*ST_LeagueBox_Item_PB {
	if m != nil {
		return m.HelpedBoxes
	}
	return nil
}

func (m *ST_Asset_LeagueBox_PB) GetRefresh() bool {
	if m != nil {
		return m.Refresh
	}
	return false
}

func (m *ST_Asset_LeagueBox_PB) GetRefreshBoxTime() uint64 {
	if m != nil {
		return m.RefreshBoxTime
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetMaxId() uint64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetLastResetTime() uint64 {
	if m != nil {
		return m.LastResetTime
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetLeftTimes() uint32 {
	if m != nil {
		return m.LeftTimes
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetLeftOpenNum() uint32 {
	if m != nil {
		return m.LeftOpenNum
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetFreeRefresh() uint32 {
	if m != nil {
		return m.FreeRefresh
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetCostRefresh() uint32 {
	if m != nil {
		return m.CostRefresh
	}
	return 0
}

func (m *ST_Asset_LeagueBox_PB) GetFreeOpenTime() uint64 {
	if m != nil {
		return m.FreeOpenTime
	}
	return 0
}

// 挑战目标
type ST_ChallengeTarget_PB struct {
	CurrentScore uint32   `protobuf:"varint,1,opt,name=currentScore" json:"currentScore,omitempty"`
	TargetID     int64    `protobuf:"varint,2,opt,name=targetID" json:"targetID,omitempty"`
	RewardList   []uint32 `protobuf:"varint,3,rep,packed,name=rewardList" json:"rewardList,omitempty"`
}

func (m *ST_ChallengeTarget_PB) Reset()                    { *m = ST_ChallengeTarget_PB{} }
func (m *ST_ChallengeTarget_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ChallengeTarget_PB) ProtoMessage()               {}
func (*ST_ChallengeTarget_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{307} }

func (m *ST_ChallengeTarget_PB) GetCurrentScore() uint32 {
	if m != nil {
		return m.CurrentScore
	}
	return 0
}

func (m *ST_ChallengeTarget_PB) GetTargetID() int64 {
	if m != nil {
		return m.TargetID
	}
	return 0
}

func (m *ST_ChallengeTarget_PB) GetRewardList() []uint32 {
	if m != nil {
		return m.RewardList
	}
	return nil
}

// 挑战的目标条件
type ST_ChallengeCondition_PB struct {
	Type         uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Param        uint32 `protobuf:"varint,2,opt,name=param" json:"param,omitempty"`
	TargetScore  uint32 `protobuf:"varint,3,opt,name=targetScore" json:"targetScore,omitempty"`
	CurrentScore uint32 `protobuf:"varint,4,opt,name=currentScore" json:"currentScore,omitempty"`
}

func (m *ST_ChallengeCondition_PB) Reset()                    { *m = ST_ChallengeCondition_PB{} }
func (m *ST_ChallengeCondition_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ChallengeCondition_PB) ProtoMessage()               {}
func (*ST_ChallengeCondition_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{308} }

func (m *ST_ChallengeCondition_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_ChallengeCondition_PB) GetParam() uint32 {
	if m != nil {
		return m.Param
	}
	return 0
}

func (m *ST_ChallengeCondition_PB) GetTargetScore() uint32 {
	if m != nil {
		return m.TargetScore
	}
	return 0
}

func (m *ST_ChallengeCondition_PB) GetCurrentScore() uint32 {
	if m != nil {
		return m.CurrentScore
	}
	return 0
}

// 挑战任务
type ST_ChallengeTast_PB struct {
	TaskId     int64                       `protobuf:"varint,1,opt,name=taskId" json:"taskId,omitempty"`
	TaskStatus uint32                      `protobuf:"varint,2,opt,name=taskStatus" json:"taskStatus,omitempty"`
	Conditions []*ST_ChallengeCondition_PB `protobuf:"bytes,3,rep,name=conditions" json:"conditions,omitempty"`
}

func (m *ST_ChallengeTast_PB) Reset()                    { *m = ST_ChallengeTast_PB{} }
func (m *ST_ChallengeTast_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ChallengeTast_PB) ProtoMessage()               {}
func (*ST_ChallengeTast_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{309} }

func (m *ST_ChallengeTast_PB) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *ST_ChallengeTast_PB) GetTaskStatus() uint32 {
	if m != nil {
		return m.TaskStatus
	}
	return 0
}

func (m *ST_ChallengeTast_PB) GetConditions() []*ST_ChallengeCondition_PB {
	if m != nil {
		return m.Conditions
	}
	return nil
}

// 个人七日挑战资产
type ST_Asset_Challenge_PB struct {
	ChallageEndTime uint64                 `protobuf:"varint,1,opt,name=challageEndTime" json:"challageEndTime,omitempty"`
	TaskEndTime     uint64                 `protobuf:"varint,2,opt,name=taskEndTime" json:"taskEndTime,omitempty"`
	ChallengeTarget *ST_ChallengeTarget_PB `protobuf:"bytes,3,opt,name=challengeTarget" json:"challengeTarget,omitempty"`
	Tasks           []*ST_ChallengeTast_PB `protobuf:"bytes,4,rep,name=tasks" json:"tasks,omitempty"`
	CurrentTaskId   int64                  `protobuf:"varint,5,opt,name=currentTaskId" json:"currentTaskId,omitempty"`
}

func (m *ST_Asset_Challenge_PB) Reset()                    { *m = ST_Asset_Challenge_PB{} }
func (m *ST_Asset_Challenge_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Challenge_PB) ProtoMessage()               {}
func (*ST_Asset_Challenge_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{310} }

func (m *ST_Asset_Challenge_PB) GetChallageEndTime() uint64 {
	if m != nil {
		return m.ChallageEndTime
	}
	return 0
}

func (m *ST_Asset_Challenge_PB) GetTaskEndTime() uint64 {
	if m != nil {
		return m.TaskEndTime
	}
	return 0
}

func (m *ST_Asset_Challenge_PB) GetChallengeTarget() *ST_ChallengeTarget_PB {
	if m != nil {
		return m.ChallengeTarget
	}
	return nil
}

func (m *ST_Asset_Challenge_PB) GetTasks() []*ST_ChallengeTast_PB {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_Asset_Challenge_PB) GetCurrentTaskId() int64 {
	if m != nil {
		return m.CurrentTaskId
	}
	return 0
}

// Airdrop 玩家中奖信息
type ST_Asset_LuckyDog struct {
	ServerName string `protobuf:"bytes,1,opt,name=ServerName" json:"ServerName,omitempty"`
	LeagueName string `protobuf:"bytes,2,opt,name=LeagueName" json:"LeagueName,omitempty"`
	PlayerName string `protobuf:"bytes,3,opt,name=PlayerName" json:"PlayerName,omitempty"`
}

func (m *ST_Asset_LuckyDog) Reset()                    { *m = ST_Asset_LuckyDog{} }
func (m *ST_Asset_LuckyDog) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_LuckyDog) ProtoMessage()               {}
func (*ST_Asset_LuckyDog) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{311} }

func (m *ST_Asset_LuckyDog) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *ST_Asset_LuckyDog) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_Asset_LuckyDog) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

// Airdrop 全服信息
type ST_Asset_AirdropInfo struct {
	BonusPool int64                `protobuf:"varint,1,opt,name=BonusPool" json:"BonusPool,omitempty"`
	ResetTime int64                `protobuf:"varint,2,opt,name=ResetTime" json:"ResetTime,omitempty"`
	LuckyDogs []*ST_Asset_LuckyDog `protobuf:"bytes,3,rep,name=LuckyDogs" json:"LuckyDogs,omitempty"`
}

func (m *ST_Asset_AirdropInfo) Reset()                    { *m = ST_Asset_AirdropInfo{} }
func (m *ST_Asset_AirdropInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_AirdropInfo) ProtoMessage()               {}
func (*ST_Asset_AirdropInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{312} }

func (m *ST_Asset_AirdropInfo) GetBonusPool() int64 {
	if m != nil {
		return m.BonusPool
	}
	return 0
}

func (m *ST_Asset_AirdropInfo) GetResetTime() int64 {
	if m != nil {
		return m.ResetTime
	}
	return 0
}

func (m *ST_Asset_AirdropInfo) GetLuckyDogs() []*ST_Asset_LuckyDog {
	if m != nil {
		return m.LuckyDogs
	}
	return nil
}

// 世界争霸活动
type ST_WorldDomination_PB struct {
	StageStartTime  uint64 `protobuf:"varint,1,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageRemainTime uint64 `protobuf:"varint,2,opt,name=stageRemainTime" json:"stageRemainTime,omitempty"`
	Stage           uint32 `protobuf:"varint,3,opt,name=stage" json:"stage,omitempty"`
}

func (m *ST_WorldDomination_PB) Reset()                    { *m = ST_WorldDomination_PB{} }
func (m *ST_WorldDomination_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldDomination_PB) ProtoMessage()               {}
func (*ST_WorldDomination_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{313} }

func (m *ST_WorldDomination_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_WorldDomination_PB) GetStageRemainTime() uint64 {
	if m != nil {
		return m.StageRemainTime
	}
	return 0
}

func (m *ST_WorldDomination_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

// 副本个人资产
type ST_Asset_MapList_PB struct {
	MapLists          []*ST_MapList_Info_PB `protobuf:"bytes,1,rep,name=mapLists" json:"mapLists,omitempty"`
	EilteMapLists     []*ST_MapList_Info_PB `protobuf:"bytes,2,rep,name=eilteMapLists" json:"eilteMapLists,omitempty"`
	ToBeUnlockEilteId int64                 `protobuf:"varint,3,opt,name=toBeUnlockEilteId" json:"toBeUnlockEilteId,omitempty"`
	RewardRefreshTime uint64                `protobuf:"varint,4,opt,name=rewardRefreshTime" json:"rewardRefreshTime,omitempty"`
}

func (m *ST_Asset_MapList_PB) Reset()                    { *m = ST_Asset_MapList_PB{} }
func (m *ST_Asset_MapList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_MapList_PB) ProtoMessage()               {}
func (*ST_Asset_MapList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{314} }

func (m *ST_Asset_MapList_PB) GetMapLists() []*ST_MapList_Info_PB {
	if m != nil {
		return m.MapLists
	}
	return nil
}

func (m *ST_Asset_MapList_PB) GetEilteMapLists() []*ST_MapList_Info_PB {
	if m != nil {
		return m.EilteMapLists
	}
	return nil
}

func (m *ST_Asset_MapList_PB) GetToBeUnlockEilteId() int64 {
	if m != nil {
		return m.ToBeUnlockEilteId
	}
	return 0
}

func (m *ST_Asset_MapList_PB) GetRewardRefreshTime() uint64 {
	if m != nil {
		return m.RewardRefreshTime
	}
	return 0
}

// 副本信息
type ST_MapList_Info_PB struct {
	Type         uint32           `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Chapters     []*ST_Chapter_PB `protobuf:"bytes,2,rep,name=chapters" json:"chapters,omitempty"`
	CurrentMapID uint32           `protobuf:"varint,3,opt,name=currentMapID" json:"currentMapID,omitempty"`
}

func (m *ST_MapList_Info_PB) Reset()                    { *m = ST_MapList_Info_PB{} }
func (m *ST_MapList_Info_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MapList_Info_PB) ProtoMessage()               {}
func (*ST_MapList_Info_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{315} }

func (m *ST_MapList_Info_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_MapList_Info_PB) GetChapters() []*ST_Chapter_PB {
	if m != nil {
		return m.Chapters
	}
	return nil
}

func (m *ST_MapList_Info_PB) GetCurrentMapID() uint32 {
	if m != nil {
		return m.CurrentMapID
	}
	return 0
}

// 章节信息
type ST_Chapter_PB struct {
	ChapterId uint32           `protobuf:"varint,1,opt,name=chapterId" json:"chapterId,omitempty"`
	StarBox   *ST_StarBox_PB   `protobuf:"bytes,2,opt,name=starBox" json:"starBox,omitempty"`
	MapInfos  []*ST_MapInfo_PB `protobuf:"bytes,3,rep,name=mapInfos" json:"mapInfos,omitempty"`
}

func (m *ST_Chapter_PB) Reset()                    { *m = ST_Chapter_PB{} }
func (m *ST_Chapter_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Chapter_PB) ProtoMessage()               {}
func (*ST_Chapter_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{316} }

func (m *ST_Chapter_PB) GetChapterId() uint32 {
	if m != nil {
		return m.ChapterId
	}
	return 0
}

func (m *ST_Chapter_PB) GetStarBox() *ST_StarBox_PB {
	if m != nil {
		return m.StarBox
	}
	return nil
}

func (m *ST_Chapter_PB) GetMapInfos() []*ST_MapInfo_PB {
	if m != nil {
		return m.MapInfos
	}
	return nil
}

// 章节星星宝箱信息
type ST_StarBox_PB struct {
	StartNum        uint32   `protobuf:"varint,1,opt,name=startNum" json:"startNum,omitempty"`
	RewardedBoxIdxs []uint32 `protobuf:"varint,2,rep,packed,name=rewardedBoxIdxs" json:"rewardedBoxIdxs,omitempty"`
}

func (m *ST_StarBox_PB) Reset()                    { *m = ST_StarBox_PB{} }
func (m *ST_StarBox_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StarBox_PB) ProtoMessage()               {}
func (*ST_StarBox_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{317} }

func (m *ST_StarBox_PB) GetStartNum() uint32 {
	if m != nil {
		return m.StartNum
	}
	return 0
}

func (m *ST_StarBox_PB) GetRewardedBoxIdxs() []uint32 {
	if m != nil {
		return m.RewardedBoxIdxs
	}
	return nil
}

// 关卡信息
type ST_MapInfo_PB struct {
	Id                  uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Star                uint32 `protobuf:"varint,2,opt,name=star" json:"star,omitempty"`
	LeftChanllangeTimes uint32 `protobuf:"varint,3,opt,name=leftChanllangeTimes" json:"leftChanllangeTimes,omitempty"`
	Rewarded            uint32 `protobuf:"varint,4,opt,name=rewarded" json:"rewarded,omitempty"`
	TodayStar           uint32 `protobuf:"varint,5,opt,name=todayStar" json:"todayStar,omitempty"`
}

func (m *ST_MapInfo_PB) Reset()                    { *m = ST_MapInfo_PB{} }
func (m *ST_MapInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MapInfo_PB) ProtoMessage()               {}
func (*ST_MapInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{318} }

func (m *ST_MapInfo_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_MapInfo_PB) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_MapInfo_PB) GetLeftChanllangeTimes() uint32 {
	if m != nil {
		return m.LeftChanllangeTimes
	}
	return 0
}

func (m *ST_MapInfo_PB) GetRewarded() uint32 {
	if m != nil {
		return m.Rewarded
	}
	return 0
}

func (m *ST_MapInfo_PB) GetTodayStar() uint32 {
	if m != nil {
		return m.TodayStar
	}
	return 0
}

// 扫荡奖励
type ST_MopUpRewards_PB struct {
	RewardItems []*ST_Vector4IntList_PB `protobuf:"bytes,1,rep,name=rewardItems" json:"rewardItems,omitempty"`
	ExtraReward *ST_Vector4Int_PB       `protobuf:"bytes,2,opt,name=extraReward" json:"extraReward,omitempty"`
}

func (m *ST_MopUpRewards_PB) Reset()                    { *m = ST_MopUpRewards_PB{} }
func (m *ST_MopUpRewards_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MopUpRewards_PB) ProtoMessage()               {}
func (*ST_MopUpRewards_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{319} }

func (m *ST_MopUpRewards_PB) GetRewardItems() []*ST_Vector4IntList_PB {
	if m != nil {
		return m.RewardItems
	}
	return nil
}

func (m *ST_MopUpRewards_PB) GetExtraReward() *ST_Vector4Int_PB {
	if m != nil {
		return m.ExtraReward
	}
	return nil
}

// 活跃度任务
type ST_ActivityTask_Item struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CurrentTimes uint32 `protobuf:"varint,2,opt,name=currentTimes" json:"currentTimes,omitempty"`
	TargetTimes  uint32 `protobuf:"varint,3,opt,name=targetTimes" json:"targetTimes,omitempty"`
	Param        uint32 `protobuf:"varint,4,opt,name=param" json:"param,omitempty"`
	Type         uint32 `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	AccNum       uint32 `protobuf:"varint,6,opt,name=accNum" json:"accNum,omitempty"`
}

func (m *ST_ActivityTask_Item) Reset()                    { *m = ST_ActivityTask_Item{} }
func (m *ST_ActivityTask_Item) String() string            { return proto.CompactTextString(m) }
func (*ST_ActivityTask_Item) ProtoMessage()               {}
func (*ST_ActivityTask_Item) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{320} }

func (m *ST_ActivityTask_Item) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_ActivityTask_Item) GetCurrentTimes() uint32 {
	if m != nil {
		return m.CurrentTimes
	}
	return 0
}

func (m *ST_ActivityTask_Item) GetTargetTimes() uint32 {
	if m != nil {
		return m.TargetTimes
	}
	return 0
}

func (m *ST_ActivityTask_Item) GetParam() uint32 {
	if m != nil {
		return m.Param
	}
	return 0
}

func (m *ST_ActivityTask_Item) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_ActivityTask_Item) GetAccNum() uint32 {
	if m != nil {
		return m.AccNum
	}
	return 0
}

// 活跃度系统资产
type ST_Asset_ActivityTask_PB struct {
	RefreshTime     uint64                  `protobuf:"varint,1,opt,name=refreshTime" json:"refreshTime,omitempty"`
	Tasks           []*ST_ActivityTask_Item `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	MainCityLevel   uint32                  `protobuf:"varint,3,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
	TotalScore      uint32                  `protobuf:"varint,4,opt,name=totalScore" json:"totalScore,omitempty"`
	RewardedBoxIdxs []uint32                `protobuf:"varint,5,rep,packed,name=rewardedBoxIdxs" json:"rewardedBoxIdxs,omitempty"`
}

func (m *ST_Asset_ActivityTask_PB) Reset()                    { *m = ST_Asset_ActivityTask_PB{} }
func (m *ST_Asset_ActivityTask_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_ActivityTask_PB) ProtoMessage()               {}
func (*ST_Asset_ActivityTask_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{321} }

func (m *ST_Asset_ActivityTask_PB) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *ST_Asset_ActivityTask_PB) GetTasks() []*ST_ActivityTask_Item {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_Asset_ActivityTask_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_Asset_ActivityTask_PB) GetTotalScore() uint32 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *ST_Asset_ActivityTask_PB) GetRewardedBoxIdxs() []uint32 {
	if m != nil {
		return m.RewardedBoxIdxs
	}
	return nil
}

type ST_MainCitySkinInfo_PB struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EndTime int64  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *ST_MainCitySkinInfo_PB) Reset()                    { *m = ST_MainCitySkinInfo_PB{} }
func (m *ST_MainCitySkinInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MainCitySkinInfo_PB) ProtoMessage()               {}
func (*ST_MainCitySkinInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{322} }

func (m *ST_MainCitySkinInfo_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_MainCitySkinInfo_PB) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ST_Asset_MainCitySkin_PB struct {
	CurrentSkinId uint32                    `protobuf:"varint,1,opt,name=currentSkinId" json:"currentSkinId,omitempty"`
	Skins         []*ST_MainCitySkinInfo_PB `protobuf:"bytes,2,rep,name=skins" json:"skins,omitempty"`
}

func (m *ST_Asset_MainCitySkin_PB) Reset()                    { *m = ST_Asset_MainCitySkin_PB{} }
func (m *ST_Asset_MainCitySkin_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_MainCitySkin_PB) ProtoMessage()               {}
func (*ST_Asset_MainCitySkin_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{323} }

func (m *ST_Asset_MainCitySkin_PB) GetCurrentSkinId() uint32 {
	if m != nil {
		return m.CurrentSkinId
	}
	return 0
}

func (m *ST_Asset_MainCitySkin_PB) GetSkins() []*ST_MainCitySkinInfo_PB {
	if m != nil {
		return m.Skins
	}
	return nil
}

// 福利资产
type ST_Asset_BoonCenter_PB struct {
	PayFirst     *ST_BoonPayFirst_PB  `protobuf:"bytes,1,opt,name=payFirst" json:"payFirst,omitempty"`
	PaySecond    *ST_BoonPaySecond_PB `protobuf:"bytes,2,opt,name=paySecond" json:"paySecond,omitempty"`
	Durations    *ST_BoonDuration_PB  `protobuf:"bytes,3,opt,name=durations" json:"durations,omitempty"`
	Dalies       *ST_BoonDaily_PB     `protobuf:"bytes,4,opt,name=dalies" json:"dalies,omitempty"`
	Funds        []*ST_BoonFund_PB    `protobuf:"bytes,5,rep,name=funds" json:"funds,omitempty"`
	GiftActivity *ST_GiftActivity     `protobuf:"bytes,6,opt,name=GiftActivity" json:"GiftActivity,omitempty"`
}

func (m *ST_Asset_BoonCenter_PB) Reset()                    { *m = ST_Asset_BoonCenter_PB{} }
func (m *ST_Asset_BoonCenter_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_BoonCenter_PB) ProtoMessage()               {}
func (*ST_Asset_BoonCenter_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{324} }

func (m *ST_Asset_BoonCenter_PB) GetPayFirst() *ST_BoonPayFirst_PB {
	if m != nil {
		return m.PayFirst
	}
	return nil
}

func (m *ST_Asset_BoonCenter_PB) GetPaySecond() *ST_BoonPaySecond_PB {
	if m != nil {
		return m.PaySecond
	}
	return nil
}

func (m *ST_Asset_BoonCenter_PB) GetDurations() *ST_BoonDuration_PB {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *ST_Asset_BoonCenter_PB) GetDalies() *ST_BoonDaily_PB {
	if m != nil {
		return m.Dalies
	}
	return nil
}

func (m *ST_Asset_BoonCenter_PB) GetFunds() []*ST_BoonFund_PB {
	if m != nil {
		return m.Funds
	}
	return nil
}

func (m *ST_Asset_BoonCenter_PB) GetGiftActivity() *ST_GiftActivity {
	if m != nil {
		return m.GiftActivity
	}
	return nil
}

// 礼包活动数据
type ST_GiftActivity struct {
	Activitys []*ST_GiftActivity_One `protobuf:"bytes,1,rep,name=Activitys" json:"Activitys,omitempty"`
}

func (m *ST_GiftActivity) Reset()                    { *m = ST_GiftActivity{} }
func (m *ST_GiftActivity) String() string            { return proto.CompactTextString(m) }
func (*ST_GiftActivity) ProtoMessage()               {}
func (*ST_GiftActivity) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{325} }

func (m *ST_GiftActivity) GetActivitys() []*ST_GiftActivity_One {
	if m != nil {
		return m.Activitys
	}
	return nil
}

type ST_GiftActivity_One struct {
	// 活动id CountNum
	ID uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	// 循环数 LoopNum
	Number   uint32              `protobuf:"varint,2,opt,name=Number" json:"Number,omitempty"`
	TmStart  uint64              `protobuf:"varint,3,opt,name=TmStart" json:"TmStart,omitempty"`
	TmEnd    uint64              `protobuf:"varint,4,opt,name=TmEnd" json:"TmEnd,omitempty"`
	Sub      []*ST_Vector4Int_PB `protobuf:"bytes,5,rep,name=Sub" json:"Sub,omitempty"`
	Score    uint64              `protobuf:"varint,6,opt,name=Score" json:"Score,omitempty"`
	ReSward  []*ST_Vector4Int_PB `protobuf:"bytes,7,rep,name=ReSward" json:"ReSward,omitempty"`
	LoginNum uint64              `protobuf:"varint,8,opt,name=LoginNum" json:"LoginNum,omitempty"`
	TmLogin  uint64              `protobuf:"varint,9,opt,name=TmLogin" json:"TmLogin,omitempty"`
	DataVer  uint32              `protobuf:"varint,10,opt,name=DataVer" json:"DataVer,omitempty"`
	// 档次
	Cashlv uint32 `protobuf:"varint,11,opt,name=Cashlv" json:"Cashlv,omitempty"`
	// 剩余钻石
	Cash100 int64 `protobuf:"varint,12,opt,name=Cash100" json:"Cash100,omitempty"`
}

func (m *ST_GiftActivity_One) Reset()                    { *m = ST_GiftActivity_One{} }
func (m *ST_GiftActivity_One) String() string            { return proto.CompactTextString(m) }
func (*ST_GiftActivity_One) ProtoMessage()               {}
func (*ST_GiftActivity_One) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{326} }

func (m *ST_GiftActivity_One) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ST_GiftActivity_One) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_GiftActivity_One) GetTmStart() uint64 {
	if m != nil {
		return m.TmStart
	}
	return 0
}

func (m *ST_GiftActivity_One) GetTmEnd() uint64 {
	if m != nil {
		return m.TmEnd
	}
	return 0
}

func (m *ST_GiftActivity_One) GetSub() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Sub
	}
	return nil
}

func (m *ST_GiftActivity_One) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_GiftActivity_One) GetReSward() []*ST_Vector4Int_PB {
	if m != nil {
		return m.ReSward
	}
	return nil
}

func (m *ST_GiftActivity_One) GetLoginNum() uint64 {
	if m != nil {
		return m.LoginNum
	}
	return 0
}

func (m *ST_GiftActivity_One) GetTmLogin() uint64 {
	if m != nil {
		return m.TmLogin
	}
	return 0
}

func (m *ST_GiftActivity_One) GetDataVer() uint32 {
	if m != nil {
		return m.DataVer
	}
	return 0
}

func (m *ST_GiftActivity_One) GetCashlv() uint32 {
	if m != nil {
		return m.Cashlv
	}
	return 0
}

func (m *ST_GiftActivity_One) GetCash100() int64 {
	if m != nil {
		return m.Cash100
	}
	return 0
}

type ST_BoonPayFirst_PB struct {
	Statue  int32  `protobuf:"varint,1,opt,name=statue" json:"statue,omitempty"`
	Version uint32 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Working uint32 `protobuf:"varint,3,opt,name=working" json:"working,omitempty"`
	BoonID  uint32 `protobuf:"varint,4,opt,name=boonID" json:"boonID,omitempty"`
}

func (m *ST_BoonPayFirst_PB) Reset()                    { *m = ST_BoonPayFirst_PB{} }
func (m *ST_BoonPayFirst_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonPayFirst_PB) ProtoMessage()               {}
func (*ST_BoonPayFirst_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{327} }

func (m *ST_BoonPayFirst_PB) GetStatue() int32 {
	if m != nil {
		return m.Statue
	}
	return 0
}

func (m *ST_BoonPayFirst_PB) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ST_BoonPayFirst_PB) GetWorking() uint32 {
	if m != nil {
		return m.Working
	}
	return 0
}

func (m *ST_BoonPayFirst_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

type ST_BoonPaySecond_PB struct {
	Statue  int32  `protobuf:"varint,1,opt,name=statue" json:"statue,omitempty"`
	Working uint32 `protobuf:"varint,2,opt,name=working" json:"working,omitempty"`
	BoonID  uint32 `protobuf:"varint,3,opt,name=boonID" json:"boonID,omitempty"`
}

func (m *ST_BoonPaySecond_PB) Reset()                    { *m = ST_BoonPaySecond_PB{} }
func (m *ST_BoonPaySecond_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonPaySecond_PB) ProtoMessage()               {}
func (*ST_BoonPaySecond_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{328} }

func (m *ST_BoonPaySecond_PB) GetStatue() int32 {
	if m != nil {
		return m.Statue
	}
	return 0
}

func (m *ST_BoonPaySecond_PB) GetWorking() uint32 {
	if m != nil {
		return m.Working
	}
	return 0
}

func (m *ST_BoonPaySecond_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

type ST_BoonDuration_PB struct {
	BoonID  uint32                    `protobuf:"varint,1,opt,name=boonID" json:"boonID,omitempty"`
	Datas   []*ST_BoonDurationData_PB `protobuf:"bytes,2,rep,name=datas" json:"datas,omitempty"`
	Working uint32                    `protobuf:"varint,3,opt,name=working" json:"working,omitempty"`
}

func (m *ST_BoonDuration_PB) Reset()                    { *m = ST_BoonDuration_PB{} }
func (m *ST_BoonDuration_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonDuration_PB) ProtoMessage()               {}
func (*ST_BoonDuration_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{329} }

func (m *ST_BoonDuration_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

func (m *ST_BoonDuration_PB) GetDatas() []*ST_BoonDurationData_PB {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ST_BoonDuration_PB) GetWorking() uint32 {
	if m != nil {
		return m.Working
	}
	return 0
}

type ST_BoonDurationData_PB struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EndTime uint64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	LastGet uint64 `protobuf:"varint,3,opt,name=lastGet" json:"lastGet,omitempty"`
}

func (m *ST_BoonDurationData_PB) Reset()                    { *m = ST_BoonDurationData_PB{} }
func (m *ST_BoonDurationData_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonDurationData_PB) ProtoMessage()               {}
func (*ST_BoonDurationData_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{330} }

func (m *ST_BoonDurationData_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_BoonDurationData_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_BoonDurationData_PB) GetLastGet() uint64 {
	if m != nil {
		return m.LastGet
	}
	return 0
}

type ST_BoonDaily_PB struct {
	OnBonus uint32                 `protobuf:"varint,1,opt,name=onBonus" json:"onBonus,omitempty"`
	EndTime uint64                 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	Datas   []*ST_BoonDailyData_PB `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	Version uint32                 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Working uint32                 `protobuf:"varint,5,opt,name=working" json:"working,omitempty"`
	BoonID  uint32                 `protobuf:"varint,6,opt,name=boonID" json:"boonID,omitempty"`
}

func (m *ST_BoonDaily_PB) Reset()                    { *m = ST_BoonDaily_PB{} }
func (m *ST_BoonDaily_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonDaily_PB) ProtoMessage()               {}
func (*ST_BoonDaily_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{331} }

func (m *ST_BoonDaily_PB) GetOnBonus() uint32 {
	if m != nil {
		return m.OnBonus
	}
	return 0
}

func (m *ST_BoonDaily_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_BoonDaily_PB) GetDatas() []*ST_BoonDailyData_PB {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ST_BoonDaily_PB) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ST_BoonDaily_PB) GetWorking() uint32 {
	if m != nil {
		return m.Working
	}
	return 0
}

func (m *ST_BoonDaily_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

type ST_BoonDailyData_PB struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Statue   int32  `protobuf:"varint,2,opt,name=statue" json:"statue,omitempty"`
	BuyTimes uint64 `protobuf:"varint,3,opt,name=buyTimes" json:"buyTimes,omitempty"`
}

func (m *ST_BoonDailyData_PB) Reset()                    { *m = ST_BoonDailyData_PB{} }
func (m *ST_BoonDailyData_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonDailyData_PB) ProtoMessage()               {}
func (*ST_BoonDailyData_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{332} }

func (m *ST_BoonDailyData_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_BoonDailyData_PB) GetStatue() int32 {
	if m != nil {
		return m.Statue
	}
	return 0
}

func (m *ST_BoonDailyData_PB) GetBuyTimes() uint64 {
	if m != nil {
		return m.BuyTimes
	}
	return 0
}

type ST_BoonFund_PB struct {
	BoonID  uint32                `protobuf:"varint,1,opt,name=boonID" json:"boonID,omitempty"`
	OnFund  uint32                `protobuf:"varint,2,opt,name=onFund" json:"onFund,omitempty"`
	Datas   []*ST_BoonFundData_PB `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	Working uint32                `protobuf:"varint,4,opt,name=working" json:"working,omitempty"`
}

func (m *ST_BoonFund_PB) Reset()                    { *m = ST_BoonFund_PB{} }
func (m *ST_BoonFund_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonFund_PB) ProtoMessage()               {}
func (*ST_BoonFund_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{333} }

func (m *ST_BoonFund_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

func (m *ST_BoonFund_PB) GetOnFund() uint32 {
	if m != nil {
		return m.OnFund
	}
	return 0
}

func (m *ST_BoonFund_PB) GetDatas() []*ST_BoonFundData_PB {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ST_BoonFund_PB) GetWorking() uint32 {
	if m != nil {
		return m.Working
	}
	return 0
}

type ST_BoonFundData_PB struct {
	Id     uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Statue int32  `protobuf:"varint,2,opt,name=statue" json:"statue,omitempty"`
}

func (m *ST_BoonFundData_PB) Reset()                    { *m = ST_BoonFundData_PB{} }
func (m *ST_BoonFundData_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonFundData_PB) ProtoMessage()               {}
func (*ST_BoonFundData_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{334} }

func (m *ST_BoonFundData_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_BoonFundData_PB) GetStatue() int32 {
	if m != nil {
		return m.Statue
	}
	return 0
}

type ST_BoonRewardData_PB struct {
	DataID  uint32              `protobuf:"varint,1,opt,name=dataID" json:"dataID,omitempty"`
	Rewards []*ST_Vector4Int_PB `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	// 免费奖励
	Rewards2 []*ST_Vector4Int_PB `protobuf:"bytes,3,rep,name=rewards2" json:"rewards2,omitempty"`
	// 领奖条件(充值钻石)
	Cumulative int64 `protobuf:"varint,4,opt,name=Cumulative" json:"Cumulative,omitempty"`
}

func (m *ST_BoonRewardData_PB) Reset()                    { *m = ST_BoonRewardData_PB{} }
func (m *ST_BoonRewardData_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonRewardData_PB) ProtoMessage()               {}
func (*ST_BoonRewardData_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{335} }

func (m *ST_BoonRewardData_PB) GetDataID() uint32 {
	if m != nil {
		return m.DataID
	}
	return 0
}

func (m *ST_BoonRewardData_PB) GetRewards() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *ST_BoonRewardData_PB) GetRewards2() []*ST_Vector4Int_PB {
	if m != nil {
		return m.Rewards2
	}
	return nil
}

func (m *ST_BoonRewardData_PB) GetCumulative() int64 {
	if m != nil {
		return m.Cumulative
	}
	return 0
}

// 	一个福利活动的奖励内容
type ST_BoonRewardConfig_PB struct {
	BoonID  uint32                  `protobuf:"varint,1,opt,name=boonID" json:"boonID,omitempty"`
	DataVer uint32                  `protobuf:"varint,2,opt,name=dataVer" json:"dataVer,omitempty"`
	Datas   []*ST_BoonRewardData_PB `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
}

func (m *ST_BoonRewardConfig_PB) Reset()                    { *m = ST_BoonRewardConfig_PB{} }
func (m *ST_BoonRewardConfig_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_BoonRewardConfig_PB) ProtoMessage()               {}
func (*ST_BoonRewardConfig_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{336} }

func (m *ST_BoonRewardConfig_PB) GetBoonID() uint32 {
	if m != nil {
		return m.BoonID
	}
	return 0
}

func (m *ST_BoonRewardConfig_PB) GetDataVer() uint32 {
	if m != nil {
		return m.DataVer
	}
	return 0
}

func (m *ST_BoonRewardConfig_PB) GetDatas() []*ST_BoonRewardData_PB {
	if m != nil {
		return m.Datas
	}
	return nil
}

type ST_ChapterTask_PB struct {
	TaskID   uint32 `protobuf:"varint,1,opt,name=taskID" json:"taskID,omitempty"`
	Reward   uint32 `protobuf:"varint,2,opt,name=reward" json:"reward,omitempty"`
	Progress uint32 `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
}

func (m *ST_ChapterTask_PB) Reset()                    { *m = ST_ChapterTask_PB{} }
func (m *ST_ChapterTask_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ChapterTask_PB) ProtoMessage()               {}
func (*ST_ChapterTask_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{337} }

func (m *ST_ChapterTask_PB) GetTaskID() uint32 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *ST_ChapterTask_PB) GetReward() uint32 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *ST_ChapterTask_PB) GetProgress() uint32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

type ST_ChapterInfo_PB struct {
	ChapterID uint32               `protobuf:"varint,1,opt,name=chapterID" json:"chapterID,omitempty"`
	Reward    uint32               `protobuf:"varint,2,opt,name=reward" json:"reward,omitempty"`
	Tasks     []*ST_ChapterTask_PB `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *ST_ChapterInfo_PB) Reset()                    { *m = ST_ChapterInfo_PB{} }
func (m *ST_ChapterInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ChapterInfo_PB) ProtoMessage()               {}
func (*ST_ChapterInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{338} }

func (m *ST_ChapterInfo_PB) GetChapterID() uint32 {
	if m != nil {
		return m.ChapterID
	}
	return 0
}

func (m *ST_ChapterInfo_PB) GetReward() uint32 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *ST_ChapterInfo_PB) GetTasks() []*ST_ChapterTask_PB {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type ST_Asset_Chapters_PB struct {
	CurChapter uint32               `protobuf:"varint,1,opt,name=curChapter" json:"curChapter,omitempty"`
	Chapters   []*ST_ChapterInfo_PB `protobuf:"bytes,2,rep,name=chapters" json:"chapters,omitempty"`
}

func (m *ST_Asset_Chapters_PB) Reset()                    { *m = ST_Asset_Chapters_PB{} }
func (m *ST_Asset_Chapters_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_Chapters_PB) ProtoMessage()               {}
func (*ST_Asset_Chapters_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{339} }

func (m *ST_Asset_Chapters_PB) GetCurChapter() uint32 {
	if m != nil {
		return m.CurChapter
	}
	return 0
}

func (m *ST_Asset_Chapters_PB) GetChapters() []*ST_ChapterInfo_PB {
	if m != nil {
		return m.Chapters
	}
	return nil
}

// 监狱留言
type ST_PrisonMessage_PB struct {
	SenderUid uint64 `protobuf:"varint,1,opt,name=senderUid" json:"senderUid,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	SendTime  uint64 `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	Id        uint32 `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
}

func (m *ST_PrisonMessage_PB) Reset()                    { *m = ST_PrisonMessage_PB{} }
func (m *ST_PrisonMessage_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrisonMessage_PB) ProtoMessage()               {}
func (*ST_PrisonMessage_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{340} }

func (m *ST_PrisonMessage_PB) GetSenderUid() uint64 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *ST_PrisonMessage_PB) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ST_PrisonMessage_PB) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_PrisonMessage_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 监狱留言板资产
type ST_PrisonMessageBoard_PB struct {
	MsgList  []*ST_PrisonMessage_PB `protobuf:"bytes,1,rep,name=msgList" json:"msgList,omitempty"`
	MaxId    uint32                 `protobuf:"varint,2,opt,name=maxId" json:"maxId,omitempty"`
	OwnerUid uint64                 `protobuf:"varint,3,opt,name=ownerUid" json:"ownerUid,omitempty"`
}

func (m *ST_PrisonMessageBoard_PB) Reset()                    { *m = ST_PrisonMessageBoard_PB{} }
func (m *ST_PrisonMessageBoard_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrisonMessageBoard_PB) ProtoMessage()               {}
func (*ST_PrisonMessageBoard_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{341} }

func (m *ST_PrisonMessageBoard_PB) GetMsgList() []*ST_PrisonMessage_PB {
	if m != nil {
		return m.MsgList
	}
	return nil
}

func (m *ST_PrisonMessageBoard_PB) GetMaxId() uint32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *ST_PrisonMessageBoard_PB) GetOwnerUid() uint64 {
	if m != nil {
		return m.OwnerUid
	}
	return 0
}

type ST_PrisonMessgeClient_PB struct {
	SenderUid       uint64 `protobuf:"varint,1,opt,name=senderUid" json:"senderUid,omitempty"`
	Content         string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	SendTime        uint64 `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	Id              uint32 `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	SenderName      string `protobuf:"bytes,5,opt,name=senderName" json:"senderName,omitempty"`
	LordIcon        string `protobuf:"bytes,6,opt,name=lordIcon" json:"lordIcon,omitempty"`
	AvatarBoxID     uint32 `protobuf:"varint,7,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	Avatar          string `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
	LeagueName      string `protobuf:"bytes,9,opt,name=leagueName" json:"leagueName,omitempty"`
	LeagueShortName string `protobuf:"bytes,10,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
}

func (m *ST_PrisonMessgeClient_PB) Reset()                    { *m = ST_PrisonMessgeClient_PB{} }
func (m *ST_PrisonMessgeClient_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrisonMessgeClient_PB) ProtoMessage()               {}
func (*ST_PrisonMessgeClient_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{342} }

func (m *ST_PrisonMessgeClient_PB) GetSenderUid() uint64 {
	if m != nil {
		return m.SenderUid
	}
	return 0
}

func (m *ST_PrisonMessgeClient_PB) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ST_PrisonMessgeClient_PB) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ST_PrisonMessgeClient_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_PrisonMessgeClient_PB) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *ST_PrisonMessgeClient_PB) GetLordIcon() string {
	if m != nil {
		return m.LordIcon
	}
	return ""
}

func (m *ST_PrisonMessgeClient_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_PrisonMessgeClient_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_PrisonMessgeClient_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_PrisonMessgeClient_PB) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

type ST_PrisonMessageList_PB struct {
	MessageList []*ST_PrisonMessgeClient_PB `protobuf:"bytes,1,rep,name=messageList" json:"messageList,omitempty"`
	VersionId   uint32                      `protobuf:"varint,2,opt,name=versionId" json:"versionId,omitempty"`
}

func (m *ST_PrisonMessageList_PB) Reset()                    { *m = ST_PrisonMessageList_PB{} }
func (m *ST_PrisonMessageList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrisonMessageList_PB) ProtoMessage()               {}
func (*ST_PrisonMessageList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{343} }

func (m *ST_PrisonMessageList_PB) GetMessageList() []*ST_PrisonMessgeClient_PB {
	if m != nil {
		return m.MessageList
	}
	return nil
}

func (m *ST_PrisonMessageList_PB) GetVersionId() uint32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

type ST_CommanderFashionInfo_PB struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EndTime int64  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *ST_CommanderFashionInfo_PB) Reset()                    { *m = ST_CommanderFashionInfo_PB{} }
func (m *ST_CommanderFashionInfo_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CommanderFashionInfo_PB) ProtoMessage()               {}
func (*ST_CommanderFashionInfo_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{344} }

func (m *ST_CommanderFashionInfo_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_CommanderFashionInfo_PB) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ST_Asset_CommanderFashion_PB struct {
	IconSkins  []*ST_CommanderFashionInfo_PB `protobuf:"bytes,3,rep,name=iconSkins" json:"iconSkins,omitempty"`
	ModelSkins []*ST_CommanderFashionInfo_PB `protobuf:"bytes,4,rep,name=modelSkins" json:"modelSkins,omitempty"`
	Boxs       []*ST_CommanderFashionInfo_PB `protobuf:"bytes,5,rep,name=boxs" json:"boxs,omitempty"`
	Bubbles    []*ST_CommanderFashionInfo_PB `protobuf:"bytes,6,rep,name=bubbles" json:"bubbles,omitempty"`
}

func (m *ST_Asset_CommanderFashion_PB) Reset()                    { *m = ST_Asset_CommanderFashion_PB{} }
func (m *ST_Asset_CommanderFashion_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_CommanderFashion_PB) ProtoMessage()               {}
func (*ST_Asset_CommanderFashion_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{345} }

func (m *ST_Asset_CommanderFashion_PB) GetIconSkins() []*ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.IconSkins
	}
	return nil
}

func (m *ST_Asset_CommanderFashion_PB) GetModelSkins() []*ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.ModelSkins
	}
	return nil
}

func (m *ST_Asset_CommanderFashion_PB) GetBoxs() []*ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.Boxs
	}
	return nil
}

func (m *ST_Asset_CommanderFashion_PB) GetBubbles() []*ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.Bubbles
	}
	return nil
}

type ST_SevenDayTask_Item struct {
	Id           uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Score        uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	RewardStatus uint32 `protobuf:"varint,3,opt,name=rewardStatus" json:"rewardStatus,omitempty"`
	Tm           uint64 `protobuf:"varint,4,opt,name=tm" json:"tm,omitempty"`
}

func (m *ST_SevenDayTask_Item) Reset()                    { *m = ST_SevenDayTask_Item{} }
func (m *ST_SevenDayTask_Item) String() string            { return proto.CompactTextString(m) }
func (*ST_SevenDayTask_Item) ProtoMessage()               {}
func (*ST_SevenDayTask_Item) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{346} }

func (m *ST_SevenDayTask_Item) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_SevenDayTask_Item) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_SevenDayTask_Item) GetRewardStatus() uint32 {
	if m != nil {
		return m.RewardStatus
	}
	return 0
}

func (m *ST_SevenDayTask_Item) GetTm() uint64 {
	if m != nil {
		return m.Tm
	}
	return 0
}

type ST_SeventDayTaskAsset_PB struct {
	Tasks         []*ST_SevenDayTask_Item `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	GetReward     bool                    `protobuf:"varint,2,opt,name=getReward" json:"getReward,omitempty"`
	Score         uint32                  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	Number        uint32                  `protobuf:"varint,4,opt,name=number" json:"number,omitempty"`
	MainCityLevel uint32                  `protobuf:"varint,5,opt,name=mainCityLevel" json:"mainCityLevel,omitempty"`
}

func (m *ST_SeventDayTaskAsset_PB) Reset()                    { *m = ST_SeventDayTaskAsset_PB{} }
func (m *ST_SeventDayTaskAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SeventDayTaskAsset_PB) ProtoMessage()               {}
func (*ST_SeventDayTaskAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{347} }

func (m *ST_SeventDayTaskAsset_PB) GetTasks() []*ST_SevenDayTask_Item {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_SeventDayTaskAsset_PB) GetGetReward() bool {
	if m != nil {
		return m.GetReward
	}
	return false
}

func (m *ST_SeventDayTaskAsset_PB) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_SeventDayTaskAsset_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_SeventDayTaskAsset_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

type ST_NoviceTaskAsset_PB struct {
	Tasks     []*ST_SevenDayTask_Item `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	GetReward bool                    `protobuf:"varint,2,opt,name=getReward" json:"getReward,omitempty"`
	Score     uint32                  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	Starttime uint64                  `protobuf:"varint,4,opt,name=starttime" json:"starttime,omitempty"`
}

func (m *ST_NoviceTaskAsset_PB) Reset()                    { *m = ST_NoviceTaskAsset_PB{} }
func (m *ST_NoviceTaskAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_NoviceTaskAsset_PB) ProtoMessage()               {}
func (*ST_NoviceTaskAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{348} }

func (m *ST_NoviceTaskAsset_PB) GetTasks() []*ST_SevenDayTask_Item {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_NoviceTaskAsset_PB) GetGetReward() bool {
	if m != nil {
		return m.GetReward
	}
	return false
}

func (m *ST_NoviceTaskAsset_PB) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_NoviceTaskAsset_PB) GetStarttime() uint64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

type ST_KillWildMonster_PB struct {
	Dataid uint64 `protobuf:"varint,1,opt,name=dataid" json:"dataid,omitempty"`
	Number uint32 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	Time   uint64 `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
}

func (m *ST_KillWildMonster_PB) Reset()                    { *m = ST_KillWildMonster_PB{} }
func (m *ST_KillWildMonster_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_KillWildMonster_PB) ProtoMessage()               {}
func (*ST_KillWildMonster_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{349} }

func (m *ST_KillWildMonster_PB) GetDataid() uint64 {
	if m != nil {
		return m.Dataid
	}
	return 0
}

func (m *ST_KillWildMonster_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_KillWildMonster_PB) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ST_AirShipChanllange_PB struct {
	Armys        *ST_UnitAsset_PB `protobuf:"bytes,1,opt,name=armys" json:"armys,omitempty"`
	HeroList     []uint32         `protobuf:"varint,2,rep,packed,name=HeroList" json:"HeroList,omitempty"`
	Formation    uint32           `protobuf:"varint,3,opt,name=Formation" json:"Formation,omitempty"`
	AirShipCfgid int64            `protobuf:"varint,4,opt,name=AirShipCfgid" json:"AirShipCfgid,omitempty"`
}

func (m *ST_AirShipChanllange_PB) Reset()                    { *m = ST_AirShipChanllange_PB{} }
func (m *ST_AirShipChanllange_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AirShipChanllange_PB) ProtoMessage()               {}
func (*ST_AirShipChanllange_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{350} }

func (m *ST_AirShipChanllange_PB) GetArmys() *ST_UnitAsset_PB {
	if m != nil {
		return m.Armys
	}
	return nil
}

func (m *ST_AirShipChanllange_PB) GetHeroList() []uint32 {
	if m != nil {
		return m.HeroList
	}
	return nil
}

func (m *ST_AirShipChanllange_PB) GetFormation() uint32 {
	if m != nil {
		return m.Formation
	}
	return 0
}

func (m *ST_AirShipChanllange_PB) GetAirShipCfgid() int64 {
	if m != nil {
		return m.AirShipCfgid
	}
	return 0
}

type AirShipPassDetail struct {
	CurLevel uint32 `protobuf:"varint,1,opt,name=CurLevel" json:"CurLevel,omitempty"`
	Star     uint32 `protobuf:"varint,2,opt,name=Star" json:"Star,omitempty"`
}

func (m *AirShipPassDetail) Reset()                    { *m = AirShipPassDetail{} }
func (m *AirShipPassDetail) String() string            { return proto.CompactTextString(m) }
func (*AirShipPassDetail) ProtoMessage()               {}
func (*AirShipPassDetail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{351} }

func (m *AirShipPassDetail) GetCurLevel() uint32 {
	if m != nil {
		return m.CurLevel
	}
	return 0
}

func (m *AirShipPassDetail) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

// 暂时不做使用
type ST_UserAirShipChanllange_PB struct {
	CurUnlockMaxLevel uint32               `protobuf:"varint,1,opt,name=CurUnlockMaxLevel" json:"CurUnlockMaxLevel,omitempty"`
	PassedDetail      []*AirShipPassDetail `protobuf:"bytes,2,rep,name=PassedDetail" json:"PassedDetail,omitempty"`
}

func (m *ST_UserAirShipChanllange_PB) Reset()                    { *m = ST_UserAirShipChanllange_PB{} }
func (m *ST_UserAirShipChanllange_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_UserAirShipChanllange_PB) ProtoMessage()               {}
func (*ST_UserAirShipChanllange_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{352} }

func (m *ST_UserAirShipChanllange_PB) GetCurUnlockMaxLevel() uint32 {
	if m != nil {
		return m.CurUnlockMaxLevel
	}
	return 0
}

func (m *ST_UserAirShipChanllange_PB) GetPassedDetail() []*AirShipPassDetail {
	if m != nil {
		return m.PassedDetail
	}
	return nil
}

type ST_AirShipChanllangeRet_PB struct {
	RetCode          int32                 `protobuf:"varint,1,opt,name=RetCode" json:"RetCode,omitempty"`
	IsWin            bool                  `protobuf:"varint,2,opt,name=IsWin" json:"IsWin,omitempty"`
	Replay           *ST_BattleInfo_PB     `protobuf:"bytes,3,opt,name=Replay" json:"Replay,omitempty"`
	Rewards          *ST_Vector4IntList_PB `protobuf:"bytes,4,opt,name=Rewards" json:"Rewards,omitempty"`
	Star             uint32                `protobuf:"varint,5,opt,name=Star" json:"Star,omitempty"`
	AirShipCfgid     int64                 `protobuf:"varint,6,opt,name=AirShipCfgid" json:"AirShipCfgid,omitempty"`
	FirstPassRewards *ST_Vector4IntList_PB `protobuf:"bytes,7,opt,name=FirstPassRewards" json:"FirstPassRewards,omitempty"`
}

func (m *ST_AirShipChanllangeRet_PB) Reset()                    { *m = ST_AirShipChanllangeRet_PB{} }
func (m *ST_AirShipChanllangeRet_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_AirShipChanllangeRet_PB) ProtoMessage()               {}
func (*ST_AirShipChanllangeRet_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{353} }

func (m *ST_AirShipChanllangeRet_PB) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ST_AirShipChanllangeRet_PB) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *ST_AirShipChanllangeRet_PB) GetReplay() *ST_BattleInfo_PB {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *ST_AirShipChanllangeRet_PB) GetRewards() *ST_Vector4IntList_PB {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *ST_AirShipChanllangeRet_PB) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *ST_AirShipChanllangeRet_PB) GetAirShipCfgid() int64 {
	if m != nil {
		return m.AirShipCfgid
	}
	return 0
}

func (m *ST_AirShipChanllangeRet_PB) GetFirstPassRewards() *ST_Vector4IntList_PB {
	if m != nil {
		return m.FirstPassRewards
	}
	return nil
}

type ST_DropActivityRankItem_PB struct {
	Uid   uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Score uint64 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (m *ST_DropActivityRankItem_PB) Reset()                    { *m = ST_DropActivityRankItem_PB{} }
func (m *ST_DropActivityRankItem_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DropActivityRankItem_PB) ProtoMessage()               {}
func (*ST_DropActivityRankItem_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{354} }

func (m *ST_DropActivityRankItem_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_DropActivityRankItem_PB) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ST_DropActivityRank_PB struct {
	ActivityId  uint32                        `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	AvtivityNum uint32                        `protobuf:"varint,2,opt,name=avtivityNum" json:"avtivityNum,omitempty"`
	RankItems   []*ST_DropActivityRankItem_PB `protobuf:"bytes,3,rep,name=rankItems" json:"rankItems,omitempty"`
	IsReward    bool                          `protobuf:"varint,4,opt,name=isReward" json:"isReward,omitempty"`
}

func (m *ST_DropActivityRank_PB) Reset()                    { *m = ST_DropActivityRank_PB{} }
func (m *ST_DropActivityRank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_DropActivityRank_PB) ProtoMessage()               {}
func (*ST_DropActivityRank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{355} }

func (m *ST_DropActivityRank_PB) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ST_DropActivityRank_PB) GetAvtivityNum() uint32 {
	if m != nil {
		return m.AvtivityNum
	}
	return 0
}

func (m *ST_DropActivityRank_PB) GetRankItems() []*ST_DropActivityRankItem_PB {
	if m != nil {
		return m.RankItems
	}
	return nil
}

func (m *ST_DropActivityRank_PB) GetIsReward() bool {
	if m != nil {
		return m.IsReward
	}
	return false
}

// 联盟任务
type ST_LeagueTask_Item struct {
	Id              int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Status          int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	FinishTimestamp uint64 `protobuf:"varint,3,opt,name=finishTimestamp" json:"finishTimestamp,omitempty"`
	LactionID       uint32 `protobuf:"varint,4,opt,name=lactionID" json:"lactionID,omitempty"`
}

func (m *ST_LeagueTask_Item) Reset()                    { *m = ST_LeagueTask_Item{} }
func (m *ST_LeagueTask_Item) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueTask_Item) ProtoMessage()               {}
func (*ST_LeagueTask_Item) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{356} }

func (m *ST_LeagueTask_Item) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LeagueTask_Item) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_LeagueTask_Item) GetFinishTimestamp() uint64 {
	if m != nil {
		return m.FinishTimestamp
	}
	return 0
}

func (m *ST_LeagueTask_Item) GetLactionID() uint32 {
	if m != nil {
		return m.LactionID
	}
	return 0
}

// 联盟任务资产
type ST_Asset_LeagueTask_PB struct {
	Init                   bool                  `protobuf:"varint,1,opt,name=init" json:"init,omitempty"`
	Tasks                  []*ST_LeagueTask_Item `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	RefreshExpireTimestamp uint64                `protobuf:"varint,3,opt,name=refreshExpireTimestamp" json:"refreshExpireTimestamp,omitempty"`
}

func (m *ST_Asset_LeagueTask_PB) Reset()                    { *m = ST_Asset_LeagueTask_PB{} }
func (m *ST_Asset_LeagueTask_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_LeagueTask_PB) ProtoMessage()               {}
func (*ST_Asset_LeagueTask_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{357} }

func (m *ST_Asset_LeagueTask_PB) GetInit() bool {
	if m != nil {
		return m.Init
	}
	return false
}

func (m *ST_Asset_LeagueTask_PB) GetTasks() []*ST_LeagueTask_Item {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_Asset_LeagueTask_PB) GetRefreshExpireTimestamp() uint64 {
	if m != nil {
		return m.RefreshExpireTimestamp
	}
	return 0
}

// 最强执政官阶段活动
type ST_SubTask struct {
	ActivityID uint32 `protobuf:"varint,1,opt,name=activityID" json:"activityID,omitempty"`
	Day        uint32 `protobuf:"varint,2,opt,name=day" json:"day,omitempty"`
}

func (m *ST_SubTask) Reset()                    { *m = ST_SubTask{} }
func (m *ST_SubTask) String() string            { return proto.CompactTextString(m) }
func (*ST_SubTask) ProtoMessage()               {}
func (*ST_SubTask) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{358} }

func (m *ST_SubTask) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

func (m *ST_SubTask) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

// 最强执政官
type ST_StrongestCommander_PB struct {
	Number            uint32        `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage             uint32        `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime    uint64        `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime      uint64        `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage          uint32        `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	SubStageStartTime uint64        `protobuf:"varint,6,opt,name=subStageStartTime" json:"subStageStartTime,omitempty"`
	SubStageEndTime   uint64        `protobuf:"varint,7,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	SubTasks          []*ST_SubTask `protobuf:"bytes,8,rep,name=subTasks" json:"subTasks,omitempty"`
}

func (m *ST_StrongestCommander_PB) Reset()                    { *m = ST_StrongestCommander_PB{} }
func (m *ST_StrongestCommander_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StrongestCommander_PB) ProtoMessage()               {}
func (*ST_StrongestCommander_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{359} }

func (m *ST_StrongestCommander_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetSubStageStartTime() uint64 {
	if m != nil {
		return m.SubStageStartTime
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_StrongestCommander_PB) GetSubTasks() []*ST_SubTask {
	if m != nil {
		return m.SubTasks
	}
	return nil
}

// 最强执政官排行榜
type ST_StrongestCommanderRank_PB struct {
	RankType uint32                        `protobuf:"varint,1,opt,name=rankType" json:"rankType,omitempty"`
	SuRank   []*ST_DropActivityRankItem_PB `protobuf:"bytes,2,rep,name=suRank" json:"suRank,omitempty"`
}

func (m *ST_StrongestCommanderRank_PB) Reset()                    { *m = ST_StrongestCommanderRank_PB{} }
func (m *ST_StrongestCommanderRank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_StrongestCommanderRank_PB) ProtoMessage()               {}
func (*ST_StrongestCommanderRank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{360} }

func (m *ST_StrongestCommanderRank_PB) GetRankType() uint32 {
	if m != nil {
		return m.RankType
	}
	return 0
}

func (m *ST_StrongestCommanderRank_PB) GetSuRank() []*ST_DropActivityRankItem_PB {
	if m != nil {
		return m.SuRank
	}
	return nil
}

// 个人最强执政官资产
type ST_Asset_StrongestCommander_PB struct {
	Number          uint32   `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage           uint32   `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime  uint64   `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime    uint64   `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage        uint32   `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	RewardList      []uint32 `protobuf:"varint,6,rep,packed,name=rewardList" json:"rewardList,omitempty"`
	ScoreRewardId   uint32   `protobuf:"varint,7,opt,name=scoreRewardId" json:"scoreRewardId,omitempty"`
	Score           uint32   `protobuf:"varint,8,opt,name=score" json:"score,omitempty"`
	SubScore        uint32   `protobuf:"varint,9,opt,name=subScore" json:"subScore,omitempty"`
	SubStageEndTime uint64   `protobuf:"varint,10,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	SubIndex        int32    `protobuf:"varint,11,opt,name=subIndex" json:"subIndex,omitempty"`
}

func (m *ST_Asset_StrongestCommander_PB) Reset()         { *m = ST_Asset_StrongestCommander_PB{} }
func (m *ST_Asset_StrongestCommander_PB) String() string { return proto.CompactTextString(m) }
func (*ST_Asset_StrongestCommander_PB) ProtoMessage()    {}
func (*ST_Asset_StrongestCommander_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{361}
}

func (m *ST_Asset_StrongestCommander_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetRewardList() []uint32 {
	if m != nil {
		return m.RewardList
	}
	return nil
}

func (m *ST_Asset_StrongestCommander_PB) GetScoreRewardId() uint32 {
	if m != nil {
		return m.ScoreRewardId
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetSubScore() uint32 {
	if m != nil {
		return m.SubScore
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_Asset_StrongestCommander_PB) GetSubIndex() int32 {
	if m != nil {
		return m.SubIndex
	}
	return 0
}

// 最强执政官
type ST_PrepareForWar_PB struct {
	Number            uint32        `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage             uint32        `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime    uint64        `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime      uint64        `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage          uint32        `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	SubStageStartTime uint64        `protobuf:"varint,6,opt,name=subStageStartTime" json:"subStageStartTime,omitempty"`
	SubStageEndTime   uint64        `protobuf:"varint,7,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	SubTasks          []*ST_SubTask `protobuf:"bytes,8,rep,name=subTasks" json:"subTasks,omitempty"`
}

func (m *ST_PrepareForWar_PB) Reset()                    { *m = ST_PrepareForWar_PB{} }
func (m *ST_PrepareForWar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrepareForWar_PB) ProtoMessage()               {}
func (*ST_PrepareForWar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{362} }

func (m *ST_PrepareForWar_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetSubStageStartTime() uint64 {
	if m != nil {
		return m.SubStageStartTime
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_PrepareForWar_PB) GetSubTasks() []*ST_SubTask {
	if m != nil {
		return m.SubTasks
	}
	return nil
}

// 最强执政官排行榜
type ST_PrepareForWarRank_PB struct {
	RankType uint32                        `protobuf:"varint,1,opt,name=rankType" json:"rankType,omitempty"`
	SuRank   []*ST_DropActivityRankItem_PB `protobuf:"bytes,2,rep,name=suRank" json:"suRank,omitempty"`
}

func (m *ST_PrepareForWarRank_PB) Reset()                    { *m = ST_PrepareForWarRank_PB{} }
func (m *ST_PrepareForWarRank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_PrepareForWarRank_PB) ProtoMessage()               {}
func (*ST_PrepareForWarRank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{363} }

func (m *ST_PrepareForWarRank_PB) GetRankType() uint32 {
	if m != nil {
		return m.RankType
	}
	return 0
}

func (m *ST_PrepareForWarRank_PB) GetSuRank() []*ST_DropActivityRankItem_PB {
	if m != nil {
		return m.SuRank
	}
	return nil
}

// 个人最强执政官资产
type ST_Asset_PrepareForWar_PB struct {
	Number          uint32   `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage           uint32   `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime  uint64   `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime    uint64   `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage        uint32   `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	RewardList      []uint32 `protobuf:"varint,6,rep,packed,name=rewardList" json:"rewardList,omitempty"`
	ScoreRewardId   uint32   `protobuf:"varint,7,opt,name=scoreRewardId" json:"scoreRewardId,omitempty"`
	Score           uint32   `protobuf:"varint,8,opt,name=score" json:"score,omitempty"`
	SubScore        uint32   `protobuf:"varint,9,opt,name=subScore" json:"subScore,omitempty"`
	SubStageEndTime uint64   `protobuf:"varint,10,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
}

func (m *ST_Asset_PrepareForWar_PB) Reset()                    { *m = ST_Asset_PrepareForWar_PB{} }
func (m *ST_Asset_PrepareForWar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_PrepareForWar_PB) ProtoMessage()               {}
func (*ST_Asset_PrepareForWar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{364} }

func (m *ST_Asset_PrepareForWar_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetRewardList() []uint32 {
	if m != nil {
		return m.RewardList
	}
	return nil
}

func (m *ST_Asset_PrepareForWar_PB) GetScoreRewardId() uint32 {
	if m != nil {
		return m.ScoreRewardId
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetSubScore() uint32 {
	if m != nil {
		return m.SubScore
	}
	return 0
}

func (m *ST_Asset_PrepareForWar_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

// 远征商店Item
type ST_ExpeditionShop_Item_PB struct {
	SlotIdx      uint32 `protobuf:"varint,1,opt,name=slotIdx" json:"slotIdx,omitempty"`
	LeftBuyCount uint32 `protobuf:"varint,2,opt,name=leftBuyCount" json:"leftBuyCount,omitempty"`
	CsvId        int64  `protobuf:"varint,3,opt,name=csvId" json:"csvId,omitempty"`
}

func (m *ST_ExpeditionShop_Item_PB) Reset()                    { *m = ST_ExpeditionShop_Item_PB{} }
func (m *ST_ExpeditionShop_Item_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ExpeditionShop_Item_PB) ProtoMessage()               {}
func (*ST_ExpeditionShop_Item_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{365} }

func (m *ST_ExpeditionShop_Item_PB) GetSlotIdx() uint32 {
	if m != nil {
		return m.SlotIdx
	}
	return 0
}

func (m *ST_ExpeditionShop_Item_PB) GetLeftBuyCount() uint32 {
	if m != nil {
		return m.LeftBuyCount
	}
	return 0
}

func (m *ST_ExpeditionShop_Item_PB) GetCsvId() int64 {
	if m != nil {
		return m.CsvId
	}
	return 0
}

// 个人远征商店资产
type ST_Asset_ExpeditionShop_PB struct {
	SpecialItems            []*ST_ExpeditionShop_Item_PB `protobuf:"bytes,1,rep,name=specialItems" json:"specialItems,omitempty"`
	Items                   []*ST_ExpeditionShop_Item_PB `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	RefreshSpecialItemsTime uint64                       `protobuf:"varint,3,opt,name=refreshSpecialItemsTime" json:"refreshSpecialItemsTime,omitempty"`
	RefreshItemsTime        uint64                       `protobuf:"varint,4,opt,name=refreshItemsTime" json:"refreshItemsTime,omitempty"`
	RefreshItemsCount       uint32                       `protobuf:"varint,5,opt,name=refreshItemsCount" json:"refreshItemsCount,omitempty"`
}

func (m *ST_Asset_ExpeditionShop_PB) Reset()                    { *m = ST_Asset_ExpeditionShop_PB{} }
func (m *ST_Asset_ExpeditionShop_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_ExpeditionShop_PB) ProtoMessage()               {}
func (*ST_Asset_ExpeditionShop_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{366} }

func (m *ST_Asset_ExpeditionShop_PB) GetSpecialItems() []*ST_ExpeditionShop_Item_PB {
	if m != nil {
		return m.SpecialItems
	}
	return nil
}

func (m *ST_Asset_ExpeditionShop_PB) GetItems() []*ST_ExpeditionShop_Item_PB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ST_Asset_ExpeditionShop_PB) GetRefreshSpecialItemsTime() uint64 {
	if m != nil {
		return m.RefreshSpecialItemsTime
	}
	return 0
}

func (m *ST_Asset_ExpeditionShop_PB) GetRefreshItemsTime() uint64 {
	if m != nil {
		return m.RefreshItemsTime
	}
	return 0
}

func (m *ST_Asset_ExpeditionShop_PB) GetRefreshItemsCount() uint32 {
	if m != nil {
		return m.RefreshItemsCount
	}
	return 0
}

// 全局远征商店
type ST_ExpeditionShop_PB struct {
	SpecialItems            []*ST_ExpeditionShop_Item_PB `protobuf:"bytes,1,rep,name=specialItems" json:"specialItems,omitempty"`
	RefreshSpecialItemsTime uint64                       `protobuf:"varint,2,opt,name=refreshSpecialItemsTime" json:"refreshSpecialItemsTime,omitempty"`
}

func (m *ST_ExpeditionShop_PB) Reset()                    { *m = ST_ExpeditionShop_PB{} }
func (m *ST_ExpeditionShop_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_ExpeditionShop_PB) ProtoMessage()               {}
func (*ST_ExpeditionShop_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{367} }

func (m *ST_ExpeditionShop_PB) GetSpecialItems() []*ST_ExpeditionShop_Item_PB {
	if m != nil {
		return m.SpecialItems
	}
	return nil
}

func (m *ST_ExpeditionShop_PB) GetRefreshSpecialItemsTime() uint64 {
	if m != nil {
		return m.RefreshSpecialItemsTime
	}
	return 0
}

// 天下大势条目
type ST_WorldSituation_Entry_PB struct {
	CsvId        int64                 `protobuf:"varint,1,opt,name=csvId" json:"csvId,omitempty"`
	Type         uint32                `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	SubType      uint32                `protobuf:"varint,3,opt,name=subType" json:"subType,omitempty"`
	ServerValue  uint64                `protobuf:"varint,4,opt,name=serverValue" json:"serverValue,omitempty"`
	Condition    *ST_Vector4Int_PB     `protobuf:"bytes,5,opt,name=condition" json:"condition,omitempty"`
	StartTime    uint64                `protobuf:"varint,6,opt,name=startTime" json:"startTime,omitempty"`
	EndTime      uint64                `protobuf:"varint,7,opt,name=endTime" json:"endTime,omitempty"`
	Status       uint32                `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
	ServerResult bool                  `protobuf:"varint,9,opt,name=serverResult" json:"serverResult,omitempty"`
	FinishTime   uint64                `protobuf:"varint,10,opt,name=finishTime" json:"finishTime,omitempty"`
	EndType      uint32                `protobuf:"varint,11,opt,name=endType" json:"endType,omitempty"`
	LeagueValue  []*ST_Vector2Int64_PB `protobuf:"bytes,12,rep,name=LeagueValue" json:"LeagueValue,omitempty"`
	GmValue      uint64                `protobuf:"varint,13,opt,name=GmValue" json:"GmValue,omitempty"`
}

func (m *ST_WorldSituation_Entry_PB) Reset()                    { *m = ST_WorldSituation_Entry_PB{} }
func (m *ST_WorldSituation_Entry_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldSituation_Entry_PB) ProtoMessage()               {}
func (*ST_WorldSituation_Entry_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{368} }

func (m *ST_WorldSituation_Entry_PB) GetCsvId() int64 {
	if m != nil {
		return m.CsvId
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetServerValue() uint64 {
	if m != nil {
		return m.ServerValue
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetCondition() *ST_Vector4Int_PB {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *ST_WorldSituation_Entry_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetServerResult() bool {
	if m != nil {
		return m.ServerResult
	}
	return false
}

func (m *ST_WorldSituation_Entry_PB) GetFinishTime() uint64 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetEndType() uint32 {
	if m != nil {
		return m.EndType
	}
	return 0
}

func (m *ST_WorldSituation_Entry_PB) GetLeagueValue() []*ST_Vector2Int64_PB {
	if m != nil {
		return m.LeagueValue
	}
	return nil
}

func (m *ST_WorldSituation_Entry_PB) GetGmValue() uint64 {
	if m != nil {
		return m.GmValue
	}
	return 0
}

// 全局天下大势资产
type ST_WorldSituation_PB struct {
	Init     bool                          `protobuf:"varint,1,opt,name=init" json:"init,omitempty"`
	Entries  []*ST_WorldSituation_Entry_PB `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	CurIndex uint32                        `protobuf:"varint,3,opt,name=curIndex" json:"curIndex,omitempty"`
}

func (m *ST_WorldSituation_PB) Reset()                    { *m = ST_WorldSituation_PB{} }
func (m *ST_WorldSituation_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_WorldSituation_PB) ProtoMessage()               {}
func (*ST_WorldSituation_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{369} }

func (m *ST_WorldSituation_PB) GetInit() bool {
	if m != nil {
		return m.Init
	}
	return false
}

func (m *ST_WorldSituation_PB) GetEntries() []*ST_WorldSituation_Entry_PB {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ST_WorldSituation_PB) GetCurIndex() uint32 {
	if m != nil {
		return m.CurIndex
	}
	return 0
}

// 全局天下大势排行榜快照资产
type ST_WorldSituationRankSnapshot_PB struct {
	Entries []*ST_WorldSituationRankSnapshot_Entry_PB `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *ST_WorldSituationRankSnapshot_PB) Reset()         { *m = ST_WorldSituationRankSnapshot_PB{} }
func (m *ST_WorldSituationRankSnapshot_PB) String() string { return proto.CompactTextString(m) }
func (*ST_WorldSituationRankSnapshot_PB) ProtoMessage()    {}
func (*ST_WorldSituationRankSnapshot_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{370}
}

func (m *ST_WorldSituationRankSnapshot_PB) GetEntries() []*ST_WorldSituationRankSnapshot_Entry_PB {
	if m != nil {
		return m.Entries
	}
	return nil
}

// 天下大势排行榜快照条目
type ST_WorldSituationRankSnapshot_Entry_PB struct {
	CsvId        int64                `protobuf:"varint,1,opt,name=csvId" json:"csvId,omitempty"`
	RankSnapshot *ST_PowerRankingList `protobuf:"bytes,2,opt,name=rankSnapshot" json:"rankSnapshot,omitempty"`
}

func (m *ST_WorldSituationRankSnapshot_Entry_PB) Reset() {
	*m = ST_WorldSituationRankSnapshot_Entry_PB{}
}
func (m *ST_WorldSituationRankSnapshot_Entry_PB) String() string { return proto.CompactTextString(m) }
func (*ST_WorldSituationRankSnapshot_Entry_PB) ProtoMessage()    {}
func (*ST_WorldSituationRankSnapshot_Entry_PB) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{371}
}

func (m *ST_WorldSituationRankSnapshot_Entry_PB) GetCsvId() int64 {
	if m != nil {
		return m.CsvId
	}
	return 0
}

func (m *ST_WorldSituationRankSnapshot_Entry_PB) GetRankSnapshot() *ST_PowerRankingList {
	if m != nil {
		return m.RankSnapshot
	}
	return nil
}

// 天下大势玩家资产
type ST_Asset_WorldSituation_PB struct {
	Awards []*ST_Vector4UInt64_PB `protobuf:"bytes,1,rep,name=awards" json:"awards,omitempty"`
}

func (m *ST_Asset_WorldSituation_PB) Reset()                    { *m = ST_Asset_WorldSituation_PB{} }
func (m *ST_Asset_WorldSituation_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_WorldSituation_PB) ProtoMessage()               {}
func (*ST_Asset_WorldSituation_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{372} }

func (m *ST_Asset_WorldSituation_PB) GetAwards() []*ST_Vector4UInt64_PB {
	if m != nil {
		return m.Awards
	}
	return nil
}

// 登陆有礼玩家资产
type ST_Asset_LoginGift_PB struct {
	GroupId     uint32 `protobuf:"varint,1,opt,name=groupId" json:"groupId,omitempty"`
	LoginDays   uint32 `protobuf:"varint,2,opt,name=loginDays" json:"loginDays,omitempty"`
	RewardDays  int64  `protobuf:"varint,3,opt,name=rewardDays" json:"rewardDays,omitempty"`
	RefreshTime uint64 `protobuf:"varint,4,opt,name=refreshTime" json:"refreshTime,omitempty"`
}

func (m *ST_Asset_LoginGift_PB) Reset()                    { *m = ST_Asset_LoginGift_PB{} }
func (m *ST_Asset_LoginGift_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_LoginGift_PB) ProtoMessage()               {}
func (*ST_Asset_LoginGift_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{373} }

func (m *ST_Asset_LoginGift_PB) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ST_Asset_LoginGift_PB) GetLoginDays() uint32 {
	if m != nil {
		return m.LoginDays
	}
	return 0
}

func (m *ST_Asset_LoginGift_PB) GetRewardDays() int64 {
	if m != nil {
		return m.RewardDays
	}
	return 0
}

func (m *ST_Asset_LoginGift_PB) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

// 幸运星商品条目
type ST_LuckyStarItem_PB struct {
	Id          uint32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Items       []*ST_Vector2Int_PB `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	CanBuyTimes uint32              `protobuf:"varint,3,opt,name=canBuyTimes" json:"canBuyTimes,omitempty"`
	Discount    uint32              `protobuf:"varint,4,opt,name=discount" json:"discount,omitempty"`
	ProductId   string              `protobuf:"bytes,5,opt,name=productId" json:"productId,omitempty"`
	BuyTimes    uint32              `protobuf:"varint,6,opt,name=buyTimes" json:"buyTimes,omitempty"`
}

func (m *ST_LuckyStarItem_PB) Reset()                    { *m = ST_LuckyStarItem_PB{} }
func (m *ST_LuckyStarItem_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LuckyStarItem_PB) ProtoMessage()               {}
func (*ST_LuckyStarItem_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{374} }

func (m *ST_LuckyStarItem_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LuckyStarItem_PB) GetItems() []*ST_Vector2Int_PB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ST_LuckyStarItem_PB) GetCanBuyTimes() uint32 {
	if m != nil {
		return m.CanBuyTimes
	}
	return 0
}

func (m *ST_LuckyStarItem_PB) GetDiscount() uint32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *ST_LuckyStarItem_PB) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ST_LuckyStarItem_PB) GetBuyTimes() uint32 {
	if m != nil {
		return m.BuyTimes
	}
	return 0
}

// 幸运星
type ST_LuckyStar_PB struct {
	Id          uint32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Priority    uint32                 `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	StartTime   uint64                 `protobuf:"varint,3,opt,name=startTime" json:"startTime,omitempty"`
	EndTime     uint64                 `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	RefreshTime uint64                 `protobuf:"varint,5,opt,name=refreshTime" json:"refreshTime,omitempty"`
	Items       []*ST_LuckyStarItem_PB `protobuf:"bytes,6,rep,name=items" json:"items,omitempty"`
	Name        string                 `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
}

func (m *ST_LuckyStar_PB) Reset()                    { *m = ST_LuckyStar_PB{} }
func (m *ST_LuckyStar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LuckyStar_PB) ProtoMessage()               {}
func (*ST_LuckyStar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{375} }

func (m *ST_LuckyStar_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LuckyStar_PB) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *ST_LuckyStar_PB) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ST_LuckyStar_PB) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ST_LuckyStar_PB) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *ST_LuckyStar_PB) GetItems() []*ST_LuckyStarItem_PB {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ST_LuckyStar_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 全局幸运星商店资产
type ST_LuckyStarShop_PB struct {
	LuckyStars []*ST_LuckyStar_PB `protobuf:"bytes,1,rep,name=luckyStars" json:"luckyStars,omitempty"`
}

func (m *ST_LuckyStarShop_PB) Reset()                    { *m = ST_LuckyStarShop_PB{} }
func (m *ST_LuckyStarShop_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LuckyStarShop_PB) ProtoMessage()               {}
func (*ST_LuckyStarShop_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{376} }

func (m *ST_LuckyStarShop_PB) GetLuckyStars() []*ST_LuckyStar_PB {
	if m != nil {
		return m.LuckyStars
	}
	return nil
}

// 幸运星商品条目
type ST_LuckyStarItem_Server_PB struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuyTimes uint32 `protobuf:"varint,2,opt,name=buyTimes" json:"buyTimes,omitempty"`
}

func (m *ST_LuckyStarItem_Server_PB) Reset()                    { *m = ST_LuckyStarItem_Server_PB{} }
func (m *ST_LuckyStarItem_Server_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LuckyStarItem_Server_PB) ProtoMessage()               {}
func (*ST_LuckyStarItem_Server_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{377} }

func (m *ST_LuckyStarItem_Server_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LuckyStarItem_Server_PB) GetBuyTimes() uint32 {
	if m != nil {
		return m.BuyTimes
	}
	return 0
}

type ST_LuckyStar_Server_PB struct {
	Id          uint32                        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	RefreshTime uint64                        `protobuf:"varint,2,opt,name=refreshTime" json:"refreshTime,omitempty"`
	Items       []*ST_LuckyStarItem_Server_PB `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

func (m *ST_LuckyStar_Server_PB) Reset()                    { *m = ST_LuckyStar_Server_PB{} }
func (m *ST_LuckyStar_Server_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_LuckyStar_Server_PB) ProtoMessage()               {}
func (*ST_LuckyStar_Server_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{378} }

func (m *ST_LuckyStar_Server_PB) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_LuckyStar_Server_PB) GetRefreshTime() uint64 {
	if m != nil {
		return m.RefreshTime
	}
	return 0
}

func (m *ST_LuckyStar_Server_PB) GetItems() []*ST_LuckyStarItem_Server_PB {
	if m != nil {
		return m.Items
	}
	return nil
}

type ST_Asset_LuckyStar_PB struct {
	LuckyStars []*ST_LuckyStar_Server_PB `protobuf:"bytes,1,rep,name=luckyStars" json:"luckyStars,omitempty"`
}

func (m *ST_Asset_LuckyStar_PB) Reset()                    { *m = ST_Asset_LuckyStar_PB{} }
func (m *ST_Asset_LuckyStar_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_LuckyStar_PB) ProtoMessage()               {}
func (*ST_Asset_LuckyStar_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{379} }

func (m *ST_Asset_LuckyStar_PB) GetLuckyStars() []*ST_LuckyStar_Server_PB {
	if m != nil {
		return m.LuckyStars
	}
	return nil
}

// 角色基础信息(存库,用于大地图上的显示)
type ST_CharSimple_Server_PB struct {
	TileId             int32                       `protobuf:"varint,1,opt,name=TileId" json:"TileId,omitempty"`
	Avatar             string                      `protobuf:"bytes,2,opt,name=Avatar" json:"Avatar,omitempty"`
	AvatarBoxID        uint32                      `protobuf:"varint,3,opt,name=AvatarBoxID" json:"AvatarBoxID,omitempty"`
	CharName           string                      `protobuf:"bytes,4,opt,name=CharName" json:"CharName,omitempty"`
	LeagueID           uint64                      `protobuf:"varint,5,opt,name=LeagueID" json:"LeagueID,omitempty"`
	LeagueName         string                      `protobuf:"bytes,6,opt,name=LeagueName" json:"LeagueName,omitempty"`
	LanguageID         uint32                      `protobuf:"varint,7,opt,name=LanguageID" json:"LanguageID,omitempty"`
	MainCityLevel      uint32                      `protobuf:"varint,8,opt,name=MainCityLevel" json:"MainCityLevel,omitempty"`
	VipID              uint32                      `protobuf:"varint,9,opt,name=VipID" json:"VipID,omitempty"`
	CommanderLevel     uint32                      `protobuf:"varint,10,opt,name=CommanderLevel" json:"CommanderLevel,omitempty"`
	CommanderID        uint32                      `protobuf:"varint,11,opt,name=CommanderID" json:"CommanderID,omitempty"`
	Signature          string                      `protobuf:"bytes,12,opt,name=Signature" json:"Signature,omitempty"`
	NickName           string                      `protobuf:"bytes,13,opt,name=NickName" json:"NickName,omitempty"`
	Power              uint64                      `protobuf:"varint,14,opt,name=Power" json:"Power,omitempty"`
	CapacityOfGarrison uint32                      `protobuf:"varint,15,opt,name=CapacityOfGarrison" json:"CapacityOfGarrison,omitempty"`
	CurGarrisonValue   uint32                      `protobuf:"varint,16,opt,name=CurGarrisonValue" json:"CurGarrisonValue,omitempty"`
	LeagueShortName    string                      `protobuf:"bytes,17,opt,name=LeagueShortName" json:"LeagueShortName,omitempty"`
	Kingwartitle       int32                       `protobuf:"varint,18,opt,name=Kingwartitle" json:"Kingwartitle,omitempty"`
	CommanderModelId   uint32                      `protobuf:"varint,19,opt,name=CommanderModelId" json:"CommanderModelId,omitempty"`
	BoxExt             *ST_CommanderFashionInfo_PB `protobuf:"bytes,20,opt,name=boxExt" json:"boxExt,omitempty"`
	BubbleExt          *ST_CommanderFashionInfo_PB `protobuf:"bytes,21,opt,name=bubbleExt" json:"bubbleExt,omitempty"`
	Sid                uint32                      `protobuf:"varint,22,opt,name=sid" json:"sid,omitempty"`
	CurrentSid         uint32                      `protobuf:"varint,23,opt,name=currentSid" json:"currentSid,omitempty"`
	Uid                uint64                      `protobuf:"varint,24,opt,name=uid" json:"uid,omitempty"`
}

func (m *ST_CharSimple_Server_PB) Reset()                    { *m = ST_CharSimple_Server_PB{} }
func (m *ST_CharSimple_Server_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CharSimple_Server_PB) ProtoMessage()               {}
func (*ST_CharSimple_Server_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{380} }

func (m *ST_CharSimple_Server_PB) GetTileId() int32 {
	if m != nil {
		return m.TileId
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCharName() string {
	if m != nil {
		return m.CharName
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetLeagueID() uint64 {
	if m != nil {
		return m.LeagueID
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetLeagueName() string {
	if m != nil {
		return m.LeagueName
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetLanguageID() uint32 {
	if m != nil {
		return m.LanguageID
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetVipID() uint32 {
	if m != nil {
		return m.VipID
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCommanderLevel() uint32 {
	if m != nil {
		return m.CommanderLevel
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCommanderID() uint32 {
	if m != nil {
		return m.CommanderID
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetPower() uint64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCapacityOfGarrison() uint32 {
	if m != nil {
		return m.CapacityOfGarrison
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCurGarrisonValue() uint32 {
	if m != nil {
		return m.CurGarrisonValue
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_CharSimple_Server_PB) GetKingwartitle() int32 {
	if m != nil {
		return m.Kingwartitle
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCommanderModelId() uint32 {
	if m != nil {
		return m.CommanderModelId
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetBoxExt() *ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.BoxExt
	}
	return nil
}

func (m *ST_CharSimple_Server_PB) GetBubbleExt() *ST_CommanderFashionInfo_PB {
	if m != nil {
		return m.BubbleExt
	}
	return nil
}

func (m *ST_CharSimple_Server_PB) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

func (m *ST_CharSimple_Server_PB) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 友盟中心驻军信息
type ST_CharSimpleGarrison_PB struct {
	CapacityOfGarrison uint32 `protobuf:"varint,1,opt,name=CapacityOfGarrison" json:"CapacityOfGarrison,omitempty"`
	CurGarrisonValue   uint32 `protobuf:"varint,2,opt,name=CurGarrisonValue" json:"CurGarrisonValue,omitempty"`
	CharName           string `protobuf:"bytes,3,opt,name=CharName" json:"CharName,omitempty"`
}

func (m *ST_CharSimpleGarrison_PB) Reset()                    { *m = ST_CharSimpleGarrison_PB{} }
func (m *ST_CharSimpleGarrison_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_CharSimpleGarrison_PB) ProtoMessage()               {}
func (*ST_CharSimpleGarrison_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{381} }

func (m *ST_CharSimpleGarrison_PB) GetCapacityOfGarrison() uint32 {
	if m != nil {
		return m.CapacityOfGarrison
	}
	return 0
}

func (m *ST_CharSimpleGarrison_PB) GetCurGarrisonValue() uint32 {
	if m != nil {
		return m.CurGarrisonValue
	}
	return 0
}

func (m *ST_CharSimpleGarrison_PB) GetCharName() string {
	if m != nil {
		return m.CharName
	}
	return ""
}

type ST_SyncAsset_Entry struct {
	AsyncType uint32 `protobuf:"varint,1,opt,name=asyncType" json:"asyncType,omitempty"`
	Data      []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ST_SyncAsset_Entry) Reset()                    { *m = ST_SyncAsset_Entry{} }
func (m *ST_SyncAsset_Entry) String() string            { return proto.CompactTextString(m) }
func (*ST_SyncAsset_Entry) ProtoMessage()               {}
func (*ST_SyncAsset_Entry) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{382} }

func (m *ST_SyncAsset_Entry) GetAsyncType() uint32 {
	if m != nil {
		return m.AsyncType
	}
	return 0
}

func (m *ST_SyncAsset_Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 用于增量同步资产的资产
type ST_SyncAsset_PB struct {
	Entries []*ST_SyncAsset_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *ST_SyncAsset_PB) Reset()                    { *m = ST_SyncAsset_PB{} }
func (m *ST_SyncAsset_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_SyncAsset_PB) ProtoMessage()               {}
func (*ST_SyncAsset_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{383} }

func (m *ST_SyncAsset_PB) GetEntries() []*ST_SyncAsset_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ST_MailTypeList_Entry struct {
	ClientType int32   `protobuf:"varint,1,opt,name=clientType" json:"clientType,omitempty"`
	MailTypes  []int32 `protobuf:"varint,2,rep,packed,name=mailTypes" json:"mailTypes,omitempty"`
}

func (m *ST_MailTypeList_Entry) Reset()                    { *m = ST_MailTypeList_Entry{} }
func (m *ST_MailTypeList_Entry) String() string            { return proto.CompactTextString(m) }
func (*ST_MailTypeList_Entry) ProtoMessage()               {}
func (*ST_MailTypeList_Entry) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{384} }

func (m *ST_MailTypeList_Entry) GetClientType() int32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ST_MailTypeList_Entry) GetMailTypes() []int32 {
	if m != nil {
		return m.MailTypes
	}
	return nil
}

type ST_MailTypeList struct {
	VersionId int32                    `protobuf:"varint,1,opt,name=versionId" json:"versionId,omitempty"`
	Entries   []*ST_MailTypeList_Entry `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
}

func (m *ST_MailTypeList) Reset()                    { *m = ST_MailTypeList{} }
func (m *ST_MailTypeList) String() string            { return proto.CompactTextString(m) }
func (*ST_MailTypeList) ProtoMessage()               {}
func (*ST_MailTypeList) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{385} }

func (m *ST_MailTypeList) GetVersionId() int32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

func (m *ST_MailTypeList) GetEntries() []*ST_MailTypeList_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// 邮件资产摘要
type ST_MailAssetSummary_Entry struct {
	ClientType  int32    `protobuf:"varint,1,opt,name=clientType" json:"clientType,omitempty"`
	UnReadCount int32    `protobuf:"varint,2,opt,name=unReadCount" json:"unReadCount,omitempty"`
	TotalCount  int32    `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
	MailIds     []uint64 `protobuf:"varint,4,rep,packed,name=mailIds" json:"mailIds,omitempty"`
}

func (m *ST_MailAssetSummary_Entry) Reset()                    { *m = ST_MailAssetSummary_Entry{} }
func (m *ST_MailAssetSummary_Entry) String() string            { return proto.CompactTextString(m) }
func (*ST_MailAssetSummary_Entry) ProtoMessage()               {}
func (*ST_MailAssetSummary_Entry) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{386} }

func (m *ST_MailAssetSummary_Entry) GetClientType() int32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ST_MailAssetSummary_Entry) GetUnReadCount() int32 {
	if m != nil {
		return m.UnReadCount
	}
	return 0
}

func (m *ST_MailAssetSummary_Entry) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ST_MailAssetSummary_Entry) GetMailIds() []uint64 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

type ST_MailAssetSummary struct {
	Entries   []*ST_MailAssetSummary_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	VersionId int32                        `protobuf:"varint,2,opt,name=versionId" json:"versionId,omitempty"`
}

func (m *ST_MailAssetSummary) Reset()                    { *m = ST_MailAssetSummary{} }
func (m *ST_MailAssetSummary) String() string            { return proto.CompactTextString(m) }
func (*ST_MailAssetSummary) ProtoMessage()               {}
func (*ST_MailAssetSummary) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{387} }

func (m *ST_MailAssetSummary) GetEntries() []*ST_MailAssetSummary_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ST_MailAssetSummary) GetVersionId() int32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

type ST_MailDB_PB struct {
	Id               uint64 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Type             uint32 `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	TimeStamp        uint64 `protobuf:"varint,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	SenderId         uint64 `protobuf:"varint,4,opt,name=SenderId" json:"SenderId,omitempty"`
	ReceiverId       uint64 `protobuf:"varint,5,opt,name=ReceiverId" json:"ReceiverId,omitempty"`
	SenderName       string `protobuf:"bytes,6,opt,name=SenderName" json:"SenderName,omitempty"`
	Title            []byte `protobuf:"bytes,7,opt,name=Title,proto3" json:"Title,omitempty"`
	Content          []byte `protobuf:"bytes,8,opt,name=Content,proto3" json:"Content,omitempty"`
	TitleTips        []byte `protobuf:"bytes,9,opt,name=TitleTips,proto3" json:"TitleTips,omitempty"`
	ContentTips      []byte `protobuf:"bytes,10,opt,name=ContentTips,proto3" json:"ContentTips,omitempty"`
	TargetId         int32  `protobuf:"varint,11,opt,name=TargetId" json:"TargetId,omitempty"`
	OtherId          uint64 `protobuf:"varint,12,opt,name=OtherId" json:"OtherId,omitempty"`
	OtherName        string `protobuf:"bytes,13,opt,name=OtherName" json:"OtherName,omitempty"`
	OtherAvatar      string `protobuf:"bytes,14,opt,name=OtherAvatar" json:"OtherAvatar,omitempty"`
	NPCId            uint64 `protobuf:"varint,15,opt,name=NPCId" json:"NPCId,omitempty"`
	Reward           []byte `protobuf:"bytes,16,opt,name=Reward,proto3" json:"Reward,omitempty"`
	Detail           []byte `protobuf:"bytes,17,opt,name=Detail,proto3" json:"Detail,omitempty"`
	Battle           []byte `protobuf:"bytes,18,opt,name=Battle,proto3" json:"Battle,omitempty"`
	Kept             bool   `protobuf:"varint,19,opt,name=Kept" json:"Kept,omitempty"`
	Locked           bool   `protobuf:"varint,20,opt,name=Locked" json:"Locked,omitempty"`
	Removed          bool   `protobuf:"varint,21,opt,name=Removed" json:"Removed,omitempty"`
	ServerId         uint32 `protobuf:"varint,22,opt,name=ServerId" json:"ServerId,omitempty"`
	GiftPackId       int32  `protobuf:"varint,23,opt,name=GiftPackId" json:"GiftPackId,omitempty"`
	MailSource       int32  `protobuf:"varint,24,opt,name=MailSource" json:"MailSource,omitempty"`
	IsMiracleWarGift bool   `protobuf:"varint,25,opt,name=IsMiracleWarGift" json:"IsMiracleWarGift,omitempty"`
	TitleID          int32  `protobuf:"varint,26,opt,name=TitleID" json:"TitleID,omitempty"`
	RewardSource     int32  `protobuf:"varint,27,opt,name=RewardSource" json:"RewardSource,omitempty"`
}

func (m *ST_MailDB_PB) Reset()                    { *m = ST_MailDB_PB{} }
func (m *ST_MailDB_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MailDB_PB) ProtoMessage()               {}
func (*ST_MailDB_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{388} }

func (m *ST_MailDB_PB) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ST_MailDB_PB) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ST_MailDB_PB) GetTimeStamp() uint64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *ST_MailDB_PB) GetSenderId() uint64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *ST_MailDB_PB) GetReceiverId() uint64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *ST_MailDB_PB) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *ST_MailDB_PB) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ST_MailDB_PB) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ST_MailDB_PB) GetTitleTips() []byte {
	if m != nil {
		return m.TitleTips
	}
	return nil
}

func (m *ST_MailDB_PB) GetContentTips() []byte {
	if m != nil {
		return m.ContentTips
	}
	return nil
}

func (m *ST_MailDB_PB) GetTargetId() int32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ST_MailDB_PB) GetOtherId() uint64 {
	if m != nil {
		return m.OtherId
	}
	return 0
}

func (m *ST_MailDB_PB) GetOtherName() string {
	if m != nil {
		return m.OtherName
	}
	return ""
}

func (m *ST_MailDB_PB) GetOtherAvatar() string {
	if m != nil {
		return m.OtherAvatar
	}
	return ""
}

func (m *ST_MailDB_PB) GetNPCId() uint64 {
	if m != nil {
		return m.NPCId
	}
	return 0
}

func (m *ST_MailDB_PB) GetReward() []byte {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *ST_MailDB_PB) GetDetail() []byte {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *ST_MailDB_PB) GetBattle() []byte {
	if m != nil {
		return m.Battle
	}
	return nil
}

func (m *ST_MailDB_PB) GetKept() bool {
	if m != nil {
		return m.Kept
	}
	return false
}

func (m *ST_MailDB_PB) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *ST_MailDB_PB) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func (m *ST_MailDB_PB) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ST_MailDB_PB) GetGiftPackId() int32 {
	if m != nil {
		return m.GiftPackId
	}
	return 0
}

func (m *ST_MailDB_PB) GetMailSource() int32 {
	if m != nil {
		return m.MailSource
	}
	return 0
}

func (m *ST_MailDB_PB) GetIsMiracleWarGift() bool {
	if m != nil {
		return m.IsMiracleWarGift
	}
	return false
}

func (m *ST_MailDB_PB) GetTitleID() int32 {
	if m != nil {
		return m.TitleID
	}
	return 0
}

func (m *ST_MailDB_PB) GetRewardSource() int32 {
	if m != nil {
		return m.RewardSource
	}
	return 0
}

type ST_ServerRank struct {
	RankType ServerRankType        `protobuf:"varint,1,opt,name=rankType,enum=proto_micro.ServerRankType" json:"rankType,omitempty"`
	List     []*ST_Vector2Int64_PB `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *ST_ServerRank) Reset()                    { *m = ST_ServerRank{} }
func (m *ST_ServerRank) String() string            { return proto.CompactTextString(m) }
func (*ST_ServerRank) ProtoMessage()               {}
func (*ST_ServerRank) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{389} }

func (m *ST_ServerRank) GetRankType() ServerRankType {
	if m != nil {
		return m.RankType
	}
	return ServerRankType_SRT_UserPowerRank
}

func (m *ST_ServerRank) GetList() []*ST_Vector2Int64_PB {
	if m != nil {
		return m.List
	}
	return nil
}

type ST_GetRoleRst struct {
	Roles []*ST_RoleInfo `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
}

func (m *ST_GetRoleRst) Reset()                    { *m = ST_GetRoleRst{} }
func (m *ST_GetRoleRst) String() string            { return proto.CompactTextString(m) }
func (*ST_GetRoleRst) ProtoMessage()               {}
func (*ST_GetRoleRst) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{390} }

func (m *ST_GetRoleRst) GetRoles() []*ST_RoleInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 联盟战斗日志玩家信息
type ST_LeagueBattle_User struct {
	Lid             uint64 `protobuf:"varint,1,opt,name=lid" json:"lid,omitempty"`
	UserName        string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Avatar          string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID     uint32 `protobuf:"varint,4,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	AvatarID        string `protobuf:"bytes,5,opt,name=avatarID" json:"avatarID,omitempty"`
	LeagueShortName string `protobuf:"bytes,6,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
	Uid             uint64 `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	MacMonsterId    int64  `protobuf:"varint,8,opt,name=macMonsterId" json:"macMonsterId,omitempty"`
}

func (m *ST_LeagueBattle_User) Reset()                    { *m = ST_LeagueBattle_User{} }
func (m *ST_LeagueBattle_User) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBattle_User) ProtoMessage()               {}
func (*ST_LeagueBattle_User) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{391} }

func (m *ST_LeagueBattle_User) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_LeagueBattle_User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ST_LeagueBattle_User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_LeagueBattle_User) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_LeagueBattle_User) GetAvatarID() string {
	if m != nil {
		return m.AvatarID
	}
	return ""
}

func (m *ST_LeagueBattle_User) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_LeagueBattle_User) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_LeagueBattle_User) GetMacMonsterId() int64 {
	if m != nil {
		return m.MacMonsterId
	}
	return 0
}

// 联盟战斗日志条目
type ST_LeagueBattle_Log_Entry struct {
	Attacker  *ST_LeagueBattle_User `protobuf:"bytes,1,opt,name=attacker" json:"attacker,omitempty"`
	Defer     *ST_LeagueBattle_User `protobuf:"bytes,2,opt,name=defer" json:"defer,omitempty"`
	Timestamp uint64                `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Times     int32                 `protobuf:"varint,4,opt,name=times" json:"times,omitempty"`
	IsWin     bool                  `protobuf:"varint,5,opt,name=isWin" json:"isWin,omitempty"`
	IsMulti   bool                  `protobuf:"varint,6,opt,name=isMulti" json:"isMulti,omitempty"`
	Id        int32                 `protobuf:"varint,7,opt,name=id" json:"id,omitempty"`
}

func (m *ST_LeagueBattle_Log_Entry) Reset()                    { *m = ST_LeagueBattle_Log_Entry{} }
func (m *ST_LeagueBattle_Log_Entry) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBattle_Log_Entry) ProtoMessage()               {}
func (*ST_LeagueBattle_Log_Entry) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{392} }

func (m *ST_LeagueBattle_Log_Entry) GetAttacker() *ST_LeagueBattle_User {
	if m != nil {
		return m.Attacker
	}
	return nil
}

func (m *ST_LeagueBattle_Log_Entry) GetDefer() *ST_LeagueBattle_User {
	if m != nil {
		return m.Defer
	}
	return nil
}

func (m *ST_LeagueBattle_Log_Entry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ST_LeagueBattle_Log_Entry) GetTimes() int32 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *ST_LeagueBattle_Log_Entry) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *ST_LeagueBattle_Log_Entry) GetIsMulti() bool {
	if m != nil {
		return m.IsMulti
	}
	return false
}

func (m *ST_LeagueBattle_Log_Entry) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 联盟战斗日志
type ST_LeagueBattle_Log struct {
	Logs []*ST_LeagueBattle_Log_Entry `protobuf:"bytes,1,rep,name=logs" json:"logs,omitempty"`
}

func (m *ST_LeagueBattle_Log) Reset()                    { *m = ST_LeagueBattle_Log{} }
func (m *ST_LeagueBattle_Log) String() string            { return proto.CompactTextString(m) }
func (*ST_LeagueBattle_Log) ProtoMessage()               {}
func (*ST_LeagueBattle_Log) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{393} }

func (m *ST_LeagueBattle_Log) GetLogs() []*ST_LeagueBattle_Log_Entry {
	if m != nil {
		return m.Logs
	}
	return nil
}

// 怪物攻城
type ST_MonsterAtkCity struct {
	ReadyEnd     uint64 `protobuf:"varint,1,opt,name=readyEnd" json:"readyEnd,omitempty"`
	CurWave      uint32 `protobuf:"varint,2,opt,name=curWave" json:"curWave,omitempty"`
	NextWaveTime uint64 `protobuf:"varint,3,opt,name=nextWaveTime" json:"nextWaveTime,omitempty"`
	NeedPass     uint32 `protobuf:"varint,4,opt,name=needPass" json:"needPass,omitempty"`
	PassNum      uint32 `protobuf:"varint,5,opt,name=passNum" json:"passNum,omitempty"`
	CurState     int32  `protobuf:"varint,6,opt,name=curState" json:"curState,omitempty"`
	TileId       int32  `protobuf:"varint,7,opt,name=tileId" json:"tileId,omitempty"`
	Lid          uint64 `protobuf:"varint,8,opt,name=lid" json:"lid,omitempty"`
	ActivityId   uint32 `protobuf:"varint,9,opt,name=activityId" json:"activityId,omitempty"`
	RallyTileId  int32  `protobuf:"varint,10,opt,name=rallyTileId" json:"rallyTileId,omitempty"`
	MonsOffTime  uint64 `protobuf:"varint,11,opt,name=monsOffTime" json:"monsOffTime,omitempty"`
}

func (m *ST_MonsterAtkCity) Reset()                    { *m = ST_MonsterAtkCity{} }
func (m *ST_MonsterAtkCity) String() string            { return proto.CompactTextString(m) }
func (*ST_MonsterAtkCity) ProtoMessage()               {}
func (*ST_MonsterAtkCity) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{394} }

func (m *ST_MonsterAtkCity) GetReadyEnd() uint64 {
	if m != nil {
		return m.ReadyEnd
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetCurWave() uint32 {
	if m != nil {
		return m.CurWave
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetNextWaveTime() uint64 {
	if m != nil {
		return m.NextWaveTime
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetNeedPass() uint32 {
	if m != nil {
		return m.NeedPass
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetPassNum() uint32 {
	if m != nil {
		return m.PassNum
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetCurState() int32 {
	if m != nil {
		return m.CurState
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetTileId() int32 {
	if m != nil {
		return m.TileId
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetRallyTileId() int32 {
	if m != nil {
		return m.RallyTileId
	}
	return 0
}

func (m *ST_MonsterAtkCity) GetMonsOffTime() uint64 {
	if m != nil {
		return m.MonsOffTime
	}
	return 0
}

// 更新角色信息
type ST_GS2LS_UpdateRoleReq struct {
	Role *ST_RoleInfo `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (m *ST_GS2LS_UpdateRoleReq) Reset()                    { *m = ST_GS2LS_UpdateRoleReq{} }
func (m *ST_GS2LS_UpdateRoleReq) String() string            { return proto.CompactTextString(m) }
func (*ST_GS2LS_UpdateRoleReq) ProtoMessage()               {}
func (*ST_GS2LS_UpdateRoleReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{395} }

func (m *ST_GS2LS_UpdateRoleReq) GetRole() *ST_RoleInfo {
	if m != nil {
		return m.Role
	}
	return nil
}

type ST_RoleInfo struct {
	Uid           uint64 `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	AccountId     uint64 `protobuf:"varint,2,opt,name=AccountId" json:"AccountId,omitempty"`
	CmderName     string `protobuf:"bytes,3,opt,name=CmderName" json:"CmderName,omitempty"`
	HeaderId      uint32 `protobuf:"varint,4,opt,name=HeaderId" json:"HeaderId,omitempty"`
	HeaderUrl     string `protobuf:"bytes,5,opt,name=HeaderUrl" json:"HeaderUrl,omitempty"`
	AvatarBoxID   uint32 `protobuf:"varint,6,opt,name=AvatarBoxID" json:"AvatarBoxID,omitempty"`
	MainCityLevel uint32 `protobuf:"varint,7,opt,name=MainCityLevel" json:"MainCityLevel,omitempty"`
	LastLoginTime uint32 `protobuf:"varint,8,opt,name=LastLoginTime" json:"LastLoginTime,omitempty"`
	CreateTime    uint32 `protobuf:"varint,9,opt,name=CreateTime" json:"CreateTime,omitempty"`
	Sid           uint32 `protobuf:"varint,10,opt,name=Sid" json:"Sid,omitempty"`
	CurrentSid    uint32 `protobuf:"varint,27,opt,name=currentSid" json:"currentSid,omitempty"`
}

func (m *ST_RoleInfo) Reset()                    { *m = ST_RoleInfo{} }
func (m *ST_RoleInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_RoleInfo) ProtoMessage()               {}
func (*ST_RoleInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{396} }

func (m *ST_RoleInfo) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_RoleInfo) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ST_RoleInfo) GetCmderName() string {
	if m != nil {
		return m.CmderName
	}
	return ""
}

func (m *ST_RoleInfo) GetHeaderId() uint32 {
	if m != nil {
		return m.HeaderId
	}
	return 0
}

func (m *ST_RoleInfo) GetHeaderUrl() string {
	if m != nil {
		return m.HeaderUrl
	}
	return ""
}

func (m *ST_RoleInfo) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_RoleInfo) GetMainCityLevel() uint32 {
	if m != nil {
		return m.MainCityLevel
	}
	return 0
}

func (m *ST_RoleInfo) GetLastLoginTime() uint32 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *ST_RoleInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ST_RoleInfo) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_RoleInfo) GetCurrentSid() uint32 {
	if m != nil {
		return m.CurrentSid
	}
	return 0
}

type ST_MiracleWarList_PB struct {
	List []*ST_MiracleWar_PB `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	Cid  []int32             `protobuf:"varint,2,rep,packed,name=cid" json:"cid,omitempty"`
}

func (m *ST_MiracleWarList_PB) Reset()                    { *m = ST_MiracleWarList_PB{} }
func (m *ST_MiracleWarList_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_MiracleWarList_PB) ProtoMessage()               {}
func (*ST_MiracleWarList_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{397} }

func (m *ST_MiracleWarList_PB) GetList() []*ST_MiracleWar_PB {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ST_MiracleWarList_PB) GetCid() []int32 {
	if m != nil {
		return m.Cid
	}
	return nil
}

type ST_ChatChatroom struct {
	Roomid int32 `protobuf:"varint,1,opt,name=roomid" json:"roomid,omitempty"`
}

func (m *ST_ChatChatroom) Reset()                    { *m = ST_ChatChatroom{} }
func (m *ST_ChatChatroom) String() string            { return proto.CompactTextString(m) }
func (*ST_ChatChatroom) ProtoMessage()               {}
func (*ST_ChatChatroom) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{398} }

func (m *ST_ChatChatroom) GetRoomid() int32 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

type ST_ChatInfo struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *ST_ChatInfo) Reset()                    { *m = ST_ChatInfo{} }
func (m *ST_ChatInfo) String() string            { return proto.CompactTextString(m) }
func (*ST_ChatInfo) ProtoMessage()               {}
func (*ST_ChatInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{399} }

func (m *ST_ChatInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ST_Chat_NeteaseRes struct {
	Code     int32            `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Chatroom *ST_ChatChatroom `protobuf:"bytes,2,opt,name=chatroom" json:"chatroom,omitempty"`
	Info     *ST_ChatInfo     `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	Tid      string           `protobuf:"bytes,4,opt,name=tid" json:"tid,omitempty"`
	Desc     string           `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
}

func (m *ST_Chat_NeteaseRes) Reset()                    { *m = ST_Chat_NeteaseRes{} }
func (m *ST_Chat_NeteaseRes) String() string            { return proto.CompactTextString(m) }
func (*ST_Chat_NeteaseRes) ProtoMessage()               {}
func (*ST_Chat_NeteaseRes) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{400} }

func (m *ST_Chat_NeteaseRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ST_Chat_NeteaseRes) GetChatroom() *ST_ChatChatroom {
	if m != nil {
		return m.Chatroom
	}
	return nil
}

func (m *ST_Chat_NeteaseRes) GetInfo() *ST_ChatInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ST_Chat_NeteaseRes) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

func (m *ST_Chat_NeteaseRes) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

// 全局跨服战资产
type ST_Transfer_Battle_PB struct {
	Number             uint32                `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage              uint32                `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime     uint64                `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime       uint64                `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage           uint32                `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	SubStageStartTime  uint64                `protobuf:"varint,6,opt,name=subStageStartTime" json:"subStageStartTime,omitempty"`
	SubStageEndTime    uint64                `protobuf:"varint,7,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	IsMaster           bool                  `protobuf:"varint,8,opt,name=isMaster" json:"isMaster,omitempty"`
	PrepareDetail      *ST_Prepare_Detail    `protobuf:"bytes,9,opt,name=prepareDetail" json:"prepareDetail,omitempty"`
	ProcessingDetail   *ST_Processing_Detail `protobuf:"bytes,10,opt,name=processingDetail" json:"processingDetail,omitempty"`
	RecoveringDetail   *ST_Recovering_Detail `protobuf:"bytes,11,opt,name=recoveringDetail" json:"recoveringDetail,omitempty"`
	WorldChatChannelId string                `protobuf:"bytes,12,opt,name=worldChatChannelId" json:"worldChatChannelId,omitempty"`
}

func (m *ST_Transfer_Battle_PB) Reset()                    { *m = ST_Transfer_Battle_PB{} }
func (m *ST_Transfer_Battle_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Transfer_Battle_PB) ProtoMessage()               {}
func (*ST_Transfer_Battle_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{401} }

func (m *ST_Transfer_Battle_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetSubStageStartTime() uint64 {
	if m != nil {
		return m.SubStageStartTime
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_Transfer_Battle_PB) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *ST_Transfer_Battle_PB) GetPrepareDetail() *ST_Prepare_Detail {
	if m != nil {
		return m.PrepareDetail
	}
	return nil
}

func (m *ST_Transfer_Battle_PB) GetProcessingDetail() *ST_Processing_Detail {
	if m != nil {
		return m.ProcessingDetail
	}
	return nil
}

func (m *ST_Transfer_Battle_PB) GetRecoveringDetail() *ST_Recovering_Detail {
	if m != nil {
		return m.RecoveringDetail
	}
	return nil
}

func (m *ST_Transfer_Battle_PB) GetWorldChatChannelId() string {
	if m != nil {
		return m.WorldChatChannelId
	}
	return ""
}

// 备战期服务器信息
type ST_Prepare_Server_Info struct {
	Sid          uint32        `protobuf:"varint,1,opt,name=sid" json:"sid,omitempty"`
	SubTaskScore []uint64      `protobuf:"varint,2,rep,packed,name=subTaskScore" json:"subTaskScore,omitempty"`
	TotalScore   uint64        `protobuf:"varint,3,opt,name=totalScore" json:"totalScore,omitempty"`
	IsWin        uint32        `protobuf:"varint,4,opt,name=isWin" json:"isWin,omitempty"`
	Buffs        []*ST_Buff_PB `protobuf:"bytes,5,rep,name=buffs" json:"buffs,omitempty"`
}

func (m *ST_Prepare_Server_Info) Reset()                    { *m = ST_Prepare_Server_Info{} }
func (m *ST_Prepare_Server_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_Prepare_Server_Info) ProtoMessage()               {}
func (*ST_Prepare_Server_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{402} }

func (m *ST_Prepare_Server_Info) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_Prepare_Server_Info) GetSubTaskScore() []uint64 {
	if m != nil {
		return m.SubTaskScore
	}
	return nil
}

func (m *ST_Prepare_Server_Info) GetTotalScore() uint64 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *ST_Prepare_Server_Info) GetIsWin() uint32 {
	if m != nil {
		return m.IsWin
	}
	return 0
}

func (m *ST_Prepare_Server_Info) GetBuffs() []*ST_Buff_PB {
	if m != nil {
		return m.Buffs
	}
	return nil
}

// 备战期数据
type ST_Prepare_Detail struct {
	SubTasks    []*ST_Transfer_Battle_SubTask `protobuf:"bytes,1,rep,name=subTasks" json:"subTasks,omitempty"`
	ServerInfos []*ST_Prepare_Server_Info     `protobuf:"bytes,2,rep,name=serverInfos" json:"serverInfos,omitempty"`
}

func (m *ST_Prepare_Detail) Reset()                    { *m = ST_Prepare_Detail{} }
func (m *ST_Prepare_Detail) String() string            { return proto.CompactTextString(m) }
func (*ST_Prepare_Detail) ProtoMessage()               {}
func (*ST_Prepare_Detail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{403} }

func (m *ST_Prepare_Detail) GetSubTasks() []*ST_Transfer_Battle_SubTask {
	if m != nil {
		return m.SubTasks
	}
	return nil
}

func (m *ST_Prepare_Detail) GetServerInfos() []*ST_Prepare_Server_Info {
	if m != nil {
		return m.ServerInfos
	}
	return nil
}

// 决战期数据
type ST_Processing_Detail struct {
	ServerInfos     []*ST_Prepare_Server_Info `protobuf:"bytes,1,rep,name=serverInfos" json:"serverInfos,omitempty"`
	IsMiracleWarWin uint32                    `protobuf:"varint,2,opt,name=isMiracleWarWin" json:"isMiracleWarWin,omitempty"`
}

func (m *ST_Processing_Detail) Reset()                    { *m = ST_Processing_Detail{} }
func (m *ST_Processing_Detail) String() string            { return proto.CompactTextString(m) }
func (*ST_Processing_Detail) ProtoMessage()               {}
func (*ST_Processing_Detail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{404} }

func (m *ST_Processing_Detail) GetServerInfos() []*ST_Prepare_Server_Info {
	if m != nil {
		return m.ServerInfos
	}
	return nil
}

func (m *ST_Processing_Detail) GetIsMiracleWarWin() uint32 {
	if m != nil {
		return m.IsMiracleWarWin
	}
	return 0
}

// 恢复期数据
type ST_Recovering_Detail struct {
	IsWin uint32 `protobuf:"varint,1,opt,name=isWin" json:"isWin,omitempty"`
}

func (m *ST_Recovering_Detail) Reset()                    { *m = ST_Recovering_Detail{} }
func (m *ST_Recovering_Detail) String() string            { return proto.CompactTextString(m) }
func (*ST_Recovering_Detail) ProtoMessage()               {}
func (*ST_Recovering_Detail) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{405} }

func (m *ST_Recovering_Detail) GetIsWin() uint32 {
	if m != nil {
		return m.IsWin
	}
	return 0
}

// 备战期阶段活动
type ST_Transfer_Battle_SubTask struct {
	ActivityID uint32 `protobuf:"varint,1,opt,name=activityID" json:"activityID,omitempty"`
	Day        uint32 `protobuf:"varint,2,opt,name=day" json:"day,omitempty"`
	IsWin      uint32 `protobuf:"varint,3,opt,name=isWin" json:"isWin,omitempty"`
}

func (m *ST_Transfer_Battle_SubTask) Reset()                    { *m = ST_Transfer_Battle_SubTask{} }
func (m *ST_Transfer_Battle_SubTask) String() string            { return proto.CompactTextString(m) }
func (*ST_Transfer_Battle_SubTask) ProtoMessage()               {}
func (*ST_Transfer_Battle_SubTask) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{406} }

func (m *ST_Transfer_Battle_SubTask) GetActivityID() uint32 {
	if m != nil {
		return m.ActivityID
	}
	return 0
}

func (m *ST_Transfer_Battle_SubTask) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *ST_Transfer_Battle_SubTask) GetIsWin() uint32 {
	if m != nil {
		return m.IsWin
	}
	return 0
}

// 备战阶段 玩家信息
type ST_Prepare_User_Info struct {
	Uid             uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Sid             uint32 `protobuf:"varint,2,opt,name=sid" json:"sid,omitempty"`
	UserName        string `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	Avatar          string `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	AvatarBoxID     uint32 `protobuf:"varint,5,opt,name=avatarBoxID" json:"avatarBoxID,omitempty"`
	AvatarID        string `protobuf:"bytes,6,opt,name=avatarID" json:"avatarID,omitempty"`
	LeagueShortName string `protobuf:"bytes,7,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
	Score           uint32 `protobuf:"varint,8,opt,name=score" json:"score,omitempty"`
	TotalScore      uint64 `protobuf:"varint,9,opt,name=totalScore" json:"totalScore,omitempty"`
	Rank            uint32 `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	TotalRank       uint32 `protobuf:"varint,11,opt,name=totalRank" json:"totalRank,omitempty"`
}

func (m *ST_Prepare_User_Info) Reset()                    { *m = ST_Prepare_User_Info{} }
func (m *ST_Prepare_User_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_Prepare_User_Info) ProtoMessage()               {}
func (*ST_Prepare_User_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{407} }

func (m *ST_Prepare_User_Info) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ST_Prepare_User_Info) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ST_Prepare_User_Info) GetAvatarBoxID() uint32 {
	if m != nil {
		return m.AvatarBoxID
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetAvatarID() string {
	if m != nil {
		return m.AvatarID
	}
	return ""
}

func (m *ST_Prepare_User_Info) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_Prepare_User_Info) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetTotalScore() uint64 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *ST_Prepare_User_Info) GetTotalRank() uint32 {
	if m != nil {
		return m.TotalRank
	}
	return 0
}

// 备战阶段 联盟信息
type ST_Prepare_League_Info struct {
	Lid             uint64                  `protobuf:"varint,1,opt,name=lid" json:"lid,omitempty"`
	FlagId          *ST_LeagueCustomFlag_PB `protobuf:"bytes,2,opt,name=flagId" json:"flagId,omitempty"`
	Sid             uint32                  `protobuf:"varint,3,opt,name=sid" json:"sid,omitempty"`
	OwnerName       string                  `protobuf:"bytes,4,opt,name=ownerName" json:"ownerName,omitempty"`
	LeagueShortName string                  `protobuf:"bytes,5,opt,name=leagueShortName" json:"leagueShortName,omitempty"`
	Score           uint32                  `protobuf:"varint,6,opt,name=score" json:"score,omitempty"`
	TotalScore      uint64                  `protobuf:"varint,7,opt,name=totalScore" json:"totalScore,omitempty"`
	Rank            uint32                  `protobuf:"varint,8,opt,name=rank" json:"rank,omitempty"`
	TotalRank       uint32                  `protobuf:"varint,9,opt,name=totalRank" json:"totalRank,omitempty"`
}

func (m *ST_Prepare_League_Info) Reset()                    { *m = ST_Prepare_League_Info{} }
func (m *ST_Prepare_League_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_Prepare_League_Info) ProtoMessage()               {}
func (*ST_Prepare_League_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{408} }

func (m *ST_Prepare_League_Info) GetLid() uint64 {
	if m != nil {
		return m.Lid
	}
	return 0
}

func (m *ST_Prepare_League_Info) GetFlagId() *ST_LeagueCustomFlag_PB {
	if m != nil {
		return m.FlagId
	}
	return nil
}

func (m *ST_Prepare_League_Info) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ST_Prepare_League_Info) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *ST_Prepare_League_Info) GetLeagueShortName() string {
	if m != nil {
		return m.LeagueShortName
	}
	return ""
}

func (m *ST_Prepare_League_Info) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_Prepare_League_Info) GetTotalScore() uint64 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *ST_Prepare_League_Info) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *ST_Prepare_League_Info) GetTotalRank() uint32 {
	if m != nil {
		return m.TotalRank
	}
	return 0
}

// 个人跨服决战资产
type ST_Asset_TransferBattle_PB struct {
	Number          uint32              `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Stage           uint32              `protobuf:"varint,2,opt,name=stage" json:"stage,omitempty"`
	StageStartTime  uint64              `protobuf:"varint,3,opt,name=stageStartTime" json:"stageStartTime,omitempty"`
	StageEndTime    uint64              `protobuf:"varint,4,opt,name=stageEndTime" json:"stageEndTime,omitempty"`
	SubStage        uint32              `protobuf:"varint,5,opt,name=subStage" json:"subStage,omitempty"`
	RewardFlag      uint32              `protobuf:"varint,6,opt,name=rewardFlag" json:"rewardFlag,omitempty"`
	ScoreRewardId   uint32              `protobuf:"varint,7,opt,name=scoreRewardId" json:"scoreRewardId,omitempty"`
	SubStageEndTime uint64              `protobuf:"varint,8,opt,name=subStageEndTime" json:"subStageEndTime,omitempty"`
	Score           uint64              `protobuf:"varint,9,opt,name=score" json:"score,omitempty"`
	DeathUnits      *ST_UnitAsset_PB    `protobuf:"bytes,10,opt,name=deathUnits" json:"deathUnits,omitempty"`
	CureProgress    uint32              `protobuf:"varint,11,opt,name=cureProgress" json:"cureProgress,omitempty"`
	Tasks           []*ST_Vector3Int_PB `protobuf:"bytes,12,rep,name=tasks" json:"tasks,omitempty"`
	FreeTimes       uint32              `protobuf:"varint,13,opt,name=freeTimes" json:"freeTimes,omitempty"`
	LScore          uint64              `protobuf:"varint,14,opt,name=lScore" json:"lScore,omitempty"`
}

func (m *ST_Asset_TransferBattle_PB) Reset()                    { *m = ST_Asset_TransferBattle_PB{} }
func (m *ST_Asset_TransferBattle_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Asset_TransferBattle_PB) ProtoMessage()               {}
func (*ST_Asset_TransferBattle_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{409} }

func (m *ST_Asset_TransferBattle_PB) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetStageStartTime() uint64 {
	if m != nil {
		return m.StageStartTime
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetStageEndTime() uint64 {
	if m != nil {
		return m.StageEndTime
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetSubStage() uint32 {
	if m != nil {
		return m.SubStage
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetRewardFlag() uint32 {
	if m != nil {
		return m.RewardFlag
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetScoreRewardId() uint32 {
	if m != nil {
		return m.ScoreRewardId
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetSubStageEndTime() uint64 {
	if m != nil {
		return m.SubStageEndTime
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetDeathUnits() *ST_UnitAsset_PB {
	if m != nil {
		return m.DeathUnits
	}
	return nil
}

func (m *ST_Asset_TransferBattle_PB) GetCureProgress() uint32 {
	if m != nil {
		return m.CureProgress
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetTasks() []*ST_Vector3Int_PB {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *ST_Asset_TransferBattle_PB) GetFreeTimes() uint32 {
	if m != nil {
		return m.FreeTimes
	}
	return 0
}

func (m *ST_Asset_TransferBattle_PB) GetLScore() uint64 {
	if m != nil {
		return m.LScore
	}
	return 0
}

// 客户端获取跨服决战信息数据
type ST_Client_TransferBattle_Info struct {
	PrepareDetail    *ST_Prepare_Detail      `protobuf:"bytes,1,opt,name=prepareDetail" json:"prepareDetail,omitempty"`
	UserInfo         *ST_Prepare_User_Info   `protobuf:"bytes,2,opt,name=userInfo" json:"userInfo,omitempty"`
	LeagueInfo       *ST_Prepare_League_Info `protobuf:"bytes,3,opt,name=leagueInfo" json:"leagueInfo,omitempty"`
	ProcessingDetail *ST_Processing_Detail   `protobuf:"bytes,4,opt,name=processingDetail" json:"processingDetail,omitempty"`
}

func (m *ST_Client_TransferBattle_Info) Reset()                    { *m = ST_Client_TransferBattle_Info{} }
func (m *ST_Client_TransferBattle_Info) String() string            { return proto.CompactTextString(m) }
func (*ST_Client_TransferBattle_Info) ProtoMessage()               {}
func (*ST_Client_TransferBattle_Info) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{410} }

func (m *ST_Client_TransferBattle_Info) GetPrepareDetail() *ST_Prepare_Detail {
	if m != nil {
		return m.PrepareDetail
	}
	return nil
}

func (m *ST_Client_TransferBattle_Info) GetUserInfo() *ST_Prepare_User_Info {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *ST_Client_TransferBattle_Info) GetLeagueInfo() *ST_Prepare_League_Info {
	if m != nil {
		return m.LeagueInfo
	}
	return nil
}

func (m *ST_Client_TransferBattle_Info) GetProcessingDetail() *ST_Processing_Detail {
	if m != nil {
		return m.ProcessingDetail
	}
	return nil
}

// 返回玩家排行榜数据
type ST_Client_TransferBattle_User_Rank struct {
	Infos     []*ST_Prepare_User_Info `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	OwnerInfo *ST_Prepare_User_Info   `protobuf:"bytes,2,opt,name=ownerInfo" json:"ownerInfo,omitempty"`
}

func (m *ST_Client_TransferBattle_User_Rank) Reset()         { *m = ST_Client_TransferBattle_User_Rank{} }
func (m *ST_Client_TransferBattle_User_Rank) String() string { return proto.CompactTextString(m) }
func (*ST_Client_TransferBattle_User_Rank) ProtoMessage()    {}
func (*ST_Client_TransferBattle_User_Rank) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{411}
}

func (m *ST_Client_TransferBattle_User_Rank) GetInfos() []*ST_Prepare_User_Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *ST_Client_TransferBattle_User_Rank) GetOwnerInfo() *ST_Prepare_User_Info {
	if m != nil {
		return m.OwnerInfo
	}
	return nil
}

// 返回联盟排行榜数据
type ST_Client_TransferBattle_League_Rank struct {
	Infos       []*ST_Prepare_League_Info `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	OwnerLeague *ST_Prepare_League_Info   `protobuf:"bytes,2,opt,name=ownerLeague" json:"ownerLeague,omitempty"`
}

func (m *ST_Client_TransferBattle_League_Rank) Reset()         { *m = ST_Client_TransferBattle_League_Rank{} }
func (m *ST_Client_TransferBattle_League_Rank) String() string { return proto.CompactTextString(m) }
func (*ST_Client_TransferBattle_League_Rank) ProtoMessage()    {}
func (*ST_Client_TransferBattle_League_Rank) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{412}
}

func (m *ST_Client_TransferBattle_League_Rank) GetInfos() []*ST_Prepare_League_Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *ST_Client_TransferBattle_League_Rank) GetOwnerLeague() *ST_Prepare_League_Info {
	if m != nil {
		return m.OwnerLeague
	}
	return nil
}

type ST_CollectResource_Entry struct {
	BuildingId uint32           `protobuf:"varint,1,opt,name=buildingId" json:"buildingId,omitempty"`
	Cash       *ST_CashAsset_PB `protobuf:"bytes,2,opt,name=cash" json:"cash,omitempty"`
}

func (m *ST_CollectResource_Entry) Reset()                    { *m = ST_CollectResource_Entry{} }
func (m *ST_CollectResource_Entry) String() string            { return proto.CompactTextString(m) }
func (*ST_CollectResource_Entry) ProtoMessage()               {}
func (*ST_CollectResource_Entry) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{413} }

func (m *ST_CollectResource_Entry) GetBuildingId() uint32 {
	if m != nil {
		return m.BuildingId
	}
	return 0
}

func (m *ST_CollectResource_Entry) GetCash() *ST_CashAsset_PB {
	if m != nil {
		return m.Cash
	}
	return nil
}

type ST_CollectResources struct {
	Resources []*ST_CollectResource_Entry `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
}

func (m *ST_CollectResources) Reset()                    { *m = ST_CollectResources{} }
func (m *ST_CollectResources) String() string            { return proto.CompactTextString(m) }
func (*ST_CollectResources) ProtoMessage()               {}
func (*ST_CollectResources) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{414} }

func (m *ST_CollectResources) GetResources() []*ST_CollectResource_Entry {
	if m != nil {
		return m.Resources
	}
	return nil
}

type ST_Sort_PB struct {
	Key   uint64 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *ST_Sort_PB) Reset()                    { *m = ST_Sort_PB{} }
func (m *ST_Sort_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Sort_PB) ProtoMessage()               {}
func (*ST_Sort_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{415} }

func (m *ST_Sort_PB) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ST_Sort_PB) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ST_Sort_PB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ST_Rank_PB struct {
	MapSorter []*ST_Sort_PB `protobuf:"bytes,1,rep,name=MapSorter" json:"MapSorter,omitempty"`
	Tm        uint64        `protobuf:"varint,2,opt,name=tm" json:"tm,omitempty"`
}

func (m *ST_Rank_PB) Reset()                    { *m = ST_Rank_PB{} }
func (m *ST_Rank_PB) String() string            { return proto.CompactTextString(m) }
func (*ST_Rank_PB) ProtoMessage()               {}
func (*ST_Rank_PB) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{416} }

func (m *ST_Rank_PB) GetMapSorter() []*ST_Sort_PB {
	if m != nil {
		return m.MapSorter
	}
	return nil
}

func (m *ST_Rank_PB) GetTm() uint64 {
	if m != nil {
		return m.Tm
	}
	return 0
}

func init() {
	proto.RegisterType((*ST_CharBasic_Server_PB)(nil), "proto_micro.ST_CharBasic_Server_PB")
	proto.RegisterType((*ST_UserServer_PB)(nil), "proto_micro.ST_UserServer_PB")
	proto.RegisterType((*ST_CommanderInfo_PB)(nil), "proto_micro.ST_CommanderInfo_PB")
	proto.RegisterType((*ST_CharBasic_PB)(nil), "proto_micro.ST_CharBasic_PB")
	proto.RegisterType((*ST_CharExp_PB)(nil), "proto_micro.ST_CharExp_PB")
	proto.RegisterType((*ST_Statistics_PB)(nil), "proto_micro.ST_Statistics_PB")
	proto.RegisterType((*ST_StrollHeroEventCountDownTimeReward)(nil), "proto_micro.ST_StrollHeroEventCountDownTimeReward")
	proto.RegisterType((*ST_StrollHeroEventAddUnitReward)(nil), "proto_micro.ST_StrollHeroEventAddUnitReward")
	proto.RegisterType((*ST_StrollHeroEventRewardContent_PB)(nil), "proto_micro.ST_StrollHeroEventRewardContent_PB")
	proto.RegisterType((*ST_StrollHeroEventReward_PB)(nil), "proto_micro.ST_StrollHeroEventReward_PB")
	proto.RegisterType((*ST_Building_PB)(nil), "proto_micro.ST_Building_PB")
	proto.RegisterType((*ST_BuildingAsset_PB)(nil), "proto_micro.ST_BuildingAsset_PB")
	proto.RegisterType((*ST_LocalActionEntry_PB)(nil), "proto_micro.ST_LocalActionEntry_PB")
	proto.RegisterType((*ST_GlobalActionVersion_PB)(nil), "proto_micro.ST_GlobalActionVersion_PB")
	proto.RegisterType((*ST_GlobalActionVersionList_PB)(nil), "proto_micro.ST_GlobalActionVersionList_PB")
	proto.RegisterType((*ST_LeagueMassJoins)(nil), "proto_micro.ST_LeagueMassJoins")
	proto.RegisterType((*ST_LeagueMassDetail)(nil), "proto_micro.ST_LeagueMassDetail")
	proto.RegisterType((*ST_GlobalActionEntry_PB)(nil), "proto_micro.ST_GlobalActionEntry_PB")
	proto.RegisterType((*ST_LocalActionAsset_PB)(nil), "proto_micro.ST_LocalActionAsset_PB")
	proto.RegisterType((*ST_GlobalActionAsset_PB)(nil), "proto_micro.ST_GlobalActionAsset_PB")
	proto.RegisterType((*ST_GlobalActionList_PB)(nil), "proto_micro.ST_GlobalActionList_PB")
	proto.RegisterType((*ST_ColonyAsset_PB)(nil), "proto_micro.ST_ColonyAsset_PB")
	proto.RegisterType((*ST_DefenseAsset_PB)(nil), "proto_micro.ST_DefenseAsset_PB")
	proto.RegisterType((*ST_CashAsset_PB)(nil), "proto_micro.ST_CashAsset_PB")
	proto.RegisterType((*ST_Market_PB)(nil), "proto_micro.ST_Market_PB")
	proto.RegisterType((*ST_MarketAsset_PB)(nil), "proto_micro.ST_MarketAsset_PB")
	proto.RegisterType((*ST_Unit_PB)(nil), "proto_micro.ST_Unit_PB")
	proto.RegisterType((*ST_UnitAsset_PB)(nil), "proto_micro.ST_UnitAsset_PB")
	proto.RegisterType((*ST_UnitVague_PB)(nil), "proto_micro.ST_UnitVague_PB")
	proto.RegisterType((*ST_UnitVagueAsset_PB)(nil), "proto_micro.ST_UnitVagueAsset_PB")
	proto.RegisterType((*ST_TeamConf_PB)(nil), "proto_micro.ST_TeamConf_PB")
	proto.RegisterType((*ST_TeamConfList_PB)(nil), "proto_micro.ST_TeamConfList_PB")
	proto.RegisterType((*ST_WorldDataVersion_PB)(nil), "proto_micro.ST_WorldDataVersion_PB")
	proto.RegisterType((*ST_WorldDataVersionList_PB)(nil), "proto_micro.ST_WorldDataVersionList_PB")
	proto.RegisterType((*ST_WorldDataBasic_PB)(nil), "proto_micro.ST_WorldDataBasic_PB")
	proto.RegisterType((*ST_WorldDataBasicList_PB)(nil), "proto_micro.ST_WorldDataBasicList_PB")
	proto.RegisterType((*ST_WorldDataSimpleInfo_PB)(nil), "proto_micro.ST_WorldDataSimpleInfo_PB")
	proto.RegisterType((*ST_CashHouse_PB)(nil), "proto_micro.ST_CashHouse_PB")
	proto.RegisterType((*ST_WorldDataDetail_Mine_PB)(nil), "proto_micro.ST_WorldDataDetail_Mine_PB")
	proto.RegisterType((*ST_ColonyCapture_PB)(nil), "proto_micro.ST_ColonyCapture_PB")
	proto.RegisterType((*ST_WorldDataDetail_Colony_PB)(nil), "proto_micro.ST_WorldDataDetail_Colony_PB")
	proto.RegisterType((*ST_WorldDataDetail_NoUse_PB)(nil), "proto_micro.ST_WorldDataDetail_NoUse_PB")
	proto.RegisterType((*ST_WorldDataDetail_Bestationed_PB)(nil), "proto_micro.ST_WorldDataDetail_Bestationed_PB")
	proto.RegisterType((*ST_WorldDataDetail_MutiMonster_PB)(nil), "proto_micro.ST_WorldDataDetail_MutiMonster_PB")
	proto.RegisterType((*ST_WorldDataDetail_City_PB)(nil), "proto_micro.ST_WorldDataDetail_City_PB")
	proto.RegisterType((*ST_WorldDataDetail_MainCity_PB)(nil), "proto_micro.ST_WorldDataDetail_MainCity_PB")
	proto.RegisterType((*ST_WorldDataDetail_UndergroundPalace_PB)(nil), "proto_micro.ST_WorldDataDetail_UndergroundPalace_PB")
	proto.RegisterType((*ST_CityArchon_PB)(nil), "proto_micro.ST_CityArchon_PB")
	proto.RegisterType((*ST_CityOccupyInfo_PB)(nil), "proto_micro.ST_CityOccupyInfo_PB")
	proto.RegisterType((*ST_SC_CityWarList_PB)(nil), "proto_micro.ST_SC_CityWarList_PB")
	proto.RegisterType((*ST_SC_CityWarInfo_PB)(nil), "proto_micro.ST_SC_CityWarInfo_PB")
	proto.RegisterType((*ST_CityWar_PB)(nil), "proto_micro.ST_CityWar_PB")
	proto.RegisterType((*ST_WorldDataDetailInfo_PB)(nil), "proto_micro.ST_WorldDataDetailInfo_PB")
	proto.RegisterType((*ST_WorldDataEntry_PB)(nil), "proto_micro.ST_WorldDataEntry_PB")
	proto.RegisterType((*ST_WorldDataEntryList_PB)(nil), "proto_micro.ST_WorldDataEntryList_PB")
	proto.RegisterType((*ST_Research_PB)(nil), "proto_micro.ST_Research_PB")
	proto.RegisterType((*ST_ResearchEntryList_PB)(nil), "proto_micro.ST_ResearchEntryList_PB")
	proto.RegisterType((*ST_ItemEntry_PB)(nil), "proto_micro.ST_ItemEntry_PB")
	proto.RegisterType((*ST_Asset_ItemPack_PB)(nil), "proto_micro.ST_Asset_ItemPack_PB")
	proto.RegisterType((*ST_Asset_Chat_Item_PB)(nil), "proto_micro.ST_Asset_Chat_Item_PB")
	proto.RegisterType((*ST_ForbiddenChat_PB)(nil), "proto_micro.ST_ForbiddenChat_PB")
	proto.RegisterType((*ST_PrivateChat_PB)(nil), "proto_micro.ST_PrivateChat_PB")
	proto.RegisterType((*ST_PrivateChat_Content_PB)(nil), "proto_micro.ST_PrivateChat_Content_PB")
	proto.RegisterType((*ST_Asset_Chat_PB)(nil), "proto_micro.ST_Asset_Chat_PB")
	proto.RegisterType((*ST_ActiveSpy_Lord)(nil), "proto_micro.ST_ActiveSpy_Lord")
	proto.RegisterType((*ST_GarrisonInfo_PB)(nil), "proto_micro.ST_GarrisonInfo_PB")
	proto.RegisterType((*ST_ActiveSpy_Reinforcements)(nil), "proto_micro.ST_ActiveSpy_Reinforcements")
	proto.RegisterType((*ST_ActiveSpy_Cash)(nil), "proto_micro.ST_ActiveSpy_Cash")
	proto.RegisterType((*ST_ActiveSpy_Vague)(nil), "proto_micro.ST_ActiveSpy_Vague")
	proto.RegisterType((*ST_ActiveSpy_Exact)(nil), "proto_micro.ST_ActiveSpy_Exact")
	proto.RegisterType((*ST_ActiveSpy_Hardiness)(nil), "proto_micro.ST_ActiveSpy_Hardiness")
	proto.RegisterType((*ST_Radar_TechInfo)(nil), "proto_micro.ST_Radar_TechInfo")
	proto.RegisterType((*ST_Radar_NaturalGift)(nil), "proto_micro.ST_Radar_NaturalGift")
	proto.RegisterType((*ST_Simple_Statue)(nil), "proto_micro.ST_Simple_Statue")
	proto.RegisterType((*ST_Radar_Statue)(nil), "proto_micro.ST_Radar_Statue")
	proto.RegisterType((*ST_ArmyHerosDetail)(nil), "proto_micro.ST_ArmyHerosDetail")
	proto.RegisterType((*ST_ActiveSpyReport_PB)(nil), "proto_micro.ST_ActiveSpyReport_PB")
	proto.RegisterType((*ST_ActiveSpyMonsterReport_PB)(nil), "proto_micro.ST_ActiveSpyMonsterReport_PB")
	proto.RegisterType((*ST_MonsterSpy_Vague)(nil), "proto_micro.ST_MonsterSpy_Vague")
	proto.RegisterType((*ST_MonsterSpy_Exact)(nil), "proto_micro.ST_MonsterSpy_Exact")
	proto.RegisterType((*ST_EarlyWarning_Commander)(nil), "proto_micro.ST_EarlyWarning_Commander")
	proto.RegisterType((*ST_EarlyWarning_Hero)(nil), "proto_micro.ST_EarlyWarning_Hero")
	proto.RegisterType((*ST_EarlyWarning_Vague)(nil), "proto_micro.ST_EarlyWarning_Vague")
	proto.RegisterType((*ST_EarlyWarning_Exact)(nil), "proto_micro.ST_EarlyWarning_Exact")
	proto.RegisterType((*ST_EarlyWarning_StartInfo)(nil), "proto_micro.ST_EarlyWarning_StartInfo")
	proto.RegisterType((*ST_EarlyWarning_EndInfo)(nil), "proto_micro.ST_EarlyWarning_EndInfo")
	proto.RegisterType((*ST_EarlyWarningReportMail_PB)(nil), "proto_micro.ST_EarlyWarningReportMail_PB")
	proto.RegisterType((*ST_BaseEarlyWarningReport_PB)(nil), "proto_micro.ST_BaseEarlyWarningReport_PB")
	proto.RegisterType((*ST_MonsterAtkCityWarning_PB)(nil), "proto_micro.ST_MonsterAtkCityWarning_PB")
	proto.RegisterType((*ST_EarlyWarningEx_PB)(nil), "proto_micro.ST_EarlyWarningEx_PB")
	proto.RegisterType((*ST_EarlyWarningGreen_PB)(nil), "proto_micro.ST_EarlyWarningGreen_PB")
	proto.RegisterType((*ST_UnitTotal_PB)(nil), "proto_micro.ST_UnitTotal_PB")
	proto.RegisterType((*ST_EarlyWarningTime_PB)(nil), "proto_micro.ST_EarlyWarningTime_PB")
	proto.RegisterType((*ST_MultiplayerEarlyWarning_PB)(nil), "proto_micro.ST_MultiplayerEarlyWarning_PB")
	proto.RegisterType((*ST_RadarAsset_PB)(nil), "proto_micro.ST_RadarAsset_PB")
	proto.RegisterType((*ST_CollectReport_PB)(nil), "proto_micro.ST_CollectReport_PB")
	proto.RegisterType((*ST_LeagueTransportReport_PB)(nil), "proto_micro.ST_LeagueTransportReport_PB")
	proto.RegisterType((*ST_LeagueInvitationJoinMail_PB)(nil), "proto_micro.ST_LeagueInvitationJoinMail_PB")
	proto.RegisterType((*ST_MailBasicInfo_PB)(nil), "proto_micro.ST_MailBasicInfo_PB")
	proto.RegisterType((*ST_MailRewardList_PB)(nil), "proto_micro.ST_MailRewardList_PB")
	proto.RegisterType((*ST_Vector4IntList_PB)(nil), "proto_micro.ST_Vector4IntList_PB")
	proto.RegisterType((*ST_MailSimple_PB)(nil), "proto_micro.ST_MailSimple_PB")
	proto.RegisterType((*ST_MailData_PB)(nil), "proto_micro.ST_MailData_PB")
	proto.RegisterType((*ST_MailAsset_PB)(nil), "proto_micro.ST_MailAsset_PB")
	proto.RegisterType((*ST_MailAssetForClientSave_PB)(nil), "proto_micro.ST_MailAssetForClientSave_PB")
	proto.RegisterType((*ST_MailDBAsset_PB)(nil), "proto_micro.ST_MailDBAsset_PB")
	proto.RegisterType((*ST_MailStorage_PB)(nil), "proto_micro.ST_MailStorage_PB")
	proto.RegisterType((*ST_LeagueDepotUsedResource_PB)(nil), "proto_micro.ST_LeagueDepotUsedResource_PB")
	proto.RegisterType((*ST_LeagueInvitationReject_PB)(nil), "proto_micro.ST_LeagueInvitationReject_PB")
	proto.RegisterType((*ST_LeagueAsset_PB)(nil), "proto_micro.ST_LeagueAsset_PB")
	proto.RegisterType((*KeyBoxInfo)(nil), "proto_micro.KeyBoxInfo")
	proto.RegisterType((*ST_LeagueHelpBaisc_PB)(nil), "proto_micro.ST_LeagueHelpBaisc_PB")
	proto.RegisterType((*ST_Gift_PB)(nil), "proto_micro.ST_Gift_PB")
	proto.RegisterType((*ST_LeagueExtra_PB)(nil), "proto_micro.ST_LeagueExtra_PB")
	proto.RegisterType((*ST_LeagueBattleNOTJoin_PB)(nil), "proto_micro.ST_LeagueBattleNOTJoin_PB")
	proto.RegisterType((*ST_LeagueBattle_PB)(nil), "proto_micro.ST_LeagueBattle_PB")
	proto.RegisterType((*ST_League_Member_Info)(nil), "proto_micro.ST_League_Member_Info")
	proto.RegisterType((*ST_League_Simple_Info)(nil), "proto_micro.ST_League_Simple_Info")
	proto.RegisterType((*ST_List_Uint64)(nil), "proto_micro.ST_List_Uint64")
	proto.RegisterType((*ST_League_Operation_Result)(nil), "proto_micro.ST_League_Operation_Result")
	proto.RegisterType((*ST_League_Simple_Info_List)(nil), "proto_micro.ST_League_Simple_Info_List")
	proto.RegisterType((*ST_LeagueTechnology_PB)(nil), "proto_micro.ST_LeagueTechnology_PB")
	proto.RegisterType((*ST_League_Help_Simple_PB)(nil), "proto_micro.ST_League_Help_Simple_PB")
	proto.RegisterType((*ST_LeagueHelpDetail_PB)(nil), "proto_micro.ST_LeagueHelpDetail_PB")
	proto.RegisterType((*ST_League_Help_Info_PB)(nil), "proto_micro.ST_League_Help_Info_PB")
	proto.RegisterType((*ST_League_Help_Asset_PB)(nil), "proto_micro.ST_League_Help_Asset_PB")
	proto.RegisterType((*ST_LeagueGift_PB)(nil), "proto_micro.ST_LeagueGift_PB")
	proto.RegisterType((*ST_LeagueGiftList_PB)(nil), "proto_micro.ST_LeagueGiftList_PB")
	proto.RegisterType((*ST_LeagueGiftSpecial_PB)(nil), "proto_micro.ST_LeagueGiftSpecial_PB")
	proto.RegisterType((*ST_LeagueMemberTitleName_PB)(nil), "proto_micro.ST_LeagueMemberTitleName_PB")
	proto.RegisterType((*ST_LeagueDepot_PB)(nil), "proto_micro.ST_LeagueDepot_PB")
	proto.RegisterType((*ST_LeagueManagement_PB)(nil), "proto_micro.ST_LeagueManagement_PB")
	proto.RegisterType((*ST_League_Detail_Info)(nil), "proto_micro.ST_League_Detail_Info")
	proto.RegisterType((*ST_League_Member_BuffTitle)(nil), "proto_micro.ST_League_Member_BuffTitle")
	proto.RegisterType((*ST_LeagueCampLeader_PB)(nil), "proto_micro.ST_LeagueCampLeader_PB")
	proto.RegisterType((*ST_LeagueBox_List_PB)(nil), "proto_micro.ST_LeagueBox_List_PB")
	proto.RegisterType((*ST_InvitationLeague_Info)(nil), "proto_micro.ST_InvitationLeague_Info")
	proto.RegisterType((*ST_PopUpAsset_PB)(nil), "proto_micro.ST_PopUpAsset_PB")
	proto.RegisterType((*ST_LeagueMessageEntry_PB)(nil), "proto_micro.ST_LeagueMessageEntry_PB")
	proto.RegisterType((*ST_UnitCount_PB)(nil), "proto_micro.ST_UnitCount_PB")
	proto.RegisterType((*ST_BuffBattleInfo_PB)(nil), "proto_micro.ST_BuffBattleInfo_PB")
	proto.RegisterType((*ST_HeroSkillInfo_PB)(nil), "proto_micro.ST_HeroSkillInfo_PB")
	proto.RegisterType((*ST_HeroBattleInfo_PB)(nil), "proto_micro.ST_HeroBattleInfo_PB")
	proto.RegisterType((*ST_CorpBattleInfo_PB)(nil), "proto_micro.ST_CorpBattleInfo_PB")
	proto.RegisterType((*ST_RoundBaseInfo_PB)(nil), "proto_micro.ST_RoundBaseInfo_PB")
	proto.RegisterType((*ST_BattleRoundInfo_PB)(nil), "proto_micro.ST_BattleRoundInfo_PB")
	proto.RegisterType((*ST_ShowUnit_PB)(nil), "proto_micro.ST_ShowUnit_PB")
	proto.RegisterType((*ST_SimpleStartInfo_PB)(nil), "proto_micro.ST_SimpleStartInfo_PB")
	proto.RegisterType((*ST_BattleInfo_PB)(nil), "proto_micro.ST_BattleInfo_PB")
	proto.RegisterType((*ST_BattleCommanderSimpleInfo_PB)(nil), "proto_micro.ST_BattleCommanderSimpleInfo_PB")
	proto.RegisterType((*ST_HeroBattleReport_PB)(nil), "proto_micro.ST_HeroBattleReport_PB")
	proto.RegisterType((*ST_GetExp_PB)(nil), "proto_micro.ST_GetExp_PB")
	proto.RegisterType((*ST_UnitBattleReport_PB)(nil), "proto_micro.ST_UnitBattleReport_PB")
	proto.RegisterType((*ST_WallReport_PB)(nil), "proto_micro.ST_WallReport_PB")
	proto.RegisterType((*ST_OtherAddition_PB)(nil), "proto_micro.ST_OtherAddition_PB")
	proto.RegisterType((*ST_BattleReportDetail_PB)(nil), "proto_micro.ST_BattleReportDetail_PB")
	proto.RegisterType((*ST_PowerReport_PB)(nil), "proto_micro.ST_PowerReport_PB")
	proto.RegisterType((*ST_DefFailInfo_PB)(nil), "proto_micro.ST_DefFailInfo_PB")
	proto.RegisterType((*ST_BattleReport_PB)(nil), "proto_micro.ST_BattleReport_PB")
	proto.RegisterType((*ST_ReturnUnits_PB)(nil), "proto_micro.ST_ReturnUnits_PB")
	proto.RegisterType((*ST_MonsterInfo_PB)(nil), "proto_micro.ST_MonsterInfo_PB")
	proto.RegisterType((*ST_MonsterKill_PB)(nil), "proto_micro.ST_MonsterKill_PB")
	proto.RegisterType((*ST_BattleNotice_PB)(nil), "proto_micro.ST_BattleNotice_PB")
	proto.RegisterType((*ST_BattleNoticesAsset_PB)(nil), "proto_micro.ST_BattleNoticesAsset_PB")
	proto.RegisterType((*ST_TileInfo_PB)(nil), "proto_micro.ST_TileInfo_PB")
	proto.RegisterType((*ST_TileInfo_List)(nil), "proto_micro.ST_TileInfo_List")
	proto.RegisterType((*ST_Chat_Entry_PB)(nil), "proto_micro.ST_Chat_Entry_PB")
	proto.RegisterType((*ST_Chat_Title_PB)(nil), "proto_micro.ST_Chat_Title_PB")
	proto.RegisterType((*ST_Chat_League_PB)(nil), "proto_micro.ST_Chat_League_PB")
	proto.RegisterType((*ST_Chat_TitleList_PB)(nil), "proto_micro.ST_Chat_TitleList_PB")
	proto.RegisterType((*ST_Chat_EntryList_PB)(nil), "proto_micro.ST_Chat_EntryList_PB")
	proto.RegisterType((*ST_Chat_ChannelInfo_PB)(nil), "proto_micro.ST_Chat_ChannelInfo_PB")
	proto.RegisterType((*ST_WorldChatTitleInfo_PB)(nil), "proto_micro.ST_WorldChatTitleInfo_PB")
	proto.RegisterType((*ST_Chat_ReplyList_PB)(nil), "proto_micro.ST_Chat_ReplyList_PB")
	proto.RegisterType((*ST_Hot_Chat_Item_PB)(nil), "proto_micro.ST_Hot_Chat_Item_PB")
	proto.RegisterType((*ST_Hot_Chat_Info_PB)(nil), "proto_micro.ST_Hot_Chat_Info_PB")
	proto.RegisterType((*ST_Chat_ChannelInfoList_PB)(nil), "proto_micro.ST_Chat_ChannelInfoList_PB")
	proto.RegisterType((*ST_Chat_TitleInfo_PB)(nil), "proto_micro.ST_Chat_TitleInfo_PB")
	proto.RegisterType((*ST_Chat_TitleInfoList_PB)(nil), "proto_micro.ST_Chat_TitleInfoList_PB")
	proto.RegisterType((*ST_HeroEntry_PB)(nil), "proto_micro.ST_HeroEntry_PB")
	proto.RegisterType((*ST_HeroSkill_PB)(nil), "proto_micro.ST_HeroSkill_PB")
	proto.RegisterType((*ST_Prison_PB)(nil), "proto_micro.ST_Prison_PB")
	proto.RegisterType((*ST_PrisonAsset_PB)(nil), "proto_micro.ST_PrisonAsset_PB")
	proto.RegisterType((*ST_HeroAsset_PB)(nil), "proto_micro.ST_HeroAsset_PB")
	proto.RegisterType((*ST_Buff_PB)(nil), "proto_micro.ST_Buff_PB")
	proto.RegisterType((*ST_BuffAsset_PB)(nil), "proto_micro.ST_BuffAsset_PB")
	proto.RegisterType((*ST_GlobalBuff_PB)(nil), "proto_micro.ST_GlobalBuff_PB")
	proto.RegisterType((*ST_TalentAsset_PB)(nil), "proto_micro.ST_TalentAsset_PB")
	proto.RegisterType((*ST_Skill_PB)(nil), "proto_micro.ST_Skill_PB")
	proto.RegisterType((*ST_SkillAsset_PB)(nil), "proto_micro.ST_SkillAsset_PB")
	proto.RegisterType((*ST_Tips_PB)(nil), "proto_micro.ST_Tips_PB")
	proto.RegisterType((*ST_TipsAsset_PB)(nil), "proto_micro.ST_TipsAsset_PB")
	proto.RegisterType((*ST_TaskAsset_PB)(nil), "proto_micro.ST_TaskAsset_PB")
	proto.RegisterType((*ST_Vip_PB)(nil), "proto_micro.ST_Vip_PB")
	proto.RegisterType((*ST_Attribute_PB)(nil), "proto_micro.ST_Attribute_PB")
	proto.RegisterType((*ST_AttributeList_PB)(nil), "proto_micro.ST_AttributeList_PB")
	proto.RegisterType((*ST_Asset_CommanderEquipInfo)(nil), "proto_micro.ST_Asset_CommanderEquipInfo")
	proto.RegisterType((*ST_WearEquip)(nil), "proto_micro.ST_WearEquip")
	proto.RegisterType((*ST_Asset_FactoryPackage)(nil), "proto_micro.ST_Asset_FactoryPackage")
	proto.RegisterType((*ST_EquipBasic)(nil), "proto_micro.ST_EquipBasic")
	proto.RegisterType((*ST_MaterialBase)(nil), "proto_micro.ST_MaterialBase")
	proto.RegisterType((*ST_Asset_TakeCard)(nil), "proto_micro.ST_Asset_TakeCard")
	proto.RegisterType((*ST_TakeCard_Basic)(nil), "proto_micro.ST_TakeCard_Basic")
	proto.RegisterType((*ST_Client_CardPool)(nil), "proto_micro.ST_Client_CardPool")
	proto.RegisterType((*ST_CardPoolBasic)(nil), "proto_micro.ST_CardPool_basic")
	proto.RegisterType((*ST_GiftHistory)(nil), "proto_micro.ST_GiftHistory")
	proto.RegisterType((*ST_Asset_OfferGift)(nil), "proto_micro.ST_Asset_OfferGift")
	proto.RegisterType((*ST_OfferGiftPack)(nil), "proto_micro.ST_OfferGiftPack")
	proto.RegisterType((*ST_OfferGiftPackConf)(nil), "proto_micro.ST_OfferGiftPackConf")
	proto.RegisterType((*ST_Asset_GiftPack)(nil), "proto_micro.ST_Asset_GiftPack")
	proto.RegisterType((*ST_GiftPackBasic)(nil), "proto_micro.ST_GiftPackBasic")
	proto.RegisterType((*ST_Asset_MonthGiftPack)(nil), "proto_micro.ST_Asset_MonthGiftPack")
	proto.RegisterType((*ST_SubscribeGiftPack)(nil), "proto_micro.ST_SubscribeGiftPack")
	proto.RegisterType((*ST_CharSimpleInfo)(nil), "proto_micro.ST_CharSimpleInfo")
	proto.RegisterType((*ST_CharSimpleInfoList)(nil), "proto_micro.ST_CharSimpleInfoList")
	proto.RegisterType((*ST_WorldCharSimple_PB)(nil), "proto_micro.ST_WorldCharSimple_PB")
	proto.RegisterType((*ST_WorldCharSimpleList_PB)(nil), "proto_micro.ST_WorldCharSimpleList_PB")
	proto.RegisterType((*ST_PowerRankingListItem)(nil), "proto_micro.ST_PowerRankingListItem")
	proto.RegisterType((*ST_GlobalRankingItem)(nil), "proto_micro.ST_GlobalRankingItem")
	proto.RegisterType((*ST_RankingHeroInfo)(nil), "proto_micro.ST_RankingHeroInfo")
	proto.RegisterType((*ST_PowerRankingList)(nil), "proto_micro.ST_PowerRankingList")
	proto.RegisterType((*ST_RecommendUserAsset_PB)(nil), "proto_micro.ST_RecommendUserAsset_PB")
	proto.RegisterType((*ST_LeagueDonationRankEntry_PB)(nil), "proto_micro.ST_LeagueDonationRankEntry_PB")
	proto.RegisterType((*ST_LeagueDonationRank_PB)(nil), "proto_micro.ST_LeagueDonationRank_PB")
	proto.RegisterType((*ST_LeagueStatusEntry_PB)(nil), "proto_micro.ST_LeagueStatusEntry_PB")
	proto.RegisterType((*ST_LeagueStatus_PB)(nil), "proto_micro.ST_LeagueStatus_PB")
	proto.RegisterType((*ST_AchievementFinishedItem_PB)(nil), "proto_micro.ST_AchievementFinishedItem_PB")
	proto.RegisterType((*ST_AchievementAsset_PB)(nil), "proto_micro.ST_AchievementAsset_PB")
	proto.RegisterType((*ST_LeagueCustomFlag_PB)(nil), "proto_micro.ST_LeagueCustomFlag_PB")
	proto.RegisterType((*ST_MainCityEvent_PB)(nil), "proto_micro.ST_MainCityEvent_PB")
	proto.RegisterType((*ST_MainCityEvent_Server_Asset_PB)(nil), "proto_micro.ST_MainCityEvent_Server_Asset_PB")
	proto.RegisterType((*ST_MainCityEventAsset_PB)(nil), "proto_micro.ST_MainCityEventAsset_PB")
	proto.RegisterType((*ST_DispatchTaskEntry_PB)(nil), "proto_micro.ST_DispatchTaskEntry_PB")
	proto.RegisterType((*ST_DispatchTaskAsset_PB)(nil), "proto_micro.ST_DispatchTaskAsset_PB")
	proto.RegisterType((*ST_Statue_PB)(nil), "proto_micro.ST_Statue_PB")
	proto.RegisterType((*ST_StatueAsset_PB)(nil), "proto_micro.ST_StatueAsset_PB")
	proto.RegisterType((*ST_SignInAsset_PB)(nil), "proto_micro.ST_SignInAsset_PB")
	proto.RegisterType((*ST_WorldCity_PB)(nil), "proto_micro.ST_WorldCity_PB")
	proto.RegisterType((*ST_WorldCityList_PB)(nil), "proto_micro.ST_WorldCityList_PB")
	proto.RegisterType((*ST_TranslateResult_PB)(nil), "proto_micro.ST_TranslateResult_PB")
	proto.RegisterType((*ST_RoleInformation_PB)(nil), "proto_micro.ST_RoleInformation_PB")
	proto.RegisterType((*ST_GlobalMessage_PB)(nil), "proto_micro.ST_GlobalMessage_PB")
	proto.RegisterType((*ST_GlobalMessageList_PB)(nil), "proto_micro.ST_GlobalMessageList_PB")
	proto.RegisterType((*ST_StrollHeroEventAsset_PB)(nil), "proto_micro.ST_StrollHeroEventAsset_PB")
	proto.RegisterType((*ST_StrollHeroEvent_PB)(nil), "proto_micro.ST_StrollHeroEvent_PB")
	proto.RegisterType((*ST_LeagueShopRecordList_PB)(nil), "proto_micro.ST_LeagueShopRecordList_PB")
	proto.RegisterType((*ST_LeagueShopRecord_PB)(nil), "proto_micro.ST_LeagueShopRecord_PB")
	proto.RegisterType((*ST_EveryoneMailItem)(nil), "proto_micro.ST_EveryoneMailItem")
	proto.RegisterType((*ST_EveryoneMailCondition)(nil), "proto_micro.ST_EveryoneMailCondition")
	proto.RegisterType((*ST_EveryoneMailContent)(nil), "proto_micro.ST_EveryoneMailContent")
	proto.RegisterType((*ST_SettingAsset_PB)(nil), "proto_micro.ST_SettingAsset_PB")
	proto.RegisterType((*ST_PowerChat_PB)(nil), "proto_micro.ST_PowerChat_PB")
	proto.RegisterType((*ST_AudioSetting_PB)(nil), "proto_micro.ST_AudioSetting_PB")
	proto.RegisterType((*ST_NotifictionSetting_PB)(nil), "proto_micro.ST_NotifictionSetting_PB")
	proto.RegisterType((*ST_FeedbackMark)(nil), "proto_micro.ST_FeedbackMark")
	proto.RegisterType((*ST_UserSettingsAlterParams)(nil), "proto_micro.ST_UserSettingsAlterParams")
	proto.RegisterType((*ST_BeginnerTutorialAsset_PB)(nil), "proto_micro.ST_BeginnerTutorialAsset_PB")
	proto.RegisterType((*ST_FirstTutorialAsset_PB)(nil), "proto_micro.ST_FirstTutorialAsset_PB")
	proto.RegisterType((*ST_SetMemberTitles_PB)(nil), "proto_micro.ST_SetMemberTitles_PB")
	proto.RegisterType((*ST_Activity_PB)(nil), "proto_micro.ST_Activity_PB")
	proto.RegisterType((*ST_ActivityScore_PB)(nil), "proto_micro.ST_ActivityScore_PB")
	proto.RegisterType((*ST_ActivityLeague_Task)(nil), "proto_micro.ST_ActivityLeague_Task")
	proto.RegisterType((*ST_ActivityLeague_TaskAction)(nil), "proto_micro.ST_ActivityLeague_TaskAction")
	proto.RegisterType((*ST_MemberInfo_Base)(nil), "proto_micro.ST_MemberInfo_Base")
	proto.RegisterType((*ST_ActivityScore_User)(nil), "proto_micro.ST_ActivityScore_User")
	proto.RegisterType((*ST_ActivityScore_LeagueUser)(nil), "proto_micro.ST_ActivityScore_LeagueUser")
	proto.RegisterType((*ST_ActivityScore_UserTask)(nil), "proto_micro.ST_ActivityScore_UserTask")
	proto.RegisterType((*ST_LeagueInfo_Base)(nil), "proto_micro.ST_LeagueInfo_Base")
	proto.RegisterType((*ST_ActivityScore_Base)(nil), "proto_micro.ST_ActivityScore_Base")
	proto.RegisterType((*ST_ActivityScore_League)(nil), "proto_micro.ST_ActivityScore_League")
	proto.RegisterType((*ST_ActivityDetail_PB)(nil), "proto_micro.ST_ActivityDetail_PB")
	proto.RegisterType((*ST_ActivityContent_PB)(nil), "proto_micro.ST_ActivityContent_PB")
	proto.RegisterType((*ST_ActivityRank_League)(nil), "proto_micro.ST_ActivityRank_League")
	proto.RegisterType((*ST_ActivityRank_LeagueUser)(nil), "proto_micro.ST_ActivityRank_LeagueUser")
	proto.RegisterType((*ST_ActivityRank_PB)(nil), "proto_micro.ST_ActivityRank_PB")
	proto.RegisterType((*ST_Asset_Activity_PB)(nil), "proto_micro.ST_Asset_Activity_PB")
	proto.RegisterType((*ST_Asset_Activity_Item_PB)(nil), "proto_micro.ST_Asset_Activity_Item_PB")
	proto.RegisterType((*ST_MacActifityInfo)(nil), "proto_micro.ST_MacActifityInfo")
	proto.RegisterType((*ST_FoolsDay)(nil), "proto_micro.ST_FoolsDay")
	proto.RegisterType((*ST_FoolsDay_Rewards)(nil), "proto_micro.ST_FoolsDay_Rewards")
	proto.RegisterType((*ST_DailyTask_PB)(nil), "proto_micro.ST_DailyTask_PB")
	proto.RegisterType((*ST_Lottery_PB)(nil), "proto_micro.ST_Lottery_PB")
	proto.RegisterType((*ST_BookmarkEntry_PB)(nil), "proto_micro.ST_BookmarkEntry_PB")
	proto.RegisterType((*ST_Asset_Bookmark_PB)(nil), "proto_micro.ST_Asset_Bookmark_PB")
	proto.RegisterType((*ST_MiracleWarRecord_PB)(nil), "proto_micro.ST_MiracleWarRecord_PB")
	proto.RegisterType((*ST_HistoryArchon_PB)(nil), "proto_micro.ST_HistoryArchon_PB")
	proto.RegisterType((*ST_OccupyInfo_PB)(nil), "proto_micro.ST_OccupyInfo_PB")
	proto.RegisterType((*ST_Title_PB)(nil), "proto_micro.ST_Title_PB")
	proto.RegisterType((*ST_WarGift_PB)(nil), "proto_micro.ST_WarGift_PB")
	proto.RegisterType((*ST_MiracleWarBuff_PB)(nil), "proto_micro.ST_MiracleWarBuff_PB")
	proto.RegisterType((*ST_MiracleWarRight)(nil), "proto_micro.ST_MiracleWarRight")
	proto.RegisterType((*ST_GlobalNotice)(nil), "proto_micro.ST_GlobalNotice")
	proto.RegisterType((*ST_MiracleWar_PB)(nil), "proto_micro.ST_MiracleWar_PB")
	proto.RegisterType((*ST_MiracleWarRecords_PB)(nil), "proto_micro.ST_MiracleWarRecords_PB")
	proto.RegisterType((*ST_MiracleWarHistoryArchons_PB)(nil), "proto_micro.ST_MiracleWarHistoryArchons_PB")
	proto.RegisterType((*ST_Asset_MiracleWar_PB)(nil), "proto_micro.ST_Asset_MiracleWar_PB")
	proto.RegisterType((*ST_Server_PB)(nil), "proto_micro.ST_Server_PB")
	proto.RegisterType((*ST_ServerList_PB)(nil), "proto_micro.ST_ServerList_PB")
	proto.RegisterType((*ST_Asset_Account_PB)(nil), "proto_micro.ST_Asset_Account_PB")
	proto.RegisterType((*ST_League_IndependData_Version_PB)(nil), "proto_micro.ST_League_IndependData_Version_PB")
	proto.RegisterType((*ST_League_Message_List_PB)(nil), "proto_micro.ST_League_Message_List_PB")
	proto.RegisterType((*ST_BlackMarket_Item_PB)(nil), "proto_micro.ST_BlackMarket_Item_PB")
	proto.RegisterType((*ST_Asset_BlackMarket_PB)(nil), "proto_micro.ST_Asset_BlackMarket_PB")
	proto.RegisterType((*ST_Asset_Supply_PB)(nil), "proto_micro.ST_Asset_Supply_PB")
	proto.RegisterType((*ST_ResourceObtain_Supply_PB)(nil), "proto_micro.ST_ResourceObtain_Supply_PB")
	proto.RegisterType((*ST_LeagueBox_Item_PB)(nil), "proto_micro.ST_LeagueBox_Item_PB")
	proto.RegisterType((*ST_Asset_LeagueBox_PB)(nil), "proto_micro.ST_Asset_LeagueBox_PB")
	proto.RegisterType((*ST_ChallengeTarget_PB)(nil), "proto_micro.ST_ChallengeTarget_PB")
	proto.RegisterType((*ST_ChallengeCondition_PB)(nil), "proto_micro.ST_ChallengeCondition_PB")
	proto.RegisterType((*ST_ChallengeTast_PB)(nil), "proto_micro.ST_ChallengeTast_PB")
	proto.RegisterType((*ST_Asset_Challenge_PB)(nil), "proto_micro.ST_Asset_Challenge_PB")
	proto.RegisterType((*ST_Asset_LuckyDog)(nil), "proto_micro.ST_Asset_LuckyDog")
	proto.RegisterType((*ST_Asset_AirdropInfo)(nil), "proto_micro.ST_Asset_AirdropInfo")
	proto.RegisterType((*ST_WorldDomination_PB)(nil), "proto_micro.ST_WorldDomination_PB")
	proto.RegisterType((*ST_Asset_MapList_PB)(nil), "proto_micro.ST_Asset_MapList_PB")
	proto.RegisterType((*ST_MapList_Info_PB)(nil), "proto_micro.ST_MapList_Info_PB")
	proto.RegisterType((*ST_Chapter_PB)(nil), "proto_micro.ST_Chapter_PB")
	proto.RegisterType((*ST_StarBox_PB)(nil), "proto_micro.ST_StarBox_PB")
	proto.RegisterType((*ST_MapInfo_PB)(nil), "proto_micro.ST_MapInfo_PB")
	proto.RegisterType((*ST_MopUpRewards_PB)(nil), "proto_micro.ST_MopUpRewards_PB")
	proto.RegisterType((*ST_ActivityTask_Item)(nil), "proto_micro.ST_ActivityTask_Item")
	proto.RegisterType((*ST_Asset_ActivityTask_PB)(nil), "proto_micro.ST_Asset_ActivityTask_PB")
	proto.RegisterType((*ST_MainCitySkinInfo_PB)(nil), "proto_micro.ST_MainCitySkinInfo_PB")
	proto.RegisterType((*ST_Asset_MainCitySkin_PB)(nil), "proto_micro.ST_Asset_MainCitySkin_PB")
	proto.RegisterType((*ST_Asset_BoonCenter_PB)(nil), "proto_micro.ST_Asset_BoonCenter_PB")
	proto.RegisterType((*ST_GiftActivity)(nil), "proto_micro.ST_GiftActivity")
	proto.RegisterType((*ST_GiftActivity_One)(nil), "proto_micro.ST_GiftActivity_One")
	proto.RegisterType((*ST_BoonPayFirst_PB)(nil), "proto_micro.ST_BoonPayFirst_PB")
	proto.RegisterType((*ST_BoonPaySecond_PB)(nil), "proto_micro.ST_BoonPaySecond_PB")
	proto.RegisterType((*ST_BoonDuration_PB)(nil), "proto_micro.ST_BoonDuration_PB")
	proto.RegisterType((*ST_BoonDurationData_PB)(nil), "proto_micro.ST_BoonDurationData_PB")
	proto.RegisterType((*ST_BoonDaily_PB)(nil), "proto_micro.ST_BoonDaily_PB")
	proto.RegisterType((*ST_BoonDailyData_PB)(nil), "proto_micro.ST_BoonDailyData_PB")
	proto.RegisterType((*ST_BoonFund_PB)(nil), "proto_micro.ST_BoonFund_PB")
	proto.RegisterType((*ST_BoonFundData_PB)(nil), "proto_micro.ST_BoonFundData_PB")
	proto.RegisterType((*ST_BoonRewardData_PB)(nil), "proto_micro.ST_BoonRewardData_PB")
	proto.RegisterType((*ST_BoonRewardConfig_PB)(nil), "proto_micro.ST_BoonRewardConfig_PB")
	proto.RegisterType((*ST_ChapterTask_PB)(nil), "proto_micro.ST_ChapterTask_PB")
	proto.RegisterType((*ST_ChapterInfo_PB)(nil), "proto_micro.ST_ChapterInfo_PB")
	proto.RegisterType((*ST_Asset_Chapters_PB)(nil), "proto_micro.ST_Asset_Chapters_PB")
	proto.RegisterType((*ST_PrisonMessage_PB)(nil), "proto_micro.ST_PrisonMessage_PB")
	proto.RegisterType((*ST_PrisonMessageBoard_PB)(nil), "proto_micro.ST_PrisonMessageBoard_PB")
	proto.RegisterType((*ST_PrisonMessgeClient_PB)(nil), "proto_micro.ST_PrisonMessgeClient_PB")
	proto.RegisterType((*ST_PrisonMessageList_PB)(nil), "proto_micro.ST_PrisonMessageList_PB")
	proto.RegisterType((*ST_CommanderFashionInfo_PB)(nil), "proto_micro.ST_CommanderFashionInfo_PB")
	proto.RegisterType((*ST_Asset_CommanderFashion_PB)(nil), "proto_micro.ST_Asset_CommanderFashion_PB")
	proto.RegisterType((*ST_SevenDayTask_Item)(nil), "proto_micro.ST_SevenDayTask_Item")
	proto.RegisterType((*ST_SeventDayTaskAsset_PB)(nil), "proto_micro.ST_SeventDayTaskAsset_PB")
	proto.RegisterType((*ST_NoviceTaskAsset_PB)(nil), "proto_micro.ST_NoviceTaskAsset_PB")
	proto.RegisterType((*ST_KillWildMonster_PB)(nil), "proto_micro.ST_KillWildMonster_PB")
	proto.RegisterType((*ST_AirShipChanllange_PB)(nil), "proto_micro.ST_AirShipChanllange_PB")
	proto.RegisterType((*AirShipPassDetail)(nil), "proto_micro.AirShipPassDetail")
	proto.RegisterType((*ST_UserAirShipChanllange_PB)(nil), "proto_micro.ST_UserAirShipChanllange_PB")
	proto.RegisterType((*ST_AirShipChanllangeRet_PB)(nil), "proto_micro.ST_AirShipChanllangeRet_PB")
	proto.RegisterType((*ST_DropActivityRankItem_PB)(nil), "proto_micro.ST_DropActivityRankItem_PB")
	proto.RegisterType((*ST_DropActivityRank_PB)(nil), "proto_micro.ST_DropActivityRank_PB")
	proto.RegisterType((*ST_LeagueTask_Item)(nil), "proto_micro.ST_LeagueTask_Item")
	proto.RegisterType((*ST_Asset_LeagueTask_PB)(nil), "proto_micro.ST_Asset_LeagueTask_PB")
	proto.RegisterType((*ST_SubTask)(nil), "proto_micro.ST_SubTask")
	proto.RegisterType((*ST_StrongestCommander_PB)(nil), "proto_micro.ST_StrongestCommander_PB")
	proto.RegisterType((*ST_StrongestCommanderRank_PB)(nil), "proto_micro.ST_StrongestCommanderRank_PB")
	proto.RegisterType((*ST_Asset_StrongestCommander_PB)(nil), "proto_micro.ST_Asset_StrongestCommander_PB")
	proto.RegisterType((*ST_PrepareForWar_PB)(nil), "proto_micro.ST_PrepareForWar_PB")
	proto.RegisterType((*ST_PrepareForWarRank_PB)(nil), "proto_micro.ST_PrepareForWarRank_PB")
	proto.RegisterType((*ST_Asset_PrepareForWar_PB)(nil), "proto_micro.ST_Asset_PrepareForWar_PB")
	proto.RegisterType((*ST_ExpeditionShop_Item_PB)(nil), "proto_micro.ST_ExpeditionShop_Item_PB")
	proto.RegisterType((*ST_Asset_ExpeditionShop_PB)(nil), "proto_micro.ST_Asset_ExpeditionShop_PB")
	proto.RegisterType((*ST_ExpeditionShop_PB)(nil), "proto_micro.ST_ExpeditionShop_PB")
	proto.RegisterType((*ST_WorldSituation_Entry_PB)(nil), "proto_micro.ST_WorldSituation_Entry_PB")
	proto.RegisterType((*ST_WorldSituation_PB)(nil), "proto_micro.ST_WorldSituation_PB")
	proto.RegisterType((*ST_WorldSituationRankSnapshot_PB)(nil), "proto_micro.ST_WorldSituationRankSnapshot_PB")
	proto.RegisterType((*ST_WorldSituationRankSnapshot_Entry_PB)(nil), "proto_micro.ST_WorldSituationRankSnapshot_Entry_PB")
	proto.RegisterType((*ST_Asset_WorldSituation_PB)(nil), "proto_micro.ST_Asset_WorldSituation_PB")
	proto.RegisterType((*ST_Asset_LoginGift_PB)(nil), "proto_micro.ST_Asset_LoginGift_PB")
	proto.RegisterType((*ST_LuckyStarItem_PB)(nil), "proto_micro.ST_LuckyStarItem_PB")
	proto.RegisterType((*ST_LuckyStar_PB)(nil), "proto_micro.ST_LuckyStar_PB")
	proto.RegisterType((*ST_LuckyStarShop_PB)(nil), "proto_micro.ST_LuckyStarShop_PB")
	proto.RegisterType((*ST_LuckyStarItem_Server_PB)(nil), "proto_micro.ST_LuckyStarItem_Server_PB")
	proto.RegisterType((*ST_LuckyStar_Server_PB)(nil), "proto_micro.ST_LuckyStar_Server_PB")
	proto.RegisterType((*ST_Asset_LuckyStar_PB)(nil), "proto_micro.ST_Asset_LuckyStar_PB")
	proto.RegisterType((*ST_CharSimple_Server_PB)(nil), "proto_micro.ST_CharSimple_Server_PB")
	proto.RegisterType((*ST_CharSimpleGarrison_PB)(nil), "proto_micro.ST_CharSimpleGarrison_PB")
	proto.RegisterType((*ST_SyncAsset_Entry)(nil), "proto_micro.ST_SyncAsset_Entry")
	proto.RegisterType((*ST_SyncAsset_PB)(nil), "proto_micro.ST_SyncAsset_PB")
	proto.RegisterType((*ST_MailTypeList_Entry)(nil), "proto_micro.ST_MailTypeList_Entry")
	proto.RegisterType((*ST_MailTypeList)(nil), "proto_micro.ST_MailTypeList")
	proto.RegisterType((*ST_MailAssetSummary_Entry)(nil), "proto_micro.ST_MailAssetSummary_Entry")
	proto.RegisterType((*ST_MailAssetSummary)(nil), "proto_micro.ST_MailAssetSummary")
	proto.RegisterType((*ST_MailDB_PB)(nil), "proto_micro.ST_MailDB_PB")
	proto.RegisterType((*ST_ServerRank)(nil), "proto_micro.ST_ServerRank")
	proto.RegisterType((*ST_GetRoleRst)(nil), "proto_micro.ST_GetRoleRst")
	proto.RegisterType((*ST_LeagueBattle_User)(nil), "proto_micro.ST_LeagueBattle_User")
	proto.RegisterType((*ST_LeagueBattle_Log_Entry)(nil), "proto_micro.ST_LeagueBattle_Log_Entry")
	proto.RegisterType((*ST_LeagueBattle_Log)(nil), "proto_micro.ST_LeagueBattle_Log")
	proto.RegisterType((*ST_MonsterAtkCity)(nil), "proto_micro.ST_MonsterAtkCity")
	proto.RegisterType((*ST_GS2LS_UpdateRoleReq)(nil), "proto_micro.ST_GS2LS_UpdateRoleReq")
	proto.RegisterType((*ST_RoleInfo)(nil), "proto_micro.ST_RoleInfo")
	proto.RegisterType((*ST_MiracleWarList_PB)(nil), "proto_micro.ST_MiracleWarList_PB")
	proto.RegisterType((*ST_ChatChatroom)(nil), "proto_micro.ST_Chat_chatroom")
	proto.RegisterType((*ST_ChatInfo)(nil), "proto_micro.ST_Chat_info")
	proto.RegisterType((*ST_Chat_NeteaseRes)(nil), "proto_micro.ST_Chat_NeteaseRes")
	proto.RegisterType((*ST_Transfer_Battle_PB)(nil), "proto_micro.ST_Transfer_Battle_PB")
	proto.RegisterType((*ST_Prepare_Server_Info)(nil), "proto_micro.ST_Prepare_Server_Info")
	proto.RegisterType((*ST_Prepare_Detail)(nil), "proto_micro.ST_Prepare_Detail")
	proto.RegisterType((*ST_Processing_Detail)(nil), "proto_micro.ST_Processing_Detail")
	proto.RegisterType((*ST_Recovering_Detail)(nil), "proto_micro.ST_Recovering_Detail")
	proto.RegisterType((*ST_Transfer_Battle_SubTask)(nil), "proto_micro.ST_Transfer_Battle_SubTask")
	proto.RegisterType((*ST_Prepare_User_Info)(nil), "proto_micro.ST_Prepare_User_Info")
	proto.RegisterType((*ST_Prepare_League_Info)(nil), "proto_micro.ST_Prepare_League_Info")
	proto.RegisterType((*ST_Asset_TransferBattle_PB)(nil), "proto_micro.ST_Asset_TransferBattle_PB")
	proto.RegisterType((*ST_Client_TransferBattle_Info)(nil), "proto_micro.ST_Client_TransferBattle_Info")
	proto.RegisterType((*ST_Client_TransferBattle_User_Rank)(nil), "proto_micro.ST_Client_TransferBattle_User_Rank")
	proto.RegisterType((*ST_Client_TransferBattle_League_Rank)(nil), "proto_micro.ST_Client_TransferBattle_League_Rank")
	proto.RegisterType((*ST_CollectResource_Entry)(nil), "proto_micro.ST_CollectResource_Entry")
	proto.RegisterType((*ST_CollectResources)(nil), "proto_micro.ST_CollectResources")
	proto.RegisterType((*ST_Sort_PB)(nil), "proto_micro.ST_Sort_PB")
	proto.RegisterType((*ST_Rank_PB)(nil), "proto_micro.ST_Rank_PB")
}

func init() { proto.RegisterFile("MG_GameProtocol.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 25296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x69, 0x8c, 0x25, 0x49,
	0x7a, 0x18, 0xe6, 0x77, 0xd5, 0x11, 0x55, 0xd5, 0x47, 0x4e, 0x4f, 0x4f, 0x6d, 0xef, 0x6c, 0x6f,
	0x4f, 0xee, 0x70, 0xb6, 0xb9, 0x1c, 0x8e, 0x66, 0x7b, 0xee, 0x7b, 0xba, 0x8e, 0xee, 0xae, 0x9d,
	0xaa, 0xee, 0xda, 0xac, 0xaa, 0xe9, 0x5d, 0xae, 0x96, 0xcd, 0xac, 0x97, 0x51, 0x55, 0xc9, 0xca,
	0x97, 0xf9, 0x36, 0x33, 0x5f, 0x75, 0x15, 0x25, 0x4a, 0x6b, 0x1e, 0x26, 0x29, 0x81, 0xa6, 0x28,
	0x51, 0x26, 0x60, 0xc9, 0x24, 0x24, 0x08, 0x36, 0x6d, 0x9a, 0x82, 0x0c, 0xc2, 0x06, 0x29, 0xf1,
	0x30, 0x6c, 0x08, 0x86, 0x28, 0x58, 0x92, 0x69, 0x0b, 0x32, 0x2c, 0x88, 0x02, 0x7d, 0x0a, 0xf6,
	0x0f, 0xc3, 0x30, 0x49, 0x18, 0xb2, 0x69, 0x1b, 0xf1, 0x7d, 0x5f, 0x44, 0x7c, 0x91, 0x99, 0xef,
	0xd5, 0xeb, 0x5d, 0x52, 0xa4, 0x20, 0xfe, 0x7a, 0xef, 0xfb, 0x32, 0x22, 0x32, 0x32, 0x8e, 0x2f,
	0xbe, 0xf8, 0x4e, 0xf1, 0xf4, 0xd6, 0xdd, 0x47, 0x77, 0xc3, 0x81, 0xdc, 0xce, 0xb3, 0x32, 0xeb,
	0x67, 0xc9, 0x4b, 0x43, 0xf5, 0xc7, 0x5b, 0x80, 0x9f, 0x47, 0x83, 0xb8, 0x9f, 0x67, 0xd7, 0x9e,
	0xd9, 0xba, 0xfb, 0x68, 0x35, 0x1b, 0x0c, 0xb2, 0xd4, 0x2d, 0x75, 0xed, 0x29, 0xaa, 0xbc, 0x26,
	0x0f, 0xe2, 0x54, 0x22, 0xd2, 0xff, 0x6f, 0x17, 0xc4, 0xd5, 0x9d, 0xdd, 0x47, 0xab, 0x47, 0x61,
	0xbe, 0x12, 0x16, 0x71, 0xff, 0xd1, 0x8e, 0xcc, 0x4f, 0x64, 0xfe, 0x68, 0x7b, 0xc5, 0xbb, 0x24,
	0x3a, 0xa3, 0x38, 0x5a, 0x6e, 0xdd, 0x68, 0xdd, 0xec, 0x06, 0xea, 0xaf, 0x77, 0x4d, 0xcc, 0xf5,
	0x8f, 0xc2, 0x3c, 0x0d, 0x07, 0x72, 0xb9, 0x7d, 0xa3, 0x75, 0x73, 0x3e, 0x30, 0xb0, 0xf7, 0xac,
	0x98, 0x2f, 0xe2, 0xc3, 0x34, 0x2c, 0x47, 0xb9, 0x5c, 0xee, 0xc0, 0x43, 0x8b, 0x50, 0x35, 0x93,
	0xac, 0x1f, 0x96, 0x71, 0x96, 0x2e, 0x77, 0x6f, 0xb4, 0x6e, 0xf6, 0x02, 0x03, 0x7b, 0x37, 0xc4,
	0xc2, 0xe3, 0x2c, 0x4f, 0xa2, 0x28, 0x2c, 0xc3, 0x38, 0x5a, 0xee, 0xc1, 0xfb, 0x38, 0x0a, 0x6b,
	0xe7, 0xd1, 0x46, 0x3f, 0x4b, 0x97, 0x67, 0xf0, 0xbd, 0x1a, 0x56, 0xb5, 0xc3, 0x93, 0xb0, 0x0c,
	0xf3, 0x95, 0xec, 0x74, 0x63, 0x6d, 0x79, 0xf6, 0x46, 0xeb, 0xe6, 0x52, 0xc0, 0x51, 0xde, 0x55,
	0x31, 0x83, 0xe0, 0xf2, 0x1c, 0xd4, 0x25, 0xc8, 0xbb, 0x25, 0xae, 0x24, 0x61, 0x51, 0x06, 0xf2,
	0x20, 0x97, 0xc5, 0xd1, 0x6e, 0x3c, 0x90, 0x45, 0x19, 0x0e, 0x86, 0xcb, 0xf3, 0xd0, 0x81, 0xc6,
	0x67, 0xd0, 0x93, 0x30, 0x3d, 0x1c, 0x85, 0x87, 0x72, 0x59, 0xc0, 0xab, 0x0c, 0xec, 0xbd, 0x20,
	0x2e, 0x24, 0xd9, 0x61, 0x9c, 0xda, 0x96, 0x16, 0xa0, 0xa5, 0x0a, 0x56, 0xf5, 0xf8, 0x20, 0xcb,
	0xf7, 0xe3, 0x68, 0x53, 0xe1, 0x97, 0x17, 0xf1, 0x7b, 0x19, 0xca, 0xbb, 0x2e, 0x44, 0x3f, 0x97,
	0x61, 0x29, 0x55, 0xa5, 0xe5, 0x25, 0x28, 0xc0, 0x30, 0xea, 0x4d, 0xac, 0xf8, 0xda, 0x28, 0x5f,
	0xbe, 0x80, 0x6f, 0x72, 0xb1, 0x95, 0x72, 0x5b, 0xc5, 0xe1, 0xf2, 0x45, 0x18, 0x81, 0x0a, 0x56,
	0x7d, 0x55, 0x1a, 0xf7, 0x8f, 0xef, 0xab, 0x79, 0xbd, 0x84, 0xe3, 0xab, 0x61, 0xf5, 0x6c, 0x98,
	0x84, 0xe5, 0x41, 0x96, 0x0f, 0x96, 0x2f, 0xe3, 0x17, 0x6b, 0x18, 0xbe, 0x38, 0x2c, 0xca, 0xcd,
	0xec, 0x30, 0x1b, 0x95, 0xd0, 0x57, 0x8f, 0xbe, 0xd8, 0xc1, 0xaa, 0x2f, 0xee, 0x1f, 0x85, 0xe9,
	0xa1, 0x8c, 0xe0, 0x15, 0x4f, 0xdd, 0x68, 0xdd, 0x9c, 0x0b, 0x38, 0x4a, 0xb5, 0x84, 0xb3, 0x72,
	0x27, 0x4e, 0x24, 0x14, 0xba, 0x82, 0x3d, 0x75, 0xb1, 0xaa, 0xa5, 0x24, 0x3b, 0x34, 0x85, 0x9e,
	0x86, 0x42, 0x1c, 0xe5, 0xbd, 0x2b, 0x3e, 0x91, 0xca, 0xd3, 0x72, 0x6f, 0x98, 0x64, 0x61, 0x74,
	0x1b, 0x6a, 0xdb, 0x09, 0xb9, 0x0a, 0xdd, 0x1b, 0x5f, 0x40, 0x7d, 0xed, 0x41, 0x7f, 0xb0, 0x9b,
	0x1d, 0xcb, 0x74, 0xf9, 0x19, 0x1c, 0x09, 0x0d, 0x7b, 0x9f, 0x13, 0x97, 0xc2, 0x38, 0x5f, 0xcb,
	0xb3, 0xe1, 0x76, 0x96, 0x25, 0x1b, 0x69, 0x24, 0x4f, 0x97, 0x97, 0x61, 0x2d, 0xd7, 0xf0, 0xde,
	0x4b, 0xc2, 0x23, 0x5c, 0x10, 0x1e, 0x1c, 0x24, 0x30, 0x6d, 0xc5, 0xf2, 0x27, 0xa0, 0x74, 0xc3,
	0x13, 0xef, 0xa6, 0xb8, 0x48, 0xd8, 0x3b, 0xb9, 0xc4, 0x69, 0xbf, 0x06, 0x7d, 0xad, 0xa2, 0x55,
	0xc9, 0xa3, 0xb8, 0x28, 0xb3, 0xfc, 0x6c, 0xa3, 0x94, 0x83, 0xcd, 0xb8, 0x28, 0x97, 0x3f, 0x79,
	0xa3, 0x73, 0xb3, 0x17, 0x54, 0xd1, 0x6a, 0xff, 0x16, 0x71, 0xb4, 0xfc, 0x2c, 0x4c, 0x9a, 0xfa,
	0x0b, 0xeb, 0x6a, 0x94, 0xe7, 0x32, 0x2d, 0x77, 0xe2, 0x68, 0xf9, 0x53, 0xf0, 0x80, 0x61, 0xbc,
	0x65, 0x31, 0x7b, 0x2c, 0xe5, 0x70, 0x3b, 0x3c, 0x5b, 0xbe, 0x0e, 0x5d, 0xd5, 0xa0, 0xda, 0xdd,
	0xea, 0xef, 0xfd, 0x4c, 0x3d, 0xfb, 0x34, 0x3c, 0xb3, 0x08, 0xef, 0x8e, 0x58, 0xea, 0x67, 0x83,
	0x41, 0x98, 0x46, 0x32, 0xdf, 0x48, 0x0f, 0xb2, 0xe5, 0x1b, 0x37, 0x5a, 0x37, 0x17, 0x6e, 0xdd,
	0x78, 0x89, 0xd1, 0xa5, 0x97, 0x14, 0x95, 0xe1, 0x85, 0x1e, 0x6d, 0xaf, 0x04, 0x6e, 0x35, 0xf5,
	0xfe, 0x41, 0x16, 0xc9, 0x64, 0x23, 0x5a, 0x7e, 0x0e, 0x3a, 0xa7, 0x41, 0xf5, 0x7e, 0xb5, 0x5c,
	0x52, 0x99, 0x6c, 0xac, 0x2d, 0xfb, 0x48, 0x5d, 0x0c, 0xc2, 0x7b, 0x5e, 0x2c, 0x0d, 0xc2, 0x38,
	0x5d, 0x8d, 0xcb, 0xb3, 0x4d, 0x79, 0x22, 0x93, 0xe5, 0xcf, 0x40, 0x6d, 0x17, 0xa9, 0xe8, 0xc0,
	0x4e, 0xde, 0xff, 0x58, 0xe6, 0xcb, 0xcf, 0xdf, 0x68, 0xdd, 0xec, 0x04, 0x04, 0xa9, 0xb6, 0xd5,
	0x7a, 0xdd, 0xce, 0x1e, 0xcb, 0x7c, 0xf9, 0x5b, 0x60, 0xd4, 0x2d, 0x42, 0x3d, 0x0d, 0xfb, 0xfd,
	0x6c, 0x94, 0x96, 0x71, 0xb4, 0xfc, 0x02, 0x3e, 0x35, 0x08, 0xb5, 0x5e, 0xf6, 0x47, 0xfb, 0xfb,
	0x89, 0x8c, 0xa3, 0xe5, 0xcf, 0xe2, 0xee, 0xd0, 0xb0, 0x7a, 0xb6, 0x9b, 0x95, 0x61, 0xa2, 0x86,
	0xec, 0x26, 0x3e, 0xd3, 0xb0, 0x5a, 0xef, 0xab, 0xb0, 0xfc, 0x91, 0xdc, 0xae, 0xae, 0x2d, 0x7f,
	0x2b, 0xee, 0x1c, 0x17, 0xab, 0xd6, 0x5c, 0x2e, 0x87, 0x59, 0x5e, 0xde, 0x4d, 0xb2, 0xfd, 0x30,
	0x81, 0x85, 0xf1, 0x39, 0x28, 0x59, 0xc3, 0x7b, 0x17, 0x44, 0x7b, 0x63, 0x7b, 0xf9, 0xdb, 0x60,
	0x70, 0xda, 0x1b, 0xdb, 0xfe, 0xaf, 0x77, 0xc4, 0xa5, 0x9d, 0xdd, 0x47, 0x7b, 0x85, 0xcc, 0x2d,
	0x51, 0x7f, 0x57, 0xcc, 0xa9, 0xc2, 0x8a, 0xde, 0x2f, 0xb7, 0x6e, 0x74, 0x9a, 0x66, 0xe9, 0x63,
	0xd9, 0x2f, 0xb3, 0xfc, 0xd5, 0xbd, 0x8d, 0xb4, 0x7c, 0xfd, 0x55, 0x35, 0x4b, 0xa6, 0x86, 0xfa,
	0xa4, 0xd5, 0x51, 0xbe, 0x19, 0xee, 0xcb, 0x04, 0x0e, 0x80, 0x4e, 0x60, 0x60, 0xf5, 0x6c, 0x2b,
	0x3c, 0xc5, 0x67, 0x1d, 0x7c, 0xa6, 0x61, 0xb5, 0x6d, 0x75, 0xb9, 0xfb, 0xa3, 0x01, 0x9d, 0x00,
	0x1c, 0xa5, 0x6a, 0x6f, 0x87, 0x67, 0xab, 0x6a, 0x58, 0xe9, 0x04, 0x30, 0xb0, 0x7a, 0x76, 0x27,
	0xce, 0x8b, 0x52, 0x55, 0x9d, 0xc1, 0x67, 0x1a, 0x56, 0x4b, 0x06, 0xfe, 0xef, 0x0e, 0x80, 0xf4,
	0x77, 0x03, 0x0d, 0xaa, 0xe9, 0xde, 0x0c, 0xe1, 0xc1, 0x1c, 0x3c, 0x20, 0xc8, 0x7b, 0x5f, 0xcc,
	0xd3, 0x4e, 0x79, 0xe5, 0xe5, 0xe5, 0xf9, 0x29, 0x87, 0xc0, 0x56, 0x51, 0x04, 0x66, 0x53, 0x86,
	0x87, 0x23, 0xb9, 0x26, 0x4f, 0xb2, 0x52, 0xae, 0x85, 0x67, 0x41, 0x98, 0x1e, 0x6f, 0x85, 0x71,
	0xb2, 0x3b, 0x80, 0x33, 0xa1, 0x1b, 0x8c, 0x2f, 0xe0, 0xbd, 0x2f, 0xae, 0xf1, 0x87, 0x0f, 0xa5,
	0x3c, 0x66, 0xd5, 0xf1, 0xc0, 0x98, 0x50, 0xc2, 0xff, 0xcf, 0xdb, 0xe2, 0xa9, 0x86, 0x9d, 0xa4,
	0xbe, 0xb6, 0x28, 0xc3, 0x72, 0x54, 0xc0, 0x79, 0xbd, 0x14, 0x10, 0xa4, 0x16, 0x5a, 0x3c, 0x18,
	0xe6, 0x71, 0x91, 0xa5, 0xf2, 0xc1, 0xe3, 0x54, 0xe6, 0x30, 0x6f, 0xdd, 0xa0, 0x82, 0x55, 0x5b,
	0xa8, 0x28, 0xe5, 0x70, 0xa7, 0x0c, 0x73, 0xa4, 0xe4, 0x1d, 0x28, 0xe6, 0x22, 0x55, 0x6b, 0x0a,
	0x11, 0x48, 0xb5, 0xb3, 0xa0, 0x58, 0x17, 0x5b, 0x73, 0xb1, 0xde, 0x6b, 0x62, 0x26, 0x0f, 0xd3,
	0x22, 0x1b, 0xc0, 0x5c, 0x2e, 0xdc, 0xfa, 0xd4, 0x98, 0x01, 0xde, 0x48, 0x4b, 0x35, 0xba, 0x54,
	0x58, 0x55, 0xdb, 0x57, 0x33, 0x7e, 0x06, 0xd3, 0x7c, 0x7e, 0x35, 0x2c, 0xec, 0x5d, 0x11, 0x3d,
	0xa4, 0xd8, 0xb3, 0xb0, 0xf6, 0x11, 0x50, 0xab, 0x06, 0x0f, 0xc2, 0xf0, 0x8c, 0x56, 0x80, 0x81,
	0xfd, 0xff, 0xad, 0x27, 0x2e, 0x3a, 0x5c, 0xcf, 0xbf, 0x02, 0xec, 0x0e, 0x67, 0x5d, 0xe6, 0x2b,
	0xac, 0x0b, 0x67, 0x00, 0x44, 0x85, 0x01, 0xa0, 0x63, 0x64, 0xc1, 0x3d, 0x46, 0x80, 0x4c, 0x41,
	0xf9, 0x45, 0x38, 0xcd, 0x19, 0x66, 0xf2, 0x11, 0xbc, 0x74, 0xde, 0x11, 0xec, 0x32, 0x3f, 0x17,
	0x6a, 0xcc, 0x4f, 0xc3, 0x51, 0x79, 0x71, 0xea, 0xa3, 0xf2, 0x52, 0xf3, 0x51, 0x59, 0x3b, 0xc0,
	0x2e, 0x7f, 0xd3, 0x07, 0x98, 0xe7, 0x1e, 0x60, 0xf6, 0xf0, 0x79, 0xca, 0x39, 0x7c, 0xea, 0x07,
	0xc1, 0x95, 0xc6, 0x83, 0x80, 0x1f, 0x34, 0x4f, 0x57, 0x0e, 0x1a, 0xf7, 0x58, 0xbf, 0x5a, 0x3d,
	0xd6, 0xfd, 0x91, 0x58, 0xa2, 0xc5, 0xbe, 0x7e, 0x3a, 0xa4, 0xa5, 0x2e, 0x4f, 0x87, 0x7a, 0xa9,
	0xcb, 0xd3, 0xa1, 0xda, 0x42, 0x09, 0x9c, 0x9c, 0x6d, 0xa8, 0x8d, 0x80, 0xfa, 0x9c, 0x5c, 0x16,
	0xa5, 0x2a, 0x8b, 0xe4, 0x40, 0x83, 0x9e, 0x2f, 0x16, 0xd5, 0x0c, 0x86, 0x7d, 0xb5, 0xa4, 0xe3,
	0x08, 0x16, 0xf9, 0x52, 0xe0, 0xe0, 0xfc, 0x1f, 0xb8, 0x00, 0xe7, 0xcf, 0x4e, 0x19, 0x96, 0x71,
	0x51, 0xc6, 0xfd, 0x42, 0xbd, 0xfa, 0x8a, 0xe8, 0x0d, 0xe1, 0xa0, 0xc5, 0x97, 0x23, 0xa0, 0x58,
	0xf1, 0x5c, 0xf6, 0x65, 0x7c, 0x22, 0x03, 0x59, 0x64, 0xa3, 0xbc, 0x2f, 0x77, 0xb3, 0x28, 0x3c,
	0x23, 0x5a, 0xd5, 0xf8, 0x4c, 0x51, 0x2c, 0x75, 0x4a, 0xaf, 0x26, 0x12, 0x57, 0x8f, 0xa6, 0x58,
	0x0e, 0x52, 0x31, 0x62, 0xc7, 0x71, 0x92, 0xc8, 0x68, 0x2b, 0x4b, 0x8b, 0x52, 0xe6, 0xc8, 0x1f,
	0x60, 0x77, 0x1b, 0x9e, 0xa8, 0xa1, 0xd9, 0xd9, 0xbd, 0x0d, 0xbb, 0x72, 0x29, 0x50, 0x7f, 0xd5,
	0xe8, 0x16, 0x65, 0x48, 0x37, 0x01, 0x3a, 0x7f, 0x18, 0x46, 0xcd, 0x60, 0x2a, 0x65, 0x14, 0xc8,
	0x7e, 0x76, 0x22, 0x73, 0x55, 0x79, 0x16, 0x76, 0x44, 0x05, 0xab, 0x66, 0x70, 0x94, 0xc6, 0xe5,
	0x66, 0x56, 0x14, 0x9a, 0x1e, 0x69, 0x18, 0x98, 0x8c, 0xb2, 0x0c, 0xfb, 0xc7, 0x0f, 0xe3, 0x94,
	0x36, 0xa7, 0x45, 0xa8, 0x1e, 0x20, 0x70, 0x27, 0x8c, 0x13, 0xba, 0x76, 0x30, 0x8c, 0x7a, 0x1e,
	0xc9, 0x03, 0x99, 0xf6, 0xa5, 0xaa, 0x8e, 0x1b, 0x95, 0x61, 0x14, 0xcd, 0x20, 0x08, 0x1a, 0x58,
	0x44, 0x9a, 0xc1, 0x50, 0xde, 0x8b, 0xe2, 0x72, 0x21, 0xd3, 0xc8, 0x1d, 0x7c, 0xdc, 0xa9, 0xf5,
	0x07, 0xde, 0x9b, 0x8a, 0x3e, 0x15, 0xc5, 0x5e, 0x1a, 0x97, 0xb0, 0x3f, 0x17, 0x6e, 0x3d, 0x5b,
	0xdd, 0x28, 0xea, 0xd9, 0xed, 0xa2, 0x90, 0x40, 0xa7, 0x4d, 0x69, 0x55, 0x53, 0x8d, 0x39, 0xd4,
	0xbc, 0x38, 0x4d, 0x4d, 0x5d, 0xda, 0x7b, 0x57, 0x88, 0x5c, 0x0e, 0xc3, 0x38, 0x87, 0xba, 0x97,
	0xa6, 0xa8, 0xcb, 0xca, 0xab, 0xb1, 0x2f, 0x86, 0x67, 0xc8, 0x84, 0xd3, 0x25, 0x46, 0xc3, 0x30,
	0xf6, 0x6a, 0x59, 0xdf, 0x93, 0x79, 0x46, 0xbb, 0xd6, 0x22, 0x54, 0x4d, 0xd5, 0x07, 0x78, 0xf8,
	0x14, 0xd6, 0xd4, 0xb0, 0xaa, 0x79, 0x28, 0xcb, 0x40, 0x3e, 0x0e, 0xf3, 0x88, 0xb6, 0xad, 0x45,
	0xa8, 0x2d, 0xd2, 0x0f, 0x87, 0x65, 0x7c, 0x22, 0x23, 0x58, 0x9e, 0xb8, 0x6b, 0x1d, 0x9c, 0x9a,
	0x39, 0x59, 0xf4, 0xc3, 0x21, 0x92, 0x31, 0xda, 0xb9, 0x16, 0xa3, 0xda, 0x90, 0xa7, 0xb2, 0x3f,
	0x2a, 0xa9, 0x8d, 0x67, 0xb0, 0x0d, 0x8e, 0x83, 0x4b, 0x18, 0xf0, 0x0b, 0xf7, 0x64, 0x32, 0x84,
	0x52, 0xcb, 0x50, 0xaa, 0x82, 0x55, 0xbd, 0x1d, 0x84, 0x45, 0xb1, 0x19, 0x0f, 0xe2, 0x12, 0x6e,
	0x22, 0xdd, 0xc0, 0x22, 0xbc, 0x7b, 0xe2, 0x52, 0xa9, 0x4e, 0xe1, 0x83, 0x2c, 0xd7, 0x93, 0x0d,
	0x37, 0x90, 0x86, 0x51, 0x5e, 0x0d, 0x8b, 0x23, 0x33, 0xca, 0xb5, 0x5a, 0xde, 0x1d, 0x71, 0xb1,
	0x9f, 0x25, 0x89, 0xec, 0x97, 0xa6, 0xa1, 0x4f, 0x4e, 0xd1, 0x50, 0xb5, 0x12, 0x5c, 0xc5, 0x14,
	0x2b, 0xb7, 0x33, 0x3c, 0x83, 0x3b, 0xcc, 0x5c, 0x60, 0x60, 0xb5, 0xf7, 0xe1, 0xff, 0x8a, 0xbc,
	0x0d, 0xdb, 0x00, 0xee, 0x32, 0x73, 0x81, 0x8b, 0x54, 0xcc, 0xb3, 0x22, 0x06, 0x77, 0xa4, 0x8c,
	0xf6, 0xc3, 0xfe, 0x31, 0x8c, 0xcd, 0x75, 0x64, 0x9e, 0xab, 0x78, 0x75, 0x66, 0xc1, 0x35, 0xfd,
	0xae, 0x2c, 0x3f, 0xde, 0xd8, 0xde, 0xce, 0xe2, 0xb4, 0xb4, 0x67, 0xd6, 0xa7, 0xf1, 0xcc, 0x1a,
	0x5b, 0x40, 0x71, 0x75, 0xb5, 0x87, 0x8a, 0xd5, 0x47, 0x7e, 0xf6, 0x06, 0xcc, 0xc7, 0x84, 0x12,
	0x8a, 0xfe, 0xf5, 0xb3, 0xb4, 0x8c, 0xd3, 0x51, 0x36, 0x2a, 0x36, 0x8d, 0xb8, 0x80, 0x6e, 0x41,
	0x8d, 0xcf, 0xd4, 0x3b, 0x2b, 0x78, 0x45, 0x6c, 0xf2, 0x08, 0xda, 0x86, 0x3b, 0x52, 0x37, 0x98,
	0x50, 0x42, 0xed, 0x79, 0x18, 0x2e, 0x7e, 0x0a, 0xc3, 0xc5, 0x69, 0x2e, 0xa8, 0x3f, 0x50, 0x23,
	0x8e, 0x17, 0x0e, 0x5c, 0x75, 0x05, 0xdc, 0xa1, 0x96, 0x02, 0x17, 0xa9, 0x46, 0x1c, 0xa7, 0x20,
	0x4e, 0xa3, 0xdb, 0x78, 0x49, 0x82, 0x1b, 0xd5, 0x5c, 0x50, 0xc3, 0x7b, 0x2f, 0x8b, 0xa7, 0xf4,
	0xfd, 0x0c, 0x77, 0x0c, 0x92, 0xe6, 0x17, 0xa0, 0xdd, 0xa6, 0x47, 0xea, 0x0c, 0x95, 0xa9, 0xcc,
	0x0f, 0xcf, 0xe8, 0xaa, 0x45, 0x90, 0x16, 0x43, 0xac, 0x03, 0x04, 0xb3, 0x7c, 0xd3, 0x8a, 0x21,
	0x2c, 0xd6, 0x7b, 0x5d, 0x5c, 0x1d, 0x8c, 0xca, 0x98, 0xe8, 0x3d, 0xb6, 0x8c, 0x1f, 0x83, 0x97,
	0xaf, 0x31, 0x4f, 0x61, 0x6d, 0x84, 0x45, 0xb9, 0xd5, 0xf4, 0x94, 0x6e, 0x63, 0xe3, 0x0b, 0xf8,
	0x5f, 0x15, 0xdf, 0x02, 0xa7, 0x60, 0x9e, 0x21, 0xd9, 0x58, 0x3f, 0x91, 0x69, 0x09, 0xd3, 0xbe,
	0x96, 0x3d, 0x86, 0xb9, 0x24, 0x82, 0x71, 0x4d, 0xcc, 0xe1, 0xd9, 0xb9, 0x11, 0x11, 0x13, 0x6f,
	0x60, 0x75, 0x12, 0x17, 0xb2, 0x9f, 0xa5, 0x51, 0x41, 0x67, 0xa2, 0x06, 0xfd, 0x2f, 0x8a, 0x4f,
	0xd7, 0x9b, 0xbf, 0x1d, 0x45, 0x8a, 0xee, 0x51, 0xc3, 0x57, 0xc5, 0x8c, 0x3a, 0x69, 0x36, 0x34,
	0x73, 0x4b, 0x90, 0xc2, 0xa7, 0xa3, 0xc1, 0xbe, 0xb9, 0x13, 0x10, 0xe4, 0xff, 0x6a, 0x5b, 0xf8,
	0xf5, 0x36, 0xb1, 0xb1, 0xd5, 0x2c, 0x2d, 0x25, 0xb0, 0xdf, 0xaa, 0xfa, 0x91, 0xcc, 0xb3, 0x8d,
	0x35, 0x7d, 0xe5, 0x40, 0x48, 0x1d, 0x37, 0xea, 0xdf, 0x17, 0x47, 0x61, 0x12, 0x97, 0x67, 0xc4,
	0x51, 0x70, 0x94, 0xf7, 0x25, 0xc5, 0x6e, 0xb1, 0x01, 0x80, 0xa3, 0x7b, 0xe1, 0xd6, 0xad, 0x2a,
	0x81, 0x38, 0x7f, 0xd0, 0x02, 0xb7, 0x21, 0xef, 0x8e, 0x98, 0x0d, 0xf1, 0xdb, 0xe1, 0x8c, 0x5f,
	0xb8, 0xf5, 0xe2, 0x39, 0x6d, 0x3a, 0x23, 0x15, 0xe8, 0xca, 0xde, 0x7b, 0x62, 0x2e, 0xd7, 0xd4,
	0x0b, 0xaf, 0x30, 0xcf, 0x8d, 0xbf, 0x8b, 0x28, 0x16, 0x12, 0x4e, 0x2b, 0x5d, 0xc5, 0x3f, 0x12,
	0x9f, 0x1c, 0x37, 0x80, 0x6a, 0xe4, 0x36, 0xc4, 0x6c, 0x1f, 0xc7, 0x91, 0xee, 0xe0, 0x7f, 0xec,
	0x9c, 0x5e, 0x56, 0xc7, 0x3e, 0xd0, 0xf5, 0xfd, 0xbf, 0xd1, 0x11, 0x17, 0x76, 0x76, 0x1f, 0xad,
	0x8c, 0xe2, 0x24, 0x8a, 0xd3, 0x43, 0xd5, 0xfa, 0x75, 0x21, 0xf6, 0x09, 0x34, 0x73, 0xc3, 0x30,
	0x28, 0xd1, 0x28, 0xe3, 0x93, 0xb0, 0x94, 0x11, 0xcc, 0xce, 0x5c, 0x60, 0x11, 0xde, 0xa2, 0x68,
	0x9d, 0xc2, 0x7c, 0x2c, 0x05, 0xad, 0x53, 0x05, 0x9d, 0x11, 0xb7, 0xd4, 0x3a, 0x53, 0xc7, 0x91,
	0x6e, 0xa7, 0x3c, 0x1b, 0x4a, 0xe2, 0x92, 0x1c, 0x9c, 0x22, 0x14, 0x1a, 0x46, 0x8e, 0x72, 0x06,
	0x09, 0x85, 0x83, 0x34, 0x6b, 0x27, 0xa2, 0x1b, 0x0c, 0x41, 0xde, 0x2d, 0xd1, 0x53, 0x8b, 0x13,
	0x39, 0xa4, 0xf3, 0x4e, 0x78, 0x2c, 0xaa, 0x98, 0x0a, 0x33, 0x57, 0xf3, 0x53, 0x9c, 0x34, 0xa6,
	0xb4, 0xb7, 0x2b, 0x2e, 0x15, 0x66, 0xa0, 0xe9, 0x1c, 0x17, 0xd0, 0xc2, 0xcd, 0xa9, 0x26, 0x04,
	0x0e, 0xc0, 0x6a, 0x0b, 0x70, 0xa8, 0x7f, 0x6d, 0x14, 0x0f, 0x57, 0x77, 0x3e, 0xde, 0x58, 0xd3,
	0xec, 0x98, 0xc5, 0xf8, 0xff, 0x69, 0x0b, 0xae, 0xf0, 0x7a, 0xca, 0x74, 0xbf, 0xbc, 0xb7, 0xc4,
	0xbc, 0x1e, 0xa4, 0x82, 0xd6, 0xc5, 0x27, 0xab, 0xdd, 0x60, 0xf3, 0x1c, 0xd8, 0xd2, 0xc8, 0x83,
	0x9e, 0x96, 0xfa, 0xe9, 0x46, 0x44, 0xbb, 0xae, 0x82, 0x55, 0xf7, 0x1c, 0x5d, 0xe9, 0x76, 0x59,
	0xe6, 0x05, 0x6d, 0xbc, 0xda, 0x3d, 0x47, 0x3d, 0x8c, 0xf7, 0x47, 0xa5, 0xd4, 0x4b, 0xdb, 0xad,
	0xe6, 0xff, 0x56, 0x1b, 0xb4, 0x06, 0x9b, 0x59, 0x3f, 0x4c, 0x6e, 0x03, 0x8d, 0x5a, 0x4f, 0xcb,
	0xfc, 0x4c, 0x7d, 0x85, 0xa1, 0x62, 0x71, 0x85, 0x8a, 0xe1, 0x45, 0x05, 0xff, 0xc3, 0xea, 0x69,
	0x13, 0x23, 0x6b, 0x30, 0x95, 0x95, 0xdb, 0x69, 0x5a, 0xb9, 0x45, 0x19, 0xe6, 0x65, 0x69, 0x25,
	0x0f, 0x16, 0xa1, 0x6a, 0xe7, 0x20, 0x82, 0x80, 0xc7, 0x78, 0xaf, 0x66, 0x18, 0x55, 0xbb, 0x54,
	0x47, 0x2e, 0x3c, 0x46, 0x3e, 0xde, 0x22, 0x14, 0x85, 0x8d, 0x64, 0x19, 0xc6, 0x49, 0xb1, 0x3c,
	0x0b, 0x97, 0x44, 0x0d, 0x42, 0xaf, 0x87, 0x43, 0x99, 0xc2, 0xf5, 0x9c, 0x2e, 0xd5, 0x0c, 0xa3,
	0xbe, 0x38, 0x2e, 0x14, 0x9b, 0x25, 0x23, 0x58, 0x7f, 0x73, 0x81, 0x81, 0xed, 0x7a, 0x16, 0xd3,
	0xaf, 0x67, 0x45, 0xeb, 0xd5, 0x47, 0x99, 0x4b, 0xb7, 0x06, 0xfd, 0x3d, 0xf1, 0x89, 0x9d, 0xdd,
	0x47, 0x28, 0xf2, 0xc3, 0x61, 0xff, 0x58, 0xe6, 0x45, 0x9c, 0xa5, 0xce, 0xc0, 0xd3, 0xa6, 0xef,
	0x9a, 0xe3, 0x03, 0x06, 0xee, 0x04, 0x4b, 0xc6, 0x7a, 0x69, 0x58, 0x84, 0xff, 0x15, 0xf1, 0xa9,
	0xe6, 0x66, 0x69, 0xf6, 0xbd, 0xb7, 0x45, 0x37, 0x51, 0xb7, 0x67, 0x5c, 0x94, 0x2f, 0x54, 0x3f,
	0xa2, 0xb9, 0x43, 0x01, 0xd4, 0xf1, 0xbf, 0x47, 0x78, 0x6a, 0xa5, 0x00, 0x2f, 0xba, 0x15, 0x16,
	0xc5, 0x17, 0xb2, 0x38, 0x2d, 0xe0, 0x48, 0x2a, 0x64, 0xce, 0x8e, 0x24, 0x80, 0x3c, 0x4f, 0x74,
	0x99, 0xb8, 0x05, 0xfe, 0x33, 0x81, 0x46, 0xc7, 0x11, 0x68, 0x54, 0x44, 0x21, 0xdd, 0x9a, 0x28,
	0xc4, 0xff, 0xd1, 0x0e, 0xec, 0x34, 0xfb, 0xf2, 0x35, 0x98, 0xd2, 0xda, 0x49, 0xdb, 0x65, 0x27,
	0xed, 0x35, 0x31, 0x87, 0x8c, 0x33, 0x6d, 0xa2, 0x6e, 0x60, 0x60, 0xb5, 0x12, 0xf0, 0x3f, 0x08,
	0x3e, 0xb0, 0x37, 0x0c, 0xe3, 0xad, 0x8b, 0x25, 0xc5, 0x51, 0x6f, 0xa4, 0x71, 0x19, 0x87, 0x65,
	0x96, 0xd3, 0x19, 0xf4, 0xe9, 0xda, 0xf6, 0xca, 0x07, 0x67, 0x8a, 0x60, 0x50, 0x7f, 0x02, 0xb7,
	0x96, 0x77, 0x5b, 0x2c, 0x7c, 0x77, 0x16, 0xa7, 0x5b, 0x52, 0x9d, 0xc6, 0xc5, 0x72, 0x0f, 0x46,
	0xbd, 0xd6, 0x48, 0x65, 0x48, 0x03, 0x5e, 0xc7, 0x5b, 0x15, 0x8b, 0x03, 0xf8, 0xde, 0x03, 0x99,
	0x46, 0x32, 0x27, 0x79, 0xda, 0xb9, 0x1d, 0x71, 0x2a, 0x79, 0x0f, 0x84, 0xa7, 0xda, 0x5c, 0xc3,
	0x8b, 0xa2, 0xee, 0xce, 0xec, 0x74, 0xdd, 0x69, 0xa8, 0xea, 0xff, 0xd4, 0xbc, 0x78, 0xa6, 0xb2,
	0x5e, 0xc6, 0xd2, 0x8d, 0xee, 0x13, 0xd0, 0x8d, 0x2b, 0xa2, 0x57, 0x94, 0xe1, 0xa1, 0x24, 0x92,
	0x81, 0x80, 0x16, 0xe8, 0x75, 0xad, 0x40, 0xcf, 0xa1, 0x1f, 0xbd, 0xc9, 0xf4, 0x63, 0x66, 0x32,
	0xfd, 0x98, 0xad, 0xd2, 0x8f, 0x1b, 0x62, 0xa1, 0x40, 0x39, 0x69, 0x22, 0x37, 0xd6, 0x80, 0x4c,
	0xf4, 0x02, 0x8e, 0x52, 0xf5, 0x65, 0x1a, 0xd1, 0xf3, 0x79, 0xd4, 0xa1, 0x18, 0x84, 0x11, 0x0b,
	0xae, 0x85, 0x65, 0xb8, 0xb1, 0x46, 0x82, 0x64, 0x8e, 0xe2, 0x14, 0x6a, 0xe1, 0x46, 0x47, 0xf1,
	0x80, 0x9a, 0x42, 0x19, 0x2a, 0xb3, 0x38, 0x3d, 0x95, 0x71, 0xa9, 0xda, 0x52, 0x8d, 0xaa, 0x7d,
	0x4a, 0x08, 0x3c, 0x93, 0x1f, 0x3d, 0x48, 0x22, 0xb8, 0xe6, 0x2f, 0x05, 0xf3, 0x88, 0x79, 0x90,
	0xf0, 0x6d, 0xb2, 0x46, 0xe2, 0x37, 0x03, 0x83, 0xca, 0x30, 0xcc, 0x65, 0x5a, 0x6e, 0xac, 0xc1,
	0x4d, 0xbd, 0x1b, 0x18, 0x18, 0x65, 0x87, 0x71, 0x12, 0xe5, 0x52, 0xd1, 0xa9, 0xcb, 0xf0, 0x1d,
	0x0c, 0xe3, 0x52, 0x2a, 0xaf, 0x42, 0xa9, 0xbc, 0xf7, 0x40, 0x16, 0x93, 0x97, 0x3b, 0xfd, 0x6c,
	0x88, 0x7a, 0xc4, 0xb1, 0x42, 0xe2, 0x5b, 0x24, 0x24, 0x66, 0x15, 0xbc, 0xb7, 0xc4, 0x9c, 0x4c,
	0x23, 0xac, 0x7c, 0x65, 0x9a, 0xca, 0xa6, 0xb8, 0x62, 0x6b, 0xb2, 0x3c, 0xc6, 0x35, 0xbb, 0xab,
	0x56, 0x21, 0x5e, 0xe7, 0x5d, 0x24, 0xaa, 0x6b, 0xfa, 0x27, 0xb7, 0x89, 0xee, 0x82, 0xc8, 0xf1,
	0x2a, 0x7c, 0x63, 0x0d, 0xaf, 0x46, 0x02, 0x19, 0x66, 0x28, 0xf5, 0xcc, 0x8d, 0x8e, 0x5a, 0xd4,
	0x16, 0xa3, 0x46, 0xe2, 0x20, 0xcb, 0x07, 0x28, 0x44, 0xc6, 0x2b, 0xbd, 0x45, 0x78, 0x1f, 0x0a,
	0x31, 0x30, 0x04, 0x0d, 0xae, 0xf3, 0x0d, 0xc7, 0x78, 0x95, 0xf0, 0x05, 0xac, 0x8e, 0xda, 0x1e,
	0x47, 0x71, 0x09, 0x97, 0xfc, 0xa5, 0x40, 0xfd, 0x55, 0x5c, 0xc4, 0xbd, 0x2c, 0x89, 0xee, 0xd9,
	0x5e, 0x7d, 0x12, 0x7a, 0x55, 0xc1, 0xaa, 0xdb, 0x6a, 0x19, 0xe6, 0x87, 0xb2, 0x7c, 0xa8, 0x56,
	0x27, 0xec, 0x60, 0x18, 0x92, 0x67, 0x41, 0xb2, 0xd9, 0xf8, 0xcc, 0x7b, 0x5b, 0x2c, 0x57, 0xf1,
	0x9b, 0x7a, 0xfd, 0x7c, 0x0a, 0xd6, 0xc8, 0xd8, 0xe7, 0x6a, 0x54, 0x57, 0xf3, 0xac, 0x28, 0x76,
	0x86, 0xb2, 0x1f, 0x87, 0x89, 0xda, 0x30, 0x70, 0x8f, 0x5f, 0x0a, 0x6a, 0x78, 0xb5, 0x49, 0xfa,
	0x59, 0x51, 0xee, 0x94, 0x21, 0xdd, 0xda, 0x35, 0xa8, 0x98, 0xd7, 0x41, 0xd8, 0xa7, 0xfb, 0xd9,
	0x46, 0x04, 0xb7, 0xf2, 0x4e, 0xe0, 0xe0, 0xfc, 0xef, 0xad, 0xb2, 0x35, 0x86, 0x39, 0x5b, 0xd5,
	0x24, 0x68, 0xd3, 0x1e, 0x84, 0x9f, 0xa9, 0x8d, 0x77, 0x9d, 0x1f, 0x0a, 0x58, 0x35, 0x35, 0xe5,
	0x3b, 0x70, 0x6d, 0x83, 0x4b, 0x0f, 0x9e, 0x2e, 0x0c, 0xe3, 0xbf, 0x57, 0x23, 0x8f, 0xe6, 0xfd,
	0xbe, 0x58, 0x0c, 0xf9, 0xaa, 0x6a, 0xc3, 0xaa, 0x72, 0x70, 0xfe, 0x77, 0x42, 0xef, 0x79, 0x75,
	0x7d, 0x80, 0xaf, 0x35, 0xf4, 0xfe, 0xf9, 0x49, 0xc7, 0x78, 0x53, 0xf7, 0xfd, 0x63, 0x71, 0x19,
	0x64, 0xe0, 0x49, 0x96, 0x9e, 0x99, 0x8e, 0xdd, 0x14, 0x17, 0xb3, 0xc7, 0x29, 0x22, 0xa9, 0x6f,
	0x2d, 0xe8, 0x5b, 0x15, 0x0d, 0x42, 0xc6, 0xa3, 0x30, 0x97, 0x4e, 0x59, 0xfc, 0x8e, 0xfa, 0x03,
	0xff, 0x27, 0x66, 0x80, 0x71, 0x80, 0x13, 0xa4, 0x90, 0xe6, 0x75, 0x8a, 0x08, 0x8e, 0xf2, 0x70,
	0x3f, 0x91, 0xc4, 0x5d, 0x6a, 0x50, 0x75, 0xa4, 0x62, 0xb2, 0x41, 0x23, 0x5c, 0x45, 0xa3, 0x2c,
	0x3d, 0xb7, 0x37, 0x4f, 0x90, 0xa5, 0x23, 0xac, 0x76, 0x5d, 0x5c, 0xac, 0x8c, 0xf2, 0x34, 0x4e,
	0x0f, 0xe1, 0xe8, 0x98, 0x0b, 0x2c, 0x02, 0xa8, 0x57, 0x98, 0x92, 0x50, 0x17, 0x4e, 0x90, 0xb9,
	0x80, 0x61, 0xf0, 0x82, 0x04, 0x45, 0x77, 0x86, 0x52, 0x46, 0x74, 0xf7, 0x71, 0x70, 0xea, 0x0b,
	0xf6, 0xb3, 0xac, 0xec, 0x87, 0x43, 0x12, 0x14, 0x6b, 0x90, 0x24, 0x86, 0x56, 0x05, 0x87, 0x52,
	0x62, 0x07, 0x07, 0xa6, 0x14, 0xe1, 0x70, 0x6d, 0x94, 0x23, 0x5d, 0x40, 0x5b, 0x15, 0x8e, 0x52,
	0xbb, 0x45, 0xbf, 0xcf, 0xb4, 0x84, 0xa7, 0x49, 0x0d, 0x0f, 0x23, 0x91, 0x84, 0xfd, 0xe3, 0x6c,
	0x54, 0x02, 0xaf, 0x39, 0x17, 0x18, 0x58, 0x51, 0x03, 0xf8, 0x6f, 0x5b, 0x41, 0x4b, 0x95, 0x0a,
	0x16, 0x2e, 0x7c, 0x0a, 0x63, 0xfa, 0x84, 0x72, 0x63, 0x17, 0xa9, 0xbe, 0xad, 0x38, 0xc9, 0xb7,
	0xc3, 0x51, 0xc1, 0xf5, 0x3a, 0x0e, 0x4e, 0xf5, 0x26, 0x92, 0x07, 0x1f, 0x87, 0xc9, 0x08, 0x55,
	0x3a, 0x4b, 0x81, 0x81, 0x2b, 0xd4, 0xf2, 0x52, 0x8d, 0x5a, 0x5e, 0x57, 0xf4, 0xf0, 0x74, 0x8d,
	0x96, 0x06, 0xca, 0x78, 0x19, 0x46, 0x3d, 0xbf, 0x2f, 0x1f, 0xeb, 0x81, 0xf7, 0x70, 0xe6, 0x2c,
	0xc6, 0xbb, 0x20, 0xda, 0x47, 0x43, 0x38, 0x51, 0xba, 0x41, 0xfb, 0x68, 0x08, 0x5f, 0x8f, 0xa3,
	0xb5, 0x4e, 0xdb, 0x95, 0xf4, 0x32, 0x2e, 0x56, 0x51, 0xd1, 0x32, 0x1e, 0xc2, 0x69, 0x30, 0x17,
	0xa8, 0xbf, 0x8a, 0x5d, 0xbd, 0x37, 0x34, 0xf2, 0xdc, 0x6e, 0x40, 0x90, 0x16, 0x8b, 0x3c, 0x0c,
	0xcf, 0x0c, 0xc1, 0x9f, 0x0b, 0x38, 0x4a, 0x8d, 0x91, 0x02, 0x41, 0x81, 0xbd, 0x1a, 0x0e, 0x97,
	0x97, 0xa1, 0x88, 0x83, 0xf3, 0xff, 0x51, 0x0b, 0x35, 0x97, 0xec, 0x42, 0xab, 0xd8, 0x9f, 0x7e,
	0x58, 0x1c, 0x7d, 0x5e, 0xeb, 0x54, 0x00, 0xd0, 0xd8, 0x5b, 0xb4, 0x0b, 0x10, 0xd0, 0xd8, 0x57,
	0x48, 0x5b, 0x82, 0x80, 0xc6, 0xbe, 0x4a, 0xcc, 0x12, 0x02, 0x1a, 0xfb, 0x1a, 0xb1, 0x4a, 0x08,
	0x00, 0x85, 0x55, 0x2f, 0x78, 0xf9, 0x65, 0xe2, 0x91, 0x34, 0xa8, 0xcb, 0xbf, 0x4e, 0xcc, 0x11,
	0x02, 0x6a, 0x24, 0xd5, 0x9f, 0xf5, 0xd3, 0xa1, 0x8c, 0x62, 0x58, 0x20, 0xb8, 0xae, 0x2b, 0x58,
	0xff, 0xdf, 0x6c, 0x89, 0xc5, 0x9d, 0xdd, 0x47, 0x5b, 0x61, 0x7e, 0x8c, 0x9f, 0x55, 0x57, 0xc8,
	0xf2, 0x9b, 0x7e, 0xfb, 0x89, 0x6e, 0xfa, 0x37, 0xc4, 0x02, 0x29, 0x91, 0x98, 0xaa, 0x88, 0xa3,
	0xd4, 0xdb, 0x06, 0xe1, 0xa9, 0xe6, 0x16, 0x07, 0xe1, 0xa9, 0xff, 0x9f, 0xb4, 0x80, 0xde, 0x61,
	0x87, 0xcc, 0x60, 0xbf, 0x23, 0x16, 0x48, 0xb1, 0xa3, 0xaa, 0x12, 0x2d, 0xfd, 0x44, 0xb5, 0x1b,
	0xe6, 0x2b, 0x02, 0x5e, 0xda, 0x7b, 0x4d, 0x7d, 0x00, 0xfc, 0x8d, 0x80, 0xf2, 0x4d, 0xac, 0x69,
	0x8a, 0x7a, 0xdf, 0x2e, 0xba, 0x85, 0x4c, 0xa3, 0xe5, 0xce, 0x79, 0x55, 0xa0, 0x98, 0x7f, 0x5f,
	0x08, 0x62, 0xfa, 0x48, 0x4c, 0xa7, 0x38, 0x3e, 0x73, 0x1d, 0x27, 0x48, 0xcd, 0xa3, 0xfa, 0x97,
	0x8e, 0x06, 0x5a, 0xa4, 0x48, 0xa0, 0xda, 0x0b, 0x9b, 0x27, 0x34, 0x46, 0xed, 0xcd, 0x13, 0xff,
	0xfb, 0x71, 0xcd, 0x71, 0x2e, 0xd2, 0xfb, 0x76, 0xcd, 0x72, 0xe2, 0x00, 0x3c, 0xd3, 0xc4, 0x72,
	0x32, 0x6e, 0xf3, 0x36, 0x90, 0xb6, 0xb0, 0x1f, 0x97, 0xa0, 0x74, 0xa5, 0xd9, 0x3b, 0x87, 0xfb,
	0x72, 0xaa, 0xf8, 0x91, 0xe9, 0xc4, 0xc7, 0x8a, 0x2f, 0x98, 0xf4, 0x69, 0x6f, 0xe1, 0xa7, 0xdd,
	0x1f, 0xe9, 0x17, 0x7d, 0x7a, 0xfc, 0x8b, 0xd0, 0xbe, 0x43, 0x97, 0xf7, 0xbf, 0x20, 0xae, 0xf0,
	0xb7, 0x98, 0xef, 0xbd, 0xe5, 0x7e, 0x6f, 0x23, 0x8b, 0xad, 0xfb, 0x45, 0x1f, 0xed, 0xff, 0x54,
	0x0b, 0x64, 0x73, 0xbb, 0x32, 0x1c, 0xac, 0x66, 0xe9, 0x01, 0xf5, 0xb8, 0x9f, 0xa5, 0x07, 0xb6,
	0xc7, 0x08, 0x81, 0xa9, 0x41, 0x96, 0x1e, 0xdc, 0xe7, 0xa6, 0x06, 0x04, 0xab, 0x55, 0x0f, 0x8a,
	0x42, 0x45, 0x35, 0x3a, 0xd3, 0x28, 0xcd, 0x74, 0xe9, 0x0a, 0xd1, 0xec, 0x56, 0x89, 0xa6, 0xbf,
	0x05, 0x47, 0xac, 0xee, 0x9f, 0x66, 0x16, 0xde, 0xc0, 0xbe, 0x30, 0x56, 0xa1, 0x26, 0x86, 0x62,
	0x9f, 0x14, 0x98, 0xc2, 0xfe, 0x0a, 0xf0, 0x1f, 0x0f, 0xf5, 0x95, 0x85, 0xc9, 0x26, 0x2e, 0x88,
	0xb6, 0xd9, 0xc9, 0x6d, 0x5c, 0x7b, 0xc4, 0xd4, 0xd3, 0x6d, 0x4e, 0x83, 0xfe, 0x9e, 0xb8, 0xd6,
	0xd0, 0x86, 0xed, 0x1a, 0x17, 0x44, 0xd4, 0xf8, 0xaf, 0x86, 0x57, 0x93, 0x14, 0xe2, 0xd7, 0x5a,
	0x30, 0xaf, 0xa6, 0x80, 0xb1, 0xfa, 0x78, 0xc5, 0xf4, 0x6c, 0xca, 0xf6, 0x54, 0xf7, 0xdf, 0x17,
	0x33, 0x45, 0x3c, 0x18, 0x26, 0x9a, 0x0a, 0xbd, 0x30, 0xb6, 0xe2, 0x0e, 0x14, 0xd3, 0xd6, 0x02,
	0x54, 0x4b, 0x5d, 0x63, 0x90, 0xad, 0x4a, 0xec, 0x9c, 0xd6, 0xf6, 0xc2, 0x5e, 0xac, 0x16, 0xa7,
	0x16, 0xc0, 0xb1, 0x0a, 0xfe, 0x17, 0xc5, 0x72, 0xed, 0x5b, 0xf4, 0x08, 0xbd, 0xe6, 0x8c, 0xd0,
	0x73, 0x63, 0x3b, 0xa6, 0x07, 0x80, 0xc6, 0xe7, 0x7f, 0xe9, 0x81, 0x68, 0xa9, 0xb9, 0xdf, 0xcd,
	0xa6, 0x31, 0x63, 0xa5, 0x24, 0x57, 0xc5, 0x4c, 0xa9, 0xee, 0xb4, 0x11, 0x7c, 0x59, 0x2f, 0x20,
	0xc8, 0x7b, 0x47, 0xcc, 0xab, 0x9b, 0x25, 0xb0, 0x96, 0x24, 0x19, 0x39, 0xc7, 0xc0, 0xc7, 0x96,
	0x57, 0x04, 0xfc, 0xd0, 0xf2, 0xb4, 0x20, 0x13, 0xe9, 0x06, 0x1c, 0x05, 0x5b, 0x4b, 0xd1, 0x8a,
	0xb5, 0xe5, 0x19, 0x58, 0xe8, 0x04, 0x31, 0xcb, 0xa8, 0x59, 0xc7, 0x32, 0xea, 0x25, 0xe1, 0x69,
	0x9b, 0x1c, 0xb4, 0xb5, 0x60, 0x3c, 0x57, 0xc3, 0x13, 0x30, 0x51, 0x05, 0xbd, 0xa2, 0xb9, 0xb7,
	0x20, 0xf3, 0x55, 0xc1, 0xc2, 0x3d, 0x23, 0xce, 0xc3, 0x7e, 0x22, 0x77, 0x4a, 0x6d, 0x26, 0xdc,
	0x0b, 0x1c, 0x1c, 0x70, 0x43, 0xea, 0x8f, 0xe6, 0x2d, 0x16, 0x88, 0x1b, 0x62, 0x38, 0xb5, 0x48,
	0xb2, 0x7e, 0x7f, 0x34, 0x3c, 0x03, 0x83, 0x94, 0xc5, 0xe6, 0xf1, 0x7a, 0x60, 0x4a, 0xc0, 0x22,
	0xb1, 0x15, 0xe0, 0xb3, 0x8f, 0xe3, 0x74, 0x23, 0x02, 0x7e, 0x4c, 0x7d, 0x36, 0x40, 0x6a, 0x20,
	0xd1, 0xf0, 0x0b, 0x75, 0x93, 0x78, 0xb1, 0xe7, 0x28, 0x62, 0x85, 0x2e, 0x1a, 0x56, 0xe8, 0x92,
	0xe8, 0x44, 0x71, 0x44, 0x37, 0x79, 0xf5, 0xd7, 0x7b, 0x49, 0x74, 0x72, 0xd2, 0xa4, 0x8f, 0x39,
	0x82, 0xef, 0x65, 0xa3, 0x02, 0x48, 0xa1, 0x2a, 0xa8, 0x5a, 0x48, 0xe8, 0x3a, 0xdf, 0x0d, 0xd4,
	0x5f, 0x34, 0x37, 0x0b, 0x19, 0x87, 0xfa, 0x94, 0x36, 0x37, 0x63, 0x48, 0xcf, 0x13, 0xdd, 0x8d,
	0xe2, 0xc1, 0x31, 0xb0, 0x5e, 0x73, 0x01, 0xfc, 0x57, 0x4c, 0x06, 0x30, 0x43, 0xc4, 0x72, 0x21,
	0xa0, 0xbe, 0x76, 0x50, 0x94, 0x9b, 0x64, 0xfe, 0xd2, 0x0d, 0x08, 0xd2, 0xc6, 0x4b, 0xcf, 0x18,
	0xe3, 0x25, 0xff, 0x43, 0xc3, 0x3f, 0xe9, 0x3e, 0xaa, 0xe3, 0x95, 0xed, 0x99, 0x49, 0xc7, 0x2b,
	0xec, 0x95, 0xef, 0x6b, 0xbb, 0x34, 0x0a, 0xef, 0xd3, 0x8f, 0xb6, 0xe2, 0x54, 0x92, 0x20, 0x4b,
	0xb5, 0x0e, 0x37, 0x62, 0x12, 0x80, 0x6b, 0x18, 0xac, 0x7d, 0xd4, 0x7f, 0xab, 0x1b, 0x56, 0x9b,
	0xa7, 0x15, 0x54, 0xb0, 0x6a, 0x7d, 0xac, 0xa2, 0x3a, 0x1c, 0xef, 0x11, 0x78, 0x4b, 0x71, 0x70,
	0x6a, 0x08, 0x55, 0xad, 0x4d, 0x79, 0x80, 0x8a, 0x31, 0xd8, 0x52, 0xad, 0xc0, 0x45, 0xaa, 0xfb,
	0xcc, 0x76, 0x12, 0x9e, 0xc9, 0x5c, 0x9d, 0xf3, 0xa8, 0xaf, 0xb1, 0x08, 0x35, 0xc0, 0x6a, 0xb4,
	0xe9, 0x9e, 0x02, 0xff, 0x55, 0xbb, 0x81, 0x0c, 0x13, 0xdb, 0xee, 0x2c, 0xb6, 0xeb, 0x20, 0xfd,
	0x07, 0x64, 0x86, 0xa8, 0x6e, 0x6c, 0xab, 0xe1, 0xb0, 0x1c, 0xe5, 0xe6, 0x44, 0x2e, 0x64, 0x6e,
	0x44, 0xd0, 0x04, 0xe1, 0xaa, 0xcb, 0xa2, 0x51, 0x5f, 0xb2, 0x8b, 0x19, 0x47, 0xf9, 0xff, 0xb0,
	0x23, 0x9e, 0x6d, 0x18, 0x55, 0x7c, 0x83, 0x6a, 0x7a, 0x05, 0x6e, 0x3e, 0xea, 0x45, 0x7b, 0x05,
	0xd9, 0x0f, 0x35, 0x5a, 0x68, 0xb9, 0x3d, 0x0a, 0x78, 0xa5, 0xf3, 0x84, 0xbb, 0xa3, 0x61, 0xa4,
	0xed, 0xce, 0x90, 0xfb, 0x61, 0x18, 0xef, 0x43, 0x21, 0xe0, 0x96, 0x1a, 0xc1, 0xeb, 0xbb, 0xcd,
	0x86, 0xa3, 0xb5, 0xd7, 0xb3, 0x3a, 0x96, 0x87, 0xe8, 0x4d, 0x2f, 0xa6, 0x7b, 0x4b, 0xcc, 0x46,
	0x78, 0x05, 0x1e, 0x27, 0xc3, 0xad, 0xdc, 0x90, 0x03, 0x5d, 0x5e, 0x5d, 0x04, 0x99, 0x09, 0xd2,
	0x1e, 0xbc, 0x19, 0x6f, 0x9c, 0x35, 0xbc, 0x22, 0x86, 0x0c, 0x47, 0x4d, 0x02, 0x31, 0x9c, 0x0b,
	0x1a, 0x9e, 0xa8, 0xcb, 0x36, 0xf4, 0x6f, 0xcf, 0x8e, 0x18, 0x52, 0xc3, 0x2a, 0xda, 0x7f, 0x05,
	0x54, 0xa1, 0xd5, 0x69, 0xbd, 0x9f, 0xed, 0xe1, 0xde, 0xbb, 0x22, 0x7a, 0xf0, 0x1f, 0xe6, 0xb3,
	0x17, 0x20, 0xe0, 0xff, 0xc5, 0x96, 0x78, 0xae, 0xa1, 0xd6, 0x8a, 0x54, 0xb4, 0x3b, 0xce, 0x52,
	0x19, 0x91, 0xa2, 0x13, 0x05, 0x92, 0x86, 0x55, 0xd1, 0xec, 0x4d, 0x44, 0x72, 0x2a, 0x1a, 0xef,
	0xf6, 0xf4, 0xe3, 0xed, 0x48, 0xdd, 0x3a, 0x15, 0xa9, 0x9b, 0xff, 0xb0, 0xb1, 0x5b, 0x4c, 0xef,
	0x5f, 0x61, 0x15, 0xa7, 0x7d, 0xad, 0xff, 0xef, 0x74, 0x1a, 0x69, 0xca, 0x6a, 0x5c, 0x6a, 0xe1,
	0xb8, 0x59, 0xb7, 0xad, 0xca, 0xba, 0x05, 0x9b, 0xdc, 0xf0, 0x50, 0x5a, 0x5a, 0xda, 0xd6, 0x36,
	0xb9, 0x1c, 0xeb, 0xbd, 0x28, 0x2e, 0xd3, 0xca, 0xd8, 0xab, 0x2e, 0xf3, 0xfa, 0x03, 0xbe, 0xee,
	0xba, 0x4f, 0xb8, 0xee, 0xde, 0x14, 0x73, 0xe9, 0xb0, 0xbf, 0x37, 0xf5, 0x4a, 0x37, 0xa5, 0xd5,
	0x2a, 0x3c, 0x0c, 0x73, 0x3c, 0x8a, 0xc2, 0x61, 0x98, 0xc4, 0xfb, 0x31, 0xd9, 0x02, 0x77, 0x83,
	0x86, 0x27, 0x56, 0xee, 0x3f, 0xcb, 0xe5, 0xfe, 0x2f, 0x88, 0x0b, 0x71, 0xa1, 0x2f, 0xcc, 0x60,
	0x9f, 0x8b, 0xeb, 0xb8, 0x82, 0x55, 0xfb, 0x83, 0x8c, 0x24, 0xb5, 0x00, 0x10, 0x8f, 0xf4, 0x4e,
	0x50, 0xc3, 0xfb, 0x5f, 0x11, 0xd7, 0x9b, 0x26, 0x9e, 0x8c, 0x54, 0x50, 0x7b, 0x6b, 0x06, 0xac,
	0xf5, 0x64, 0x03, 0xe6, 0xff, 0x50, 0x4b, 0x7c, 0xb6, 0xa1, 0xf5, 0xbd, 0x34, 0x92, 0xf9, 0x61,
	0x9e, 0x8d, 0xd2, 0x68, 0x3b, 0x4c, 0xc2, 0x3e, 0xec, 0x97, 0x1b, 0x62, 0xa1, 0x9f, 0xa5, 0x65,
	0x18, 0xa7, 0x44, 0x05, 0x81, 0x0f, 0x62, 0x28, 0x58, 0x2b, 0xfa, 0x9e, 0xab, 0x69, 0x9c, 0xbe,
	0xe4, 0xba, 0xb6, 0xb5, 0x9d, 0xaa, 0x6d, 0xad, 0xff, 0x21, 0x58, 0x6c, 0xaa, 0x4f, 0xba, 0x9d,
	0xf7, 0x8f, 0x8c, 0x5e, 0xd1, 0x70, 0x3c, 0xb4, 0xf6, 0x0c, 0xaf, 0x43, 0x8c, 0x61, 0xdb, 0x30,
	0x86, 0xfe, 0xdf, 0x6d, 0x03, 0xa3, 0xad, 0x9a, 0x70, 0x78, 0x93, 0x06, 0x1e, 0x92, 0xb8, 0x82,
	0xb6, 0xe5, 0x0a, 0x40, 0x98, 0xa2, 0xd9, 0x46, 0xf5, 0x57, 0x6d, 0xc7, 0x8f, 0xe2, 0x24, 0x41,
	0x99, 0x10, 0x69, 0x7c, 0x0d, 0x42, 0x3d, 0xbd, 0x97, 0x25, 0x11, 0x3e, 0x25, 0x7d, 0x8e, 0x41,
	0x80, 0x20, 0x26, 0x4b, 0xa2, 0x5d, 0xed, 0x34, 0x40, 0x90, 0xae, 0x85, 0x27, 0xeb, 0xac, 0xad,
	0x85, 0xc7, 0xea, 0x15, 0xd1, 0x1b, 0xc1, 0x35, 0x0c, 0x15, 0xbd, 0x08, 0x78, 0xab, 0x5a, 0xf3,
	0x77, 0x27, 0x09, 0x0f, 0xc9, 0xca, 0xe0, 0x33, 0xcd, 0xe2, 0xf6, 0xd5, 0x51, 0x51, 0x66, 0x03,
	0x55, 0x0e, 0xe8, 0xbf, 0xad, 0x06, 0xea, 0xc3, 0x9d, 0xa3, 0x2c, 0x2f, 0x99, 0x9d, 0x35, 0xc3,
	0xa8, 0xcf, 0x0f, 0x49, 0xe9, 0xdb, 0x0d, 0xd4, 0x5f, 0x7f, 0x0b, 0x06, 0x73, 0x67, 0x15, 0xc6,
	0xf3, 0x61, 0x98, 0x4f, 0xc9, 0xe5, 0xdb, 0x0a, 0x9a, 0x33, 0x44, 0xce, 0xe5, 0x97, 0x5a, 0x95,
	0xf6, 0xd8, 0xe4, 0xf4, 0xcd, 0x9d, 0x54, 0xfd, 0xb5, 0x5b, 0xab, 0x8d, 0x74, 0x19, 0xb7, 0xd6,
	0x75, 0x21, 0x36, 0x6b, 0x0a, 0x50, 0x8b, 0x51, 0x5b, 0x6f, 0xc7, 0xa5, 0x45, 0xe4, 0x1f, 0xe0,
	0x62, 0x15, 0x7f, 0xb3, 0xc3, 0xf9, 0x5f, 0x9c, 0x3b, 0x07, 0xa7, 0xfa, 0xb4, 0x9e, 0xa2, 0x08,
	0x75, 0x2e, 0x50, 0x7f, 0xfd, 0x9f, 0xe8, 0xa0, 0x21, 0x33, 0xf6, 0x9d, 0x4e, 0x0f, 0xec, 0x65,
	0x8b, 0xf7, 0xb2, 0xca, 0x5d, 0xb7, 0x1b, 0xb8, 0xeb, 0x3a, 0xd5, 0xec, 0x34, 0x52, 0x4d, 0xbb,
	0xfa, 0xb5, 0x26, 0xd1, 0xc0, 0x6a, 0x81, 0xa9, 0xb5, 0x48, 0x92, 0xe0, 0x6e, 0x40, 0x90, 0x5e,
	0x78, 0xa4, 0x76, 0xa5, 0x85, 0x27, 0x73, 0x75, 0xeb, 0xc5, 0x7f, 0x9f, 0xd7, 0xbe, 0x2a, 0x04,
	0xda, 0x27, 0xb7, 0xe8, 0x02, 0xa2, 0x41, 0xfb, 0xe4, 0x15, 0x3a, 0x60, 0x35, 0xe8, 0xbd, 0x25,
	0x66, 0x90, 0xdd, 0x5f, 0x16, 0xcd, 0xab, 0xa0, 0xb6, 0x07, 0x03, 0xaa, 0xa0, 0x77, 0x15, 0x32,
	0x85, 0x0b, 0x76, 0x57, 0x21, 0x53, 0x48, 0xfb, 0x03, 0x9f, 0x2e, 0xda, 0xfd, 0x81, 0x4f, 0x69,
	0x5a, 0x96, 0xec, 0xb4, 0xfc, 0xf2, 0x8c, 0x7b, 0x77, 0x44, 0xf2, 0xa5, 0x97, 0xd6, 0x47, 0x62,
	0x11, 0xd5, 0x94, 0x8f, 0x52, 0xc5, 0x6f, 0x13, 0x71, 0xbc, 0x39, 0xf6, 0x62, 0x5a, 0x61, 0x10,
	0x82, 0x05, 0xac, 0x7d, 0x5f, 0x55, 0xf6, 0xee, 0x09, 0x02, 0x1f, 0x0d, 0xe2, 0x54, 0xdf, 0xbe,
	0x3f, 0x7b, 0x5e, 0x5b, 0xc4, 0x99, 0x07, 0x02, 0xeb, 0x2a, 0xd0, 0xbb, 0x2f, 0x96, 0xa8, 0xa5,
	0x3e, 0xb0, 0x6c, 0x74, 0x0b, 0xff, 0xd6, 0xf3, 0xda, 0x32, 0xfc, 0x68, 0x40, 0x9f, 0x85, 0x08,
	0xef, 0xab, 0xc2, 0x8b, 0x6a, 0x4c, 0x0a, 0x1d, 0x9d, 0x2f, 0x9d, 0xd7, 0xa8, 0xcb, 0xd7, 0xa8,
	0xe3, 0x58, 0xa1, 0x19, 0x96, 0x35, 0xcf, 0x98, 0x0d, 0x3a, 0x5d, 0xcf, 0x6d, 0xde, 0xe5, 0x4f,
	0x74, 0xf3, 0x0c, 0xcb, 0xc6, 0x75, 0x35, 0x36, 0xde, 0x37, 0xe7, 0x8e, 0x2b, 0x1d, 0x7d, 0x7a,
	0x5c, 0x15, 0xe8, 0xed, 0x8a, 0x8b, 0x7a, 0x86, 0xe8, 0x70, 0x84, 0xb5, 0xbe, 0x70, 0xeb, 0xdb,
	0xce, 0xed, 0xa5, 0x3d, 0x4c, 0x83, 0x0b, 0xd4, 0x45, 0x42, 0x79, 0x5f, 0x36, 0xb3, 0x35, 0x84,
	0x93, 0x90, 0xcc, 0xc3, 0x5e, 0x3d, 0xaf, 0xcd, 0xa6, 0x23, 0x54, 0x4f, 0x1c, 0x22, 0xbc, 0x2f,
	0x88, 0xcb, 0x66, 0x49, 0xc1, 0x0d, 0xfd, 0x71, 0x98, 0x13, 0x81, 0xaf, 0xdd, 0xb6, 0xb7, 0xb0,
	0x04, 0x12, 0x9f, 0xe0, 0x92, 0x5e, 0x4e, 0xba, 0x9a, 0xf7, 0xaa, 0x98, 0x25, 0xe2, 0x44, 0xf6,
	0x3e, 0xd7, 0x9a, 0xf6, 0x24, 0x55, 0xd7, 0x45, 0xfd, 0xff, 0xb3, 0x22, 0x9b, 0x32, 0x26, 0x11,
	0x77, 0xc5, 0x22, 0x89, 0xc5, 0x50, 0x66, 0xf2, 0x04, 0x52, 0x2a, 0xa7, 0xa2, 0x9a, 0x5e, 0x94,
	0x3c, 0x61, 0x3b, 0x4f, 0x26, 0xb4, 0xe2, 0x55, 0xed, 0x42, 0xc1, 0x96, 0x3a, 0xe7, 0xb4, 0xe4,
	0x90, 0x82, 0x80, 0x57, 0xf5, 0xbf, 0xec, 0x0a, 0xb1, 0x50, 0xe3, 0x4b, 0xc7, 0xdb, 0x7b, 0x62,
	0x2e, 0x0a, 0xcb, 0x70, 0x73, 0x1a, 0x41, 0x96, 0xd1, 0x54, 0x9a, 0x2a, 0xbe, 0x0f, 0x62, 0xd7,
	0x40, 0x16, 0x32, 0xcc, 0xfb, 0x47, 0x74, 0xbe, 0xe5, 0xc6, 0x16, 0x52, 0xfd, 0xf5, 0x77, 0x41,
	0xd5, 0xaa, 0xcb, 0x38, 0x6f, 0x7f, 0x4b, 0xcc, 0x4b, 0x0d, 0x8f, 0x13, 0x80, 0xb2, 0xc6, 0x03,
	0x5b, 0xda, 0x5f, 0x05, 0xe1, 0xc2, 0x46, 0x29, 0x07, 0x66, 0x12, 0xaf, 0x8a, 0x99, 0xb8, 0x94,
	0x03, 0x63, 0xd3, 0x4b, 0x90, 0x22, 0xec, 0xea, 0x9f, 0x96, 0x51, 0x2f, 0x05, 0x1a, 0xf4, 0xb7,
	0x61, 0x39, 0x20, 0x9b, 0xa8, 0x9a, 0xda, 0x0e, 0xfb, 0xc7, 0xaa, 0xa5, 0x37, 0xc5, 0x5c, 0xac,
	0xfd, 0x98, 0xc6, 0x48, 0xa1, 0xf9, 0x9b, 0x03, 0x53, 0xda, 0x7f, 0x2c, 0x9e, 0x36, 0x2d, 0xae,
	0x1e, 0x85, 0xd8, 0x2c, 0x69, 0x53, 0xcb, 0xb8, 0x4c, 0x2c, 0x6b, 0xa7, 0x41, 0x30, 0x76, 0x31,
	0xf6, 0xef, 0x6d, 0x32, 0x76, 0x31, 0xf6, 0xee, 0x64, 0x71, 0x1d, 0xc8, 0x61, 0x42, 0x3e, 0x9b,
	0x1d, 0xf2, 0x39, 0x70, 0xb0, 0x8a, 0xb3, 0x7d, 0x6a, 0x67, 0xf7, 0xd1, 0x1d, 0x70, 0x37, 0x8f,
	0x64, 0x0a, 0x2f, 0xdf, 0x5e, 0x01, 0xfb, 0x7d, 0x8d, 0x63, 0x82, 0x12, 0x17, 0x69, 0xcc, 0x75,
	0xd8, 0x21, 0x6e, 0x11, 0xa0, 0x2d, 0xd4, 0x2a, 0x47, 0x3c, 0xbb, 0x0d, 0x0c, 0xca, 0x9c, 0x02,
	0xf5, 0xb7, 0xf3, 0x81, 0xfa, 0xeb, 0xff, 0x6e, 0x1b, 0x94, 0x39, 0xdb, 0x39, 0x98, 0xb9, 0xea,
	0x7e, 0x5c, 0x12, 0x9d, 0x3d, 0xcb, 0x94, 0xee, 0x21, 0xdf, 0x73, 0x87, 0xbd, 0x0f, 0x01, 0xf5,
	0xae, 0xfb, 0xf2, 0x31, 0xff, 0x52, 0x03, 0x7b, 0x9e, 0xe8, 0x02, 0x37, 0x84, 0x2f, 0x83, 0xff,
	0xcc, 0x64, 0xad, 0x37, 0xc9, 0x64, 0x6d, 0xa6, 0xee, 0xbd, 0x77, 0x4d, 0xcc, 0x21, 0x48, 0xce,
	0x7d, 0xf3, 0x81, 0x81, 0x2b, 0xdc, 0xd7, 0x5c, 0x8d, 0xfb, 0x5a, 0x11, 0x73, 0xea, 0xc3, 0x60,
	0x81, 0xcc, 0x37, 0x9b, 0xea, 0xf1, 0xef, 0x67, 0xe6, 0xc4, 0xa6, 0x9e, 0xea, 0xf9, 0x7d, 0x79,
	0x5a, 0x6e, 0x44, 0xa4, 0x33, 0x26, 0x48, 0xf1, 0x54, 0xc7, 0x71, 0x7a, 0xf8, 0x30, 0xcc, 0x77,
	0xd5, 0x0a, 0x01, 0xae, 0xa1, 0x17, 0x38, 0x38, 0xeb, 0xa3, 0xb6, 0x11, 0x91, 0x93, 0x91, 0x81,
	0xfd, 0x3f, 0xdb, 0x02, 0x26, 0xa1, 0xf9, 0xfd, 0x6a, 0xa6, 0x77, 0xc0, 0xe6, 0xcc, 0xce, 0x86,
	0x45, 0xa8, 0x11, 0x66, 0x53, 0x02, 0xff, 0xd5, 0xca, 0xa5, 0xfa, 0xc4, 0x86, 0x6a, 0x10, 0xdc,
	0xa0, 0xd7, 0x88, 0x57, 0x6b, 0x6f, 0xac, 0xa9, 0xda, 0xc3, 0xac, 0x28, 0x69, 0x26, 0xe0, 0xbf,
	0x76, 0x8d, 0x66, 0x3b, 0x62, 0x7b, 0xc5, 0xdb, 0x16, 0x97, 0x0f, 0xb2, 0x24, 0xc9, 0x1e, 0xef,
	0xe2, 0x1e, 0x60, 0x1b, 0xcd, 0xaf, 0x19, 0xce, 0xd5, 0xf6, 0x52, 0x50, 0xaf, 0xac, 0x5a, 0x1c,
	0xe6, 0x61, 0x5c, 0x48, 0xde, 0x62, 0x7b, 0xfa, 0x16, 0x6b, 0x95, 0xbd, 0x7b, 0x62, 0x69, 0x70,
	0xc6, 0x5b, 0xeb, 0x4c, 0xdd, 0x9a, 0x5b, 0x51, 0x4d, 0x28, 0x78, 0xca, 0x1d, 0x85, 0x9c, 0x51,
	0x77, 0x70, 0xaa, 0x4c, 0x14, 0x9e, 0x29, 0xd0, 0x3a, 0x66, 0x2f, 0x05, 0x0e, 0xce, 0x7b, 0x1f,
	0x04, 0x26, 0xb8, 0x6b, 0x41, 0xf2, 0xde, 0x20, 0x15, 0xab, 0xee, 0xff, 0xc0, 0x56, 0xf1, 0xee,
	0x89, 0x8b, 0x6c, 0x51, 0xc0, 0x37, 0xa1, 0x85, 0xe1, 0xf5, 0x49, 0x6b, 0x77, 0x7b, 0x25, 0xa8,
	0x56, 0xf3, 0xff, 0x3d, 0xd4, 0xd7, 0xde, 0xee, 0x97, 0xf1, 0x89, 0xdc, 0x19, 0x9e, 0x3d, 0xda,
	0xcc, 0xd0, 0x1a, 0x1b, 0x9c, 0x67, 0x91, 0x17, 0x69, 0xa1, 0xe2, 0xdf, 0x62, 0xc0, 0xfb, 0x3f,
	0xd3, 0xce, 0x27, 0x64, 0x1a, 0x6b, 0x10, 0x18, 0x6f, 0x22, 0x8f, 0xb4, 0x2f, 0x03, 0xee, 0x7d,
	0x8e, 0xd2, 0xce, 0xba, 0x41, 0x98, 0x1e, 0x93, 0x09, 0xaa, 0x81, 0x99, 0x87, 0x04, 0x5d, 0x10,
	0x10, 0xf2, 0xbf, 0xaf, 0x03, 0x8a, 0xb7, 0xbb, 0x24, 0xd1, 0x18, 0x7f, 0x45, 0xfe, 0x9c, 0xb8,
	0xa4, 0xc5, 0x1e, 0xea, 0x6e, 0xcf, 0xd4, 0x83, 0x35, 0x7c, 0x3d, 0x08, 0x42, 0xa7, 0x29, 0x08,
	0xc2, 0x57, 0xc4, 0x33, 0x27, 0x8a, 0x60, 0x04, 0x32, 0x4e, 0x0f, 0xb2, 0xbc, 0x2f, 0x07, 0x32,
	0x2d, 0x0b, 0xe6, 0x30, 0xf1, 0xdc, 0x58, 0xcd, 0xa6, 0x11, 0x5c, 0x8c, 0x6b, 0xc1, 0xfb, 0x8a,
	0x58, 0x6e, 0x78, 0x64, 0xd7, 0xce, 0x14, 0x8a, 0xd8, 0xb1, 0x0d, 0x78, 0xf7, 0xc5, 0x53, 0x79,
	0x43, 0xbb, 0x33, 0x53, 0x48, 0x98, 0x9a, 0x2a, 0xfa, 0x3f, 0xd8, 0x06, 0xc9, 0xa4, 0x5d, 0x2e,
	0xee, 0x4b, 0xbd, 0x55, 0xb1, 0x78, 0xc8, 0x26, 0x88, 0x28, 0x41, 0xed, 0x03, 0x2a, 0x93, 0x18,
	0x38, 0x95, 0x3c, 0x29, 0x3e, 0xd5, 0xf0, 0x41, 0x15, 0xf9, 0xff, 0x14, 0xc3, 0x32, 0xb9, 0x15,
	0xef, 0x6d, 0xb1, 0x9c, 0x8f, 0x7b, 0x03, 0x9e, 0x8d, 0x63, 0x9f, 0xfb, 0x3f, 0x5d, 0xdd, 0x36,
	0xab, 0x61, 0x71, 0xe4, 0xbd, 0x2d, 0xe6, 0xb5, 0xf1, 0xc4, 0x58, 0x41, 0xa6, 0x63, 0x6b, 0x61,
	0x8b, 0xab, 0x99, 0x42, 0x9b, 0x28, 0xee, 0xb4, 0x5b, 0x4c, 0x65, 0xb1, 0xd1, 0x54, 0xd1, 0xff,
	0x31, 0xdc, 0x2e, 0xb6, 0x87, 0xb0, 0x1c, 0xbd, 0xbb, 0xe2, 0x02, 0x8c, 0xca, 0x6e, 0x1e, 0x0e,
	0xf1, 0x53, 0x5b, 0xd3, 0x0d, 0x66, 0xa5, 0x9a, 0x77, 0x57, 0x2c, 0x19, 0x0c, 0xec, 0x84, 0xf6,
	0xb4, 0x3b, 0xc1, 0xad, 0x67, 0x7a, 0xa4, 0x00, 0x3b, 0xf8, 0x53, 0xf7, 0xc8, 0x54, 0xf3, 0xb6,
	0xc4, 0xa5, 0x13, 0x0c, 0x01, 0x01, 0xf6, 0xd3, 0x4f, 0xb6, 0x3d, 0x6b, 0x55, 0xbd, 0x07, 0xe2,
	0x32, 0xe0, 0xee, 0x65, 0xc5, 0x30, 0x2e, 0x43, 0xf4, 0xbf, 0xed, 0x4d, 0xdb, 0x5e, 0xbd, 0xae,
	0xff, 0xeb, 0xad, 0xca, 0x8c, 0xac, 0x9f, 0x86, 0x7d, 0xb5, 0x0c, 0xe7, 0xcb, 0xca, 0x64, 0x4c,
	0xde, 0x98, 0xb6, 0xb8, 0xf7, 0xbe, 0x71, 0x52, 0x66, 0x53, 0x30, 0xb9, 0x36, 0xaf, 0xe0, 0x7d,
	0x28, 0x16, 0x8f, 0xf8, 0xe7, 0x4d, 0x63, 0x29, 0xe1, 0xd4, 0xf0, 0x4f, 0xc0, 0x7c, 0xc1, 0x7e,
	0xd3, 0xbd, 0x30, 0x8f, 0xe2, 0x54, 0x16, 0xe0, 0x5e, 0x23, 0x53, 0x39, 0x38, 0x33, 0x18, 0xe2,
	0x57, 0x2b, 0x58, 0xef, 0x55, 0xf1, 0x34, 0x60, 0x56, 0x51, 0x7c, 0x6c, 0x8b, 0xe3, 0xb9, 0xd2,
	0xfc, 0xd0, 0xef, 0xc3, 0xfe, 0x0b, 0xc2, 0x28, 0xcc, 0x1f, 0xed, 0xca, 0xfe, 0x11, 0x10, 0x8e,
	0xe7, 0xc5, 0xd2, 0x51, 0x58, 0x28, 0x30, 0xcd, 0x92, 0xec, 0x50, 0x9f, 0x5c, 0x2e, 0xd2, 0xbb,
	0x29, 0x2e, 0x96, 0x06, 0xd2, 0x47, 0x58, 0xe7, 0xe6, 0x52, 0x50, 0x45, 0xfb, 0xdf, 0x05, 0x97,
	0x0a, 0x7c, 0xc9, 0xfd, 0xb0, 0x1c, 0xe5, 0x61, 0x72, 0x37, 0x3e, 0x00, 0x2b, 0xbf, 0xa3, 0xb0,
	0x60, 0x18, 0x7a, 0x51, 0x05, 0xab, 0x0e, 0xc2, 0x94, 0x15, 0xc2, 0xb7, 0x70, 0x94, 0xbf, 0x8b,
	0xde, 0xfe, 0x70, 0x59, 0x04, 0xa7, 0x7f, 0xb4, 0xda, 0x93, 0x07, 0x07, 0xb2, 0x5f, 0x1a, 0x26,
	0x7f, 0x3e, 0x60, 0x18, 0xd5, 0x2a, 0x42, 0x28, 0xc2, 0x25, 0x57, 0x41, 0x86, 0xf2, 0x0f, 0xe0,
	0x46, 0x85, 0xfd, 0xa6, 0x46, 0x9f, 0x15, 0xf3, 0x47, 0x61, 0x81, 0x00, 0xf5, 0xd6, 0x22, 0xbc,
	0xd7, 0x48, 0xdd, 0x2f, 0x89, 0xd1, 0xaa, 0x5d, 0xe2, 0x9d, 0x1e, 0x92, 0x35, 0x80, 0xf4, 0x7f,
	0xa3, 0x8d, 0x2b, 0xda, 0x75, 0x88, 0x78, 0x22, 0x3f, 0x95, 0x0a, 0x73, 0xdf, 0x99, 0x14, 0x9a,
	0xa3, 0xeb, 0x5c, 0x0b, 0xde, 0x14, 0x73, 0x8a, 0x33, 0x30, 0x96, 0x0d, 0x0d, 0xeb, 0x16, 0x3c,
	0xcf, 0xcc, 0xcd, 0x4e, 0x97, 0xd6, 0x26, 0x83, 0xb7, 0xcb, 0x32, 0xdf, 0x39, 0xca, 0x1e, 0x93,
	0xb4, 0xd4, 0xc1, 0x79, 0xbb, 0xe2, 0x6a, 0x3f, 0xc3, 0x20, 0x15, 0x0f, 0x65, 0x98, 0xaf, 0x7f,
	0x6d, 0x14, 0x0f, 0x0b, 0xf5, 0x94, 0x18, 0xad, 0x67, 0xc7, 0x7a, 0x7f, 0xa9, 0x77, 0x8d, 0xa9,
	0xeb, 0xbd, 0x24, 0xbc, 0xfe, 0x20, 0x92, 0x88, 0x32, 0xef, 0x27, 0x8d, 0x61, 0xfd, 0x89, 0xff,
	0x1b, 0x3d, 0xbc, 0x84, 0xea, 0xed, 0x15, 0x80, 0xe3, 0x30, 0x7a, 0x17, 0xcd, 0x25, 0x59, 0x18,
	0xd1, 0x21, 0xdb, 0x6a, 0x62, 0xfd, 0x5c, 0x9e, 0x2e, 0x30, 0xe5, 0xbd, 0x2f, 0x09, 0xcf, 0x3d,
	0xd8, 0xa0, 0x95, 0x76, 0xb3, 0x8c, 0x71, 0xdc, 0x51, 0x1f, 0x34, 0xb4, 0xa1, 0x7a, 0xd5, 0x0f,
	0x0b, 0xd8, 0x8c, 0x44, 0x4b, 0x26, 0xf4, 0x4a, 0x9d, 0x61, 0x81, 0x29, 0xef, 0xbd, 0x27, 0xe6,
	0x81, 0x66, 0x42, 0xe5, 0x71, 0x3e, 0x40, 0xee, 0x69, 0x16, 0xd8, 0x1a, 0xaa, 0xba, 0x54, 0xf4,
	0x14, 0xaa, 0xf7, 0xce, 0xab, 0x0e, 0xa4, 0x37, 0xb0, 0x35, 0xbc, 0x0d, 0x45, 0x3a, 0x88, 0xb8,
	0x40, 0x13, 0x33, 0xcd, 0x72, 0xa3, 0x06, 0x4a, 0x17, 0xb8, 0x35, 0xd5, 0x20, 0x94, 0x44, 0x91,
	0x48, 0x8c, 0x57, 0x1b, 0x04, 0x97, 0x6e, 0x05, 0xa6, 0xbc, 0xf7, 0x91, 0xb8, 0xc8, 0xc8, 0x03,
	0x34, 0x31, 0xd7, 0x7c, 0xe4, 0xd4, 0xa8, 0x52, 0x50, 0xad, 0xe9, 0xbd, 0x0b, 0x8e, 0x1f, 0x25,
	0x0d, 0xe9, 0x18, 0x2f, 0x4f, 0x4e, 0x25, 0x02, 0x56, 0x5e, 0x9d, 0xcb, 0x48, 0xa9, 0xd5, 0xce,
	0x86, 0x16, 0xc4, 0x74, 0xfe, 0x50, 0x95, 0x6a, 0xe8, 0xea, 0x77, 0x3b, 0xcf, 0x65, 0x61, 0xec,
	0xa5, 0x35, 0xec, 0xff, 0xcd, 0x36, 0x18, 0x30, 0x98, 0x51, 0x35, 0x9e, 0xe0, 0x7a, 0x9d, 0x3f,
	0x2b, 0xe6, 0x07, 0x46, 0xd1, 0xd8, 0x02, 0x45, 0xa3, 0x45, 0xa8, 0x9d, 0x8c, 0x0e, 0x10, 0xbb,
	0x68, 0x3b, 0x85, 0x7a, 0x17, 0x07, 0x57, 0xb1, 0xe7, 0x53, 0x57, 0xbf, 0x8e, 0x63, 0x04, 0xfd,
	0x7e, 0x7d, 0xdd, 0xd5, 0xee, 0x62, 0xd4, 0xad, 0xc6, 0x85, 0xf7, 0x7e, 0x7d, 0xe1, 0x4d, 0xaa,
	0x5f, 0x5b, 0x79, 0x57, 0xc5, 0xcc, 0xe3, 0x30, 0x49, 0xee, 0x0d, 0x61, 0xc9, 0x75, 0x02, 0x82,
	0xc0, 0x37, 0x6a, 0x78, 0xf6, 0x30, 0x4c, 0x12, 0x50, 0x9f, 0xa1, 0x11, 0x02, 0x47, 0xf9, 0xbf,
	0x8a, 0x61, 0xad, 0xaa, 0x9d, 0xfb, 0x23, 0x1e, 0x6f, 0x5a, 0x1e, 0xcf, 0xff, 0xf1, 0x56, 0x75,
	0x04, 0xff, 0xc0, 0x79, 0x32, 0x7f, 0x07, 0x64, 0x3e, 0xeb, 0x61, 0x9e, 0x9c, 0x3d, 0x0c, 0xc1,
	0x6c, 0xde, 0x46, 0x50, 0x6a, 0xb8, 0xed, 0x3e, 0xcf, 0xa2, 0x30, 0xb1, 0xab, 0xae, 0x8b, 0xf4,
	0xff, 0x1a, 0x8a, 0xcb, 0x9d, 0x56, 0x21, 0x1c, 0xcb, 0xb2, 0x98, 0x3d, 0x0a, 0x0b, 0x88, 0xd4,
	0x82, 0x5c, 0x81, 0x06, 0xd9, 0x3d, 0xbc, 0xed, 0x44, 0x2a, 0x50, 0x9c, 0x84, 0x3a, 0x49, 0xd9,
	0x75, 0xd9, 0x22, 0xaa, 0x71, 0x0c, 0xba, 0xf5, 0x38, 0x06, 0xd7, 0xf0, 0xdc, 0x86, 0xbb, 0x3f,
	0xca, 0x46, 0x0c, 0xec, 0xff, 0x95, 0x16, 0x9c, 0x77, 0x4e, 0x37, 0xdd, 0x35, 0x6d, 0x57, 0x50,
	0xeb, 0x1b, 0x5b, 0x41, 0x1f, 0xd0, 0x76, 0x7f, 0xb2, 0xf5, 0x6c, 0xeb, 0xf8, 0x3b, 0xf5, 0x2e,
	0x9a, 0x45, 0x03, 0xbb, 0x1a, 0x5a, 0x9e, 0x6a, 0xd1, 0x98, 0xe2, 0xfe, 0xf7, 0xb7, 0xea, 0xb3,
	0x0e, 0xfa, 0x54, 0x20, 0x11, 0xd7, 0x85, 0x50, 0xf7, 0x63, 0xb2, 0x4f, 0xc0, 0xc9, 0x67, 0x98,
	0xaa, 0x1b, 0x65, 0xbb, 0xee, 0x46, 0x39, 0x95, 0x9c, 0xc3, 0xff, 0x7a, 0x0b, 0x04, 0xfc, 0xee,
	0xb7, 0xa5, 0x11, 0x1d, 0x07, 0x17, 0x91, 0xac, 0x1a, 0xfd, 0x01, 0x7d, 0xe3, 0x39, 0xe6, 0xa8,
	0xd5, 0x5a, 0xae, 0x47, 0x67, 0xbb, 0xe2, 0xd1, 0xe9, 0xff, 0x52, 0x0f, 0x0e, 0x04, 0xde, 0x05,
	0x3c, 0x0c, 0xb6, 0xc2, 0x38, 0xa1, 0x03, 0xe1, 0xf0, 0xb6, 0xeb, 0xb2, 0x6d, 0x11, 0xd6, 0xe9,
	0x75, 0xb7, 0xe6, 0xf4, 0x0a, 0xbc, 0xf3, 0x1a, 0x49, 0xc7, 0x19, 0x87, 0x52, 0x13, 0xf7, 0x36,
	0x4f, 0x42, 0x60, 0x2b, 0x7a, 0xef, 0x8b, 0x59, 0x89, 0xc3, 0x42, 0xc4, 0xe7, 0xf9, 0x89, 0x6d,
	0xd0, 0x10, 0x06, 0xba, 0x92, 0x77, 0x5f, 0x5c, 0xe8, 0x67, 0x29, 0x0f, 0x9d, 0xd6, 0x9b, 0xa2,
	0x2b, 0x86, 0x0a, 0x04, 0x95, 0xda, 0xde, 0x7b, 0xb8, 0xa5, 0x18, 0xdf, 0xf2, 0xdc, 0xc4, 0x96,
	0x20, 0xee, 0x82, 0xa9, 0xe2, 0x7d, 0xc8, 0x4f, 0x40, 0xe4, 0x58, 0xfc, 0x89, 0xf5, 0x6b, 0x67,
	0xe0, 0x87, 0xfc, 0x0c, 0x9c, 0x9b, 0xa2, 0x85, 0xda, 0x29, 0xc8, 0x99, 0xa6, 0xf9, 0x6f, 0x9e,
	0x69, 0x12, 0xbf, 0x47, 0x4c, 0xd3, 0xc2, 0x93, 0x31, 0x4d, 0xfe, 0xef, 0x20, 0x3f, 0xb3, 0x12,
	0x16, 0xb2, 0xbe, 0x84, 0xff, 0x68, 0xf9, 0x36, 0x2f, 0xdf, 0x15, 0x31, 0x3b, 0x08, 0xfb, 0x6c,
	0xf5, 0xde, 0x1c, 0xc3, 0x3f, 0xdd, 0x2e, 0x8f, 0x49, 0xff, 0x9b, 0x52, 0x38, 0x0f, 0x5d, 0xd1,
	0xff, 0x22, 0xc8, 0x25, 0xc7, 0x95, 0x63, 0x6c, 0xa4, 0xd5, 0x95, 0x18, 0x84, 0x77, 0x45, 0xf4,
	0x1e, 0x87, 0x27, 0x52, 0x8b, 0x1c, 0x10, 0xf0, 0xff, 0x41, 0xa7, 0x76, 0x66, 0xae, 0x9f, 0x7e,
	0xf3, 0x73, 0xa8, 0x6e, 0xbc, 0x00, 0xed, 0x30, 0xef, 0x7b, 0x8e, 0xf2, 0x3e, 0x10, 0x73, 0x65,
	0x3c, 0xe0, 0x0c, 0xe9, 0x67, 0x26, 0x8d, 0xac, 0x3a, 0x02, 0xe0, 0x82, 0xab, 0x2b, 0x79, 0xbb,
	0xe2, 0xe2, 0xd6, 0x28, 0x29, 0xe3, 0x21, 0xd8, 0x2c, 0xb3, 0x1b, 0xf2, 0xe7, 0x6a, 0x03, 0x6b,
	0x8b, 0x39, 0x93, 0xa5, 0x08, 0x77, 0xa5, 0x09, 0x75, 0xbe, 0x8d, 0xd2, 0x18, 0x23, 0x70, 0x4d,
	0x92, 0x20, 0x43, 0x01, 0x38, 0xdf, 0x4c, 0x71, 0x6f, 0x45, 0xcc, 0x1f, 0xe6, 0x52, 0xa6, 0xea,
	0x18, 0x20, 0x12, 0x33, 0x71, 0xd1, 0xdd, 0x55, 0x85, 0xa1, 0x0d, 0x53, 0xcd, 0xbb, 0x2d, 0x16,
	0xe0, 0x66, 0x41, 0xee, 0xdb, 0x73, 0xd3, 0xdd, 0x46, 0x78, 0x1d, 0xff, 0x27, 0xeb, 0x07, 0x9c,
	0x7e, 0x13, 0xf1, 0x7c, 0x69, 0xa1, 0x76, 0xea, 0x74, 0xc2, 0x5b, 0x53, 0xdc, 0xfb, 0xd0, 0x8a,
	0xbd, 0xa7, 0x66, 0xfa, 0x9c, 0x1a, 0x7e, 0x6e, 0x1c, 0xb5, 0xf4, 0xf0, 0x79, 0x1f, 0x08, 0x01,
	0x14, 0xf6, 0x89, 0xd8, 0x1d, 0x56, 0x05, 0x04, 0x49, 0x8a, 0xc0, 0x5a, 0xa1, 0x79, 0x37, 0x60,
	0x18, 0xbf, 0x04, 0xd9, 0x5d, 0xc3, 0x52, 0x72, 0x63, 0x3e, 0xb4, 0x26, 0xc7, 0x7c, 0x68, 0x4f,
	0x8e, 0xf9, 0xd0, 0xa9, 0xc4, 0x7c, 0xf0, 0x7f, 0xae, 0x0b, 0x91, 0x53, 0xc6, 0xaf, 0x3c, 0xef,
	0x8e, 0x10, 0xf8, 0x80, 0x49, 0x37, 0xa6, 0xa5, 0x2d, 0xac, 0xa6, 0xb7, 0x2e, 0x16, 0x13, 0x19,
	0x46, 0xe6, 0x68, 0x6c, 0x4f, 0x7b, 0x34, 0x3a, 0xd5, 0xdc, 0xe3, 0xb1, 0xf3, 0x4d, 0x1f, 0x8f,
	0xdd, 0x6f, 0xf6, 0x78, 0xec, 0x7d, 0xf3, 0xc7, 0xe3, 0xcc, 0xef, 0xd1, 0xf1, 0x38, 0xfb, 0x84,
	0x32, 0x85, 0xab, 0x62, 0x26, 0x2e, 0xb6, 0xc2, 0x38, 0x25, 0x99, 0x17, 0x41, 0x8e, 0x88, 0x60,
	0xbe, 0x22, 0x22, 0xf8, 0x5e, 0x10, 0x91, 0x42, 0x93, 0xc6, 0xb1, 0xf0, 0xae, 0x98, 0xcf, 0x15,
	0x82, 0x69, 0x9b, 0x6b, 0x46, 0x68, 0x63, 0xcf, 0xe0, 0xc0, 0xd6, 0x85, 0x00, 0x22, 0xb4, 0xf4,
	0x2d, 0xb5, 0xe6, 0x28, 0xff, 0xef, 0xb7, 0xb4, 0xd3, 0x06, 0x06, 0x5a, 0xd4, 0x07, 0x39, 0x77,
	0xab, 0x6d, 0x3d, 0x91, 0x5b, 0xed, 0xcb, 0xa2, 0x3b, 0x9a, 0x96, 0x48, 0x40, 0x49, 0xcf, 0x13,
	0x5d, 0xb3, 0x97, 0x3a, 0x01, 0xfc, 0x77, 0x0c, 0x5b, 0xba, 0x4f, 0x64, 0xd8, 0xf2, 0x1f, 0xb5,
	0xe0, 0xac, 0x44, 0x1b, 0x88, 0x5d, 0x4d, 0xc3, 0xec, 0x97, 0x5d, 0x17, 0xe2, 0x20, 0xcf, 0x06,
	0x7b, 0x5c, 0x84, 0xcb, 0x30, 0x6a, 0xb2, 0xca, 0x8c, 0x9e, 0x92, 0xad, 0xb4, 0x86, 0x5d, 0x0b,
	0x98, 0x4e, 0xd5, 0x02, 0x86, 0x8f, 0x59, 0xf7, 0x49, 0xc6, 0xcc, 0x4f, 0xc0, 0x94, 0x9c, 0x8c,
	0x48, 0xd3, 0x93, 0x18, 0x6d, 0xfc, 0xbe, 0x90, 0xc5, 0xa9, 0xbe, 0x17, 0x4c, 0xb2, 0xf6, 0x7f,
	0x49, 0x78, 0x61, 0xbf, 0x2f, 0x87, 0xa5, 0x8c, 0x1e, 0xe4, 0x81, 0xfc, 0x6e, 0xd9, 0xd7, 0x51,
	0xdc, 0x96, 0x82, 0x86, 0x27, 0xfe, 0x6f, 0x93, 0x58, 0x20, 0x8c, 0x13, 0x70, 0xf9, 0x63, 0xf1,
	0xc2, 0x07, 0x61, 0x9c, 0x58, 0xc1, 0x36, 0x42, 0xea, 0xdd, 0xea, 0x1f, 0x0b, 0xb4, 0x63, 0x60,
	0x24, 0x96, 0x61, 0xb4, 0x83, 0xde, 0x74, 0x1d, 0x54, 0xa5, 0x5b, 0x0c, 0xc6, 0x88, 0x04, 0xdd,
	0x1d, 0x15, 0xc1, 0xf8, 0x09, 0x2e, 0x52, 0xad, 0x80, 0x63, 0x39, 0x2c, 0x29, 0x7a, 0x02, 0xfc,
	0x57, 0xbd, 0x49, 0xb2, 0xfe, 0xb1, 0xd4, 0xe6, 0xbe, 0x04, 0x41, 0xdc, 0x56, 0x88, 0x80, 0x6c,
	0x02, 0xc5, 0x19, 0x98, 0x45, 0x8a, 0xd9, 0x88, 0x28, 0xdc, 0x8e, 0x45, 0x90, 0xe5, 0xb4, 0xfa,
	0x6c, 0x8a, 0x20, 0x69, 0x2c, 0xa7, 0x67, 0x72, 0x0c, 0xf4, 0xd6, 0x6a, 0x56, 0x0f, 0x54, 0x23,
	0x93, 0x43, 0x61, 0x6a, 0xae, 0x16, 0xf2, 0xef, 0x1b, 0x6d, 0xee, 0x17, 0x7b, 0x40, 0x09, 0x54,
	0xf7, 0x48, 0x1d, 0x81, 0xd3, 0x5e, 0x80, 0xcd, 0x8b, 0x9d, 0x76, 0x0d, 0x43, 0x10, 0x62, 0x59,
	0x91, 0x8b, 0x30, 0x0c, 0x4e, 0x0d, 0x8c, 0x72, 0x4e, 0x7e, 0x97, 0x70, 0x8e, 0x69, 0x8c, 0x62,
	0x0b, 0xc1, 0xb2, 0x8b, 0x14, 0x0f, 0x08, 0x60, 0xb0, 0x14, 0x34, 0xa2, 0x41, 0xeb, 0x18, 0x0d,
	0x7a, 0xaf, 0xa9, 0xc5, 0x5f, 0x26, 0x72, 0x37, 0x1e, 0x16, 0x44, 0x62, 0x6b, 0x2e, 0xde, 0xea,
	0x19, 0x32, 0x0f, 0xba, 0xa4, 0xf7, 0x16, 0x7a, 0x27, 0xc8, 0xb4, 0x84, 0x8a, 0xb3, 0x93, 0x2b,
	0xf2, 0xb2, 0xfa, 0xeb, 0x8d, 0x13, 0x66, 0x27, 0x30, 0x70, 0x4d, 0x36, 0x3a, 0xdf, 0x20, 0x1b,
	0x5d, 0x16, 0xb3, 0x59, 0x79, 0x04, 0x9f, 0x8f, 0x96, 0x4b, 0x1a, 0x54, 0x0b, 0x05, 0xfe, 0xc2,
	0xd0, 0x2d, 0x60, 0xa8, 0x76, 0x83, 0x50, 0x64, 0x13, 0x00, 0x0a, 0x80, 0xba, 0x88, 0x19, 0x45,
	0x18, 0x4a, 0x8d, 0x5d, 0x3a, 0xec, 0x6f, 0xac, 0x51, 0x60, 0x0b, 0x04, 0xbc, 0x77, 0xc4, 0x2c,
	0x4e, 0x66, 0x41, 0x31, 0x90, 0x9f, 0xab, 0xfb, 0x0d, 0x56, 0x16, 0x5f, 0xa0, 0x6b, 0xa8, 0x0f,
	0x3a, 0x8c, 0x0f, 0xca, 0xed, 0xb0, 0x7f, 0x2c, 0x4b, 0x8a, 0xa0, 0xd4, 0x0b, 0x1c, 0x1c, 0x46,
	0xb4, 0x88, 0x93, 0x1d, 0xa4, 0x31, 0x97, 0xa0, 0x04, 0xc3, 0x28, 0x4a, 0x10, 0x17, 0xdb, 0xb9,
	0x2c, 0xe2, 0x08, 0x02, 0x12, 0x46, 0xb0, 0x0c, 0x2f, 0xa3, 0x02, 0xa6, 0xfe, 0x04, 0x22, 0xc8,
	0x0c, 0x87, 0x18, 0xb7, 0x56, 0xad, 0x04, 0x0f, 0xdf, 0xc9, 0x71, 0xaa, 0x0c, 0x76, 0x91, 0xde,
	0xfa, 0x14, 0x96, 0xe1, 0x38, 0xff, 0xef, 0xcd, 0x82, 0x79, 0xa5, 0xfa, 0x3a, 0xc5, 0xcb, 0xaa,
	0x95, 0xfb, 0xba, 0xe8, 0xed, 0x2b, 0xe2, 0x32, 0xce, 0x29, 0xaf, 0x4a, 0x7d, 0x02, 0x2c, 0x0e,
	0xba, 0x3a, 0xee, 0x47, 0xfd, 0xa9, 0xa6, 0x8a, 0x66, 0x83, 0x18, 0xf7, 0xe9, 0x1b, 0x62, 0x61,
	0x94, 0x2a, 0xba, 0x63, 0xe5, 0xaf, 0xbd, 0x80, 0xa3, 0xd4, 0xd8, 0x95, 0xd6, 0x02, 0x02, 0x23,
	0xf0, 0x33, 0x8c, 0xb7, 0x2a, 0x16, 0xf7, 0xc3, 0xb2, 0x4c, 0x24, 0x1e, 0x15, 0xe3, 0x94, 0x2c,
	0x2b, 0xac, 0x0c, 0xf0, 0xb9, 0xbc, 0x92, 0xb7, 0x29, 0x2e, 0xd3, 0xbd, 0xeb, 0xa3, 0x38, 0x49,
	0xa8, 0xa5, 0x99, 0x66, 0x8e, 0x66, 0xcb, 0x16, 0x04, 0x95, 0x7a, 0xad, 0xa2, 0xb7, 0x29, 0x2e,
	0x51, 0x04, 0xe4, 0x38, 0x4b, 0xa9, 0xb1, 0xd9, 0xb1, 0x3e, 0x8e, 0xce, 0x01, 0x1e, 0xd4, 0x6a,
	0x7a, 0x9b, 0xe2, 0x62, 0xe8, 0x6a, 0xda, 0xc6, 0xc9, 0x32, 0xea, 0x0a, 0xb9, 0xa0, 0x5a, 0xd5,
	0xfb, 0xb2, 0xf0, 0x64, 0x8d, 0xfd, 0x20, 0xd9, 0xc6, 0x13, 0x30, 0x2b, 0x0d, 0x8d, 0x78, 0xdf,
	0x29, 0x9e, 0x4e, 0x9a, 0x4e, 0xef, 0x71, 0x71, 0x38, 0xc7, 0x1d, 0xf5, 0x41, 0x73, 0x33, 0xde,
	0xa1, 0x58, 0x4e, 0xc6, 0x1c, 0xb5, 0x24, 0x11, 0xf9, 0xb6, 0xe6, 0x57, 0x34, 0x1e, 0xcd, 0xc1,
	0xd8, 0xc6, 0xbc, 0x50, 0x5c, 0x0d, 0x1b, 0x55, 0x3f, 0xe4, 0xba, 0xfd, 0xad, 0x63, 0x07, 0xbe,
	0xaa, 0x28, 0x0a, 0xc6, 0x34, 0xe4, 0xdd, 0x14, 0x17, 0x71, 0x01, 0xde, 0xcf, 0xca, 0xb8, 0x2f,
	0xf7, 0x88, 0x24, 0x75, 0x82, 0x2a, 0xda, 0xfb, 0x36, 0xd1, 0x05, 0xa1, 0xf4, 0x85, 0x66, 0x02,
	0xac, 0x9e, 0x01, 0x4b, 0x06, 0x92, 0x6a, 0xbc, 0xaf, 0xa9, 0x8f, 0x30, 0x4c, 0xe9, 0x1b, 0xc8,
	0x05, 0x4c, 0xb2, 0x80, 0x66, 0xfb, 0x3f, 0x30, 0x85, 0x31, 0x07, 0x96, 0x3a, 0xba, 0x15, 0xc3,
	0x69, 0xcc, 0x1d, 0x97, 0x82, 0x0a, 0xd6, 0xff, 0xb5, 0x16, 0x08, 0x97, 0xcc, 0x4b, 0xef, 0x64,
	0xf9, 0x6a, 0x12, 0xcb, 0xb4, 0xdc, 0x09, 0x4f, 0x24, 0xf1, 0xa4, 0x03, 0x7a, 0xc3, 0x38, 0x9e,
	0x94, 0xf7, 0x38, 0x30, 0xa5, 0x15, 0xb9, 0xc7, 0x8b, 0xd3, 0x9e, 0x71, 0x2e, 0xb3, 0x08, 0x2f,
	0x10, 0x97, 0x8a, 0xd1, 0x60, 0x10, 0xe6, 0x67, 0xc6, 0xe6, 0x9b, 0x6c, 0x28, 0x5f, 0x18, 0xdb,
	0xfe, 0x0e, 0x56, 0x78, 0x04, 0x35, 0x82, 0x5a, 0x7d, 0x7f, 0x8f, 0xe2, 0xc4, 0xc4, 0xc9, 0xda,
	0x8a, 0x19, 0xc2, 0x0f, 0x91, 0x7c, 0x33, 0xe7, 0xd4, 0x69, 0x08, 0x23, 0xab, 0xe3, 0xff, 0x6e,
	0xcb, 0xb4, 0xbb, 0x53, 0x66, 0x79, 0x78, 0x08, 0x03, 0xf3, 0xaa, 0x98, 0xe9, 0xc3, 0x48, 0x4d,
	0x35, 0x2c, 0x54, 0xd6, 0x7b, 0x5d, 0xcc, 0x20, 0xe3, 0x44, 0x94, 0xf6, 0x7a, 0xe3, 0x74, 0xae,
	0xd8, 0x7a, 0x58, 0x5a, 0x87, 0xbe, 0x5e, 0x3f, 0x91, 0xf9, 0x59, 0x96, 0x4a, 0x48, 0x42, 0x53,
	0x61, 0x8a, 0xc7, 0x17, 0x00, 0xdb, 0x4b, 0x4a, 0x31, 0xb2, 0xa1, 0x73, 0x44, 0x30, 0x8c, 0xcb,
	0xc2, 0xf5, 0xaa, 0x2c, 0xdc, 0x0f, 0xb5, 0xe1, 0x76, 0xad, 0x93, 0xe1, 0x0c, 0xb3, 0x72, 0xaf,
	0x90, 0x26, 0x15, 0x01, 0x2d, 0x92, 0xfe, 0x28, 0x97, 0x93, 0xb4, 0x14, 0x2e, 0x13, 0xae, 0x4b,
	0x7b, 0xef, 0x1b, 0x7f, 0xf4, 0x49, 0x42, 0x0e, 0xa7, 0x32, 0xaf, 0xe0, 0xdd, 0x12, 0x3d, 0x88,
	0x4b, 0x3b, 0xce, 0xcc, 0xc8, 0xa9, 0x89, 0x45, 0xe9, 0xca, 0x00, 0x6e, 0x03, 0x53, 0x5f, 0x19,
	0xa0, 0xb4, 0x1f, 0xc1, 0x66, 0xa9, 0xd2, 0x25, 0xe4, 0xf1, 0xcf, 0xbb, 0x30, 0xdc, 0x14, 0x17,
	0x73, 0x28, 0xb8, 0x5b, 0x31, 0xe7, 0xaf, 0xa2, 0xfd, 0x9f, 0x9b, 0x87, 0xf5, 0x86, 0xaf, 0x31,
	0xeb, 0x58, 0xdd, 0x67, 0x53, 0xc4, 0x91, 0x5a, 0xcd, 0xc0, 0x8a, 0x5d, 0xf8, 0xee, 0x2c, 0x4e,
	0x65, 0x44, 0xcf, 0x31, 0x98, 0xb4, 0x83, 0xc3, 0xfb, 0xf0, 0xa6, 0x0c, 0x23, 0x99, 0xd3, 0x95,
	0xc1, 0xc0, 0x95, 0x78, 0xaa, 0xdd, 0x5a, 0x3c, 0x55, 0x1e, 0x64, 0xb2, 0x57, 0x09, 0x32, 0x09,
	0x49, 0x2d, 0x4e, 0xb2, 0x52, 0x5a, 0x33, 0x50, 0x48, 0x6a, 0x61, 0x50, 0xea, 0xcb, 0x0f, 0x93,
	0x2c, 0x5a, 0x63, 0xa5, 0xf0, 0x0e, 0x51, 0x45, 0x63, 0x02, 0x0d, 0x04, 0x0b, 0x3c, 0x28, 0x21,
	0x81, 0x86, 0xc6, 0xd4, 0x53, 0x8d, 0xcc, 0x37, 0xa5, 0x1a, 0xb9, 0x21, 0x16, 0x06, 0x10, 0xe8,
	0x14, 0xe3, 0x5e, 0x63, 0xdc, 0x0f, 0x8e, 0x52, 0xd4, 0xb1, 0xcc, 0xa2, 0xf0, 0xec, 0x9e, 0x4c,
	0x48, 0x21, 0x8b, 0x01, 0x7e, 0x2b, 0x58, 0xb0, 0xcd, 0x66, 0x29, 0xa0, 0xc8, 0x98, 0xde, 0xc1,
	0x79, 0x2f, 0x8a, 0xcb, 0xe1, 0x70, 0x98, 0xc4, 0x7a, 0xa0, 0x81, 0xcc, 0x2c, 0x61, 0x34, 0xbd,
	0xda, 0x03, 0x08, 0x76, 0x82, 0xc1, 0x20, 0xb3, 0x13, 0xb9, 0x1a, 0x97, 0x67, 0x2c, 0x08, 0x5b,
	0xc3, 0x13, 0xc8, 0x8d, 0xe8, 0x60, 0x57, 0xd7, 0x58, 0xa6, 0x9d, 0xc6, 0x67, 0xde, 0x3d, 0x31,
	0x1f, 0xe9, 0x5d, 0x4a, 0x19, 0x3a, 0x3e, 0xd7, 0x7c, 0xb6, 0x36, 0x6d, 0xe6, 0xc0, 0x56, 0x56,
	0xe3, 0x84, 0xc9, 0x3b, 0x40, 0x9f, 0xa7, 0x3e, 0xec, 0x32, 0x9e, 0x22, 0x2e, 0x16, 0x12, 0xfc,
	0xc8, 0x64, 0x88, 0xe1, 0x65, 0x71, 0x40, 0x31, 0x64, 0x68, 0x15, 0xad, 0x66, 0x58, 0xad, 0x4a,
	0xfa, 0x0a, 0x0c, 0x36, 0xc2, 0x30, 0xde, 0xeb, 0xe2, 0xaa, 0x9a, 0xcc, 0xbb, 0xb2, 0x64, 0xeb,
	0x82, 0x85, 0x7d, 0x1b, 0xf3, 0xd4, 0xfb, 0xaa, 0xb8, 0x12, 0x57, 0x36, 0x24, 0xf4, 0xf7, 0xe9,
	0x66, 0x41, 0xce, 0xd8, 0x2d, 0x1c, 0x34, 0x36, 0xe3, 0xbd, 0x2a, 0x9e, 0x56, 0x2f, 0x56, 0xaf,
	0xa2, 0x58, 0x9e, 0xb2, 0x28, 0xc2, 0x43, 0x1d, 0x5a, 0xae, 0xf9, 0xa1, 0x1a, 0xbe, 0xc3, 0x2c,
	0x89, 0x6e, 0xe7, 0x79, 0x78, 0x86, 0x69, 0x0a, 0x31, 0xfe, 0x49, 0x05, 0xab, 0x26, 0x19, 0x17,
	0x79, 0x20, 0x0b, 0xc9, 0xe8, 0xc3, 0x32, 0x4e, 0x72, 0xd3, 0x33, 0xd5, 0xb6, 0x1a, 0x36, 0x62,
	0xc3, 0xd4, 0x00, 0x61, 0x2a, 0x91, 0x0a, 0x56, 0x4d, 0x0d, 0x42, 0x77, 0xe3, 0x83, 0x72, 0xa7,
	0x9f, 0xe5, 0x26, 0xa1, 0x61, 0x05, 0xed, 0xbd, 0x21, 0xc4, 0xb1, 0x3c, 0x5b, 0xc9, 0x4e, 0x41,
	0x0c, 0xf7, 0xc9, 0x06, 0x8e, 0xe5, 0x23, 0xf3, 0x38, 0x60, 0x45, 0xfd, 0xf7, 0x85, 0xb0, 0x4f,
	0x26, 0xf9, 0x59, 0x49, 0xc7, 0x0f, 0x58, 0x83, 0xfe, 0x3a, 0x68, 0xbf, 0x37, 0x4d, 0x96, 0x94,
	0x95, 0x30, 0x2e, 0xc6, 0x67, 0x02, 0x33, 0xb1, 0xb5, 0xdb, 0x4e, 0x6a, 0x86, 0x35, 0xff, 0x9f,
	0xb5, 0x20, 0xdc, 0x9a, 0xfa, 0x20, 0x0a, 0xd4, 0x99, 0x98, 0x2f, 0x34, 0x3e, 0x67, 0x0e, 0x8e,
	0xdc, 0x96, 0x4b, 0x2d, 0x61, 0x41, 0x40, 0xf5, 0x34, 0x8c, 0x22, 0xe6, 0x8b, 0xac, 0x41, 0x75,
	0xe6, 0xd3, 0xb7, 0x8d, 0x39, 0x37, 0x1c, 0xf1, 0x98, 0xfe, 0xf2, 0x2b, 0xea, 0x8c, 0x3a, 0x93,
	0xda, 0x07, 0x09, 0x01, 0x0c, 0xce, 0x4b, 0xa9, 0xbe, 0x66, 0x74, 0x70, 0x5e, 0x4a, 0xf5, 0x75,
	0x5d, 0x88, 0x38, 0x8d, 0xcb, 0x0d, 0x7c, 0x17, 0xfa, 0x28, 0x33, 0x8c, 0xff, 0xcf, 0x5b, 0xec,
	0x84, 0x58, 0x3f, 0x2d, 0xf3, 0x90, 0x4e, 0x08, 0xcc, 0x23, 0x63, 0x42, 0x7f, 0x1a, 0xd8, 0x7b,
	0x5f, 0xcc, 0xa9, 0xad, 0x38, 0xc9, 0xf1, 0xa5, 0x3e, 0x01, 0x81, 0xa9, 0x03, 0x17, 0x65, 0xd2,
	0x2d, 0x18, 0x56, 0xad, 0x1b, 0x38, 0x38, 0xef, 0x03, 0x9d, 0x00, 0x47, 0x8d, 0x2e, 0x13, 0x22,
	0xd6, 0xd8, 0x5e, 0x9a, 0xa2, 0xa0, 0x52, 0x1c, 0xec, 0x4e, 0x42, 0x75, 0x73, 0x22, 0xda, 0x42,
	0xa2, 0x29, 0x17, 0xe9, 0xff, 0x2d, 0xb4, 0x6b, 0xc0, 0xee, 0xe2, 0xcd, 0xf0, 0xfe, 0x83, 0x5d,
	0xc5, 0xff, 0xab, 0x41, 0x78, 0x51, 0x5c, 0x66, 0xf1, 0x6b, 0x29, 0x88, 0x33, 0xae, 0xa0, 0xfa,
	0x03, 0x1b, 0x4b, 0xea, 0x36, 0x5f, 0x55, 0x26, 0x96, 0x94, 0x51, 0xc0, 0xd9, 0xcc, 0x4d, 0xec,
	0xeb, 0x39, 0x0a, 0x8e, 0x14, 0x14, 0x83, 0xe4, 0x59, 0x36, 0xd4, 0xc9, 0x15, 0xbb, 0x41, 0x05,
	0xeb, 0xff, 0x4e, 0x8b, 0xc5, 0x61, 0xc7, 0xde, 0x3f, 0x79, 0xb7, 0x4d, 0x22, 0x2a, 0x16, 0xba,
	0x95, 0x61, 0x7e, 0xef, 0xba, 0x0b, 0x9a, 0xc5, 0xb2, 0xdc, 0x74, 0x0f, 0x7f, 0x8e, 0x6a, 0x18,
	0xc2, 0x99, 0xa6, 0x21, 0xf4, 0xff, 0x49, 0x8b, 0x6d, 0xf3, 0x47, 0x78, 0x26, 0x3c, 0x02, 0x8a,
	0x51, 0x0d, 0x4a, 0xe7, 0xe4, 0x40, 0xeb, 0xe9, 0x1c, 0x68, 0xe3, 0xb2, 0x04, 0x77, 0x26, 0x64,
	0x09, 0x36, 0x49, 0xce, 0xba, 0x3c, 0xc9, 0xd9, 0xb2, 0x98, 0x3d, 0x8e, 0x13, 0x48, 0x80, 0x89,
	0xdf, 0xa3, 0x41, 0x2b, 0x9d, 0xc3, 0x4f, 0x20, 0xe9, 0xdc, 0xf3, 0x62, 0x69, 0xcb, 0x31, 0x74,
	0x41, 0xee, 0xc5, 0x45, 0xfa, 0x5f, 0x9f, 0xe5, 0xdf, 0x47, 0xc2, 0x12, 0xf8, 0x3e, 0x6d, 0xa3,
	0xdc, 0x62, 0x36, 0xca, 0xcb, 0x62, 0x36, 0x7b, 0x9c, 0x82, 0x05, 0x22, 0x51, 0x43, 0x02, 0x41,
	0x4a, 0xa6, 0xfe, 0xb2, 0xc8, 0x0e, 0x16, 0x01, 0x5a, 0x34, 0x13, 0xb9, 0xa2, 0x4b, 0xe9, 0x0e,
	0x4d, 0xe0, 0x8a, 0xab, 0x62, 0xa6, 0x48, 0xb2, 0xc3, 0x30, 0xd5, 0xee, 0x8e, 0x08, 0x59, 0x8e,
	0xc8, 0xe1, 0xd1, 0x18, 0x4a, 0xd5, 0xc4, 0xbb, 0x2b, 0x51, 0x1b, 0x82, 0x1c, 0xce, 0x6f, 0xae,
	0xc2, 0xf9, 0x29, 0xea, 0x09, 0x07, 0x0a, 0x72, 0x61, 0x08, 0xb8, 0x81, 0xc3, 0x45, 0x35, 0x70,
	0xf8, 0x75, 0x21, 0x30, 0x8a, 0xd1, 0x49, 0x2c, 0x1f, 0x93, 0xe9, 0x26, 0xc3, 0xd8, 0x24, 0x5a,
	0x9b, 0x3a, 0x45, 0xe2, 0x22, 0x4f, 0xa2, 0xa5, 0xb1, 0x75, 0xe3, 0x23, 0x0a, 0x76, 0xeb, 0x3a,
	0x59, 0x29, 0x8a, 0x18, 0xa7, 0x98, 0x50, 0x16, 0x79, 0x2c, 0x03, 0x7b, 0x77, 0xd5, 0x98, 0xc0,
	0x39, 0x0d, 0x7b, 0xe4, 0x22, 0x90, 0xaa, 0x6f, 0x19, 0x13, 0xb9, 0x1b, 0x0b, 0x1a, 0xca, 0xce,
	0x6b, 0xaa, 0x2e, 0xd3, 0x48, 0x52, 0x94, 0x4c, 0xe0, 0xb9, 0x96, 0x82, 0x0a, 0x16, 0xee, 0xc3,
	0xea, 0xcd, 0x20, 0x10, 0xc0, 0xc0, 0xb8, 0x16, 0xe1, 0xbd, 0x21, 0xba, 0x07, 0x49, 0x78, 0x08,
	0x7c, 0xd3, 0x94, 0x21, 0x4d, 0xa0, 0x02, 0x58, 0x0e, 0x28, 0x02, 0x0a, 0xa3, 0x80, 0x99, 0xd1,
	0x2c, 0x42, 0x8d, 0x40, 0xf6, 0x18, 0x46, 0xa4, 0x58, 0xbe, 0x02, 0xbc, 0x9b, 0x81, 0x6d, 0x10,
	0x9a, 0x35, 0x75, 0x04, 0x3e, 0xcd, 0x83, 0xd0, 0x28, 0x8c, 0x6a, 0xf9, 0xc1, 0xa8, 0xdc, 0xc1,
	0x05, 0x75, 0x15, 0xd7, 0x9a, 0x41, 0x40, 0xfa, 0xc7, 0x51, 0x99, 0xad, 0xc5, 0xc5, 0x20, 0x2e,
	0x0a, 0x93, 0x15, 0xad, 0x1b, 0x54, 0xd1, 0x3a, 0xf6, 0xdb, 0xb2, 0x4d, 0x5c, 0xf9, 0x86, 0x98,
	0xd3, 0xc9, 0x50, 0x28, 0x64, 0x7a, 0x4d, 0xac, 0x01, 0xa2, 0x5a, 0x0c, 0xbd, 0x18, 0x98, 0xc2,
	0x3c, 0xfd, 0x70, 0x04, 0x7c, 0x0c, 0x4b, 0x3f, 0x1c, 0xf9, 0xcf, 0x83, 0x40, 0x94, 0xd5, 0x54,
	0x5b, 0x8f, 0x1d, 0x87, 0xf0, 0xdf, 0x7f, 0x00, 0x11, 0x9e, 0x68, 0x9f, 0x3e, 0x18, 0x4a, 0x74,
	0x55, 0x7e, 0x14, 0xc8, 0x62, 0x94, 0x94, 0xde, 0xe7, 0xc5, 0x4c, 0x0e, 0xff, 0x60, 0xbb, 0x5e,
	0xa8, 0x44, 0xa1, 0xc3, 0x5a, 0x58, 0x34, 0xa0, 0x82, 0xfe, 0x11, 0x6f, 0x90, 0x6d, 0x7c, 0xe8,
	0x89, 0xf7, 0x05, 0x71, 0xa1, 0x30, 0x7e, 0xfc, 0x93, 0x5c, 0x59, 0xeb, 0x0d, 0x04, 0x95, 0x9a,
	0xfe, 0xbf, 0x45, 0xe9, 0x5e, 0x90, 0xbd, 0x33, 0x9e, 0x25, 0x8d, 0x9e, 0xf5, 0x3a, 0xb9, 0x24,
	0xb2, 0x36, 0x90, 0x5c, 0x72, 0x45, 0x2c, 0x69, 0x5e, 0xf2, 0x6b, 0x23, 0x69, 0x04, 0x2e, 0x93,
	0x6f, 0xbf, 0x6e, 0x15, 0x6f, 0x43, 0x5c, 0xca, 0xd2, 0x3e, 0x5d, 0x7e, 0x36, 0xd2, 0x7e, 0x06,
	0x74, 0x68, 0x0a, 0x95, 0x4b, 0xad, 0x9a, 0x6a, 0x4a, 0x31, 0xc2, 0x4e, 0x53, 0xbd, 0xa9, 0x9a,
	0xaa, 0x56, 0xf3, 0xff, 0xc3, 0x36, 0x44, 0x31, 0xa0, 0x21, 0x54, 0x3c, 0xcc, 0x23, 0xab, 0xcf,
	0x79, 0xd3, 0x95, 0x8a, 0x4f, 0xc3, 0xf8, 0x90, 0x5c, 0xfc, 0x3c, 0xbb, 0x1b, 0xb0, 0x5b, 0xd5,
	0x57, 0x48, 0x63, 0xb7, 0xaa, 0x6f, 0x8f, 0xd7, 0xc4, 0xdc, 0xa8, 0x90, 0x98, 0xb6, 0x16, 0x49,
	0xb5, 0x81, 0x79, 0x06, 0xa7, 0xdd, 0x86, 0x0c, 0x4e, 0xbb, 0x95, 0x0c, 0x4e, 0x9b, 0x4d, 0x19,
	0x9c, 0x4c, 0x32, 0x36, 0x50, 0xcb, 0xeb, 0x1c, 0xb4, 0x04, 0x21, 0x37, 0x78, 0x8a, 0x5d, 0x9b,
	0xd3, 0x0a, 0x44, 0x84, 0xfd, 0xaf, 0xb0, 0x65, 0xa4, 0xbe, 0x9b, 0xa2, 0x74, 0x6c, 0xaf, 0x78,
	0xb7, 0x19, 0x9f, 0xd8, 0x9a, 0x44, 0x12, 0x2b, 0x83, 0x6c, 0x59, 0x45, 0xbf, 0x60, 0x8d, 0x63,
	0x29, 0xad, 0xeb, 0x7c, 0xcf, 0xa8, 0x19, 0x70, 0x26, 0xa6, 0x6c, 0x5a, 0xab, 0x1b, 0xae, 0x61,
	0xdf, 0xe8, 0xd0, 0x04, 0xfe, 0x56, 0xc3, 0xfe, 0x01, 0x18, 0xe1, 0xf0, 0xfa, 0x46, 0x70, 0xf2,
	0x11, 0xcf, 0xcb, 0x38, 0x31, 0x6b, 0x40, 0xbd, 0xcb, 0x41, 0xa5, 0xaa, 0xff, 0xa7, 0x40, 0x5f,
	0x68, 0xaf, 0x4e, 0xa4, 0xc2, 0x3d, 0xe4, 0x77, 0x0c, 0x82, 0xbc, 0x37, 0xc5, 0x9c, 0xfa, 0x07,
	0xa2, 0xd3, 0xf6, 0x14, 0xf7, 0x05, 0x53, 0x7a, 0xfc, 0x0d, 0xc4, 0xff, 0x22, 0xe8, 0x3f, 0x37,
	0x1d, 0xbe, 0x19, 0x63, 0x65, 0x40, 0x6d, 0xf6, 0x79, 0x9f, 0x6a, 0xfe, 0x3c, 0xcd, 0x7b, 0x9b,
	0xe2, 0xfe, 0x3f, 0x6d, 0xb1, 0xb1, 0x83, 0xeb, 0x20, 0xa6, 0x71, 0xa0, 0xf8, 0x10, 0x14, 0x82,
	0xcd, 0xb9, 0x45, 0xb9, 0x48, 0xd5, 0x5d, 0xd5, 0xda, 0xfa, 0xa9, 0x16, 0x69, 0x69, 0x10, 0x72,
	0x01, 0x40, 0xbb, 0xdb, 0x10, 0x99, 0xd5, 0x5a, 0x09, 0x57, 0xd1, 0xe0, 0xfe, 0x4d, 0xd7, 0x99,
	0x21, 0x49, 0x28, 0x2d, 0x42, 0x0d, 0xf1, 0xb1, 0x3c, 0xb3, 0x1c, 0x1b, 0x41, 0xaa, 0x7f, 0x78,
	0x11, 0xd5, 0xc6, 0xe1, 0xb4, 0x45, 0x1c, 0xa4, 0xff, 0x55, 0x66, 0x9c, 0x80, 0x8c, 0x27, 0x68,
	0xd9, 0x14, 0xcb, 0x44, 0xa1, 0xdc, 0xf0, 0xa8, 0xc6, 0x0e, 0xb6, 0x38, 0x77, 0x64, 0x3a, 0x57,
	0xea, 0x1a, 0xa4, 0xf4, 0xb5, 0x08, 0xff, 0x37, 0xf9, 0x6d, 0x0c, 0x44, 0x2a, 0xd4, 0xaa, 0x4c,
	0xc3, 0xfd, 0x04, 0x31, 0x24, 0xb2, 0xe3, 0x28, 0xe4, 0xd2, 0x87, 0x59, 0xa9, 0x4e, 0x63, 0x93,
	0x0e, 0x8a, 0xa3, 0xc0, 0xef, 0x5f, 0x81, 0xdb, 0x32, 0xef, 0x4b, 0x43, 0x62, 0x1c, 0x9c, 0x77,
	0x4f, 0x5c, 0x1a, 0x84, 0xa7, 0xb7, 0x93, 0x24, 0x7b, 0x1c, 0x3c, 0x89, 0x21, 0x44, 0xad, 0x16,
	0xf0, 0x0a, 0x43, 0x99, 0xb2, 0x40, 0x60, 0x06, 0xf6, 0x7f, 0x98, 0x9f, 0x3c, 0x5b, 0x61, 0x1a,
	0x1e, 0x82, 0x8b, 0x16, 0xb9, 0x8d, 0x55, 0x84, 0xbf, 0xd7, 0x27, 0x48, 0x9b, 0x5c, 0xf1, 0xef,
	0x87, 0x4d, 0xe2, 0xdf, 0xf3, 0xaa, 0x3b, 0x02, 0xe0, 0x57, 0x5d, 0x01, 0xf0, 0x79, 0x75, 0x49,
	0x04, 0xfc, 0x76, 0x4d, 0x04, 0x7c, 0x6e, 0x9f, 0x8d, 0x10, 0xf8, 0x6f, 0x08, 0xce, 0xe8, 0x13,
	0xe9, 0x24, 0xa3, 0x53, 0x61, 0x0f, 0xec, 0xc9, 0xa7, 0x8d, 0x73, 0xcc, 0xb3, 0x5a, 0xaa, 0x0d,
	0x5a, 0x79, 0xe7, 0x5e, 0xd5, 0xf9, 0x25, 0x2a, 0x60, 0xb5, 0xbc, 0x97, 0x45, 0xb7, 0x38, 0xca,
	0x86, 0xe3, 0x8e, 0x77, 0x87, 0xe8, 0x40, 0x49, 0x45, 0x23, 0x99, 0xa3, 0xaa, 0xbd, 0xba, 0x8f,
	0xa1, 0x91, 0x0e, 0xeb, 0x11, 0x54, 0xaa, 0x7a, 0x6b, 0x5a, 0x9a, 0xac, 0xa8, 0x26, 0xa9, 0x74,
	0x9f, 0x9f, 0x44, 0x6c, 0x6d, 0xaa, 0x60, 0x5b, 0xcf, 0xa1, 0x68, 0x33, 0x4f, 0x44, 0xd1, 0xbc,
	0x3b, 0x62, 0xe1, 0xd0, 0xd2, 0xb1, 0x71, 0xb6, 0xa1, 0x4d, 0x04, 0x2f, 0xe0, 0x15, 0x51, 0x64,
	0x0f, 0x6c, 0xcf, 0x17, 0x74, 0xbc, 0xeb, 0x39, 0x4c, 0xa9, 0x52, 0x41, 0x7b, 0xeb, 0x5a, 0x70,
	0x0d, 0xcc, 0xfd, 0xfc, 0xa4, 0xd3, 0x6d, 0x2d, 0x4b, 0x51, 0xba, 0x48, 0xba, 0x3f, 0x56, 0xd1,
	0x5b, 0xd5, 0x32, 0x2b, 0xb2, 0xdb, 0x19, 0xe3, 0x1d, 0xb7, 0xc9, 0xca, 0x80, 0x3a, 0x9c, 0x57,
	0xf2, 0x02, 0x71, 0x71, 0x60, 0x89, 0x1c, 0xf4, 0x7a, 0x01, 0xc6, 0xef, 0xe6, 0xb8, 0xcb, 0x4d,
	0x95, 0x22, 0x06, 0xd5, 0x06, 0xbc, 0x75, 0xb1, 0x30, 0x80, 0x4d, 0x9f, 0xab, 0x5d, 0x4f, 0x9a,
	0xd4, 0xcf, 0x8c, 0x4b, 0x73, 0xc4, 0xa8, 0x43, 0xc0, 0xeb, 0x79, 0x1f, 0x89, 0x4b, 0x09, 0x13,
	0x7c, 0x18, 0x51, 0xf9, 0xd8, 0x6f, 0x34, 0x02, 0x92, 0xa0, 0x56, 0xd1, 0xfb, 0x2e, 0xf1, 0x0c,
	0xc7, 0xdd, 0xcf, 0xca, 0x2f, 0x64, 0x31, 0xce, 0xd2, 0x85, 0x66, 0x45, 0x62, 0xb3, 0xc8, 0x28,
	0x18, 0xd7, 0x8c, 0xf7, 0x81, 0x3e, 0x93, 0x56, 0xb2, 0x53, 0xba, 0x20, 0x3e, 0x37, 0xa6, 0xcd,
	0xec, 0xd4, 0xc4, 0x77, 0xb1, 0x75, 0xbc, 0x17, 0xc5, 0xe5, 0x5c, 0xf6, 0xb3, 0xc1, 0x40, 0xa6,
	0x91, 0xda, 0x33, 0x2c, 0x67, 0x4a, 0xfd, 0x81, 0x3d, 0x2c, 0x15, 0xf5, 0x47, 0x51, 0xed, 0x65,
	0x7e, 0x58, 0x1a, 0xb4, 0xbd, 0x25, 0xaf, 0x8e, 0x86, 0xab, 0x49, 0x58, 0x14, 0x24, 0x6e, 0xaf,
	0x60, 0xbd, 0x0f, 0xc4, 0x5c, 0x3f, 0x1c, 0x0c, 0x81, 0x1c, 0x3d, 0x35, 0x69, 0x43, 0xaf, 0x86,
	0x83, 0x21, 0xea, 0x82, 0x90, 0x3e, 0x53, 0x25, 0x6f, 0x5d, 0xcc, 0xef, 0x8f, 0x0e, 0x0e, 0xd0,
	0x50, 0xe5, 0x0a, 0xb4, 0xf0, 0xd9, 0xc9, 0xc4, 0x68, 0x45, 0x17, 0x0f, 0x6c, 0x4d, 0xff, 0x4b,
	0xfc, 0x86, 0x54, 0x2d, 0xc8, 0xe4, 0x3f, 0x1d, 0x9d, 0x94, 0x20, 0x8c, 0x22, 0x66, 0x08, 0xac,
	0x41, 0x2d, 0x10, 0xee, 0xd8, 0x30, 0xa7, 0xf7, 0xd9, 0xb1, 0xe4, 0x7c, 0x04, 0x84, 0xa1, 0x57,
	0x9f, 0x61, 0x0c, 0xeb, 0x10, 0x22, 0x46, 0x23, 0x72, 0xd4, 0xd2, 0x06, 0xe1, 0x3f, 0x62, 0xfc,
	0x95, 0x9a, 0x54, 0xcd, 0x5f, 0xdd, 0x15, 0x4b, 0x66, 0x5a, 0x27, 0x85, 0x43, 0xab, 0x2f, 0x07,
	0xb7, 0x9e, 0x7f, 0x02, 0x17, 0x15, 0xab, 0x79, 0xa0, 0x41, 0xd1, 0x5e, 0xad, 0x49, 0x25, 0xc2,
	0xab, 0x11, 0xb6, 0xb8, 0x2a, 0xba, 0x76, 0x4d, 0x45, 0x07, 0x22, 0xe3, 0x93, 0xb8, 0x94, 0xf9,
	0x1e, 0xf9, 0xbc, 0x83, 0xc8, 0x58, 0x63, 0xfc, 0xbf, 0xd0, 0x02, 0xce, 0x75, 0x3b, 0x1b, 0xee,
	0x0d, 0x0d, 0x6b, 0xfc, 0x45, 0xbd, 0x1f, 0x6d, 0x7f, 0xc6, 0x71, 0xfd, 0x8d, 0x3d, 0x0e, 0x6a,
	0xd5, 0x9d, 0x25, 0x6f, 0xc4, 0x86, 0x38, 0xcc, 0xf5, 0x07, 0xfe, 0x0f, 0xb7, 0xd8, 0xbd, 0xad,
	0x22, 0x65, 0x01, 0x59, 0x17, 0xc6, 0x9e, 0xb2, 0x3e, 0x11, 0x06, 0xe1, 0xd8, 0xa9, 0xb5, 0xad,
	0x95, 0x9e, 0x0e, 0x4a, 0x45, 0x12, 0x1a, 0x1d, 0x94, 0x8a, 0x40, 0xcc, 0xdd, 0x97, 0xc8, 0x52,
	0x6a, 0x35, 0xb8, 0x06, 0xfd, 0x8f, 0x8c, 0xb5, 0x3c, 0xdc, 0x91, 0x48, 0xa0, 0x0e, 0xee, 0x06,
	0x2c, 0x82, 0xbc, 0x86, 0x55, 0xe7, 0x46, 0xc6, 0x6f, 0x90, 0xc2, 0x15, 0x19, 0x04, 0x65, 0x2f,
	0x51, 0x4b, 0x1c, 0xa9, 0x0a, 0xb3, 0xf6, 0x54, 0xbb, 0xc2, 0x5e, 0x15, 0x10, 0xc2, 0x88, 0x5d,
	0x07, 0x07, 0xec, 0x9a, 0x69, 0x60, 0x8a, 0xf0, 0x7e, 0x4f, 0xe6, 0xd9, 0xce, 0x71, 0x9c, 0x98,
	0x78, 0x9e, 0xcb, 0x62, 0xb6, 0x00, 0x58, 0xb7, 0xa5, 0x41, 0x30, 0xba, 0x42, 0x29, 0x2e, 0xbb,
	0xb5, 0x5a, 0x8c, 0xff, 0x8b, 0x18, 0x1a, 0x58, 0xb5, 0x58, 0xeb, 0x5d, 0x63, 0x22, 0xe9, 0xf7,
	0xb0, 0x77, 0x8c, 0x23, 0x79, 0xae, 0x9e, 0x0f, 0xb7, 0xf2, 0xa9, 0x81, 0xa9, 0xe2, 0xbd, 0x82,
	0xa9, 0xfb, 0x99, 0x89, 0xc7, 0xd8, 0x2c, 0x35, 0xa6, 0xa0, 0xf7, 0x8e, 0x58, 0xcc, 0x31, 0xd4,
	0xf9, 0xd9, 0x24, 0x55, 0x82, 0xae, 0xe8, 0x14, 0xf6, 0xde, 0x85, 0x9b, 0x37, 0x0c, 0xd7, 0x38,
	0xf7, 0xe9, 0xea, 0x78, 0x06, 0xa6, 0x06, 0xdd, 0xdb, 0x1f, 0xe4, 0x3a, 0x70, 0xec, 0x52, 0x60,
	0x60, 0xff, 0x47, 0x29, 0xac, 0x72, 0x96, 0x0f, 0xdd, 0xb1, 0x9b, 0xb4, 0x56, 0x96, 0xdd, 0x34,
	0x38, 0x4b, 0x26, 0xcb, 0x8d, 0x33, 0xb2, 0x9d, 0x6f, 0x68, 0x64, 0x55, 0x4b, 0x1f, 0xa9, 0xef,
	0x3c, 0x67, 0x80, 0x4c, 0x41, 0x5d, 0x69, 0x33, 0x33, 0x2e, 0x3c, 0x93, 0x2b, 0xa9, 0x82, 0x2c,
	0x75, 0xf9, 0x8c, 0xcd, 0xf0, 0xb3, 0x11, 0xf9, 0xff, 0x33, 0x9a, 0x35, 0x07, 0xd9, 0x28, 0x8d,
	0x56, 0xc2, 0x82, 0x0f, 0x47, 0x7f, 0x94, 0xa3, 0xe4, 0x95, 0x48, 0x99, 0x86, 0xb5, 0x6b, 0xe1,
	0xa4, 0xe5, 0x54, 0x5b, 0x9b, 0x2c, 0xd4, 0xc6, 0x7b, 0x62, 0x4e, 0x0d, 0xff, 0xa4, 0x31, 0xab,
	0x4d, 0x4f, 0x60, 0xaa, 0x78, 0xaf, 0x19, 0xdf, 0xf8, 0x31, 0xa9, 0x4f, 0x1e, 0x86, 0xda, 0x16,
	0x10, 0x84, 0x0f, 0x58, 0xd8, 0xff, 0x45, 0x54, 0x5f, 0x90, 0x25, 0xa2, 0xfa, 0x5c, 0xfd, 0xa9,
	0x57, 0x44, 0x0f, 0x02, 0x9b, 0xd2, 0xb4, 0x23, 0xe0, 0xad, 0x89, 0xc5, 0xb0, 0x3c, 0x36, 0x05,
	0xe9, 0x6a, 0x53, 0x5b, 0x86, 0xd5, 0x81, 0x0b, 0x9c, 0x5a, 0xaa, 0x95, 0x48, 0x1e, 0xd8, 0x56,
	0x3a, 0xd3, 0xb6, 0xc2, 0x6b, 0xf9, 0xbb, 0x20, 0x17, 0xdd, 0x39, 0xca, 0x1e, 0xeb, 0x5c, 0x54,
	0xbe, 0x58, 0x2c, 0x08, 0x64, 0x2b, 0xd6, 0xc1, 0x81, 0xa9, 0x33, 0xc1, 0x44, 0xc2, 0x3b, 0x01,
	0xc3, 0xf8, 0xbf, 0xd2, 0x86, 0x11, 0xc1, 0x8b, 0x8c, 0x71, 0x0a, 0x24, 0xa9, 0x41, 0x98, 0x24,
	0x80, 0xe2, 0x2b, 0xc0, 0x45, 0x1a, 0x0f, 0xe3, 0x87, 0x38, 0x1b, 0x94, 0x8a, 0x82, 0xa1, 0x28,
	0x39, 0x49, 0x5e, 0xde, 0xd3, 0xab, 0xa5, 0x03, 0xac, 0x93, 0x8b, 0xf4, 0x56, 0xa8, 0xd4, 0x9e,
	0xce, 0xcd, 0xd4, 0x1d, 0x9f, 0x19, 0x4a, 0x93, 0xf6, 0xc0, 0xad, 0xe2, 0xbd, 0x21, 0xe6, 0xf4,
	0x97, 0xd1, 0x9e, 0xa8, 0x09, 0xa4, 0xd9, 0xf0, 0x05, 0xa6, 0xb0, 0x3a, 0x06, 0xd4, 0x02, 0xe1,
	0xf2, 0x39, 0x8b, 0xd0, 0x7e, 0xed, 0x38, 0x08, 0x14, 0xe1, 0xdc, 0x20, 0xfc, 0xaf, 0x63, 0xf0,
	0x43, 0x97, 0x8e, 0x7c, 0x28, 0xe6, 0x73, 0x33, 0xdd, 0x63, 0x24, 0xc5, 0xf5, 0x45, 0x18, 0xd8,
	0x4a, 0x60, 0x5f, 0x5c, 0x1e, 0xdf, 0x31, 0xc9, 0x13, 0x90, 0xe4, 0x38, 0x38, 0x14, 0x2c, 0x1c,
	0xdc, 0xa9, 0x24, 0x58, 0x70, 0x70, 0x5e, 0x20, 0xbc, 0xb0, 0x3c, 0xae, 0x4c, 0xef, 0x38, 0x57,
	0xa3, 0xfa, 0x2a, 0x08, 0x1a, 0x6a, 0xab, 0x36, 0x23, 0x79, 0x50, 0x6d, 0xb3, 0x37, 0x7d, 0x9b,
	0xf5, 0xda, 0xe4, 0xe8, 0x53, 0x1e, 0x3f, 0x8c, 0x53, 0xf2, 0x5a, 0x30, 0x70, 0xe5, 0x28, 0x9c,
	0xad, 0x1d, 0x85, 0x3f, 0xd9, 0x12, 0x9f, 0x36, 0x03, 0x6a, 0x3c, 0xbe, 0xce, 0x4b, 0xba, 0xd4,
	0x14, 0x74, 0xe8, 0xbc, 0x94, 0xd4, 0x3a, 0x19, 0x93, 0xce, 0x8f, 0x4d, 0x10, 0x84, 0x22, 0x8a,
	0xa2, 0xf5, 0xd3, 0xa1, 0x96, 0x6c, 0x21, 0xe4, 0xff, 0xa3, 0x0e, 0x70, 0xb6, 0x96, 0x10, 0x5a,
	0x67, 0x1a, 0xcb, 0x2f, 0x2f, 0xd5, 0xf5, 0xa5, 0x4b, 0x5a, 0x5f, 0xea, 0x89, 0x6e, 0xa1, 0x73,
	0x75, 0x2f, 0x05, 0xf0, 0x5f, 0xe1, 0x72, 0x1b, 0x1f, 0x11, 0xfe, 0x6b, 0x35, 0x01, 0xbe, 0x1d,
	0xd4, 0x04, 0x6f, 0x8b, 0xf9, 0xc2, 0x1c, 0xd8, 0x33, 0xe3, 0xc3, 0x20, 0xc1, 0x69, 0x09, 0x8b,
	0xcf, 0x14, 0x57, 0x9b, 0x7a, 0x3f, 0x0f, 0xd3, 0xfe, 0x11, 0x06, 0x92, 0x9a, 0xc5, 0xf0, 0x54,
	0x0c, 0x65, 0x75, 0xb2, 0x73, 0x5c, 0x27, 0xfb, 0xbc, 0x58, 0xd2, 0xe7, 0x2f, 0xa8, 0x6f, 0xe1,
	0x0e, 0xbd, 0x14, 0xb8, 0x48, 0xef, 0x73, 0xe2, 0x52, 0x24, 0x8b, 0x32, 0xcb, 0xcf, 0x6c, 0xcc,
	0x06, 0x4a, 0xa9, 0x59, 0xc5, 0x6b, 0x46, 0x54, 0xf1, 0x04, 0xb6, 0xf0, 0x82, 0x65, 0x44, 0x9d,
	0x07, 0x6c, 0x1a, 0x16, 0xf9, 0x34, 0x60, 0x1a, 0x52, 0xd8, 0xcc, 0x7b, 0x43, 0x8a, 0xb5, 0x6e,
	0x11, 0x0e, 0x67, 0x73, 0x61, 0x4a, 0xce, 0xc6, 0xff, 0x02, 0xa4, 0x57, 0xbc, 0x2b, 0xcb, 0xf5,
	0xd3, 0xe1, 0x24, 0xae, 0xcb, 0x17, 0x8b, 0x26, 0xe0, 0x86, 0x15, 0xad, 0x3a, 0x38, 0xff, 0x37,
	0x5a, 0xb0, 0x4a, 0xd4, 0x4b, 0xaa, 0xab, 0x44, 0x9f, 0xd8, 0x6b, 0x3c, 0x27, 0x1f, 0x86, 0x61,
	0xfd, 0xee, 0x2c, 0xd6, 0x64, 0x01, 0xfe, 0x03, 0x2f, 0x3d, 0xca, 0x4f, 0xe2, 0x93, 0x50, 0xcb,
	0x67, 0x0d, 0x0c, 0xf1, 0x91, 0xd3, 0xef, 0x1e, 0xe5, 0x96, 0x63, 0x26, 0x50, 0xcd, 0x64, 0x24,
	0xc3, 0xf2, 0x88, 0x94, 0x17, 0x08, 0x80, 0x5b, 0x91, 0xe2, 0x47, 0x28, 0x95, 0x11, 0x70, 0x54,
	0x6f, 0xb2, 0x71, 0x9a, 0x9d, 0x26, 0x13, 0x89, 0x19, 0xac, 0xef, 0x04, 0x12, 0xe9, 0x1c, 0xc9,
	0xc0, 0x2c, 0xcb, 0x83, 0x2c, 0x97, 0xf7, 0x86, 0x9a, 0xd5, 0xd2, 0x30, 0xdc, 0x1d, 0x0f, 0x4a,
	0x99, 0xdf, 0xd3, 0x8a, 0x2f, 0x0d, 0xda, 0x5d, 0xd2, 0x61, 0xbb, 0xc4, 0xff, 0x08, 0xd8, 0x97,
	0x07, 0xe0, 0x65, 0x12, 0x61, 0x02, 0xcc, 0x49, 0x7c, 0xfa, 0xb3, 0x78, 0x1f, 0xe6, 0x51, 0xd2,
	0x2c, 0xc2, 0xff, 0xef, 0x7b, 0x70, 0x9b, 0xe1, 0x33, 0x61, 0x35, 0x2b, 0xbe, 0x58, 0x8c, 0x8b,
	0x95, 0xf8, 0x70, 0x25, 0x07, 0x9f, 0x16, 0x12, 0x08, 0x3b, 0x38, 0xef, 0x63, 0x71, 0xd1, 0x4c,
	0x2f, 0x19, 0xad, 0x23, 0xdf, 0xf0, 0x62, 0xf3, 0x11, 0xd0, 0x4c, 0xb1, 0x82, 0x6a, 0x23, 0xde,
	0x47, 0xe2, 0x82, 0x66, 0x9f, 0xa8, 0xd9, 0x4e, 0xb3, 0x34, 0xa0, 0x81, 0xdc, 0x04, 0x95, 0xaa,
	0xaa, 0x31, 0x9d, 0xd8, 0x90, 0x1a, 0x1b, 0x23, 0x2b, 0x6c, 0x58, 0x95, 0x41, 0xa5, 0xaa, 0x71,
	0x10, 0xc1, 0x23, 0xb2, 0x87, 0x4c, 0x86, 0xc5, 0x78, 0xef, 0x09, 0xf1, 0x38, 0xac, 0x38, 0x75,
	0x9c, 0xc3, 0xb1, 0xb1, 0x0a, 0xd5, 0x68, 0x79, 0xb3, 0xb5, 0x68, 0x79, 0x4d, 0x91, 0xfb, 0xe6,
	0x1a, 0x23, 0xf7, 0xb1, 0x80, 0x76, 0xf3, 0x4f, 0x10, 0xd0, 0x0e, 0x62, 0x93, 0x7c, 0x6d, 0x14,
	0x23, 0xbf, 0x2a, 0xa0, 0x69, 0x8b, 0x70, 0x0c, 0xda, 0x16, 0x78, 0xb6, 0x7d, 0x3c, 0x1a, 0xc8,
	0xa7, 0x0d, 0x9d, 0xa1, 0x08, 0xf2, 0xd6, 0xc4, 0x85, 0xc1, 0xa8, 0x8c, 0xf3, 0xad, 0x2c, 0x45,
	0xb7, 0x26, 0x92, 0xa1, 0x4d, 0x16, 0xf4, 0x56, 0xea, 0x38, 0xfe, 0xb1, 0x17, 0x5c, 0xff, 0x58,
	0xd4, 0x1d, 0xf6, 0x51, 0x04, 0x75, 0x51, 0xeb, 0x0e, 0x11, 0xa6, 0xe4, 0xd3, 0x30, 0x3b, 0x4e,
	0x08, 0x8a, 0x24, 0x2b, 0x0a, 0xdc, 0x17, 0x14, 0x52, 0xcb, 0x20, 0xf4, 0xd3, 0x40, 0xf1, 0x15,
	0xb0, 0xa0, 0xdb, 0x81, 0x45, 0xc0, 0x10, 0x24, 0xb4, 0x00, 0xd0, 0x1b, 0xd5, 0xc0, 0xfe, 0x17,
	0xe1, 0x65, 0x6b, 0xf2, 0xe0, 0x0e, 0xcb, 0x64, 0xa1, 0xce, 0x98, 0x91, 0xf1, 0x2d, 0xd7, 0xfa,
	0x1a, 0x86, 0x02, 0xdb, 0x3a, 0x8c, 0xfd, 0xaa, 0x65, 0x0f, 0x06, 0xf6, 0xff, 0x0d, 0xcc, 0x67,
	0x5d, 0x25, 0x97, 0x57, 0x44, 0x2f, 0x2e, 0x14, 0x0b, 0x81, 0xfb, 0x12, 0x01, 0xef, 0x03, 0x31,
	0x1b, 0x96, 0xc7, 0xc4, 0xc0, 0x37, 0xca, 0x45, 0x1a, 0x37, 0x7b, 0xa0, 0x6b, 0xa9, 0x06, 0x22,
	0x79, 0x40, 0xbc, 0xfb, 0x93, 0x34, 0x40, 0xb5, 0xbc, 0x3b, 0xe2, 0x42, 0x58, 0x1e, 0xb3, 0xe1,
	0x1e, 0xa7, 0xaf, 0x70, 0x67, 0x24, 0xa8, 0xd4, 0x52, 0xed, 0x44, 0xf2, 0x80, 0xb7, 0xd3, 0x9b,
	0xae, 0x1d, 0xb7, 0x96, 0x1a, 0x7c, 0xd8, 0x9e, 0xb4, 0xf2, 0x66, 0xd0, 0x4d, 0x8f, 0xa1, 0xbc,
	0x0f, 0xc1, 0xf8, 0x4c, 0x4f, 0xd8, 0xb8, 0x70, 0x75, 0xee, 0x9c, 0x06, 0xbc, 0x4a, 0x85, 0x6b,
	0x9b, 0xab, 0x72, 0x6d, 0xde, 0x4b, 0xc2, 0xb3, 0xd9, 0xe9, 0x57, 0xb3, 0xf4, 0x20, 0x3e, 0x34,
	0x29, 0xa3, 0x1a, 0x9e, 0x28, 0xb6, 0x21, 0x97, 0xe5, 0x28, 0x87, 0xb0, 0x08, 0x18, 0x72, 0x17,
	0xd8, 0x86, 0x4e, 0x50, 0xc3, 0x7b, 0xf7, 0xc4, 0x45, 0x86, 0x63, 0xd2, 0xf3, 0xba, 0x73, 0xbc,
	0x2d, 0x06, 0x44, 0xb7, 0x52, 0xcd, 0xbb, 0x2f, 0x2e, 0x87, 0xe5, 0xf1, 0xed, 0x24, 0xc1, 0x19,
	0x86, 0x60, 0x8e, 0x24, 0x39, 0xbf, 0x31, 0x36, 0xd2, 0xa3, 0xf6, 0x50, 0xac, 0x57, 0x55, 0xed,
	0x45, 0xf2, 0xa0, 0xd2, 0xde, 0xd2, 0xb4, 0xed, 0xd5, 0xaa, 0xfa, 0x23, 0x0c, 0x77, 0xea, 0x7c,
	0x85, 0x43, 0x8f, 0x5a, 0x15, 0x7a, 0xb4, 0x26, 0x2e, 0xd8, 0x6f, 0x64, 0x97, 0xda, 0xc9, 0x67,
	0x79, 0xa5, 0x8e, 0xff, 0xb3, 0xe4, 0x4d, 0x43, 0x01, 0xf7, 0x68, 0x4f, 0x3f, 0x2b, 0xe6, 0x49,
	0xa7, 0x7c, 0x6f, 0x9b, 0x76, 0xb4, 0x45, 0x28, 0x4a, 0x18, 0xe5, 0xd9, 0xf0, 0xde, 0xb6, 0x8e,
	0x1b, 0x86, 0x10, 0xda, 0xeb, 0x29, 0x6e, 0x91, 0xce, 0x74, 0x00, 0x20, 0xfd, 0xb5, 0xf1, 0x37,
	0x5c, 0x0a, 0x10, 0x60, 0x0c, 0x38, 0x31, 0xda, 0xc4, 0x80, 0x3f, 0x2b, 0xe6, 0xc3, 0x28, 0x5a,
	0x0b, 0x07, 0xe1, 0xa1, 0xd4, 0x37, 0x38, 0x83, 0xf0, 0x7f, 0xa3, 0xcd, 0x7b, 0x4b, 0x6e, 0x83,
	0x90, 0x59, 0x2e, 0x4e, 0xa7, 0xce, 0x2c, 0xa7, 0x8a, 0x7a, 0xaf, 0x1a, 0x6a, 0xde, 0x9e, 0x82,
	0x5a, 0x6b, 0x5a, 0x5f, 0x65, 0x02, 0xe9, 0xa2, 0xc6, 0x71, 0x0d, 0xa7, 0x7b, 0xf7, 0x1b, 0x3f,
	0xdd, 0xdf, 0x17, 0x62, 0x60, 0xa6, 0x66, 0x1c, 0x8d, 0x70, 0x27, 0x2f, 0x60, 0x35, 0xdc, 0xa8,
	0x38, 0x33, 0x4e, 0x70, 0x45, 0x4c, 0x2c, 0xa6, 0xee, 0x52, 0xb3, 0x56, 0x80, 0xff, 0xef, 0xb6,
	0x19, 0x39, 0x46, 0xc7, 0x39, 0x5a, 0x0f, 0xa9, 0x71, 0xae, 0xa3, 0x03, 0xc5, 0x20, 0x1c, 0x7f,
	0x26, 0x6d, 0x08, 0xce, 0x30, 0xea, 0xf9, 0x30, 0xcc, 0xc3, 0xbd, 0x38, 0x2d, 0x5f, 0xb9, 0x45,
	0x52, 0x03, 0x86, 0xd1, 0xcf, 0x77, 0xca, 0x3c, 0x4e, 0x0f, 0x61, 0xb4, 0xe6, 0x03, 0x86, 0x71,
	0x43, 0x0e, 0xf4, 0xaa, 0x21, 0x07, 0x14, 0x13, 0x88, 0xa3, 0x98, 0x94, 0x74, 0xe3, 0xb4, 0x08,
	0x45, 0x6c, 0xe2, 0xe2, 0x5e, 0x78, 0x22, 0xed, 0xbd, 0x5e, 0x67, 0x7b, 0xac, 0xe2, 0x8d, 0xf3,
	0xbf, 0xb6, 0xad, 0x24, 0x08, 0x82, 0x33, 0x28, 0xd2, 0x87, 0xfe, 0xd5, 0xf0, 0xdf, 0xdf, 0x63,
	0xbc, 0x25, 0x8e, 0x53, 0x61, 0xe4, 0xf8, 0x6f, 0x89, 0x59, 0x1c, 0x9c, 0x62, 0x5c, 0x74, 0xf4,
	0xca, 0xf8, 0x06, 0xba, 0xbc, 0xbf, 0x89, 0xa9, 0xb1, 0x63, 0x47, 0x92, 0x39, 0x49, 0x0b, 0x81,
	0xdb, 0xc6, 0x08, 0xef, 0x7a, 0x01, 0xc3, 0xf8, 0x0f, 0x81, 0x5d, 0x37, 0xad, 0x01, 0x1d, 0x5c,
	0xd5, 0xca, 0x2a, 0x85, 0x9e, 0x98, 0xcc, 0xda, 0x76, 0x22, 0xa8, 0x54, 0xf1, 0x7f, 0xab, 0x8d,
	0x19, 0xf1, 0x8e, 0xc2, 0xf2, 0x91, 0x51, 0x10, 0x5c, 0x17, 0x02, 0x52, 0xbe, 0xa0, 0x6f, 0x05,
	0x52, 0x0d, 0x86, 0x61, 0x8e, 0xfc, 0x6b, 0x5c, 0x45, 0x00, 0x66, 0xb6, 0x5c, 0x7d, 0xd0, 0xa9,
	0xa8, 0x0f, 0x6e, 0x88, 0x85, 0x3e, 0xe4, 0x55, 0x40, 0x97, 0x7c, 0xb4, 0xdd, 0xe2, 0x28, 0x10,
	0x6f, 0x1e, 0x85, 0x25, 0x33, 0xdd, 0x32, 0xb0, 0xc9, 0x43, 0x32, 0xd3, 0x98, 0x87, 0x64, 0x76,
	0x52, 0x1e, 0x92, 0xb9, 0x7a, 0xa8, 0x62, 0xe0, 0x9d, 0xc2, 0x3c, 0xda, 0xe8, 0x67, 0x29, 0xac,
	0x87, 0xf9, 0xc0, 0x22, 0x2a, 0x99, 0x48, 0x44, 0x2d, 0x13, 0xc9, 0x13, 0x65, 0x0b, 0x89, 0x2b,
	0xd9, 0x42, 0xe2, 0xc8, 0xff, 0x89, 0x9e, 0x1d, 0x76, 0x28, 0x3d, 0x39, 0x59, 0xcd, 0xef, 0xdf,
	0x80, 0x43, 0xde, 0xda, 0x30, 0x2e, 0x24, 0x4f, 0x80, 0xc1, 0x51, 0x18, 0x79, 0xc1, 0xa4, 0xc1,
	0x41, 0x42, 0xce, 0x30, 0xa0, 0x4d, 0xca, 0xf2, 0x52, 0xcb, 0x25, 0x50, 0x9b, 0xa4, 0x11, 0xea,
	0x9b, 0xb0, 0xb1, 0x88, 0x26, 0x41, 0x83, 0x6a, 0x3f, 0xe3, 0x37, 0x6c, 0x5a, 0x8a, 0x83, 0xc2,
	0x89, 0x1a, 0xde, 0x59, 0x16, 0x62, 0xcc, 0xb2, 0x58, 0x68, 0x5c, 0x16, 0x8b, 0x93, 0x96, 0xc5,
	0xd2, 0x39, 0xcb, 0xe2, 0xc2, 0xe4, 0x65, 0x71, 0xf1, 0xdc, 0x65, 0x71, 0xe9, 0x9c, 0x65, 0x71,
	0xd9, 0x5d, 0x16, 0x60, 0x39, 0x8c, 0x87, 0xf3, 0x0e, 0xa5, 0x93, 0x5e, 0x0a, 0x18, 0x06, 0xf8,
	0xef, 0xa3, 0xac, 0xcc, 0x46, 0x39, 0x9a, 0x24, 0xcf, 0x07, 0x06, 0x86, 0x99, 0x54, 0xff, 0x1f,
	0xc7, 0x69, 0x54, 0x1e, 0x81, 0x5b, 0x57, 0x2f, 0xe0, 0x28, 0x53, 0xe2, 0x48, 0xc6, 0x87, 0x47,
	0x98, 0x5f, 0x5a, 0x97, 0x40, 0x94, 0xff, 0x05, 0x38, 0x94, 0x61, 0x55, 0x92, 0x36, 0x12, 0x43,
	0x80, 0xc0, 0x3a, 0x2c, 0xc6, 0x19, 0xc0, 0x39, 0xab, 0x38, 0xa0, 0xc2, 0xfe, 0x8f, 0x62, 0x18,
	0x53, 0xfb, 0x50, 0xab, 0x7c, 0x97, 0xc5, 0x2c, 0x98, 0x16, 0x27, 0x3a, 0xab, 0xa1, 0x06, 0xbd,
	0x77, 0xc8, 0x1c, 0x8c, 0x69, 0x30, 0xce, 0x79, 0x99, 0x2d, 0x0f, 0x62, 0xf5, 0xd1, 0xfe, 0x2a,
	0x1a, 0x2d, 0x53, 0xcc, 0x04, 0x86, 0xf1, 0x7f, 0x88, 0xf5, 0xc7, 0x49, 0x87, 0x35, 0xbe, 0x3f,
	0x6c, 0x43, 0xb6, 0xdd, 0x0d, 0xf9, 0x0e, 0x4f, 0xa1, 0xd5, 0x99, 0xd0, 0x53, 0xc3, 0x78, 0xb0,
	0x24, 0x5a, 0xdf, 0x8f, 0x36, 0x5f, 0x98, 0x23, 0x88, 0x8c, 0xac, 0xad, 0xf2, 0x71, 0x4c, 0x5f,
	0x14, 0xc3, 0x72, 0x14, 0x27, 0xd1, 0x2a, 0x3d, 0xa6, 0xf0, 0xc9, 0x1c, 0xa7, 0x6a, 0x93, 0x47,
	0x80, 0x36, 0x6f, 0x24, 0xd0, 0xdb, 0x13, 0xde, 0x63, 0xc5, 0xbf, 0x63, 0xe6, 0x1b, 0x3d, 0xc4,
	0xdd, 0xe6, 0x9b, 0xd3, 0x43, 0xa7, 0xa4, 0x11, 0x11, 0xd7, 0x1b, 0x38, 0xff, 0x3c, 0xb7, 0x7a,
	0xe6, 0x99, 0x8a, 0x9e, 0xd9, 0xff, 0x7a, 0xcb, 0x26, 0x48, 0xab, 0xbe, 0x4c, 0x13, 0xae, 0x5d,
	0x87, 0x1c, 0x72, 0x94, 0x2a, 0xa1, 0x88, 0x50, 0x78, 0xc6, 0x35, 0xc5, 0x1c, 0x55, 0x25, 0x6d,
	0x9d, 0x1a, 0x69, 0xf3, 0x77, 0xec, 0x8a, 0x80, 0x9c, 0x5e, 0x7a, 0x45, 0xbc, 0x23, 0xe6, 0x73,
	0x0d, 0x4f, 0x5c, 0xf4, 0x76, 0x76, 0x4d, 0x79, 0x7f, 0x15, 0xd5, 0xca, 0x59, 0x25, 0x13, 0xd9,
	0xb8, 0xc4, 0xe1, 0x57, 0x44, 0xef, 0xc4, 0x48, 0xbd, 0x7a, 0x01, 0x02, 0xfe, 0xdf, 0x6a, 0x55,
	0x5a, 0xa1, 0x71, 0xb9, 0x27, 0x2e, 0x68, 0xee, 0x3d, 0x2b, 0x99, 0x2a, 0xa3, 0xae, 0x86, 0xad,
	0xbc, 0x3f, 0xa8, 0xd4, 0x53, 0x97, 0x0e, 0xe0, 0xdf, 0x65, 0xa4, 0x5b, 0x1a, 0x67, 0x4a, 0xab,
	0x38, 0x3b, 0x7d, 0xdd, 0xa9, 0xd4, 0x51, 0xbd, 0x3f, 0x60, 0xa1, 0xe3, 0x10, 0xf0, 0xf7, 0xc0,
	0x2c, 0xa5, 0xba, 0xbe, 0xf5, 0xe8, 0xbe, 0xe1, 0xe4, 0x76, 0xfd, 0x4c, 0xe3, 0xc0, 0xba, 0xdb,
	0x82, 0xb2, 0xbb, 0xe6, 0x15, 0x82, 0xc2, 0x36, 0xcd, 0x98, 0x73, 0xb3, 0xb2, 0x04, 0x28, 0xd8,
	0xee, 0xf8, 0xd3, 0x8d, 0xa8, 0x86, 0xc5, 0xf8, 0xbb, 0xb0, 0x48, 0xdd, 0x77, 0x9e, 0x4f, 0x38,
	0x20, 0xb4, 0xcd, 0xa9, 0x4b, 0x3b, 0x18, 0xc6, 0xff, 0x3b, 0x6d, 0x30, 0x8a, 0xe0, 0x39, 0x0f,
	0xbe, 0x09, 0xed, 0x03, 0x69, 0x1a, 0xba, 0x56, 0xd3, 0x40, 0x71, 0xd4, 0xc9, 0xda, 0x8d, 0xce,
	0x6c, 0x8b, 0x71, 0x35, 0x11, 0x8b, 0xdf, 0x94, 0x26, 0x62, 0x69, 0x82, 0x26, 0xe2, 0x02, 0xd7,
	0x44, 0xf8, 0x62, 0x11, 0x1a, 0xd9, 0x1b, 0xa2, 0x22, 0xe2, 0x32, 0xa9, 0x46, 0x19, 0x0e, 0xec,
	0x4b, 0xc2, 0x74, 0xb4, 0x1a, 0x0e, 0xe1, 0xf0, 0x9b, 0x0b, 0x34, 0xa8, 0x9f, 0x6c, 0x44, 0xa7,
	0xe4, 0x8b, 0xa3, 0x41, 0xff, 0xd8, 0x0c, 0xa5, 0xee, 0x2d, 0xe4, 0xbe, 0x85, 0xfe, 0x66, 0x87,
	0x71, 0x9f, 0xe9, 0x61, 0x2b, 0x58, 0x6e, 0xea, 0xd1, 0x76, 0x4d, 0x3d, 0xae, 0x8a, 0x99, 0xfe,
	0xc8, 0x5c, 0x0c, 0xbb, 0x01, 0x41, 0xfe, 0x5f, 0xee, 0x80, 0x92, 0x61, 0x1b, 0x84, 0x5e, 0x5c,
	0xc9, 0x10, 0x39, 0x4a, 0x86, 0xc8, 0x8d, 0xbc, 0xdd, 0x3e, 0x27, 0xf2, 0x76, 0xa7, 0x1e, 0x79,
	0xfb, 0x8a, 0xe8, 0x3d, 0x78, 0x9c, 0x5a, 0x0f, 0x3b, 0x00, 0x50, 0x71, 0x2b, 0x87, 0x36, 0xa7,
	0x2f, 0xd2, 0x5c, 0x17, 0x89, 0xa9, 0x7f, 0xe5, 0x30, 0x80, 0x28, 0x8f, 0x50, 0x6c, 0x46, 0xa7,
	0xfe, 0xe5, 0x58, 0x0c, 0x86, 0x84, 0x36, 0xca, 0x4c, 0x8d, 0xe7, 0xe0, 0x30, 0xe4, 0x19, 0xc2,
	0x98, 0x4f, 0x1a, 0xb9, 0x38, 0x17, 0x09, 0x91, 0xc9, 0xd5, 0x5a, 0x3e, 0x1d, 0xea, 0x24, 0xbe,
	0x04, 0x42, 0xfc, 0xb0, 0x30, 0x2d, 0xb2, 0x01, 0xd9, 0x5c, 0x9e, 0x1b, 0x3f, 0x0c, 0x0a, 0xab,
	0x6a, 0xfb, 0x6a, 0xff, 0x9d, 0x51, 0x0c, 0x9b, 0xf3, 0xaa, 0x61, 0x61, 0x3f, 0xd7, 0x39, 0x10,
	0x8b, 0x2c, 0x35, 0x97, 0xb8, 0xd7, 0x98, 0x59, 0x04, 0xd2, 0x9c, 0x4f, 0x34, 0x64, 0x5e, 0xc3,
	0xf9, 0x64, 0xe6, 0x10, 0x2f, 0x88, 0x0b, 0x28, 0xdb, 0xdc, 0x0a, 0x4f, 0xf9, 0x34, 0x56, 0xb0,
	0xfe, 0xc0, 0xac, 0x3f, 0xf3, 0xc6, 0x37, 0x6b, 0x6f, 0x9c, 0x36, 0xdd, 0xc9, 0x0d, 0xb1, 0x90,
	0xa0, 0x0e, 0x8c, 0xc5, 0x96, 0xe1, 0x28, 0x3f, 0x05, 0x67, 0xec, 0x95, 0xd1, 0xc1, 0x81, 0x4b,
	0x34, 0xd0, 0xc5, 0x53, 0x5d, 0x06, 0xd4, 0x3a, 0xe0, 0xc6, 0x5b, 0x04, 0x57, 0x42, 0x81, 0x76,
	0x6a, 0xa1, 0x40, 0xcd, 0x49, 0x44, 0xe2, 0x1d, 0x3c, 0x89, 0xde, 0x87, 0xcf, 0x53, 0xef, 0x33,
	0x9f, 0xf7, 0x6d, 0x0e, 0x01, 0x7f, 0xa6, 0xc9, 0xb0, 0xc6, 0x12, 0xed, 0xff, 0x06, 0xed, 0xe3,
	0xee, 0x26, 0xd9, 0x7e, 0x98, 0xe8, 0x6e, 0xdb, 0xb0, 0x77, 0x5a, 0x11, 0x64, 0x60, 0xed, 0x1b,
	0x74, 0x12, 0x97, 0x67, 0x56, 0x06, 0x61, 0x31, 0xa0, 0x86, 0x27, 0x08, 0x56, 0x2d, 0x49, 0x6e,
	0x38, 0xce, 0xa6, 0xcd, 0xee, 0x56, 0xf2, 0xe6, 0x57, 0x52, 0x62, 0xf7, 0x1a, 0x53, 0x62, 0x57,
	0xd3, 0x6b, 0xcf, 0xd4, 0xd3, 0x6b, 0x93, 0x90, 0x6f, 0x37, 0x4c, 0x64, 0x6a, 0x24, 0x52, 0xc0,
	0xb5, 0x84, 0xe9, 0x5e, 0x21, 0xb7, 0xb3, 0x98, 0xe2, 0xd7, 0x2c, 0x05, 0x1c, 0xc5, 0xd4, 0x32,
	0xb1, 0x61, 0x5a, 0x18, 0x06, 0x25, 0xb4, 0xaa, 0x4d, 0x66, 0x96, 0xc1, 0x30, 0xfe, 0x99, 0x58,
	0xd8, 0xd9, 0x7d, 0x64, 0x08, 0xdd, 0x55, 0x31, 0x43, 0x11, 0x1f, 0x88, 0xa9, 0xa0, 0x68, 0x0f,
	0x93, 0x09, 0x1b, 0xf4, 0x87, 0x62, 0x95, 0x10, 0x04, 0x0b, 0x2f, 0x2c, 0xca, 0xbd, 0x42, 0xb2,
	0x64, 0x89, 0x1c, 0xe5, 0x47, 0x98, 0xfe, 0x48, 0xb5, 0x63, 0x3e, 0x58, 0x9d, 0xbc, 0x10, 0x74,
	0x4c, 0xe7, 0xa3, 0xd4, 0xa0, 0xf7, 0x3a, 0x3f, 0x61, 0xd0, 0xf2, 0x63, 0xb9, 0xa6, 0xd7, 0xa9,
	0x9f, 0x2e, 0xfe, 0xcf, 0x60, 0xb0, 0x01, 0x8a, 0xa0, 0x57, 0x11, 0x48, 0xb5, 0xc6, 0x09, 0xa4,
	0x48, 0xe0, 0xd4, 0xae, 0x09, 0x9c, 0xce, 0x13, 0x58, 0x39, 0x0c, 0x6c, 0xb7, 0x81, 0x81, 0x55,
	0x65, 0x81, 0x03, 0x82, 0x8f, 0xe8, 0x05, 0x16, 0xe1, 0xdf, 0x81, 0x9d, 0xa1, 0x7a, 0x6a, 0xc6,
	0xe3, 0x15, 0x31, 0x57, 0xc6, 0xc3, 0x62, 0x73, 0xc2, 0xee, 0xd0, 0xb1, 0x01, 0x4d, 0x41, 0xff,
	0xdb, 0xb1, 0x9d, 0xb0, 0x38, 0xe6, 0x31, 0x69, 0xca, 0xb0, 0x38, 0x36, 0xed, 0x2c, 0x05, 0x06,
	0xf6, 0xff, 0x41, 0x5b, 0xcc, 0x2b, 0x02, 0x18, 0x0f, 0x49, 0xbd, 0x72, 0x12, 0x0f, 0xcd, 0xd8,
	0x20, 0xa0, 0xea, 0x9f, 0xc4, 0x43, 0xbb, 0xc8, 0xba, 0x81, 0x81, 0xe9, 0x19, 0xf7, 0x19, 0x32,
	0xb0, 0x77, 0x4b, 0x5c, 0x49, 0xe5, 0x69, 0xa9, 0x4e, 0xc8, 0xf4, 0xae, 0x2c, 0x3f, 0xde, 0xd8,
	0xc6, 0x36, 0x70, 0x1b, 0x35, 0x3e, 0x83, 0x4b, 0x47, 0x3c, 0x04, 0x35, 0x20, 0x4a, 0x0f, 0x34,
	0xe8, 0xbd, 0x28, 0x2e, 0xf7, 0x43, 0x55, 0x76, 0x2d, 0x8c, 0x93, 0x33, 0xa6, 0xd8, 0x98, 0x0b,
	0xea, 0x0f, 0xbc, 0xbb, 0x62, 0xe9, 0xe3, 0x78, 0xb8, 0x53, 0x66, 0xb9, 0x54, 0x3c, 0xab, 0x0e,
	0xae, 0xf8, 0xdc, 0xf8, 0x28, 0xca, 0x9a, 0x29, 0x75, 0xeb, 0x79, 0x2f, 0x8b, 0xa7, 0x34, 0x82,
	0x39, 0xae, 0x93, 0x24, 0xb0, 0xe9, 0x91, 0xff, 0x0e, 0xcc, 0x00, 0xcf, 0x0a, 0x65, 0x24, 0x85,
	0x38, 0xac, 0xf0, 0xdf, 0x65, 0xd5, 0x0d, 0x81, 0xbc, 0x0b, 0x9c, 0x7a, 0x55, 0x31, 0xe0, 0xbd,
	0xec, 0x10, 0xc9, 0xc9, 0x29, 0xa8, 0x90, 0x52, 0xfe, 0x49, 0x4c, 0xd7, 0x88, 0x89, 0x4d, 0x8d,
	0x1c, 0xfa, 0x6b, 0xa3, 0x18, 0x4d, 0xc6, 0xc1, 0x30, 0x76, 0x33, 0xeb, 0x1f, 0x6f, 0x67, 0x05,
	0x2d, 0x0a, 0x8b, 0xf0, 0x3e, 0x10, 0x4b, 0x8f, 0x75, 0xfe, 0x2a, 0x76, 0x7d, 0xae, 0x9d, 0x74,
	0x26, 0xc9, 0x55, 0xe0, 0x96, 0xf7, 0xbf, 0x03, 0x18, 0x1b, 0xf3, 0x58, 0x4d, 0xab, 0x2a, 0x80,
	0x2f, 0x83, 0x69, 0x25, 0x50, 0x2d, 0x20, 0xd0, 0xb3, 0xee, 0x59, 0x61, 0x94, 0x86, 0x41, 0x45,
	0x50, 0x9c, 0x90, 0x29, 0xf9, 0x52, 0x80, 0x80, 0xff, 0x73, 0xe8, 0x09, 0x87, 0x9f, 0x76, 0x27,
	0x54, 0xf3, 0x77, 0xb6, 0x1d, 0xf6, 0x8f, 0x15, 0x51, 0xbe, 0x2e, 0x04, 0xbc, 0xf0, 0xe3, 0xd0,
	0xde, 0x8d, 0x18, 0xc6, 0x7b, 0x93, 0xab, 0x79, 0xf1, 0xa3, 0x6a, 0x49, 0xc7, 0xa1, 0x38, 0x84,
	0x19, 0xe3, 0x2a, 0x60, 0x1e, 0x75, 0x77, 0x8c, 0xc7, 0xce, 0x56, 0x58, 0xca, 0x3c, 0x0e, 0x93,
	0x95, 0xb0, 0x90, 0x2c, 0xea, 0xee, 0x03, 0xb1, 0xe4, 0xb4, 0xda, 0x60, 0xaa, 0x64, 0x3e, 0xb4,
	0xcd, 0x3e, 0x14, 0x63, 0x26, 0xab, 0x31, 0xa4, 0xef, 0x27, 0xc8, 0x7f, 0x83, 0x22, 0xd0, 0xd9,
	0xb7, 0x35, 0xb1, 0xfb, 0x76, 0x71, 0x75, 0xf5, 0xe2, 0x7a, 0x88, 0xa9, 0x2b, 0x61, 0xe0, 0x76,
	0xc3, 0x63, 0xb9, 0xaa, 0x76, 0xca, 0x8a, 0x58, 0x2c, 0xe9, 0x3f, 0xa3, 0x34, 0x35, 0x65, 0x82,
	0x2e, 0xff, 0x08, 0x47, 0xc6, 0xa9, 0xe3, 0xff, 0x85, 0x36, 0x1d, 0x60, 0xbc, 0x0c, 0xc8, 0x9f,
	0xc2, 0x3c, 0xda, 0xce, 0x32, 0x6b, 0xfe, 0xcc, 0x30, 0x3a, 0x4e, 0xd4, 0x9d, 0x5c, 0x4a, 0x64,
	0xe2, 0xf1, 0xeb, 0x5d, 0x24, 0xc4, 0x22, 0xc8, 0x06, 0x61, 0x02, 0x01, 0x54, 0x68, 0x24, 0x18,
	0x06, 0xaf, 0xee, 0x76, 0x63, 0xd2, 0x59, 0xc3, 0x50, 0xea, 0x04, 0x3e, 0xc8, 0xa5, 0x7c, 0xe0,
	0x7a, 0xcd, 0x39, 0x38, 0x08, 0x02, 0x24, 0xcb, 0x3b, 0x71, 0x5e, 0x94, 0x0e, 0x69, 0xa9, 0x60,
	0xbd, 0xcf, 0x89, 0x4b, 0x52, 0xbd, 0x16, 0x41, 0xec, 0x36, 0x72, 0xba, 0x35, 0xbc, 0xff, 0x5d,
	0xa0, 0x33, 0xc1, 0x40, 0x7d, 0x8f, 0x56, 0xe9, 0xbb, 0xbd, 0x2f, 0x88, 0x4b, 0xd9, 0x50, 0xa6,
	0x1a, 0x9e, 0x34, 0xe6, 0xba, 0xcc, 0x23, 0xf0, 0x73, 0x0e, 0x6a, 0xf5, 0xfc, 0xbf, 0x82, 0x5a,
	0x3a, 0xb7, 0xdc, 0xb9, 0xe3, 0xfe, 0xac, 0x98, 0x3f, 0xa8, 0x8c, 0xb9, 0x45, 0xd4, 0x46, 0xab,
	0xd3, 0x30, 0x5a, 0x4d, 0xa3, 0xd0, 0x1d, 0x33, 0x0a, 0x2b, 0xa0, 0xba, 0x50, 0x24, 0xfc, 0x5e,
	0x0c, 0xc6, 0x5f, 0x15, 0x4f, 0xdc, 0xae, 0xf1, 0xc4, 0x25, 0x07, 0x55, 0x66, 0x80, 0x4d, 0xa0,
	0x7f, 0x17, 0xb3, 0x0d, 0xc2, 0xc2, 0x7d, 0x70, 0x70, 0x20, 0x73, 0x38, 0x11, 0x3e, 0x2f, 0xba,
	0x11, 0x06, 0x3c, 0x6c, 0x94, 0xa9, 0x98, 0x82, 0x8a, 0x38, 0x04, 0x50, 0xd4, 0xff, 0x79, 0x54,
	0x50, 0x38, 0x8f, 0x6a, 0x9e, 0x2d, 0x9e, 0xe8, 0xf6, 0xb3, 0x54, 0x6f, 0x46, 0xf8, 0x0f, 0x63,
	0x9a, 0xa5, 0x11, 0xec, 0xa3, 0xcf, 0x6b, 0xc3, 0x41, 0x8b, 0x71, 0x9e, 0xdf, 0xd2, 0xb1, 0xd9,
	0x2c, 0x06, 0x78, 0x9b, 0x01, 0x30, 0xcf, 0x64, 0x3e, 0xa3, 0x41, 0xd0, 0x8e, 0x0e, 0x64, 0xaa,
	0xd5, 0x70, 0x08, 0xa8, 0x3e, 0x65, 0x43, 0x58, 0x59, 0xbd, 0xa0, 0x9d, 0xa9, 0x9b, 0x8f, 0xea,
	0xc7, 0x01, 0x58, 0xbd, 0x34, 0x1c, 0x63, 0xce, 0x07, 0xad, 0x66, 0xe9, 0x01, 0x74, 0xfb, 0x00,
	0x2e, 0xf8, 0x71, 0x54, 0x90, 0x4a, 0x02, 0xfe, 0x2b, 0xf2, 0x73, 0x22, 0x73, 0x52, 0xad, 0xab,
	0xbf, 0x4e, 0xe7, 0x5f, 0x21, 0xd1, 0x37, 0xc3, 0xf8, 0xbf, 0x8d, 0xe6, 0xf4, 0xb5, 0x97, 0x40,
	0x34, 0x60, 0x85, 0x54, 0xf3, 0x64, 0x86, 0x90, 0xa3, 0x1c, 0x23, 0xcc, 0x0e, 0x19, 0x61, 0x7a,
	0xa2, 0x1b, 0xf7, 0x49, 0xaa, 0xd8, 0x09, 0xe0, 0x3f, 0x46, 0x36, 0x49, 0xf5, 0x15, 0xb5, 0x13,
	0x10, 0x04, 0x96, 0x62, 0x79, 0x09, 0x4d, 0xd0, 0xb8, 0x11, 0xa8, 0x3e, 0xa3, 0x3c, 0x2d, 0x69,
	0xd4, 0xd4, 0x5f, 0xd0, 0x1d, 0x9f, 0x96, 0x61, 0x7e, 0xa8, 0xd5, 0x37, 0x08, 0xa9, 0x11, 0x86,
	0x2e, 0x51, 0xa0, 0x64, 0x04, 0x50, 0x97, 0x90, 0x45, 0xa3, 0x7e, 0x49, 0x36, 0x09, 0x1a, 0x04,
	0x49, 0x4c, 0x58, 0x1c, 0x7d, 0xfe, 0xe5, 0x97, 0x69, 0x90, 0x34, 0xe8, 0xbd, 0x21, 0x7a, 0x21,
	0x10, 0x87, 0x85, 0x49, 0xdc, 0x04, 0x8b, 0x78, 0x1d, 0x60, 0x79, 0xb4, 0x54, 0x3b, 0x4b, 0x47,
	0x03, 0x50, 0x21, 0xa8, 0xcf, 0x03, 0x08, 0x14, 0xea, 0x61, 0x4a, 0x8f, 0x30, 0x3a, 0xa9, 0x45,
	0xf8, 0x3f, 0xd2, 0x63, 0x04, 0xdb, 0x2c, 0xd7, 0x29, 0x9c, 0xc8, 0x75, 0x59, 0xa4, 0xd5, 0xd6,
	0xe5, 0xf2, 0x23, 0x71, 0x61, 0x90, 0xa5, 0xe5, 0x91, 0x7e, 0x5e, 0xd0, 0x19, 0xf8, 0x99, 0xe6,
	0x84, 0xe8, 0x5b, 0xbc, 0x6c, 0x50, 0xa9, 0xea, 0xbd, 0x29, 0x9e, 0x19, 0x8e, 0xf2, 0xfe, 0x51,
	0x58, 0xc8, 0x48, 0x63, 0x59, 0xae, 0xbd, 0x6e, 0x30, 0xee, 0x31, 0x84, 0xd5, 0xc9, 0x31, 0x72,
	0x37, 0xee, 0x14, 0x0d, 0xd6, 0x43, 0x07, 0xf6, 0x9a, 0x42, 0x07, 0xbe, 0x20, 0x2e, 0x28, 0xc4,
	0x76, 0x78, 0xf6, 0x65, 0x19, 0xe6, 0x6b, 0xa1, 0x76, 0x28, 0xaf, 0x60, 0xbd, 0x77, 0x14, 0xbf,
	0x7e, 0x46, 0x64, 0x87, 0xb6, 0xce, 0x27, 0x9b, 0xc6, 0x8a, 0x8a, 0x04, 0xac, 0xb8, 0xf7, 0x45,
	0xe1, 0x15, 0xa3, 0xfd, 0xa2, 0x9f, 0xc7, 0xfb, 0xd2, 0x8e, 0xd7, 0x7c, 0xf3, 0xfe, 0xdb, 0xa9,
	0x96, 0x0c, 0x1a, 0x2a, 0x7b, 0xaf, 0x8b, 0xab, 0x07, 0x71, 0xbe, 0x32, 0x22, 0x26, 0x15, 0xfd,
	0xf2, 0x8d, 0xc5, 0x59, 0x37, 0x18, 0xf3, 0x54, 0x31, 0xd2, 0x61, 0x92, 0xcb, 0x30, 0x3a, 0x5b,
	0x19, 0x9d, 0xb1, 0x5a, 0x0b, 0x50, 0xab, 0xf1, 0x19, 0x5c, 0xe6, 0xc2, 0xe2, 0x28, 0x39, 0xd1,
	0xa6, 0xb2, 0x08, 0xa9, 0xb1, 0x5f, 0xa5, 0xc5, 0x8d, 0xeb, 0x4d, 0x83, 0x3a, 0x44, 0xcd, 0x6a,
	0x16, 0xc9, 0x02, 0xec, 0x64, 0xe7, 0x03, 0x8b, 0xf0, 0xff, 0x47, 0xa4, 0x9c, 0xce, 0xca, 0x6a,
	0xe4, 0x6b, 0x91, 0x9a, 0xb6, 0x8d, 0x10, 0x41, 0x5d, 0x7b, 0x70, 0x63, 0x51, 0xa8, 0xf5, 0xf9,
	0xc0, 0x22, 0xe8, 0x16, 0x8d, 0x57, 0xe5, 0x1d, 0x76, 0x6f, 0xaa, 0x60, 0xd5, 0xa9, 0x44, 0x6a,
	0xc8, 0x1d, 0xa6, 0x1e, 0x70, 0x70, 0x70, 0x86, 0xc3, 0x4a, 0x1f, 0xc4, 0x18, 0x82, 0x4f, 0x4b,
	0xaa, 0x5c, 0xac, 0x1a, 0x9a, 0x2c, 0xdd, 0x09, 0x29, 0x8a, 0xd2, 0x5c, 0x40, 0x90, 0x62, 0x45,
	0xf3, 0x30, 0x8d, 0xb2, 0x01, 0xe9, 0x78, 0x3b, 0x81, 0x81, 0xbd, 0x9b, 0xe2, 0x62, 0x96, 0x44,
	0xeb, 0xbc, 0x0b, 0x28, 0x9b, 0xaa, 0xa2, 0xd1, 0x82, 0xf4, 0x41, 0x51, 0xac, 0x66, 0x69, 0x99,
	0x67, 0x68, 0xc2, 0x04, 0x16, 0xa4, 0x16, 0xa7, 0x26, 0x21, 0x95, 0x32, 0xda, 0xce, 0x86, 0x14,
	0x5c, 0x49, 0x83, 0xfe, 0x6f, 0xa1, 0xa9, 0x70, 0xc3, 0xfe, 0xab, 0x49, 0x67, 0xde, 0x17, 0xd7,
	0xec, 0x8e, 0xa4, 0x9d, 0x56, 0x8d, 0x5a, 0x3a, 0xa1, 0x84, 0x5a, 0x55, 0xe6, 0xa9, 0x95, 0xe3,
	0x69, 0x2b, 0x9d, 0xc6, 0x67, 0xde, 0xbb, 0xe2, 0x13, 0x06, 0xbf, 0x89, 0x31, 0x1e, 0x77, 0x2b,
	0x37, 0xde, 0xf1, 0x05, 0x20, 0xb8, 0xe0, 0xe9, 0x30, 0xce, 0x65, 0x44, 0xb9, 0x3e, 0x34, 0xe8,
	0xff, 0x77, 0xa8, 0x4e, 0xab, 0x6d, 0xa3, 0xda, 0x47, 0xfb, 0x62, 0xf1, 0x50, 0x42, 0x44, 0x0b,
	0xce, 0xbe, 0x38, 0x38, 0x8c, 0x1b, 0x5a, 0xa2, 0xe5, 0x28, 0xff, 0xa4, 0x0a, 0x96, 0xad, 0x29,
	0xde, 0x7f, 0x07, 0xa7, 0x38, 0x9d, 0xa4, 0xfa, 0x9d, 0xb8, 0xf6, 0x6a, 0x78, 0xb5, 0xae, 0xb6,
	0x43, 0x08, 0x7f, 0x81, 0xeb, 0x8e, 0x20, 0xff, 0xef, 0xce, 0x6a, 0x45, 0x28, 0xb3, 0x00, 0x06,
	0x8b, 0xed, 0xe2, 0xe3, 0x30, 0xa1, 0xcf, 0x9b, 0x0b, 0x34, 0xa8, 0x23, 0x31, 0xb5, 0x6d, 0x24,
	0x26, 0x6d, 0x15, 0xa5, 0x6f, 0x42, 0x04, 0xb1, 0x7c, 0xcb, 0x5d, 0x27, 0xdf, 0x72, 0x45, 0x33,
	0xdd, 0x9b, 0x94, 0x5b, 0x79, 0xc6, 0xd1, 0x69, 0xa3, 0x6e, 0x1c, 0xc3, 0x9a, 0xe1, 0x29, 0x6a,
	0xe0, 0x89, 0x51, 0xc6, 0x5c, 0xc7, 0x8a, 0xf9, 0x9a, 0x63, 0xc5, 0x4b, 0xc2, 0xeb, 0x53, 0x88,
	0xad, 0x07, 0x07, 0x77, 0x29, 0x1e, 0x21, 0x69, 0xdf, 0x1b, 0x9e, 0xa8, 0x71, 0xef, 0x8f, 0x72,
	0x0d, 0xa2, 0x72, 0x00, 0xa3, 0xbf, 0xd6, 0xf0, 0x15, 0xb1, 0xce, 0x62, 0x4d, 0xac, 0x63, 0x34,
	0x08, 0x4b, 0x15, 0x5f, 0x06, 0x37, 0x36, 0xd9, 0x85, 0x86, 0xc4, 0x88, 0x56, 0x22, 0x72, 0x91,
	0x4b, 0x44, 0x5e, 0x10, 0x17, 0x8c, 0x6d, 0x17, 0x56, 0xa6, 0x60, 0x62, 0x2e, 0x16, 0x74, 0x96,
	0xf1, 0x21, 0x18, 0x32, 0xa3, 0x97, 0xf8, 0x7c, 0x60, 0x11, 0x20, 0xe0, 0xd3, 0xe5, 0x37, 0xd6,
	0x48, 0x41, 0xcf, 0x51, 0x30, 0x0a, 0x1a, 0xd4, 0xe2, 0xfd, 0xa7, 0x68, 0x14, 0x2a, 0x78, 0x45,
	0xa1, 0x0c, 0x8e, 0x54, 0x35, 0x57, 0xd0, 0x2f, 0xbd, 0x82, 0x56, 0xf3, 0x98, 0xc6, 0x14, 0xd3,
	0xf2, 0x69, 0x9c, 0x63, 0x0d, 0x5b, 0xef, 0xf6, 0x1d, 0x13, 0xbf, 0x0e, 0x63, 0x8a, 0x55, 0xd1,
	0xda, 0x3a, 0xe1, 0x71, 0x98, 0x63, 0x30, 0xbe, 0x67, 0xac, 0x75, 0x82, 0xc6, 0x39, 0xfd, 0xdf,
	0xca, 0x22, 0x88, 0x07, 0xb6, 0x5c, 0xe9, 0x3f, 0xe1, 0xbd, 0x0f, 0xc4, 0xcc, 0x7e, 0x76, 0xba,
	0x7e, 0x5a, 0x52, 0xac, 0xb1, 0xcf, 0xd6, 0xdd, 0x05, 0xa9, 0xc6, 0x9d, 0xb0, 0x38, 0x8a, 0xb3,
	0x54, 0xab, 0xf3, 0xa8, 0x1a, 0x7a, 0xc1, 0xef, 0xef, 0x27, 0x52, 0xb5, 0x71, 0xed, 0xc9, 0xda,
	0xb0, 0x35, 0x2b, 0x56, 0x13, 0x9f, 0xac, 0x5a, 0x4d, 0xf8, 0x8f, 0xc0, 0x9f, 0xce, 0xdd, 0xcc,
	0x14, 0xcf, 0xa2, 0x39, 0x84, 0xd8, 0xf5, 0x06, 0x9d, 0x24, 0xab, 0x5b, 0x0b, 0x1f, 0xf6, 0xab,
	0xe8, 0xc3, 0xa8, 0x55, 0xd9, 0xb9, 0x0d, 0x91, 0x35, 0x4e, 0xeb, 0x4b, 0x21, 0xac, 0x98, 0xcf,
	0xb9, 0x81, 0xcf, 0xf5, 0x78, 0x72, 0x96, 0x68, 0xb7, 0xba, 0x44, 0x99, 0x32, 0x14, 0x03, 0x8e,
	0x73, 0x23, 0x22, 0x1c, 0x33, 0xe3, 0x6c, 0x6a, 0x60, 0xff, 0x2b, 0x10, 0xfa, 0xb3, 0xf2, 0x01,
	0x5a, 0x94, 0xf5, 0xbe, 0x98, 0x53, 0x57, 0x31, 0x66, 0x32, 0xe0, 0x8f, 0x33, 0x19, 0xc8, 0x59,
	0xe0, 0x2a, 0x5d, 0xc7, 0xff, 0xd9, 0x0e, 0x88, 0x7f, 0xb6, 0x75, 0x4c, 0xbe, 0x38, 0x3d, 0x54,
	0xf8, 0x8d, 0x52, 0x0e, 0x18, 0x55, 0x6b, 0x39, 0x54, 0xcd, 0xd2, 0xc9, 0xb6, 0x43, 0x27, 0xf9,
	0xc0, 0x75, 0x2a, 0x03, 0xc7, 0xa3, 0x84, 0x77, 0x2b, 0x51, 0xc2, 0xdd, 0x41, 0xed, 0xd5, 0x06,
	0xb5, 0x61, 0x17, 0xcd, 0x34, 0xef, 0xa2, 0xeb, 0x42, 0x00, 0x39, 0xe2, 0x06, 0x4f, 0x0c, 0x83,
	0x3a, 0x67, 0x45, 0xea, 0x78, 0x88, 0x30, 0x8e, 0x82, 0xab, 0x05, 0x2a, 0xb7, 0xe6, 0xc9, 0x09,
	0x06, 0x20, 0xef, 0x1d, 0x96, 0x1a, 0x74, 0x4c, 0x84, 0x12, 0x1a, 0xbe, 0x7b, 0x54, 0x8c, 0x25,
	0x06, 0xbd, 0x2b, 0x96, 0x0e, 0x41, 0xc7, 0x42, 0x45, 0xc6, 0x5d, 0x78, 0xee, 0xf2, 0x42, 0x6a,
	0x0a, 0x02, 0xb7, 0x9e, 0x3f, 0x84, 0x73, 0xbd, 0x56, 0xcc, 0x49, 0x55, 0xd4, 0xaa, 0xa4, 0x2a,
	0xaa, 0x9c, 0x5e, 0xed, 0xfa, 0xe9, 0x05, 0x31, 0xc6, 0xc2, 0xc8, 0x64, 0xef, 0x81, 0x4c, 0xc2,
	0x08, 0xfb, 0xdf, 0x09, 0xb2, 0x82, 0xca, 0xa7, 0xd5, 0x04, 0x64, 0x17, 0x44, 0x3b, 0x39, 0xa1,
	0xa6, 0xdb, 0xc9, 0x49, 0xa3, 0x26, 0x1c, 0x2c, 0x94, 0x93, 0x2c, 0xb7, 0x16, 0xca, 0x49, 0x96,
	0xfb, 0xbf, 0x89, 0xc6, 0x14, 0xd5, 0xf5, 0x07, 0x72, 0x28, 0x04, 0x99, 0x8e, 0x98, 0xa3, 0xbc,
	0x3b, 0xa6, 0x04, 0x13, 0x3f, 0x3e, 0xdf, 0x6c, 0xd9, 0xef, 0x2e, 0xec, 0x80, 0x57, 0x04, 0x7b,
	0xd4, 0x33, 0x08, 0x61, 0x83, 0x16, 0x06, 0x04, 0xa9, 0x33, 0x76, 0x10, 0x9e, 0xb2, 0xaa, 0x3b,
	0xf1, 0xf7, 0x48, 0x4a, 0xe7, 0xd2, 0xf0, 0x44, 0x6d, 0xee, 0xad, 0x33, 0x5c, 0x78, 0x14, 0x61,
	0x95, 0x40, 0xff, 0x75, 0xb0, 0x53, 0x08, 0x74, 0x20, 0x88, 0xbd, 0x42, 0xe6, 0x5c, 0x9b, 0xa0,
	0xf6, 0x88, 0xd9, 0xbf, 0xdd, 0xc0, 0xc0, 0xfe, 0x9f, 0xe2, 0x29, 0x08, 0x58, 0x04, 0x1d, 0x63,
	0x96, 0x50, 0x17, 0x7d, 0x5e, 0x15, 0x33, 0x18, 0x5a, 0x47, 0x6f, 0x4d, 0x84, 0xbc, 0x4f, 0x8b,
	0x85, 0x52, 0xf6, 0x8f, 0x1e, 0xd1, 0x43, 0x52, 0x30, 0x2a, 0x14, 0x45, 0x74, 0xd7, 0x92, 0x85,
	0xae, 0x75, 0xef, 0xf4, 0xff, 0x19, 0x0f, 0x30, 0x58, 0x09, 0xe1, 0xe3, 0x6d, 0x8b, 0xa5, 0x08,
	0x34, 0x04, 0x61, 0x7a, 0xcc, 0xc8, 0xf3, 0xe7, 0xce, 0x0f, 0x00, 0x64, 0x54, 0xab, 0x6e, 0x03,
	0x5e, 0x20, 0x2e, 0x3c, 0x96, 0xf2, 0x98, 0x35, 0xd9, 0x7e, 0xe2, 0x26, 0x2b, 0x2d, 0x78, 0xbb,
	0xe2, 0xe2, 0x11, 0xdd, 0x46, 0x75, 0xa3, 0x9d, 0x27, 0x6e, 0xb4, 0xda, 0x84, 0x62, 0x58, 0xa0,
	0xeb, 0xf6, 0x62, 0x4d, 0xd7, 0x2c, 0x17, 0xab, 0x08, 0x17, 0xf6, 0xa7, 0x7a, 0x03, 0xaf, 0xa2,
	0xfd, 0x7f, 0xcc, 0xe3, 0xd1, 0x21, 0x63, 0x61, 0x66, 0xb9, 0xe9, 0x5a, 0xa8, 0x33, 0xd9, 0xe1,
	0x2c, 0x63, 0x26, 0xbb, 0x6b, 0x62, 0x8e, 0x92, 0x36, 0xea, 0x58, 0x28, 0x06, 0x86, 0x30, 0x67,
	0x49, 0x84, 0xcc, 0x15, 0xee, 0x3f, 0x03, 0x43, 0x28, 0x38, 0x8c, 0x57, 0xc4, 0xe8, 0x2f, 0x47,
	0x81, 0x7d, 0x3b, 0x82, 0xd6, 0x58, 0xcc, 0x20, 0xd0, 0x35, 0x89, 0xe2, 0xda, 0x50, 0xe4, 0xee,
	0x4e, 0xc0, 0x51, 0xfe, 0x77, 0xb0, 0xf0, 0xcf, 0x26, 0x82, 0x93, 0xb7, 0x46, 0x29, 0x10, 0xb9,
	0x4a, 0xee, 0xf9, 0x49, 0x61, 0x9f, 0xcc, 0x84, 0xb0, 0x7a, 0xfe, 0x0f, 0xb6, 0x60, 0x97, 0xdc,
	0xee, 0x1f, 0xc5, 0xf2, 0x04, 0x22, 0x30, 0xdd, 0x89, 0xd3, 0xb8, 0x38, 0x92, 0x91, 0xb6, 0xee,
	0x22, 0x85, 0x1d, 0x8f, 0x52, 0xa1, 0x61, 0xb8, 0x0a, 0x84, 0xc5, 0xb1, 0x3d, 0xca, 0x10, 0xd2,
	0x57, 0x4a, 0x75, 0xfb, 0x20, 0x6b, 0x3d, 0x02, 0xe1, 0x50, 0xec, 0xf7, 0x6d, 0xf0, 0x68, 0x82,
	0xfc, 0x23, 0xbc, 0x69, 0xda, 0x6e, 0x98, 0x2d, 0x7e, 0x5f, 0x2c, 0x1e, 0x50, 0x97, 0x26, 0xad,
	0xea, 0xf1, 0x5f, 0x10, 0x38, 0xf5, 0xfd, 0xef, 0x6b, 0xf1, 0xf8, 0x3f, 0x3c, 0x3a, 0xae, 0xa5,
	0xb1, 0x2d, 0x46, 0x63, 0xd5, 0xa9, 0xb8, 0x1f, 0xf6, 0x8f, 0x0f, 0x31, 0x62, 0x03, 0x29, 0xb6,
	0x2d, 0xc6, 0x91, 0x20, 0x2e, 0x91, 0x04, 0x11, 0xf8, 0x36, 0xdd, 0xb4, 0x91, 0xc0, 0x1a, 0x8c,
	0xff, 0x7f, 0xb4, 0x75, 0x6a, 0x3f, 0x60, 0xef, 0xd7, 0x4f, 0x28, 0x30, 0x5e, 0xf5, 0x86, 0xa9,
	0x2e, 0xa9, 0xea, 0x99, 0x35, 0xd3, 0x24, 0x10, 0x7c, 0x04, 0xd5, 0x5f, 0x63, 0x28, 0xd0, 0x0d,
	0x2c, 0x42, 0x6d, 0x31, 0x00, 0xac, 0x3d, 0x00, 0x6d, 0x31, 0x17, 0x6b, 0xca, 0x81, 0x23, 0x13,
	0xb7, 0x1b, 0x70, 0xb1, 0xde, 0xab, 0xe2, 0x69, 0xc0, 0xac, 0x9f, 0xca, 0xfe, 0xa8, 0x64, 0x66,
	0x06, 0xb8, 0x9c, 0x9b, 0x1f, 0x56, 0x6b, 0xd9, 0x97, 0xcc, 0xd6, 0x6b, 0xd9, 0x77, 0x5d, 0x10,
	0xed, 0xe1, 0x29, 0x31, 0x17, 0xed, 0xe1, 0x29, 0xc0, 0x9a, 0x9f, 0x68, 0x0f, 0xcf, 0x1c, 0x7f,
	0x23, 0xe1, 0x06, 0xf4, 0x47, 0x2f, 0xbe, 0xec, 0x30, 0x97, 0x45, 0x41, 0x37, 0x34, 0x03, 0xfb,
	0xbf, 0xd3, 0x16, 0x37, 0x6a, 0x63, 0xbe, 0x03, 0xe7, 0xfc, 0x23, 0x6e, 0xe7, 0x90, 0xca, 0xd3,
	0x72, 0x9d, 0x06, 0x9d, 0xac, 0x33, 0x19, 0xca, 0xfb, 0x82, 0xb8, 0x88, 0x82, 0x18, 0x40, 0xb0,
	0x25, 0xd9, 0x94, 0x21, 0xc8, 0x99, 0xdd, 0xa0, 0x5a, 0x51, 0xb5, 0xa5, 0xf6, 0x62, 0xdc, 0xb7,
	0x6d, 0x75, 0xa6, 0x6d, 0xab, 0x52, 0x11, 0xa2, 0x87, 0x24, 0x89, 0x6d, 0xa8, 0x3b, 0x65, 0x43,
	0x4e, 0x2d, 0x75, 0x49, 0x1a, 0xa5, 0x49, 0xd6, 0x3f, 0xde, 0x0c, 0xd3, 0x88, 0x24, 0x7b, 0x3d,
	0x38, 0x58, 0x6b, 0x78, 0x88, 0x62, 0x1d, 0x9e, 0x42, 0xdd, 0xfb, 0xa3, 0xc1, 0xbe, 0x09, 0x7d,
	0x53, 0xc1, 0xfa, 0xbf, 0x81, 0xe6, 0xb0, 0xce, 0x9b, 0xcd, 0x80, 0x37, 0x0c, 0x67, 0xeb, 0xf7,
	0x70, 0x38, 0xdb, 0xdf, 0xe8, 0x70, 0x36, 0x0d, 0x44, 0xa7, 0x79, 0x20, 0xfc, 0x3f, 0xdb, 0x86,
	0xe3, 0x67, 0x2d, 0x2e, 0x86, 0x61, 0xd9, 0x3f, 0xda, 0x0d, 0x8b, 0xe3, 0x06, 0xdb, 0x47, 0xdc,
	0xd1, 0x9a, 0x64, 0x6a, 0x56, 0x92, 0x20, 0x88, 0xc3, 0x6e, 0x93, 0x73, 0x2e, 0x91, 0x2f, 0x30,
	0x8b, 0xb8, 0xcd, 0x76, 0x31, 0xc3, 0x98, 0x1c, 0xc9, 0x6c, 0xf3, 0x5a, 0x04, 0xd8, 0xfc, 0x87,
	0x3c, 0xc8, 0xfe, 0x52, 0x60, 0x11, 0x10, 0x1b, 0x81, 0xfa, 0x6c, 0xe2, 0xa5, 0xa0, 0xbf, 0x73,
	0x0d, 0xaf, 0x0e, 0x63, 0x4d, 0x46, 0x75, 0x68, 0x51, 0xdc, 0xa2, 0x55, 0xb4, 0x3a, 0x52, 0xaa,
	0xa3, 0xc1, 0x32, 0x6b, 0xb9, 0xd6, 0x1f, 0x0d, 0x47, 0x56, 0xd3, 0x28, 0x5a, 0x1b, 0x11, 0xb8,
	0xcd, 0xb8, 0x71, 0xfb, 0x75, 0x4e, 0xa4, 0x0a, 0xda, 0xff, 0xaf, 0x7a, 0xa0, 0xf7, 0x47, 0xdf,
	0xea, 0x26, 0x47, 0x45, 0x4e, 0x38, 0x14, 0x91, 0xa7, 0x18, 0xc9, 0x1b, 0x96, 0xc8, 0x1b, 0x0c,
	0x19, 0x4e, 0x95, 0x26, 0xcc, 0x22, 0x99, 0x66, 0x71, 0x1c, 0x59, 0xa8, 0x95, 0x23, 0x1b, 0xb1,
	0xc3, 0xc0, 0x14, 0xb9, 0xa6, 0x1c, 0x49, 0x64, 0x22, 0x48, 0x08, 0xc6, 0x50, 0xb6, 0x04, 0x46,
	0xe7, 0x9b, 0xe1, 0x25, 0x30, 0x34, 0xdf, 0x0b, 0xe2, 0x02, 0xf4, 0xc8, 0x52, 0x5f, 0xa4, 0xa3,
	0x15, 0x2c, 0xe4, 0x9a, 0x53, 0x18, 0x66, 0x25, 0x89, 0x12, 0xb2, 0x2a, 0xda, 0xb4, 0x68, 0x29,
	0xf3, 0x3c, 0x6b, 0xd1, 0x92, 0x64, 0x70, 0x1d, 0xe9, 0x03, 0x6b, 0xf7, 0x25, 0x1d, 0xa0, 0xdf,
	0x20, 0xf8, 0xd3, 0x2f, 0x13, 0xd5, 0xb5, 0x08, 0x75, 0x84, 0xed, 0x83, 0x46, 0xe5, 0x4b, 0x24,
	0x0d, 0xd3, 0xa0, 0x7d, 0xf2, 0x65, 0x72, 0x57, 0xd1, 0x20, 0xe4, 0xfe, 0x1d, 0xa5, 0xfd, 0x8f,
	0xe4, 0xd9, 0xed, 0x3c, 0x27, 0xf1, 0x3f, 0xc3, 0x80, 0x5a, 0x78, 0x94, 0xf6, 0xe1, 0x7e, 0xa0,
	0x4a, 0x5c, 0x84, 0x45, 0xeb, 0xe0, 0xbc, 0x57, 0xd4, 0x61, 0x5e, 0x94, 0x05, 0x04, 0x4f, 0x3c,
	0xd7, 0xcc, 0x12, 0xcb, 0x82, 0xb5, 0x67, 0x58, 0x3c, 0x18, 0xca, 0x94, 0xb2, 0x71, 0x6a, 0x50,
	0xed, 0x95, 0xf5, 0xf4, 0x28, 0x4c, 0xfb, 0xec, 0xf0, 0xf3, 0x50, 0xf6, 0x5a, 0xc5, 0xb3, 0xb2,
	0x76, 0x60, 0x9f, 0x72, 0xca, 0xda, 0xa1, 0x7d, 0x51, 0x5c, 0x26, 0x1c, 0x9b, 0x2e, 0x4c, 0x5c,
	0x54, 0x7f, 0xe0, 0xdf, 0x07, 0xe1, 0x2d, 0x2e, 0x69, 0xe6, 0xca, 0x47, 0xc9, 0xad, 0x27, 0xd9,
	0x81, 0x9a, 0x6d, 0x10, 0xb0, 0xc2, 0xfe, 0x7f, 0x89, 0xb6, 0x12, 0x3b, 0xf1, 0x61, 0xba, 0x61,
	0xcd, 0x4a, 0xab, 0x34, 0xcb, 0xa1, 0x31, 0xed, 0x2a, 0x8d, 0x79, 0x49, 0x78, 0x6a, 0xeb, 0x81,
	0xc1, 0x13, 0x98, 0x50, 0x31, 0x4d, 0x7d, 0xc3, 0x13, 0x2d, 0xc5, 0xb6, 0x58, 0x93, 0x5f, 0xae,
	0x86, 0x87, 0xa0, 0x43, 0xbc, 0x1c, 0xc5, 0x3c, 0xe7, 0x38, 0xef, 0x79, 0xb1, 0x34, 0xcc, 0x86,
	0xb6, 0x9a, 0x0e, 0xe8, 0xec, 0x20, 0xd5, 0xa6, 0xb0, 0xb5, 0x9c, 0x8c, 0x62, 0x15, 0x34, 0xcf,
	0x3a, 0x34, 0xe7, 0x64, 0x1d, 0x42, 0xeb, 0x0e, 0x6b, 0x64, 0x30, 0xaf, 0x1d, 0x33, 0xac, 0x7d,
	0xc1, 0x3a, 0x58, 0xc3, 0xa0, 0xc8, 0x28, 0x2e, 0xcf, 0x74, 0x50, 0x49, 0x34, 0xf8, 0x24, 0x33,
	0x6a, 0x84, 0x1c, 0x01, 0x76, 0xdb, 0x15, 0x60, 0x53, 0xfc, 0x3e, 0xd3, 0x8c, 0x96, 0x56, 0xbd,
	0x29, 0xe6, 0xfa, 0x3a, 0xab, 0xd6, 0x18, 0xe3, 0x2b, 0xfe, 0xea, 0xc0, 0x94, 0xf6, 0xff, 0x6f,
	0x14, 0xe3, 0x41, 0x86, 0xcd, 0x24, 0x2c, 0x29, 0x1d, 0x01, 0x75, 0x8f, 0xce, 0x9d, 0x96, 0x73,
	0xee, 0xdc, 0x10, 0x0b, 0xa5, 0x2a, 0x8d, 0x25, 0x49, 0x92, 0xc7, 0x51, 0x3c, 0xb1, 0xc2, 0x1a,
	0x5d, 0xfe, 0x2d, 0x02, 0x08, 0xa6, 0xf1, 0x50, 0x22, 0x82, 0xd8, 0x0b, 0x1c, 0x5c, 0x55, 0xa0,
	0xc7, 0xbc, 0x1b, 0x5e, 0x10, 0x17, 0xfa, 0x47, 0x61, 0xb9, 0x6e, 0x5d, 0x35, 0x49, 0x7b, 0xe6,
	0x62, 0xd5, 0xdc, 0x97, 0xfa, 0x9b, 0x98, 0xa1, 0xb7, 0x8b, 0xf4, 0x7f, 0x7e, 0x06, 0xbe, 0x3e,
	0xc8, 0x50, 0xb0, 0x49, 0xd1, 0xaa, 0x74, 0x2a, 0x6d, 0x94, 0x5e, 0xd0, 0xd7, 0x93, 0xf4, 0xc2,
	0x48, 0xe9, 0xdb, 0x5c, 0x4a, 0xff, 0x36, 0x06, 0xa5, 0x00, 0xcf, 0xf7, 0x71, 0xd9, 0x03, 0x1d,
	0x3f, 0x6e, 0x5b, 0x1c, 0x7c, 0xc6, 0x21, 0xbb, 0xcd, 0xc3, 0x38, 0xd5, 0xc1, 0xca, 0x0d, 0x02,
	0xb3, 0xd8, 0x41, 0xaa, 0x1d, 0xf5, 0xb8, 0xa7, 0xb3, 0xd8, 0x69, 0x8c, 0xcd, 0xde, 0x73, 0x27,
	0x8c, 0x75, 0x9c, 0x1c, 0x86, 0x61, 0xd9, 0x7b, 0xa0, 0xc0, 0xac, 0x8e, 0x0b, 0x6e, 0x50, 0xaa,
	0xef, 0xe0, 0x8e, 0x00, 0x7d, 0x9f, 0x9b, 0xa6, 0xef, 0xa6, 0xb8, 0xf7, 0x3e, 0x38, 0x24, 0x85,
	0x71, 0x8e, 0xb5, 0xe7, 0xa7, 0xa8, 0xcd, 0x2b, 0xc0, 0xc1, 0x38, 0x3c, 0xc3, 0x4d, 0x43, 0x1c,
	0xbb, 0x86, 0xe1, 0xcb, 0x20, 0x82, 0x88, 0xe2, 0x34, 0xe8, 0xf4, 0x60, 0x18, 0x55, 0x57, 0x75,
	0x04, 0x9e, 0x92, 0xab, 0xa9, 0x86, 0x41, 0x49, 0x2c, 0x4b, 0x13, 0xd0, 0x04, 0xe8, 0x92, 0x41,
	0x80, 0x5b, 0x59, 0x38, 0x2c, 0xe3, 0x13, 0x19, 0x99, 0x8c, 0x79, 0x4b, 0x81, 0x83, 0x03, 0x77,
	0xe0, 0xa2, 0x1f, 0x0e, 0xa5, 0xc9, 0x90, 0xb7, 0x14, 0x30, 0x0c, 0x68, 0xe5, 0xf0, 0x7e, 0x82,
	0x6d, 0xa0, 0x66, 0xc5, 0xc1, 0xd9, 0xc8, 0xba, 0xf7, 0x64, 0x02, 0xce, 0x1e, 0xe4, 0xff, 0x51,
	0xc1, 0xa2, 0x18, 0xa0, 0x28, 0x40, 0xf7, 0x4b, 0x47, 0x87, 0x45, 0x78, 0xf7, 0xc4, 0x25, 0x58,
	0xb4, 0x07, 0x59, 0x6e, 0x62, 0xb2, 0x3f, 0x35, 0x4d, 0x4c, 0xf6, 0x6a, 0x2d, 0xef, 0x8e, 0xb8,
	0xd8, 0xd7, 0x59, 0x86, 0xa9, 0xa1, 0x2b, 0x53, 0x34, 0x54, 0xad, 0xe4, 0xff, 0x22, 0xca, 0x16,
	0x51, 0x5c, 0x4a, 0x81, 0x56, 0xf1, 0xb8, 0x59, 0x28, 0xe3, 0x61, 0xa1, 0x3d, 0x6f, 0x5b, 0xe7,
	0x24, 0x0a, 0x67, 0x65, 0x81, 0xa8, 0xc8, 0x53, 0xe3, 0xb4, 0xab, 0x89, 0x8a, 0x45, 0x79, 0xeb,
	0x68, 0xfd, 0x03, 0x51, 0x95, 0x8a, 0x71, 0xf1, 0x4f, 0x78, 0xc6, 0xd2, 0x55, 0x5d, 0x3a, 0x60,
	0x15, 0xfd, 0x87, 0xc0, 0x82, 0x3a, 0x5d, 0xd7, 0x44, 0xf4, 0x5d, 0x31, 0x47, 0x91, 0x5d, 0x8b,
	0x71, 0x37, 0x8d, 0xea, 0x27, 0x07, 0xa6, 0x86, 0xff, 0x9d, 0xe0, 0xff, 0xb5, 0x53, 0xe6, 0x19,
	0xae, 0x41, 0xf7, 0x32, 0xf3, 0x21, 0x5d, 0xca, 0x27, 0xe5, 0x6c, 0xa9, 0xd4, 0x45, 0x07, 0x4a,
	0x5d, 0xc9, 0xff, 0x69, 0x8a, 0x90, 0x58, 0x2b, 0xf4, 0x04, 0xa2, 0x01, 0x1b, 0x1d, 0xac, 0xe3,
	0x44, 0x07, 0xab, 0xb8, 0xe6, 0x74, 0xeb, 0xae, 0x39, 0x98, 0xfa, 0x07, 0xbd, 0x1a, 0x75, 0x38,
	0x7f, 0x82, 0x15, 0xa9, 0x85, 0xff, 0x26, 0x42, 0x2f, 0x52, 0x64, 0x17, 0xe9, 0x79, 0xa2, 0x3b,
	0xcc, 0x8a, 0x2f, 0x11, 0x05, 0x82, 0xff, 0x84, 0xfb, 0x32, 0xdd, 0x17, 0xe0, 0x3f, 0x0a, 0xcd,
	0xf3, 0x6c, 0x57, 0x87, 0x2c, 0x58, 0x0a, 0x0c, 0xec, 0x3a, 0x18, 0x89, 0x8a, 0x83, 0x91, 0xff,
	0x55, 0x16, 0x18, 0x7a, 0xe7, 0x28, 0x1b, 0x06, 0xb2, 0x9f, 0x99, 0x34, 0xed, 0xde, 0x07, 0xcc,
	0x32, 0x76, 0x62, 0xce, 0x0e, 0x5b, 0x15, 0x26, 0xd8, 0x18, 0xc8, 0x9e, 0x32, 0xe9, 0x90, 0x53,
	0xa6, 0x39, 0xa8, 0x5f, 0x4d, 0x8c, 0x48, 0xa6, 0xb9, 0x90, 0xc1, 0xa3, 0x33, 0x4d, 0x06, 0x0f,
	0x5d, 0xda, 0x97, 0xb0, 0xdd, 0xf8, 0xda, 0x06, 0xe5, 0x84, 0x9b, 0x88, 0xb7, 0x55, 0x4b, 0xc4,
	0x6b, 0x12, 0x90, 0xe1, 0x6e, 0xa2, 0x04, 0x64, 0xcb, 0x62, 0x96, 0x32, 0xf4, 0xeb, 0x70, 0xc6,
	0x04, 0xfa, 0x7f, 0x1e, 0x6f, 0xe3, 0x8d, 0x7b, 0xc8, 0xdb, 0x14, 0x4b, 0x66, 0x17, 0x19, 0x89,
	0xdf, 0x85, 0x4a, 0x58, 0xf4, 0xc6, 0xaa, 0xaa, 0x74, 0xe0, 0x56, 0x46, 0x2d, 0x30, 0x21, 0x80,
	0x2f, 0x2f, 0xc8, 0x8f, 0xa1, 0x8a, 0xf6, 0x7f, 0x1e, 0x85, 0x72, 0x95, 0x96, 0x81, 0x22, 0xbc,
	0x6d, 0xbf, 0x64, 0xcc, 0x76, 0xad, 0x0e, 0x99, 0xf9, 0xd6, 0x0a, 0x35, 0x69, 0x7f, 0x83, 0xd4,
	0xc4, 0xc4, 0xdc, 0xd0, 0x26, 0x43, 0x04, 0xf9, 0xbf, 0x83, 0x81, 0x48, 0x76, 0x64, 0x59, 0xc6,
	0xe9, 0xa1, 0xa1, 0x02, 0xbe, 0x58, 0xdc, 0x07, 0x09, 0x41, 0x5c, 0x94, 0x7b, 0xb0, 0x62, 0x20,
	0xf1, 0x21, 0xc7, 0x79, 0xaf, 0x89, 0x5e, 0x38, 0x8a, 0x62, 0xed, 0x9a, 0x5a, 0xd3, 0x86, 0xdd,
	0x56, 0x0f, 0xa9, 0x61, 0x34, 0xdd, 0x53, 0x08, 0xef, 0xae, 0x58, 0x48, 0xb3, 0x32, 0x3e, 0x88,
	0xfb, 0x26, 0x06, 0x67, 0xc3, 0x17, 0xdd, 0xb7, 0x45, 0x58, 0x13, 0xbc, 0xa6, 0x77, 0xcb, 0xa6,
	0xb9, 0x6b, 0xe4, 0x23, 0x41, 0xf1, 0x03, 0xbe, 0xa1, 0xea, 0xe5, 0xc8, 0xfe, 0x90, 0xa5, 0x1b,
	0x46, 0x7d, 0xe1, 0xc2, 0x42, 0x17, 0x8b, 0xf2, 0x7d, 0xca, 0x3f, 0xcf, 0x43, 0x2b, 0x54, 0xb0,
	0x6a, 0xab, 0x1c, 0x48, 0x19, 0x6d, 0x85, 0xf9, 0xf1, 0xb8, 0x10, 0x7f, 0x77, 0xa4, 0x8c, 0xf6,
	0xc3, 0xfe, 0xb1, 0x2a, 0x13, 0x98, 0xd2, 0xfe, 0x07, 0xc0, 0x66, 0xf3, 0x3e, 0x5a, 0x8e, 0xad,
	0xc5, 0x39, 0x36, 0xb0, 0x5a, 0x57, 0x45, 0x28, 0xbf, 0x31, 0x41, 0xfe, 0x2e, 0xda, 0xf0, 0xba,
	0x83, 0xac, 0xb6, 0xda, 0xca, 0xe1, 0x40, 0xfb, 0xd9, 0xa3, 0x21, 0x0c, 0xc3, 0xa8, 0xe7, 0x3b,
	0x07, 0xa7, 0xfa, 0x39, 0xb6, 0xc8, 0x30, 0xfe, 0xab, 0xb0, 0xb3, 0x1a, 0x47, 0x1f, 0xfc, 0x96,
	0x10, 0x22, 0xcb, 0x54, 0x0d, 0xfa, 0xff, 0x43, 0x0b, 0xbe, 0x86, 0x7f, 0x2a, 0x4a, 0x5b, 0xf2,
	0xa2, 0x7c, 0x90, 0x87, 0xe9, 0xa1, 0x04, 0xe6, 0x07, 0xbb, 0x53, 0x45, 0xab, 0xc1, 0x06, 0xd4,
	0xc3, 0x38, 0xdd, 0x06, 0x75, 0x05, 0xf5, 0xab, 0x82, 0xb5, 0xe3, 0x43, 0xee, 0x0b, 0x66, 0x7c,
	0x86, 0xd9, 0x70, 0x23, 0x2a, 0x60, 0x1d, 0x2c, 0x05, 0x04, 0x91, 0x29, 0x68, 0x5f, 0x26, 0xbb,
	0x83, 0x82, 0xd8, 0x51, 0x8b, 0xc0, 0xfd, 0x90, 0x1f, 0x4b, 0x6d, 0x97, 0x4e, 0x10, 0xd8, 0xac,
	0x01, 0xef, 0x25, 0x23, 0xb2, 0x66, 0x33, 0xb0, 0xff, 0xff, 0xb6, 0x80, 0x6e, 0xef, 0x15, 0x32,
	0xa7, 0x51, 0x29, 0x6e, 0x27, 0xa5, 0xcc, 0xb7, 0xc3, 0x3c, 0x1c, 0x14, 0xe7, 0x52, 0x39, 0x0c,
	0xb9, 0xb4, 0x11, 0xb1, 0xec, 0x95, 0x16, 0x81, 0xee, 0x9e, 0x83, 0xec, 0x44, 0x52, 0x01, 0x4a,
	0x35, 0xca, 0x71, 0x76, 0xc7, 0x75, 0xbf, 0x99, 0x1d, 0xd7, 0xfb, 0x46, 0x77, 0x9c, 0xff, 0x3b,
	0x1d, 0x70, 0x82, 0x59, 0x91, 0x87, 0x71, 0x9a, 0xca, 0x7c, 0x77, 0x54, 0x66, 0x79, 0x1c, 0x5a,
	0x87, 0xb3, 0x5b, 0xe2, 0x8a, 0x56, 0x5c, 0xe8, 0x67, 0xcc, 0x49, 0xaa, 0xf1, 0x99, 0xba, 0x4a,
	0x83, 0x3f, 0xc0, 0x7a, 0x5a, 0xca, 0x7c, 0x25, 0x3e, 0xdc, 0x0a, 0x87, 0x34, 0xfd, 0x35, 0xbc,
	0x5a, 0x28, 0x16, 0x77, 0x57, 0x1b, 0x19, 0xcc, 0x05, 0x15, 0xac, 0xb7, 0x23, 0x2e, 0x03, 0x46,
	0xbf, 0x88, 0xe4, 0x8e, 0x8d, 0xa4, 0xd3, 0x29, 0x68, 0x38, 0xc9, 0x7a, 0x7d, 0xf3, 0x72, 0x93,
	0xeb, 0x80, 0xf2, 0xb4, 0x56, 0xb0, 0x8a, 0xc9, 0x40, 0x4c, 0x96, 0x47, 0xdb, 0x3a, 0xba, 0xd6,
	0x5c, 0xe0, 0x22, 0x4d, 0xa9, 0x5d, 0xd9, 0x3f, 0x82, 0x52, 0xb3, 0xac, 0x94, 0x46, 0xaa, 0xd5,
	0x08, 0x88, 0xed, 0xf0, 0x0c, 0x58, 0x8f, 0xb9, 0xc0, 0xc0, 0x66, 0xe0, 0xb6, 0x59, 0x26, 0xa1,
	0x79, 0x36, 0x70, 0x0c, 0xaf, 0x96, 0x26, 0xe0, 0x14, 0xb7, 0xfc, 0x1a, 0x59, 0x50, 0x32, 0x8c,
	0xf3, 0xfc, 0x15, 0x9d, 0x9f, 0xd2, 0x62, 0xfc, 0x7d, 0xa0, 0x0a, 0x8d, 0x43, 0xa5, 0x16, 0x6e,
	0xa9, 0xc7, 0x89, 0x05, 0xd5, 0xe6, 0x38, 0xa7, 0x8c, 0xe6, 0x36, 0x78, 0x99, 0x78, 0x20, 0xfd,
	0x2f, 0x23, 0xd7, 0x28, 0x4b, 0x96, 0x99, 0xa5, 0x40, 0x8e, 0xd4, 0x8d, 0x70, 0x32, 0x7d, 0x42,
	0x17, 0x1d, 0xec, 0xe4, 0x9f, 0x74, 0xc0, 0x67, 0xe2, 0x36, 0x39, 0xa1, 0x3e, 0x89, 0x8f, 0x6b,
	0x54, 0xf3, 0x71, 0x8d, 0xa6, 0xf2, 0x71, 0x5d, 0x16, 0xb3, 0x87, 0x79, 0x36, 0x1a, 0x1a, 0xc1,
	0x90, 0x06, 0x15, 0xe5, 0x49, 0x51, 0xd5, 0x80, 0x44, 0x89, 0x20, 0xeb, 0x15, 0x3b, 0x33, 0xd9,
	0x2b, 0x76, 0xb6, 0xd1, 0x2b, 0x16, 0x83, 0x86, 0x1f, 0xca, 0x72, 0xdd, 0x91, 0xfb, 0xb8, 0x48,
	0xef, 0x03, 0x31, 0x0f, 0x36, 0x9b, 0x64, 0x23, 0xdd, 0x68, 0x82, 0xa2, 0x47, 0xc9, 0x46, 0x65,
	0xb4, 0x75, 0x14, 0x03, 0x19, 0x47, 0xa7, 0x74, 0xc7, 0x55, 0x7f, 0xd1, 0xec, 0x32, 0x8a, 0xf3,
	0xf2, 0x0c, 0xee, 0xb6, 0x60, 0x76, 0x09, 0xa0, 0xf6, 0x8b, 0x58, 0xb2, 0x7e, 0x11, 0x10, 0x70,
	0x77, 0x1f, 0xbf, 0xf2, 0x82, 0x0e, 0xb8, 0x8b, 0xb0, 0x62, 0x44, 0xcd, 0x05, 0x76, 0x3e, 0xe8,
	0xea, 0x2d, 0x47, 0x76, 0x1a, 0x77, 0x69, 0x2c, 0xc9, 0x2c, 0xd0, 0xc5, 0xfa, 0x7f, 0x1f, 0xaf,
	0x79, 0xba, 0xe7, 0x10, 0xb1, 0x73, 0xfa, 0x18, 0xd6, 0x9e, 0xe8, 0x26, 0x36, 0xbf, 0x0a, 0xfc,
	0x87, 0xf0, 0x0e, 0xcc, 0x1a, 0x02, 0x01, 0x35, 0x75, 0x49, 0x92, 0x5a, 0x15, 0x39, 0x41, 0x36,
	0x25, 0xac, 0x9e, 0x3a, 0x9d, 0x12, 0x56, 0xf5, 0x13, 0x33, 0x2a, 0xe0, 0x65, 0xc2, 0x22, 0xe0,
	0x78, 0x42, 0x16, 0xcf, 0x44, 0xc0, 0xb2, 0x08, 0x7f, 0x9f, 0x74, 0xc9, 0xf8, 0x41, 0x14, 0xed,
	0x67, 0x37, 0x2c, 0x8e, 0x9d, 0x74, 0x65, 0x2d, 0x37, 0x5d, 0xd9, 0x58, 0xc5, 0xcc, 0x15, 0xd1,
	0x03, 0xa9, 0xb4, 0x3e, 0x38, 0x01, 0xf0, 0xbf, 0x43, 0x3c, 0xdb, 0xfc, 0x0e, 0x4c, 0x5e, 0x0c,
	0xe7, 0x15, 0xfc, 0x5b, 0x4f, 0xf5, 0x18, 0x5a, 0x84, 0x7d, 0xfa, 0x71, 0x68, 0x42, 0x28, 0x18,
	0x84, 0xff, 0x27, 0x81, 0x39, 0xc1, 0x2d, 0x09, 0x36, 0x81, 0xe0, 0x55, 0xa7, 0xe6, 0xc3, 0x68,
	0x24, 0xd5, 0xdf, 0xdf, 0x9f, 0xf9, 0xf0, 0xff, 0x1a, 0x8a, 0x0a, 0xdd, 0xf5, 0xa0, 0x8e, 0xed,
	0x86, 0x15, 0xf1, 0x8e, 0x98, 0xdb, 0x0f, 0xb1, 0xa3, 0xe3, 0x18, 0xd9, 0xca, 0x67, 0x04, 0xa6,
	0x82, 0xf7, 0xae, 0x98, 0xdd, 0x0f, 0x31, 0x60, 0x6c, 0xa7, 0x39, 0x9a, 0xbb, 0xdb, 0x07, 0xa8,
	0xae, 0xab, 0xf8, 0xff, 0xb4, 0x8d, 0x3e, 0xa5, 0x4e, 0x11, 0x9c, 0x87, 0x3f, 0x74, 0x9d, 0xf5,
	0x36, 0x74, 0x52, 0x50, 0xb8, 0x16, 0xa2, 0xdb, 0xc6, 0xb7, 0x8e, 0x6b, 0xa0, 0xb6, 0x98, 0x02,
	0x56, 0x19, 0x68, 0x95, 0x6a, 0x73, 0xf3, 0x04, 0x25, 0xfa, 0xe0, 0x77, 0xd1, 0x0b, 0x5c, 0xa4,
	0xb7, 0x82, 0x76, 0x51, 0xaa, 0x0d, 0x8a, 0xf7, 0xf9, 0xc2, 0xe4, 0xfe, 0xee, 0x51, 0xe9, 0xc0,
	0xd4, 0xf3, 0x7f, 0x17, 0x93, 0xa6, 0x37, 0x97, 0x03, 0x27, 0xda, 0x38, 0x85, 0x17, 0x68, 0x27,
	0x5a, 0x04, 0x51, 0xb0, 0x7d, 0x50, 0xc2, 0x23, 0x4a, 0x4c, 0xa3, 0x61, 0x70, 0x4a, 0x07, 0xd5,
	0x87, 0x7a, 0x48, 0xd9, 0x4f, 0x0d, 0x82, 0x6d, 0xc1, 0xae, 0xb3, 0x05, 0xb9, 0x56, 0xbf, 0xa7,
	0x63, 0xf3, 0x22, 0xac, 0x9e, 0x1d, 0x84, 0x71, 0xc2, 0x8c, 0x11, 0x0c, 0xcc, 0x64, 0xdb, 0xe8,
	0xbb, 0xa6, 0x65, 0xdb, 0xb4, 0x36, 0xe6, 0x1c, 0xd2, 0x06, 0xdb, 0x66, 0xde, 0x6e, 0x1b, 0xff,
	0xff, 0xe2, 0x69, 0xd7, 0xed, 0x3e, 0x9c, 0x14, 0xeb, 0xd0, 0x13, 0x5d, 0x88, 0xae, 0x46, 0x66,
	0x60, 0x10, 0x58, 0x4d, 0x07, 0x71, 0xeb, 0xb1, 0x20, 0x6e, 0x6a, 0x47, 0x32, 0x43, 0x4c, 0x04,
	0x28, 0x04, 0x5b, 0x24, 0x73, 0x68, 0x63, 0xd6, 0x84, 0x60, 0x23, 0x8c, 0x7d, 0x0e, 0x55, 0xe7,
	0xf8, 0x73, 0x1d, 0x1a, 0x6e, 0x20, 0x07, 0xf7, 0x47, 0x03, 0x6d, 0x7c, 0x89, 0x90, 0x65, 0xfd,
	0x05, 0xbf, 0x1a, 0xf1, 0x43, 0x7c, 0xc1, 0x3d, 0xc4, 0xfd, 0x9f, 0x6c, 0xa2, 0x01, 0x63, 0xa8,
	0x90, 0xa1, 0xdf, 0x6d, 0x4e, 0xbf, 0x97, 0xc5, 0xec, 0x2a, 0x93, 0x3f, 0x2c, 0x05, 0x1a, 0x74,
	0x29, 0x7b, 0xb7, 0x4a, 0xd9, 0xaf, 0x0b, 0x81, 0x2b, 0x99, 0xa9, 0x49, 0x19, 0xc6, 0xff, 0x01,
	0x34, 0xb8, 0x6d, 0xda, 0xf6, 0x13, 0x67, 0x66, 0x59, 0xcc, 0xf6, 0x93, 0xb0, 0x28, 0x6c, 0xd8,
	0x08, 0x02, 0x21, 0x6c, 0xa8, 0x3c, 0x2d, 0x51, 0xeb, 0x4a, 0x4b, 0xd2, 0x20, 0xf8, 0x09, 0xdd,
	0x75, 0x4f, 0xe8, 0xb7, 0x44, 0x4f, 0x2d, 0xcf, 0x82, 0x42, 0x40, 0x7c, 0x66, 0x8a, 0xed, 0x1c,
	0x60, 0x0d, 0xef, 0x0d, 0x31, 0xb3, 0x1f, 0x82, 0x2d, 0xec, 0xcc, 0xa4, 0x6c, 0x7d, 0x96, 0x0e,
	0x51, 0x71, 0x4e, 0x85, 0x66, 0x9f, 0x9c, 0x0a, 0xbd, 0x21, 0x66, 0x07, 0x24, 0x1a, 0x9b, 0x6b,
	0x0e, 0x3d, 0x83, 0x29, 0xb0, 0xb5, 0xbb, 0xa0, 0x2e, 0xad, 0x99, 0x91, 0x79, 0xc3, 0x8c, 0xf8,
	0x29, 0x58, 0xd2, 0xd6, 0xb8, 0x1d, 0xf7, 0x60, 0x6e, 0x55, 0x0e, 0x66, 0xef, 0x4d, 0x31, 0x03,
	0x53, 0x59, 0x8c, 0x33, 0xcb, 0xa8, 0x32, 0x21, 0x01, 0x95, 0xf7, 0x7f, 0xa6, 0xed, 0x2c, 0x48,
	0x5a, 0x4b, 0x26, 0x6b, 0x10, 0x65, 0xb4, 0x23, 0x5e, 0x54, 0xc3, 0x6e, 0x6f, 0xda, 0xd5, 0xde,
	0xdc, 0x33, 0x99, 0x13, 0xb1, 0x4f, 0x9d, 0x66, 0x7b, 0x84, 0xa6, 0xa5, 0x16, 0x38, 0x35, 0xd5,
	0xa2, 0xbd, 0x6d, 0x79, 0x5e, 0x5c, 0xd3, 0x0c, 0xc3, 0x17, 0x51, 0xaf, 0x91, 0xcd, 0x9b, 0xb1,
	0x6c, 0xde, 0x07, 0x42, 0x80, 0xa1, 0x24, 0xb4, 0x4f, 0xb3, 0xfc, 0xe9, 0x71, 0x7d, 0x32, 0x09,
	0x21, 0x6d, 0x15, 0xff, 0x57, 0x5b, 0x0e, 0xfb, 0x03, 0x45, 0x68, 0x83, 0xd4, 0xcf, 0x44, 0x67,
	0xf1, 0xb7, 0xab, 0x8b, 0xff, 0x0f, 0x66, 0x9d, 0xfa, 0xbf, 0x89, 0xa2, 0x82, 0x86, 0x2f, 0xf8,
	0xc3, 0x77, 0xb2, 0xb3, 0x63, 0xb0, 0xeb, 0x1e, 0x83, 0xce, 0x51, 0x37, 0x53, 0x39, 0xea, 0xfc,
	0xbf, 0x8a, 0xa2, 0xc3, 0xca, 0x44, 0x9e, 0xb3, 0x7f, 0x3e, 0x14, 0xf3, 0xea, 0x74, 0xde, 0x21,
	0x72, 0xdb, 0x39, 0xbf, 0xb3, 0x6a, 0xc0, 0x02, 0x5b, 0xc9, 0x5b, 0x17, 0x0b, 0x6c, 0xe5, 0x8e,
	0x4b, 0xe9, 0xd0, 0x30, 0xf2, 0x01, 0xaf, 0xe7, 0xdd, 0xd5, 0x2e, 0x07, 0xaa, 0x7d, 0x12, 0x0e,
	0x7c, 0x76, 0x8a, 0x56, 0xa0, 0x3b, 0xac, 0xaa, 0x5e, 0x7f, 0x77, 0x72, 0x59, 0x1c, 0x69, 0xeb,
	0x25, 0x83, 0xf0, 0xff, 0x1e, 0x3a, 0xe2, 0xe1, 0x6d, 0x99, 0x5f, 0x40, 0xef, 0x98, 0x4b, 0x66,
	0x6c, 0x6e, 0xb6, 0x2f, 0x34, 0xbb, 0x0d, 0x9b, 0x6a, 0xda, 0x1a, 0x94, 0xd5, 0x84, 0x0b, 0xe2,
	0x50, 0xae, 0x9f, 0xf6, 0x8f, 0xc2, 0x14, 0x02, 0x20, 0x91, 0x6b, 0x78, 0x05, 0x0b, 0x67, 0x96,
	0x2c, 0xd0, 0xbd, 0x8e, 0x3c, 0xc5, 0x2d, 0xc2, 0xbb, 0x29, 0x2e, 0x16, 0x43, 0x09, 0xb6, 0x06,
	0x68, 0xb4, 0x14, 0x91, 0xdf, 0x78, 0x15, 0xed, 0xff, 0x99, 0x59, 0x64, 0xa9, 0x1a, 0x7b, 0x56,
	0xbb, 0x1a, 0xb7, 0x1a, 0xae, 0xc6, 0xe7, 0x5d, 0xaf, 0xed, 0x05, 0xb9, 0x53, 0xbb, 0x20, 0xf7,
	0xf3, 0xcc, 0x86, 0x8d, 0x52, 0x80, 0xbd, 0x36, 0xf7, 0x26, 0x5f, 0x9b, 0x67, 0xa6, 0x0a, 0x26,
	0x35, 0x5b, 0x0f, 0x26, 0x85, 0x51, 0xbf, 0xec, 0x82, 0x43, 0x39, 0x8c, 0xb3, 0x96, 0x14, 0x73,
	0x17, 0xe6, 0xb8, 0xe2, 0x49, 0x13, 0xa4, 0xe1, 0x86, 0xa4, 0xa5, 0xa2, 0x31, 0x69, 0x29, 0x17,
	0x3c, 0x2e, 0xb8, 0x82, 0x47, 0x70, 0x30, 0x93, 0x8f, 0xb7, 0xc2, 0xfc, 0xb8, 0xa0, 0x4b, 0xb6,
	0x81, 0xbd, 0x55, 0xb1, 0x24, 0x69, 0x9a, 0x51, 0x3b, 0xbd, 0x34, 0xc9, 0x56, 0xe8, 0x16, 0xd9,
	0x0a, 0xb9, 0x75, 0xbc, 0x6d, 0x71, 0x01, 0x57, 0xb7, 0x9e, 0x50, 0xb8, 0x9e, 0x37, 0x88, 0x5a,
	0xc6, 0xdd, 0x55, 0x82, 0x4a, 0x7d, 0xef, 0x35, 0xd1, 0x05, 0xaa, 0x71, 0x71, 0x5a, 0xc7, 0x7e,
	0x28, 0xee, 0xbd, 0x2d, 0xe6, 0x23, 0xbd, 0xda, 0xe0, 0xb2, 0xdf, 0x20, 0x50, 0x37, 0xcb, 0x11,
	0x64, 0x13, 0xa6, 0xb8, 0x22, 0xaa, 0x7b, 0x14, 0xb5, 0xb7, 0x1b, 0xa8, 0xbf, 0xde, 0xab, 0x62,
	0x36, 0xc9, 0xca, 0x52, 0xe6, 0x67, 0xa0, 0xac, 0x6e, 0x88, 0x4d, 0xb3, 0x89, 0x8f, 0x81, 0x55,
	0xa0, 0xa2, 0x46, 0x12, 0xf1, 0x14, 0x93, 0x44, 0xbc, 0x25, 0x66, 0x07, 0x61, 0x1f, 0xce, 0x91,
	0x2b, 0x63, 0xa8, 0x73, 0xd8, 0x57, 0x1f, 0x7f, 0xa0, 0xd6, 0x70, 0x7a, 0x90, 0x05, 0xba, 0xbc,
	0xba, 0xed, 0x6c, 0x39, 0x7e, 0x91, 0x4f, 0xa3, 0x7d, 0x87, 0x83, 0xf4, 0x5e, 0x15, 0x73, 0x07,
	0x59, 0x96, 0x14, 0x6b, 0xe1, 0x19, 0x38, 0x08, 0x36, 0x04, 0xe4, 0xba, 0x43, 0xcf, 0x03, 0x53,
	0xd2, 0xff, 0x73, 0xc8, 0xdf, 0x57, 0xde, 0xed, 0xb8, 0x5a, 0xb5, 0x2a, 0xae, 0x56, 0xcf, 0x8a,
	0x79, 0x75, 0xb9, 0x90, 0xd1, 0xee, 0xc0, 0x06, 0x2b, 0xd1, 0x08, 0x67, 0x15, 0x76, 0x2a, 0xab,
	0xf0, 0x79, 0x9d, 0x0c, 0x16, 0x8d, 0x13, 0x0a, 0xe2, 0x26, 0x5d, 0xa4, 0xff, 0x18, 0x62, 0xa0,
	0xe9, 0xbe, 0x62, 0x82, 0xc8, 0x24, 0xeb, 0x1f, 0x4b, 0xed, 0x96, 0x6b, 0x60, 0x1d, 0x19, 0x93,
	0xfc, 0x72, 0x31, 0x07, 0xd7, 0x6c, 0x4e, 0x8d, 0x8f, 0x31, 0x22, 0xd6, 0x0d, 0x3f, 0xa2, 0xf7,
	0x05, 0xba, 0x82, 0x7f, 0x08, 0x32, 0xa0, 0xea, 0x73, 0xa4, 0x7b, 0xf0, 0xd7, 0x08, 0xe5, 0x2d,
	0x02, 0x68, 0x4d, 0x96, 0x0f, 0x42, 0xad, 0x0a, 0x21, 0x08, 0xec, 0x2c, 0xa3, 0x93, 0x30, 0xed,
	0xdb, 0x71, 0xd0, 0xb0, 0xff, 0x3d, 0xa0, 0xeb, 0xe0, 0xab, 0xd0, 0x46, 0x03, 0x6d, 0xf1, 0x68,
	0xa0, 0xaf, 0x68, 0xf6, 0xba, 0x3d, 0x95, 0xf9, 0x1e, 0x32, 0xd6, 0x35, 0x3a, 0xbd, 0xc4, 0xe8,
	0xb4, 0xff, 0xf3, 0x2d, 0x08, 0x7e, 0x64, 0x97, 0x2d, 0x5a, 0x2e, 0x96, 0xe4, 0x97, 0xdd, 0xd2,
	0x96, 0x8b, 0xa5, 0x75, 0xdd, 0x66, 0x01, 0x64, 0x36, 0xa2, 0x82, 0x82, 0x16, 0x56, 0xb0, 0x40,
	0xa5, 0x74, 0xa5, 0xdd, 0x2c, 0x0a, 0x75, 0xd4, 0xcb, 0x0a, 0x16, 0x22, 0xca, 0xc6, 0x79, 0x51,
	0xd2, 0xdc, 0x23, 0x80, 0x71, 0xf3, 0xa2, 0xf0, 0x0c, 0x04, 0xc4, 0xc4, 0x1f, 0x32, 0x8c, 0xff,
	0x18, 0xa6, 0x66, 0x25, 0xcb, 0x8e, 0x07, 0x61, 0x6e, 0xed, 0x8a, 0x6d, 0x6e, 0x8a, 0x96, 0x93,
	0x1c, 0x4e, 0xbb, 0xbb, 0xb4, 0x5d, 0x77, 0x97, 0xd4, 0x7a, 0x15, 0xa2, 0xa0, 0x08, 0x2c, 0x86,
	0x8a, 0x7e, 0x1e, 0x0f, 0x41, 0xaf, 0x41, 0xf1, 0xd3, 0x19, 0xca, 0xff, 0x98, 0x1d, 0xbe, 0xfa,
	0xf5, 0xe8, 0x33, 0xc9, 0x02, 0x44, 0x8f, 0x51, 0xc9, 0x56, 0xbb, 0xcb, 0x63, 0x44, 0x7f, 0x15,
	0xf8, 0xd3, 0xad, 0x38, 0x0f, 0xfb, 0x89, 0x7c, 0x18, 0xe6, 0x56, 0xc3, 0xae, 0xf5, 0xe9, 0x2d,
	0xa6, 0x4f, 0xff, 0x63, 0x62, 0x26, 0x87, 0x02, 0xc4, 0xd9, 0x8d, 0x35, 0x34, 0xa1, 0x62, 0x8a,
	0x69, 0x80, 0xf8, 0xc2, 0xe8, 0x74, 0x74, 0x3b, 0xef, 0x1f, 0x19, 0x53, 0x2f, 0x3a, 0x19, 0x31,
	0xa2, 0xad, 0x3e, 0x19, 0x89, 0x9d, 0x6c, 0xd7, 0xd5, 0xfa, 0x1d, 0xd6, 0x8d, 0x55, 0xcd, 0xf1,
	0x18, 0x87, 0x8e, 0xf1, 0x89, 0xb1, 0xb9, 0x4f, 0x49, 0xc0, 0xaa, 0x81, 0x92, 0xcb, 0x3a, 0x61,
	0x6a, 0x4f, 0x4d, 0xeb, 0x7f, 0x79, 0x45, 0xf4, 0x46, 0x5c, 0x2c, 0x00, 0x80, 0xff, 0x13, 0x18,
	0x66, 0xf2, 0x41, 0xbf, 0x3f, 0x1a, 0x9e, 0x8d, 0xcf, 0x30, 0x78, 0x49, 0x74, 0x12, 0xfb, 0x1d,
	0x49, 0xd5, 0x6c, 0xb3, 0x53, 0x35, 0xdb, 0x7c, 0x41, 0x5c, 0x48, 0xa5, 0x8c, 0xb0, 0x59, 0xee,
	0x22, 0xe2, 0x62, 0x71, 0x97, 0x97, 0xf1, 0xc1, 0x19, 0x39, 0xdd, 0x12, 0xe4, 0x6f, 0x00, 0xad,
	0x1a, 0x17, 0xe1, 0x9f, 0x39, 0xe7, 0x5e, 0x10, 0xed, 0xbe, 0x89, 0xc1, 0xd1, 0x8f, 0x1a, 0x32,
	0x72, 0xef, 0xc1, 0xbe, 0x7c, 0x18, 0xe6, 0x94, 0x97, 0xdf, 0x04, 0x65, 0xd2, 0x51, 0x7c, 0x08,
	0x52, 0x2f, 0x49, 0xa4, 0x0d, 0xca, 0xd4, 0x0b, 0x34, 0xa8, 0xe6, 0x6c, 0x14, 0x13, 0xe5, 0xeb,
	0x06, 0xf0, 0xdf, 0x3f, 0x80, 0x05, 0x6c, 0x17, 0x9a, 0x0e, 0xd1, 0xe9, 0x66, 0x6a, 0xeb, 0x99,
	0x4c, 0x6d, 0x84, 0x5f, 0xd5, 0x06, 0x35, 0x04, 0x81, 0x91, 0x18, 0x84, 0x86, 0x60, 0x03, 0xc9,
	0x30, 0xfe, 0xfb, 0x78, 0x8e, 0xd8, 0x05, 0x1d, 0x1f, 0x1e, 0x81, 0x19, 0x69, 0xae, 0xfe, 0xd8,
	0x01, 0x21, 0xb0, 0x3a, 0x20, 0xfe, 0x23, 0xa0, 0x89, 0x68, 0x74, 0x84, 0xe9, 0x36, 0xf4, 0xa0,
	0xf7, 0xa5, 0xf6, 0x1d, 0x46, 0xa8, 0xd1, 0xe2, 0x04, 0x9b, 0xeb, 0x54, 0xc7, 0xb7, 0x6b, 0xc7,
	0xf7, 0x7f, 0x9d, 0x85, 0x15, 0x64, 0x7b, 0x48, 0x64, 0x17, 0x79, 0x3f, 0xec, 0x1d, 0xf1, 0x7e,
	0x55, 0x9e, 0xae, 0xdd, 0xc0, 0xd3, 0xd5, 0xf9, 0xc3, 0x4e, 0x23, 0x7f, 0x88, 0x1a, 0x8b, 0x1d,
	0x13, 0xad, 0xb4, 0x17, 0x18, 0xd8, 0x7b, 0x51, 0x5c, 0xd6, 0xff, 0xab, 0x31, 0x4b, 0xeb, 0x0f,
	0x80, 0xc3, 0x26, 0xa4, 0x1b, 0xb9, 0xb4, 0x8a, 0xc6, 0x00, 0x6d, 0x6a, 0xa8, 0x18, 0x47, 0xca,
	0x30, 0x75, 0x2b, 0xa6, 0xb9, 0x26, 0x2b, 0x26, 0x63, 0x07, 0x65, 0x44, 0x82, 0x06, 0x56, 0x94,
	0xe0, 0xb1, 0x26, 0x5a, 0x05, 0xc4, 0xca, 0x69, 0xa0, 0x04, 0x0d, 0xd4, 0x2d, 0x60, 0xd5, 0xbc,
	0x7b, 0xe2, 0xc2, 0x11, 0x27, 0x50, 0x05, 0x65, 0x8c, 0xaa, 0x07, 0x3b, 0xaf, 0x90, 0xb1, 0xa0,
	0x52, 0x8f, 0x91, 0xb5, 0x45, 0x87, 0xac, 0xbd, 0x27, 0x44, 0x66, 0x28, 0x06, 0xc9, 0x80, 0xeb,
	0x51, 0xc9, 0x38, 0x4d, 0x09, 0x58, 0x05, 0xef, 0x65, 0xa3, 0x37, 0xbc, 0xd0, 0x1c, 0xe1, 0xb4,
	0x9a, 0x14, 0xc1, 0x7b, 0x43, 0xf4, 0xd4, 0x7e, 0x29, 0xc0, 0x18, 0xbf, 0x81, 0x6b, 0xad, 0xed,
	0xc3, 0x00, 0xcb, 0x7b, 0x6f, 0x88, 0x19, 0xd8, 0x19, 0xda, 0x52, 0xff, 0xd3, 0x13, 0x06, 0x53,
	0x95, 0x0b, 0xa8, 0xb8, 0xba, 0xcc, 0x1e, 0x42, 0x48, 0x18, 0x9c, 0x8a, 0xcb, 0xd3, 0x4f, 0x05,
	0xaf, 0xa7, 0x9a, 0x51, 0x1d, 0xd1, 0xcd, 0x78, 0x4f, 0xd0, 0x0c, 0xab, 0xe7, 0xbd, 0x6a, 0xb6,
	0xec, 0x18, 0xb3, 0x4d, 0xbe, 0xc1, 0xcd, 0x86, 0x7e, 0x59, 0xf4, 0x54, 0x5f, 0x8a, 0xe5, 0x2b,
	0xcd, 0xf1, 0x1f, 0x2d, 0x51, 0x0c, 0xb0, 0xa0, 0x71, 0xd2, 0x47, 0x3b, 0x52, 0xcc, 0x74, 0xc1,
	0x30, 0xfe, 0x97, 0x40, 0x40, 0x5a, 0xed, 0x2e, 0x28, 0x83, 0xdf, 0x53, 0x1c, 0x22, 0x7e, 0x65,
	0x6b, 0xfa, 0xaf, 0xd4, 0x75, 0xfc, 0x3f, 0x2e, 0xae, 0x3b, 0x45, 0x9c, 0xb5, 0x09, 0x2f, 0x78,
	0xbb, 0xfa, 0x82, 0xf3, 0xd7, 0xb3, 0x69, 0xfd, 0x97, 0xda, 0x3c, 0xd8, 0x90, 0x43, 0xaa, 0xc6,
	0x9f, 0x2d, 0x36, 0x7a, 0x5f, 0x9b, 0x1d, 0x14, 0x6b, 0x98, 0x63, 0x39, 0xbf, 0x6f, 0x6f, 0xc2,
	0xbd, 0xc0, 0x22, 0xb4, 0x21, 0xd3, 0x7d, 0x4b, 0x28, 0xba, 0xd6, 0x90, 0xc9, 0x62, 0xd9, 0x94,
	0xf6, 0x9e, 0x60, 0x4a, 0x1d, 0x5d, 0xb4, 0x21, 0xac, 0xa8, 0x8b, 0x38, 0x94, 0x9f, 0x67, 0xba,
	0x88, 0x43, 0xf9, 0x79, 0x83, 0xbf, 0x05, 0x94, 0x48, 0xe3, 0x6f, 0x19, 0xfc, 0x2b, 0x94, 0xd1,
	0x89, 0x20, 0x83, 0x7f, 0x15, 0xae, 0xc2, 0x1a, 0xff, 0xaa, 0x0e, 0xdf, 0x4e, 0xfe, 0x8c, 0xc8,
	0x21, 0x14, 0x26, 0xca, 0x00, 0x04, 0xee, 0x51, 0x1d, 0x63, 0x61, 0x39, 0x10, 0x50, 0xeb, 0x09,
	0x1c, 0xf1, 0x51, 0xe0, 0x48, 0x31, 0x39, 0x2c, 0x06, 0x93, 0xb3, 0xa6, 0xda, 0x89, 0x15, 0xfe,
	0xc3, 0x09, 0x80, 0xba, 0x82, 0x34, 0x76, 0xc3, 0x4d, 0x3b, 0x58, 0x78, 0xe3, 0xed, 0x28, 0xd2,
	0x71, 0x7d, 0x10, 0xa0, 0x58, 0xd2, 0x5b, 0xd9, 0x89, 0xdc, 0x48, 0x4b, 0x9d, 0xe9, 0x8a, 0xa3,
	0x54, 0xfb, 0xea, 0x3d, 0xf8, 0x31, 0x4c, 0xdb, 0x51, 0xc1, 0xc2, 0x19, 0x3b, 0xec, 0xc3, 0x1b,
	0x30, 0xca, 0x8f, 0x06, 0x21, 0x05, 0x4f, 0x19, 0xe6, 0xdb, 0x71, 0x96, 0x4a, 0x49, 0x49, 0xe5,
	0x29, 0xed, 0x6f, 0x15, 0x0f, 0xa7, 0x8b, 0xc5, 0x81, 0x37, 0x00, 0x26, 0x3d, 0xaa, 0xa2, 0x2b,
	0x7b, 0x6f, 0xb1, 0xba, 0xf7, 0x54, 0x7f, 0xa0, 0x87, 0x71, 0xa4, 0x3d, 0x9a, 0x08, 0xf4, 0xb7,
	0x30, 0xc4, 0x34, 0x74, 0x5d, 0xdb, 0xaa, 0xbe, 0x25, 0x44, 0x61, 0x10, 0x63, 0xfd, 0x76, 0xf4,
	0x84, 0x06, 0xac, 0xb0, 0xff, 0x83, 0xa4, 0xb4, 0x27, 0x41, 0x52, 0x9f, 0x72, 0x94, 0xc3, 0x7e,
	0x38, 0x84, 0x01, 0x23, 0xbe, 0x01, 0x21, 0x85, 0x3f, 0xd8, 0x67, 0x73, 0x4f, 0x10, 0xdc, 0x22,
	0x4a, 0x16, 0x71, 0x84, 0x20, 0x88, 0x5e, 0x16, 0x0e, 0x64, 0x5f, 0xa6, 0x25, 0x4d, 0x00, 0x4e,
	0x7f, 0x05, 0xeb, 0xff, 0xc5, 0xb6, 0x78, 0xce, 0x30, 0xbe, 0x8f, 0x36, 0xd2, 0x48, 0x0e, 0x65,
	0x1a, 0xad, 0x85, 0x65, 0xf8, 0xe8, 0x63, 0xcc, 0xcf, 0xa2, 0x7a, 0xf5, 0x92, 0xf0, 0xf6, 0xd2,
	0x5c, 0x86, 0xd1, 0x96, 0x2c, 0x8a, 0xc3, 0x90, 0x52, 0x56, 0xe0, 0xca, 0x6c, 0x78, 0xa2, 0x26,
	0x64, 0xd3, 0xd8, 0xce, 0xf3, 0x24, 0x28, 0x55, 0xb4, 0x2d, 0x79, 0x17, 0x62, 0xc3, 0xd9, 0x64,
	0x28, 0x55, 0xb4, 0x77, 0x4b, 0x5c, 0x21, 0x33, 0x23, 0x48, 0x6b, 0xb6, 0x99, 0x1d, 0xae, 0xb2,
	0x84, 0x7f, 0x8d, 0xcf, 0xbc, 0x37, 0xc5, 0x33, 0x81, 0x0c, 0xa3, 0xca, 0x33, 0xb6, 0xde, 0xc7,
	0x3d, 0xf6, 0x23, 0x90, 0xf3, 0xd1, 0xb0, 0x68, 0x43, 0x72, 0x3d, 0xef, 0x77, 0xc5, 0xc2, 0xc0,
	0xda, 0xa4, 0xd3, 0xc4, 0x7f, 0xcb, 0x38, 0xc3, 0x1c, 0x28, 0x68, 0xee, 0x51, 0xbc, 0xa6, 0xff,
	0xc3, 0x48, 0x32, 0x57, 0x12, 0x32, 0x1b, 0x94, 0x36, 0x27, 0x0b, 0xa4, 0x6a, 0xdd, 0x74, 0x44,
	0x07, 0x1a, 0x06, 0xd7, 0x71, 0x92, 0x60, 0x45, 0x74, 0x75, 0xb7, 0x08, 0xef, 0xb6, 0x58, 0x3c,
	0xcc, 0xb2, 0xc8, 0xd8, 0xf7, 0xcf, 0x4c, 0x93, 0xa5, 0xc0, 0xa9, 0xe2, 0xbd, 0x23, 0xe6, 0x09,
	0x36, 0xc9, 0x9b, 0xcf, 0xa9, 0x6f, 0xcb, 0xab, 0x9e, 0x47, 0x71, 0xd1, 0x67, 0x11, 0x66, 0x0c,
	0x0c, 0x46, 0x94, 0x49, 0x56, 0x6e, 0x44, 0xa7, 0x24, 0x2a, 0xd4, 0xa0, 0x1a, 0x0a, 0x1b, 0x87,
	0x99, 0x0f, 0x08, 0xfa, 0x74, 0xf3, 0xa0, 0xbc, 0xad, 0x7a, 0x50, 0x5e, 0x48, 0xd9, 0xbd, 0x9a,
	0xc4, 0x30, 0x5c, 0x6d, 0x9d, 0xb2, 0x9b, 0x10, 0xde, 0x5b, 0xa2, 0x17, 0x43, 0xd8, 0xee, 0x31,
	0xe2, 0xf2, 0x86, 0xf1, 0x0f, 0xb0, 0x06, 0x08, 0x18, 0xa4, 0x62, 0x35, 0x0a, 0xa9, 0x63, 0x88,
	0x5b, 0x04, 0x30, 0xab, 0x52, 0x46, 0x78, 0x7e, 0x90, 0xa9, 0x1b, 0xc3, 0x40, 0x18, 0x85, 0xac,
	0x04, 0x6f, 0xc4, 0x59, 0x8a, 0xcc, 0x87, 0xa0, 0xd6, 0xb1, 0xc3, 0xa3, 0x39, 0xab, 0x63, 0x57,
	0xb0, 0xff, 0xeb, 0x2d, 0x16, 0xa0, 0x76, 0x67, 0x34, 0x1c, 0x26, 0x5a, 0xd6, 0x61, 0x03, 0xed,
	0xb6, 0xaa, 0x81, 0x76, 0xdf, 0x12, 0x73, 0xfb, 0xa3, 0x33, 0x1d, 0xc6, 0x6e, 0x0a, 0x21, 0xa8,
	0x29, 0xae, 0x38, 0xcd, 0x32, 0x2b, 0x13, 0xa9, 0xa3, 0xdb, 0x4d, 0x51, 0x99, 0x55, 0xa8, 0x47,
	0xd9, 0xec, 0x36, 0x44, 0xd9, 0xf4, 0xff, 0x83, 0x16, 0x98, 0x7b, 0x68, 0xe7, 0x94, 0x07, 0xfb,
	0x65, 0x18, 0xa7, 0xec, 0xeb, 0xae, 0x89, 0xb9, 0xc1, 0x28, 0x29, 0xe3, 0x61, 0x62, 0xa2, 0x54,
	0x68, 0xd8, 0x26, 0xf7, 0x24, 0x67, 0x2e, 0x5c, 0x4b, 0xd7, 0xc4, 0x5c, 0x3f, 0x2c, 0x8e, 0x98,
	0x11, 0x9a, 0x81, 0xbd, 0xf7, 0xc4, 0x5c, 0x94, 0x67, 0x43, 0xf2, 0xa3, 0x9f, 0x52, 0x08, 0x6b,
	0xaa, 0xf8, 0xbf, 0x86, 0x21, 0x6a, 0x8d, 0x59, 0xa3, 0xd9, 0x95, 0x4d, 0xce, 0xe0, 0x67, 0x43,
	0xb9, 0xa1, 0xf5, 0x0e, 0x04, 0x19, 0x2f, 0x8a, 0x4e, 0x83, 0x17, 0x45, 0x97, 0x79, 0x51, 0x30,
	0x57, 0xc5, 0x9e, 0xeb, 0xaa, 0x08, 0xfb, 0x5f, 0xd1, 0x49, 0x63, 0xa4, 0x6b, 0xe0, 0x7a, 0x46,
	0x4d, 0xc7, 0x33, 0x7a, 0xae, 0xe2, 0x19, 0x0d, 0x7b, 0x63, 0x47, 0xa6, 0xd1, 0x56, 0x71, 0x48,
	0x36, 0x92, 0x16, 0xa1, 0x9e, 0xc2, 0xcd, 0x88, 0x25, 0x13, 0xb4, 0x08, 0xf4, 0xf2, 0x48, 0x86,
	0x2c, 0x89, 0x9d, 0x81, 0x1b, 0xc2, 0xd6, 0x2d, 0x36, 0x85, 0xad, 0xf3, 0xff, 0x76, 0x07, 0x55,
	0xbf, 0xb0, 0x9c, 0xed, 0x90, 0x6e, 0xaf, 0x78, 0xb7, 0x85, 0x80, 0x57, 0xad, 0x64, 0xa7, 0x46,
	0x0b, 0xf4, 0x5c, 0x33, 0x19, 0x65, 0x93, 0x10, 0xb0, 0x4a, 0xde, 0xaa, 0x58, 0x38, 0x82, 0x41,
	0xc1, 0x36, 0xda, 0xd3, 0xb6, 0xc1, 0x6b, 0x01, 0x17, 0x82, 0xc4, 0x84, 0xc4, 0x9d, 0x1a, 0x04,
	0x1b, 0x3c, 0xfc, 0xbb, 0x92, 0x9d, 0x72, 0x46, 0xd3, 0xc5, 0xaa, 0x15, 0x3a, 0x08, 0x4f, 0xc9,
	0xbf, 0xb5, 0x1b, 0x20, 0xa0, 0x77, 0x46, 0x60, 0x24, 0x9a, 0x33, 0x76, 0x67, 0x18, 0xa4, 0x26,
	0x31, 0x3c, 0xfa, 0xb7, 0x45, 0xa0, 0xfe, 0x05, 0x09, 0xc3, 0xfd, 0xd1, 0x40, 0x87, 0xec, 0x62,
	0x28, 0x55, 0x42, 0x91, 0x01, 0xf2, 0x9c, 0xd7, 0x4e, 0xad, 0x0c, 0x85, 0xa1, 0x01, 0x8d, 0x6f,
	0x3d, 0xa9, 0x60, 0x38, 0xaa, 0x16, 0xa6, 0x7b, 0xa1, 0x1e, 0xa6, 0xdb, 0x7f, 0xac, 0x43, 0xd5,
	0x25, 0x89, 0x4c, 0x0f, 0xe5, 0x2e, 0xe4, 0x66, 0x26, 0xb5, 0x97, 0x8e, 0x68, 0x07, 0x3a, 0x22,
	0x52, 0x7b, 0x71, 0x1c, 0x06, 0xa1, 0x51, 0x15, 0x0c, 0xa7, 0x6f, 0x60, 0x4c, 0xfe, 0xf2, 0x58,
	0x47, 0x8c, 0xa7, 0x44, 0x18, 0x16, 0xe3, 0xff, 0x99, 0x96, 0x4e, 0x74, 0x85, 0x6f, 0x36, 0x3e,
	0x1e, 0x13, 0x92, 0x21, 0x0c, 0xc3, 0x3c, 0xd4, 0x81, 0xbf, 0x11, 0x00, 0xdf, 0x35, 0x78, 0xa5,
	0xd5, 0x15, 0x2f, 0x05, 0x1c, 0x55, 0xfb, 0x90, 0x6e, 0xfd, 0x43, 0xfc, 0x9f, 0x40, 0xc6, 0x8d,
	0x0d, 0x43, 0xa1, 0x19, 0x37, 0x8a, 0xa4, 0x43, 0x12, 0x2f, 0x8a, 0xa4, 0x03, 0x59, 0x53, 0x8a,
	0x63, 0x8a, 0x3a, 0xa0, 0xb3, 0xaa, 0x18, 0xcc, 0x74, 0xfe, 0x72, 0x8d, 0x9f, 0xee, 0xf8, 0xcb,
	0xfd, 0x58, 0x9b, 0x6d, 0x32, 0x53, 0x5c, 0x75, 0xec, 0xa6, 0xb8, 0xd8, 0x57, 0x30, 0x13, 0xbd,
	0x20, 0xfd, 0xaa, 0xa2, 0x71, 0x80, 0x40, 0xcf, 0xc9, 0x24, 0x47, 0x1c, 0xe5, 0x6d, 0x52, 0x5b,
	0x76, 0xfe, 0xc7, 0xa9, 0xdc, 0xeb, 0xcb, 0x24, 0xa8, 0x56, 0xf5, 0x5e, 0xd7, 0x1a, 0x82, 0x31,
	0x91, 0x4e, 0xaa, 0x63, 0xac, 0x95, 0x04, 0xcf, 0x8b, 0x25, 0x9a, 0x92, 0x5d, 0x1c, 0x71, 0x8c,
	0xe5, 0xed, 0x22, 0xfd, 0x82, 0x45, 0xbb, 0xde, 0x1c, 0xf5, 0x8f, 0xcf, 0xd6, 0x32, 0x10, 0xe0,
	0xb2, 0x3b, 0x09, 0xb2, 0xd8, 0x0c, 0x53, 0x49, 0xa2, 0xd9, 0xae, 0x25, 0xd1, 0xbc, 0x2e, 0x04,
	0xba, 0x63, 0xf0, 0xf8, 0x87, 0x16, 0xe3, 0xff, 0x39, 0x47, 0xe1, 0x1d, 0xe7, 0xea, 0x44, 0xd1,
	0x19, 0x32, 0x56, 0xb2, 0x74, 0x54, 0x6c, 0x67, 0x59, 0xa2, 0x73, 0x1b, 0x1b, 0x84, 0x7a, 0x6a,
	0x89, 0x04, 0x6e, 0x0f, 0x8b, 0xf0, 0xde, 0x15, 0xf3, 0xfa, 0x03, 0xf4, 0x0a, 0xb9, 0xde, 0xac,
	0x2b, 0xd7, 0xc5, 0x02, 0x5b, 0xc1, 0xff, 0xd3, 0x36, 0xfe, 0xe3, 0x5a, 0x36, 0x88, 0x53, 0xe3,
	0x3a, 0x5d, 0x97, 0x02, 0xb6, 0x1a, 0xa5, 0x80, 0x78, 0xbb, 0x3a, 0xe4, 0xe1, 0x0d, 0x28, 0x60,
	0x47, 0x05, 0x6d, 0x2f, 0xce, 0x1d, 0xa6, 0x8d, 0xf6, 0x7f, 0x9b, 0x5f, 0x75, 0xb6, 0xc2, 0xa1,
	0xcd, 0x64, 0x38, 0x37, 0x40, 0x68, 0x6c, 0x06, 0x63, 0x5d, 0x5a, 0x0b, 0xb8, 0x4c, 0x05, 0x6f,
	0x5d, 0x2c, 0xc9, 0x38, 0x29, 0xe5, 0x96, 0x6e, 0xa1, 0x3d, 0x5d, 0x0b, 0x6e, 0x2d, 0xef, 0x45,
	0x71, 0xb9, 0xcc, 0x56, 0xe4, 0x1e, 0x28, 0xe5, 0xd6, 0xd5, 0x23, 0xf2, 0x11, 0xeb, 0x04, 0xf5,
	0x07, 0xaa, 0x34, 0x92, 0xa5, 0xa0, 0x96, 0x22, 0xa2, 0xfe, 0xc0, 0xff, 0x01, 0xad, 0x9e, 0x74,
	0x7a, 0xd0, 0x48, 0xb0, 0x5e, 0x87, 0x38, 0xb9, 0xc3, 0x52, 0xe6, 0xc5, 0xb8, 0x3c, 0x22, 0xab,
	0xf8, 0x1c, 0xa3, 0x02, 0x50, 0x59, 0x46, 0xb0, 0xb6, 0xc2, 0xa1, 0x71, 0x17, 0x75, 0x70, 0xfe,
	0x5f, 0x42, 0xa5, 0x99, 0xad, 0x4f, 0x7e, 0xff, 0x0a, 0xb2, 0x4a, 0x41, 0x83, 0xf0, 0x5e, 0x15,
	0xb3, 0x05, 0x86, 0x46, 0x24, 0x85, 0xcd, 0xb5, 0x86, 0x48, 0x14, 0x39, 0x9e, 0xe0, 0x81, 0x2e,
	0xaa, 0xbe, 0x60, 0x10, 0xc2, 0x52, 0xd7, 0x4b, 0xf4, 0x5a, 0xc3, 0x54, 0xf0, 0x79, 0x84, 0xb2,
	0xa4, 0x39, 0xb0, 0x2d, 0x9a, 0x2c, 0x61, 0xea, 0xb0, 0x6b, 0x99, 0x18, 0x2c, 0x00, 0xab, 0x95,
	0xa8, 0xf5, 0xb1, 0x2b, 0xd9, 0xe9, 0x46, 0x74, 0xaa, 0x15, 0x7a, 0x55, 0xb4, 0xff, 0xd3, 0xf8,
	0xd1, 0xf6, 0x95, 0xb5, 0x90, 0x8d, 0x3a, 0x44, 0x63, 0x9b, 0x85, 0x68, 0x7c, 0x59, 0x3c, 0xa5,
	0x0e, 0xd6, 0xd5, 0xa3, 0x30, 0x4d, 0x12, 0x6b, 0x53, 0x80, 0xa3, 0xda, 0xf4, 0xc8, 0xd1, 0x18,
	0x53, 0xc4, 0x18, 0xa3, 0x31, 0x06, 0xfb, 0xa1, 0x28, 0x3c, 0x53, 0x1f, 0xa7, 0xaf, 0x0e, 0x06,
	0xe1, 0xff, 0xdb, 0xb4, 0x3a, 0xb2, 0xe1, 0xde, 0x90, 0xb4, 0xb5, 0xaa, 0x9b, 0xab, 0x3a, 0x42,
	0x05, 0xe6, 0x19, 0x1a, 0xc3, 0x13, 0xd5, 0x79, 0x57, 0x5e, 0xcb, 0xfb, 0x40, 0x2c, 0x30, 0x0d,
	0x27, 0x4d, 0xe3, 0x39, 0x17, 0x38, 0x5e, 0xc3, 0xff, 0xeb, 0x2d, 0xc7, 0x3c, 0x10, 0x14, 0xbd,
	0xe0, 0xcb, 0x5a, 0x1d, 0x45, 0xbb, 0x00, 0x9d, 0x00, 0xda, 0x1c, 0x67, 0xcf, 0x5d, 0x3e, 0x9a,
	0x1c, 0x65, 0xcf, 0xeb, 0x2e, 0x3f, 0xaf, 0xf5, 0x46, 0xe9, 0xb1, 0x8d, 0x62, 0xa3, 0xcf, 0xa1,
	0x41, 0x96, 0x8e, 0x3e, 0xf7, 0x3f, 0x21, 0x8b, 0xe0, 0xda, 0xe5, 0x68, 0xfd, 0xf4, 0xf9, 0xd7,
	0xc7, 0x37, 0x5c, 0x5d, 0xf5, 0x58, 0xaf, 0x10, 0x33, 0x10, 0xec, 0x28, 0x72, 0xc3, 0x3e, 0x77,
	0x9a, 0xc2, 0x3e, 0xeb, 0xcc, 0x6a, 0x9c, 0xab, 0x60, 0x98, 0xa6, 0x75, 0xdd, 0x6b, 0x5e, 0xd7,
	0x2b, 0xa8, 0x7a, 0xa5, 0xd6, 0x77, 0x8e, 0xe3, 0x74, 0xdc, 0xfa, 0x66, 0x37, 0x0b, 0x3c, 0x50,
	0x34, 0xe8, 0xff, 0x09, 0x36, 0x54, 0xbc, 0x25, 0xd5, 0x8a, 0x3d, 0x5a, 0xa1, 0x6d, 0xdd, 0xa0,
	0x8b, 0x54, 0xf7, 0xe9, 0xe2, 0x38, 0x4e, 0xc7, 0xe6, 0x7b, 0x68, 0xe8, 0x5f, 0x80, 0x35, 0xfc,
	0xff, 0x8f, 0x0b, 0x89, 0x57, 0xb2, 0x2c, 0x5d, 0x05, 0x59, 0x14, 0x9d, 0x07, 0x43, 0xad, 0x45,
	0x6f, 0x35, 0x9b, 0x99, 0xa8, 0x0a, 0xdb, 0x54, 0x06, 0xe8, 0x88, 0xae, 0xe0, 0xbd, 0x2f, 0xe6,
	0x87, 0xe1, 0xd9, 0x8e, 0x34, 0xa9, 0x56, 0x9a, 0x75, 0xda, 0xaa, 0x36, 0x16, 0x02, 0xa1, 0x85,
	0xa9, 0xe2, 0xbd, 0x27, 0xe6, 0xa3, 0x51, 0x1e, 0x6a, 0x2e, 0x6c, 0xec, 0xdb, 0xd7, 0xa8, 0x10,
	0x5a, 0xdf, 0xe8, 0x1a, 0xde, 0xab, 0x62, 0x26, 0x0a, 0x93, 0x98, 0x12, 0xd7, 0x34, 0x08, 0x9a,
	0xa1, 0x6e, 0x18, 0xc3, 0x5d, 0x37, 0xa0, 0xb2, 0xde, 0xe7, 0x45, 0xef, 0x60, 0x94, 0x46, 0xda,
	0x02, 0xf9, 0x93, 0x4d, 0x95, 0xee, 0x8c, 0xb0, 0xaf, 0x58, 0xd2, 0xfb, 0x50, 0x2c, 0xde, 0x8d,
	0x0f, 0x4a, 0x63, 0xa9, 0x34, 0x33, 0x46, 0xae, 0xcd, 0xca, 0x04, 0x4e, 0x0d, 0xff, 0x8b, 0xa8,
	0xac, 0x64, 0x28, 0x35, 0x78, 0xfa, 0xff, 0xf8, 0x90, 0x0a, 0xac, 0xc2, 0xa3, 0x07, 0xa9, 0x0c,
	0x6c, 0x15, 0xff, 0x7f, 0xc7, 0x60, 0x88, 0xd5, 0x22, 0x6a, 0x4d, 0x1a, 0x4b, 0xee, 0x36, 0x0a,
	0xfb, 0x49, 0xa2, 0x4f, 0x1e, 0x3a, 0x24, 0xce, 0x5f, 0x16, 0xb3, 0xbb, 0x03, 0x60, 0x38, 0x74,
	0xb4, 0x49, 0x02, 0x15, 0x65, 0xd8, 0x1d, 0x68, 0x7b, 0xbc, 0x6e, 0x80, 0x80, 0xf7, 0xc7, 0x44,
	0x67, 0x67, 0xb4, 0x4f, 0xa3, 0x76, 0x0e, 0x5d, 0x53, 0x25, 0x55, 0x33, 0x3b, 0xc6, 0x45, 0xa9,
	0x1b, 0xf4, 0x8c, 0x39, 0x75, 0x20, 0x77, 0x80, 0x44, 0xce, 0x4e, 0xd3, 0x94, 0x2e, 0xad, 0xa8,
	0x3e, 0x84, 0x1b, 0xd2, 0x17, 0xb2, 0x6e, 0x60, 0x60, 0xfc, 0x16, 0x0c, 0x63, 0x34, 0xaf, 0xbf,
	0x05, 0x03, 0x18, 0x2d, 0x8b, 0xd9, 0xb5, 0xb0, 0x0c, 0x3f, 0x26, 0x41, 0xf6, 0x52, 0xa0, 0x41,
	0x96, 0x5d, 0x03, 0xed, 0xf8, 0x1b, 0xb2, 0x6b, 0x2c, 0x3a, 0xd9, 0x35, 0xfc, 0x53, 0x38, 0x3c,
	0x2a, 0xdb, 0xc1, 0xb8, 0x4b, 0x68, 0x95, 0x30, 0x41, 0x3c, 0xf7, 0x36, 0xd9, 0xce, 0xeb, 0xdc,
	0xdb, 0xcb, 0x62, 0xf6, 0x71, 0x96, 0x83, 0x7a, 0x80, 0xac, 0xfc, 0x09, 0xc4, 0x40, 0xd0, 0x20,
	0x4f, 0xe8, 0xea, 0x40, 0xd0, 0x0a, 0xf2, 0x1f, 0x69, 0x6b, 0x16, 0x67, 0x2b, 0x4d, 0x7a, 0xb5,
	0x7e, 0x41, 0x7b, 0xdc, 0x0b, 0x3a, 0xce, 0x0b, 0xfe, 0xf5, 0x96, 0xf9, 0x36, 0xb6, 0xd9, 0x58,
	0xf1, 0x16, 0x2f, 0xae, 0x68, 0x51, 0x14, 0x96, 0xe1, 0x58, 0x5a, 0xc4, 0xdb, 0x01, 0xb1, 0xb6,
	0xda, 0x4b, 0x50, 0x63, 0xfc, 0xc7, 0xfb, 0x7f, 0x1c, 0xc5, 0xb2, 0xf5, 0xaa, 0xe7, 0x91, 0x59,
	0x26, 0xc0, 0x59, 0x16, 0xb3, 0x94, 0xd3, 0x41, 0x2f, 0x6a, 0x02, 0xfd, 0xbf, 0x83, 0xfe, 0xe2,
	0x9c, 0x24, 0x40, 0x12, 0x9b, 0x14, 0x2e, 0x04, 0xda, 0x1b, 0x87, 0xc0, 0x09, 0x6f, 0x78, 0x5d,
	0x7f, 0x7a, 0x67, 0xac, 0x0d, 0x0f, 0xbe, 0xa0, 0xfe, 0xdd, 0x7a, 0x39, 0x74, 0xc7, 0x2e, 0x87,
	0xde, 0xb8, 0xd9, 0x9a, 0x71, 0x66, 0xeb, 0xcb, 0x66, 0x39, 0xf0, 0x37, 0xd5, 0x86, 0xc9, 0x2e,
	0x8f, 0xb6, 0xb3, 0x3c, 0xae, 0x31, 0xa9, 0x25, 0xc5, 0xec, 0xd5, 0xb0, 0xff, 0xe3, 0x2d, 0xf0,
	0x5b, 0x65, 0x44, 0x70, 0xec, 0x22, 0x80, 0x1c, 0x2c, 0x77, 0x6c, 0x74, 0x57, 0x82, 0xbc, 0xd7,
	0xdc, 0x11, 0xfa, 0xf4, 0x38, 0x02, 0x3b, 0x7e, 0x61, 0x74, 0xdd, 0x85, 0xf1, 0xae, 0x59, 0x9b,
	0xac, 0xda, 0xb4, 0x5f, 0xeb, 0xff, 0x67, 0xc8, 0x56, 0xa9, 0xea, 0xc8, 0x68, 0xe9, 0x06, 0xae,
	0xaa, 0xe3, 0xa3, 0x0c, 0xed, 0x77, 0x21, 0xa4, 0x28, 0x94, 0xb6, 0x08, 0x9c, 0xca, 0x8a, 0x4e,
	0x97, 0xf6, 0xde, 0xd2, 0x7c, 0x69, 0x71, 0x6b, 0xb2, 0x40, 0x57, 0xd7, 0x34, 0xc5, 0x15, 0xb3,
	0xb2, 0x3a, 0x1a, 0x8c, 0x92, 0xb0, 0x8c, 0x4f, 0x24, 0xd9, 0x41, 0x33, 0x8c, 0xff, 0xfd, 0x2d,
	0xb3, 0x39, 0xf0, 0x23, 0x56, 0xb3, 0xf4, 0x20, 0x3e, 0x9c, 0x34, 0x3d, 0xcb, 0x62, 0x36, 0x22,
	0xca, 0x47, 0x44, 0x80, 0x40, 0xc5, 0x78, 0xf1, 0x09, 0x7a, 0xae, 0x69, 0x82, 0x9c, 0xa1, 0xa2,
	0x29, 0xf2, 0x1f, 0xe9, 0x24, 0x28, 0xea, 0xd6, 0xa2, 0x19, 0x3d, 0xeb, 0x7e, 0xd6, 0xaa, 0x86,
	0xe6, 0xcc, 0x2d, 0x2b, 0xbc, 0x14, 0x10, 0xe4, 0xb8, 0xa5, 0x75, 0x2a, 0xc1, 0x66, 0xff, 0x34,
	0x7f, 0x81, 0x66, 0xb2, 0xd8, 0xcd, 0x69, 0xad, 0x7a, 0x73, 0x1a, 0xff, 0x9a, 0x57, 0x35, 0x77,
	0xd9, 0x19, 0x9b, 0xc1, 0x81, 0x7d, 0x05, 0xb1, 0x96, 0x94, 0x51, 0xde, 0x08, 0x74, 0xe0, 0xc2,
	0x47, 0x31, 0x2e, 0xfa, 0xa3, 0x9c, 0x30, 0x26, 0x1f, 0x9f, 0xc1, 0x78, 0x6f, 0xd7, 0xee, 0x92,
	0xe3, 0x5e, 0x68, 0x6e, 0x63, 0xba, 0xbc, 0x7f, 0x86, 0xc1, 0xe8, 0x31, 0x89, 0xb4, 0x0d, 0x18,
	0xf5, 0xac, 0x98, 0x2f, 0x64, 0x1a, 0xa1, 0x39, 0x0d, 0xf9, 0xc2, 0x1a, 0x04, 0x8f, 0x54, 0xd3,
	0x76, 0x22, 0xd5, 0xa0, 0x87, 0x1a, 0xd1, 0x2e, 0xda, 0xdd, 0x1a, 0xa6, 0x3d, 0xd3, 0xd5, 0x7b,
	0xc6, 0xff, 0x61, 0xe4, 0xe0, 0x9d, 0x77, 0xaf, 0x64, 0x21, 0xda, 0x15, 0xbe, 0x2d, 0x66, 0x07,
	0xc5, 0xe1, 0x24, 0x7b, 0xc5, 0x6a, 0x9f, 0x03, 0x5d, 0xc1, 0x8a, 0x66, 0x49, 0x18, 0x88, 0xa2,
	0x59, 0x6e, 0x20, 0xd4, 0x71, 0x0d, 0x84, 0xfc, 0x5f, 0x69, 0x57, 0xba, 0x72, 0x28, 0x29, 0xed,
	0xe2, 0xbf, 0x98, 0xb1, 0x00, 0x1f, 0x3a, 0x68, 0x92, 0x9b, 0x19, 0x5a, 0x0c, 0x28, 0x8f, 0xb2,
	0x3c, 0x02, 0x2f, 0x43, 0x54, 0xcc, 0x1b, 0xb8, 0x9a, 0xee, 0x60, 0x76, 0x52, 0xb2, 0x9e, 0x39,
	0x27, 0xad, 0xc5, 0x79, 0x49, 0x77, 0x1a, 0xd2, 0x50, 0x88, 0xc6, 0x34, 0x14, 0xfe, 0xd7, 0x31,
	0x80, 0xac, 0x33, 0x27, 0x4f, 0xa6, 0x3b, 0x6d, 0x1c, 0x7b, 0x47, 0x77, 0xaa, 0x26, 0x82, 0x8e,
	0x2d, 0x33, 0xb7, 0x16, 0xe1, 0xdf, 0x01, 0x0f, 0xa4, 0x31, 0x09, 0x5a, 0x9e, 0xe0, 0xb2, 0xf4,
	0xd7, 0xdb, 0xe8, 0x27, 0xee, 0x66, 0xbe, 0xa5, 0xe6, 0x54, 0x53, 0xeb, 0x62, 0x3e, 0xee, 0x67,
	0xe9, 0x0e, 0xdc, 0x87, 0x3a, 0xcd, 0x8e, 0x34, 0x63, 0xf3, 0xc4, 0x98, 0x9a, 0xde, 0x5d, 0x21,
	0x06, 0x59, 0x24, 0x13, 0x6c, 0xa7, 0xfb, 0x64, 0xed, 0xb0, 0xaa, 0xde, 0x3b, 0xa2, 0xbb, 0x9f,
	0x9d, 0xea, 0x2b, 0xc5, 0xd4, 0x4d, 0x40, 0x25, 0xef, 0xb6, 0x98, 0xc5, 0xb4, 0x2b, 0xc5, 0xf2,
	0xcc, 0x93, 0xd5, 0xd7, 0xf5, 0x28, 0x45, 0xc7, 0x8e, 0x3c, 0x91, 0xe9, 0x5a, 0x38, 0x41, 0x72,
	0xd0, 0xec, 0x75, 0x0a, 0x71, 0x60, 0x14, 0xd1, 0x74, 0xa3, 0xf4, 0x72, 0x9c, 0x6a, 0xa9, 0xd4,
	0xd1, 0xe7, 0xdb, 0xe5, 0xc0, 0xff, 0xdb, 0x48, 0x39, 0xe0, 0x95, 0x25, 0xbd, 0xd3, 0xc4, 0xe7,
	0x30, 0x37, 0xfb, 0x31, 0x92, 0x94, 0x5a, 0x47, 0x99, 0x25, 0xba, 0x0d, 0x4d, 0x48, 0x1a, 0x65,
	0x1b, 0x9a, 0xd0, 0xf4, 0xbe, 0xc3, 0x7b, 0x6f, 0x4d, 0xf9, 0xba, 0x8e, 0xef, 0x4e, 0x4d, 0x4a,
	0xd0, 0x6b, 0x90, 0x12, 0xf8, 0x7f, 0x15, 0x7d, 0x76, 0xef, 0x67, 0x27, 0x71, 0x5f, 0xfe, 0xc1,
	0x7d, 0x84, 0x36, 0x3a, 0x2e, 0xad, 0x70, 0xd3, 0x22, 0xfc, 0xaf, 0x40, 0x1f, 0x3f, 0x8a, 0x93,
	0xe4, 0x61, 0x9c, 0x44, 0x5b, 0x59, 0x5a, 0xd0, 0xed, 0x9d, 0x58, 0x18, 0x43, 0x14, 0x09, 0x62,
	0x63, 0xd2, 0x76, 0xc6, 0xa4, 0xc1, 0x46, 0xdb, 0xff, 0x59, 0xca, 0xc5, 0x1c, 0xe7, 0x3b, 0x47,
	0xf1, 0xd0, 0xca, 0xda, 0x30, 0xba, 0x4e, 0x2f, 0xcc, 0x07, 0x67, 0x05, 0x89, 0x06, 0x26, 0x07,
	0xaf, 0xc4, 0xa2, 0x8a, 0x4e, 0x9a, 0xb0, 0xd8, 0x28, 0x28, 0x34, 0xb0, 0xfa, 0xcc, 0x3b, 0x3a,
	0x90, 0xa8, 0xf6, 0x34, 0x30, 0x08, 0xb5, 0x0e, 0x75, 0x2f, 0x0e, 0x0e, 0x63, 0xed, 0x0e, 0xe6,
	0xe0, 0xfc, 0x55, 0x71, 0x99, 0xe0, 0xed, 0xb0, 0x28, 0xd0, 0x85, 0x56, 0xbd, 0x72, 0x75, 0x44,
	0xea, 0x50, 0x12, 0x5f, 0x6a, 0x58, 0x7d, 0xf2, 0x0e, 0x13, 0x39, 0x82, 0x18, 0xf0, 0xc7, 0x50,
	0x2d, 0x0e, 0x39, 0x51, 0x9a, 0x3e, 0xfb, 0x45, 0x71, 0x79, 0x75, 0x94, 0xa3, 0x18, 0x7a, 0x2b,
	0x3c, 0xe5, 0x0d, 0xd7, 0x1f, 0x78, 0x2b, 0x62, 0x51, 0xf5, 0x45, 0x46, 0xd8, 0x9b, 0xc6, 0xf3,
	0xbf, 0xd6, 0xe7, 0xc0, 0xa9, 0xe3, 0xff, 0x17, 0x6d, 0x74, 0xde, 0xac, 0xf6, 0x26, 0x30, 0x69,
	0xf5, 0x03, 0x09, 0x59, 0x1c, 0xb5, 0x29, 0x1f, 0x81, 0x6a, 0x39, 0x6d, 0x14, 0x0f, 0xe3, 0x94,
	0x16, 0x1a, 0x02, 0xde, 0x6b, 0x62, 0x26, 0x90, 0xc3, 0x84, 0x7c, 0x2a, 0x1a, 0xf8, 0x50, 0xb4,
	0xbb, 0x31, 0xe9, 0xb7, 0xb0, 0xb0, 0xf7, 0x8e, 0x7a, 0x8d, 0x75, 0xb4, 0x99, 0x4a, 0x06, 0xaa,
	0x6b, 0x98, 0x81, 0xee, 0xd9, 0x81, 0xae, 0xcd, 0xe8, 0x4c, 0x7d, 0x46, 0xbd, 0x2d, 0x1d, 0x54,
	0x28, 0x2c, 0x0a, 0xfd, 0xf6, 0xd9, 0x69, 0xdf, 0x5e, 0xab, 0xea, 0xaf, 0xc1, 0x40, 0xae, 0xe5,
	0xd9, 0x90, 0x7b, 0x52, 0x6a, 0x53, 0x82, 0xc6, 0xbc, 0xdd, 0x96, 0x24, 0x76, 0x69, 0x3f, 0xfa,
	0xbf, 0x8c, 0xfc, 0x76, 0xb5, 0x19, 0x62, 0x05, 0x99, 0x2f, 0x61, 0xab, 0xe6, 0x4b, 0x08, 0xbc,
	0x00, 0x42, 0x36, 0x0d, 0x32, 0x47, 0xa9, 0xd3, 0x2b, 0xa7, 0x3e, 0x8d, 0x3d, 0xbd, 0xc6, 0x7c,
	0x40, 0x60, 0x6b, 0xa2, 0xb1, 0x02, 0x91, 0x99, 0xae, 0x36, 0x56, 0x20, 0x59, 0xf2, 0x0f, 0xf0,
	0x28, 0x0c, 0x4d, 0xe7, 0x41, 0xcf, 0xb9, 0x33, 0x15, 0xce, 0x9d, 0xa9, 0xb0, 0x61, 0xeb, 0x6d,
	0xc6, 0x44, 0x24, 0x19, 0x55, 0xb4, 0x1b, 0x2a, 0xbf, 0x5b, 0x09, 0x95, 0xef, 0xff, 0x25, 0x9e,
	0x0a, 0x93, 0x75, 0x06, 0x35, 0x32, 0x71, 0x1a, 0x97, 0x64, 0x66, 0x05, 0xff, 0xd5, 0xcd, 0x91,
	0x4b, 0x84, 0xc7, 0x38, 0x4e, 0xd7, 0x08, 0xee, 0xeb, 0xe2, 0x2a, 0xc9, 0x95, 0xd7, 0x8d, 0x7b,
	0x01, 0xef, 0xf4, 0x98, 0xa7, 0xfe, 0xfb, 0x42, 0x60, 0xc2, 0x4a, 0xf0, 0xe5, 0xe3, 0xf3, 0xba,
	0x56, 0x9b, 0xd7, 0x35, 0xb5, 0x74, 0xa2, 0xf0, 0x4c, 0xbb, 0x8e, 0x45, 0xe1, 0x99, 0xff, 0xcb,
	0xc8, 0xb2, 0xee, 0x94, 0x79, 0x96, 0x1e, 0xca, 0xa2, 0x34, 0xc7, 0x74, 0xdd, 0x71, 0xa6, 0x21,
	0xe6, 0x52, 0x7b, 0xb2, 0xf3, 0x68, 0x67, 0x2a, 0xe7, 0xd1, 0x6e, 0x83, 0xa3, 0x01, 0x77, 0x20,
	0xe8, 0x99, 0x90, 0x47, 0x13, 0x1c, 0x08, 0x66, 0x9e, 0xc0, 0x81, 0x60, 0xb6, 0xd9, 0x81, 0xe0,
	0x15, 0x78, 0xe7, 0x2e, 0x4c, 0x1e, 0x26, 0xe9, 0x7d, 0xa6, 0x21, 0xbf, 0x2e, 0x86, 0x4a, 0xd1,
	0x05, 0xfd, 0x3f, 0x01, 0x5c, 0x5e, 0x7d, 0xf8, 0xf4, 0x4e, 0xc3, 0x64, 0xae, 0x4e, 0x0e, 0x1d,
	0x0d, 0x7b, 0x1f, 0x88, 0x99, 0x62, 0x04, 0x46, 0xa7, 0xed, 0x27, 0xdb, 0x40, 0x54, 0xcd, 0xff,
	0xad, 0x36, 0xd8, 0x65, 0x93, 0xbd, 0xd7, 0xbf, 0x44, 0x53, 0xe8, 0x1a, 0x6e, 0xcc, 0x54, 0x0d,
	0x37, 0x4c, 0xa8, 0x1b, 0xed, 0x69, 0xa7, 0x83, 0x7b, 0x3b, 0x48, 0x4b, 0xf6, 0xe6, 0x38, 0x1b,
	0x42, 0xef, 0x85, 0x07, 0xf3, 0xf6, 0xbd, 0x5a, 0x5f, 0x52, 0x5d, 0x0c, 0xa2, 0x79, 0x31, 0x60,
	0x2b, 0x18, 0x80, 0x7c, 0xc1, 0x78, 0xb0, 0x00, 0xec, 0xff, 0x42, 0x9b, 0x6e, 0xbb, 0x72, 0x18,
	0xe6, 0xf2, 0x4e, 0x96, 0x93, 0xb1, 0xfa, 0x1f, 0x6d, 0x97, 0x73, 0xb7, 0xcb, 0x09, 0xdd, 0xef,
	0xd8, 0xc8, 0xfd, 0x0b, 0xd9, 0x29, 0xff, 0x75, 0x9b, 0xb9, 0xdf, 0xff, 0x4b, 0x32, 0x71, 0x7f,
	0xe8, 0x37, 0x89, 0x9f, 0xc1, 0xa0, 0xae, 0x9f, 0x0e, 0x25, 0x5a, 0x13, 0xed, 0x1c, 0x65, 0x43,
	0x63, 0xf1, 0xc8, 0x2c, 0x76, 0x5b, 0x8e, 0xc5, 0xae, 0x1a, 0x98, 0x44, 0x1e, 0x94, 0x2b, 0xa3,
	0x33, 0x6e, 0xe1, 0xed, 0xe0, 0xc0, 0x72, 0xb3, 0x38, 0x31, 0x36, 0x15, 0x08, 0xf8, 0x7f, 0x93,
	0x58, 0x4c, 0x98, 0xc6, 0xca, 0x7b, 0x21, 0xa3, 0xd0, 0x62, 0x31, 0x94, 0xfd, 0x38, 0x4c, 0xb8,
	0x12, 0xbc, 0x16, 0x1e, 0xa2, 0xb9, 0xc3, 0x81, 0x53, 0xd7, 0x7b, 0x57, 0x9b, 0xfe, 0xb6, 0x9f,
	0xa8, 0x11, 0xb2, 0xfe, 0x7d, 0x53, 0x3c, 0x43, 0x07, 0xf6, 0x0e, 0x6b, 0x94, 0x2d, 0x96, 0x71,
	0x8f, 0xbd, 0xcf, 0x89, 0x4b, 0xf4, 0xc8, 0x56, 0xc1, 0x95, 0x53, 0xc3, 0xa3, 0x59, 0x89, 0xc5,
	0xe1, 0x68, 0xe2, 0x32, 0xaa, 0x3f, 0xf0, 0xff, 0x32, 0x0a, 0x91, 0x7f, 0x7f, 0x87, 0x6d, 0xc2,
	0x87, 0xb7, 0x27, 0x7e, 0xb8, 0xff, 0x6b, 0x1d, 0x98, 0x5b, 0xb0, 0x37, 0xda, 0x89, 0xcb, 0x11,
	0x2a, 0x70, 0x8c, 0xd7, 0xb3, 0x59, 0x10, 0x2d, 0xb6, 0x20, 0x1a, 0x7d, 0x9e, 0xd5, 0xc2, 0x1b,
	0xed, 0x33, 0xeb, 0x5e, 0x0d, 0x42, 0xa2, 0x1d, 0x30, 0xd9, 0xc2, 0x6c, 0x93, 0x38, 0xac, 0x1c,
	0xe5, 0xbd, 0x03, 0x51, 0x58, 0xf0, 0x2b, 0xc9, 0xf5, 0xe7, 0x3c, 0xfb, 0x75, 0x53, 0xde, 0xf5,
	0xba, 0x9d, 0xa9, 0x7a, 0xdd, 0x32, 0x51, 0xd1, 0xac, 0xab, 0x8e, 0xb1, 0x1c, 0xec, 0x9c, 0x93,
	0x88, 0x43, 0x11, 0x10, 0xe8, 0x1b, 0x65, 0xe2, 0x40, 0x13, 0x5c, 0x07, 0x07, 0xf9, 0x72, 0x0c,
	0x3b, 0x4b, 0xfb, 0x94, 0x61, 0xf4, 0x5b, 0xd5, 0x60, 0xa0, 0x8a, 0x50, 0x83, 0xde, 0x6d, 0xb1,
	0x80, 0xbc, 0x28, 0x0e, 0xc6, 0x62, 0x33, 0xbb, 0x6a, 0xad, 0xb7, 0x5f, 0x7f, 0x15, 0x24, 0x69,
	0xac, 0x8e, 0x6a, 0xfc, 0xee, 0x00, 0xab, 0x63, 0x0e, 0x06, 0x0d, 0xfa, 0x3f, 0x82, 0x6b, 0xad,
	0x32, 0x99, 0x63, 0x58, 0xe6, 0xdb, 0xaa, 0x8f, 0x65, 0x1e, 0x1b, 0x33, 0xdc, 0xcf, 0x36, 0xe6,
	0x36, 0xa9, 0x2f, 0x8a, 0x40, 0xd7, 0xc3, 0x58, 0x50, 0x39, 0x1e, 0xd7, 0xda, 0xa4, 0x9b, 0x60,
	0xff, 0x6b, 0x90, 0xfc, 0xcd, 0x6d, 0x42, 0x1d, 0x0a, 0x3b, 0x69, 0x38, 0x2c, 0x8e, 0x32, 0xb8,
	0x9c, 0x6e, 0xd9, 0x2e, 0xe0, 0xea, 0x7f, 0x65, 0x72, 0x17, 0x9c, 0xfa, 0xb5, 0xee, 0xa8, 0xab,
	0xcb, 0x0b, 0xd3, 0xd5, 0x19, 0xb3, 0xae, 0xd7, 0xc4, 0x62, 0xce, 0x8a, 0x8f, 0x33, 0x4c, 0xa8,
	0x26, 0x69, 0x0d, 0x9c, 0x5a, 0xfe, 0xc7, 0x8c, 0x5a, 0xd6, 0xa7, 0xe2, 0x4d, 0x31, 0x13, 0xe2,
	0x55, 0x75, 0x8c, 0x68, 0x9c, 0x16, 0xfa, 0x9e, 0x99, 0x7c, 0x2a, 0xef, 0xff, 0x78, 0x8b, 0x1b,
	0x66, 0x67, 0x87, 0x71, 0xaa, 0xdd, 0xb7, 0x59, 0xfc, 0xd6, 0x96, 0x1b, 0xbf, 0x15, 0x02, 0x2e,
	0x1c, 0xc6, 0xe9, 0x5a, 0x78, 0x66, 0x02, 0x68, 0x18, 0x84, 0x3d, 0xeb, 0xe0, 0x31, 0xd2, 0x7c,
	0x86, 0xa9, 0x5a, 0xe2, 0x74, 0x6b, 0x96, 0x38, 0xfe, 0xaf, 0xa3, 0xb1, 0x20, 0x98, 0x2f, 0xaa,
	0x33, 0xb8, 0x6e, 0x78, 0x8f, 0xe2, 0xc3, 0x57, 0x5c, 0xba, 0x7e, 0x8e, 0xbb, 0x02, 0x91, 0x73,
	0xf4, 0x5b, 0x5b, 0xe1, 0x0a, 0xc7, 0xa5, 0x80, 0xa3, 0x1c, 0xdf, 0x95, 0x6e, 0xc5, 0x77, 0xe5,
	0x59, 0x31, 0x3f, 0x84, 0xa8, 0xc2, 0x25, 0x99, 0x9c, 0xce, 0x07, 0x16, 0xe1, 0x68, 0x32, 0x4d,
	0x06, 0x6b, 0xd2, 0x64, 0x52, 0x80, 0x70, 0xf3, 0x51, 0x4d, 0x1f, 0x04, 0xba, 0xa8, 0x38, 0xcb,
	0xe3, 0x52, 0x5f, 0xec, 0x0c, 0x7c, 0x4e, 0x1c, 0x00, 0x46, 0x91, 0xba, 0x0d, 0xe9, 0x8e, 0xec,
	0x70, 0xf7, 0xea, 0x86, 0x4f, 0xaf, 0xeb, 0x61, 0x9c, 0x69, 0x5e, 0x3b, 0xd5, 0x79, 0xd0, 0x23,
	0xa9, 0x03, 0x52, 0xcc, 0xb2, 0x74, 0xb9, 0x3b, 0xee, 0xcc, 0xe9, 0x63, 0xe9, 0x5d, 0x21, 0x12,
	0x8d, 0x2b, 0xc6, 0x65, 0x3d, 0xe2, 0x43, 0x13, 0xb0, 0xf2, 0xfe, 0x3d, 0x4c, 0x16, 0xe1, 0x74,
	0xc3, 0xba, 0x48, 0x36, 0x0c, 0x22, 0x73, 0x82, 0x71, 0x27, 0xe1, 0x47, 0x28, 0x6d, 0xa8, 0x79,
	0xd3, 0xf8, 0x66, 0x2a, 0xe3, 0xd6, 0xae, 0x8f, 0xdb, 0x7b, 0xae, 0x47, 0xd1, 0x67, 0x27, 0x8f,
	0x9b, 0x75, 0x01, 0xc4, 0x5a, 0xfe, 0x1f, 0xe7, 0x1b, 0x8f, 0xaf, 0x8a, 0xd5, 0x86, 0xc1, 0xfa,
	0xcc, 0xf8, 0xc1, 0x62, 0xbe, 0x85, 0x6c, 0xcc, 0xfe, 0xf1, 0x0c, 0xb0, 0xe7, 0x2c, 0xe5, 0xb9,
	0xfd, 0xd4, 0xab, 0x62, 0x66, 0x37, 0x4e, 0x74, 0x68, 0x9c, 0x5e, 0x40, 0x90, 0xc2, 0xdf, 0x46,
	0xa5, 0x10, 0xf9, 0x17, 0x22, 0xa4, 0x86, 0xe2, 0x36, 0x53, 0x27, 0xd1, 0x96, 0xb9, 0xed, 0x66,
	0xcf, 0x56, 0x6f, 0x62, 0x3e, 0x86, 0x06, 0x06, 0x43, 0x19, 0xed, 0xa7, 0x4f, 0x71, 0x3f, 0x8d,
	0x8b, 0xbe, 0x6b, 0x6a, 0x3d, 0xd3, 0x64, 0x6a, 0xbd, 0xa9, 0xc3, 0xc7, 0x6b, 0x3d, 0x16, 0xc3,
	0xd4, 0x23, 0x0b, 0xcd, 0x35, 0x45, 0x16, 0xba, 0x22, 0x7a, 0x1f, 0xc7, 0x43, 0x13, 0x99, 0x0a,
	0x01, 0xc5, 0xfb, 0xaf, 0xba, 0xae, 0x2b, 0x14, 0x96, 0xca, 0xc5, 0xaa, 0xaf, 0x37, 0x18, 0x13,
	0x65, 0x93, 0xa3, 0xd4, 0xd6, 0xdc, 0x31, 0x09, 0xef, 0x17, 0x91, 0x28, 0x18, 0x84, 0xfa, 0xfe,
	0xfb, 0x71, 0xff, 0x18, 0xbe, 0x70, 0x09, 0xc7, 0x46, 0xc3, 0xaa, 0x67, 0xe8, 0xd5, 0x7a, 0x01,
	0xa5, 0x7d, 0xe8, 0xca, 0xfa, 0x92, 0xf0, 0x56, 0xc3, 0x61, 0xd8, 0x8f, 0xcb, 0xb3, 0x07, 0x07,
	0x77, 0xc3, 0x1c, 0xf4, 0x60, 0x94, 0xd7, 0xa8, 0xe1, 0x89, 0xe2, 0x33, 0x57, 0x47, 0xb9, 0x06,
	0xf1, 0x10, 0xc7, 0x30, 0xd1, 0x35, 0xbc, 0xf5, 0xb5, 0xb4, 0x0a, 0xbc, 0xcb, 0xa8, 0xc0, 0xab,
	0xa0, 0x15, 0xcb, 0xf2, 0x51, 0x9c, 0x1e, 0x3e, 0x0e, 0x73, 0xcc, 0x4c, 0xe2, 0x61, 0xee, 0x2f,
	0x8e, 0x83, 0x37, 0xeb, 0x81, 0xd8, 0xca, 0x22, 0x99, 0x6c, 0x44, 0xe0, 0x38, 0xaf, 0xde, 0x5c,
	0xc1, 0xab, 0x8b, 0xdf, 0x7e, 0x76, 0xba, 0x7e, 0x5a, 0x52, 0xfc, 0xa8, 0xa9, 0xd5, 0x4a, 0x54,
	0xcd, 0x5b, 0x17, 0xf3, 0xa8, 0x60, 0x52, 0x6d, 0x3c, 0xfd, 0x64, 0x6d, 0xd8, 0x9a, 0xda, 0xa5,
	0xfa, 0xaa, 0x75, 0xa9, 0x46, 0x6d, 0x3a, 0xd8, 0x36, 0xc6, 0xd1, 0xf2, 0x33, 0x46, 0x9b, 0x4e,
	0x18, 0x2d, 0xa5, 0x5d, 0xb6, 0xb1, 0x38, 0xfe, 0xbc, 0xf1, 0x46, 0xa1, 0xdd, 0xa5, 0x07, 0x99,
	0x1c, 0x65, 0x1b, 0xa6, 0xaf, 0xf5, 0x44, 0xd3, 0xd7, 0x1e, 0x33, 0x7d, 0x7c, 0xa3, 0x75, 0xdc,
	0x8d, 0xe6, 0xdf, 0xc1, 0x3c, 0x26, 0x67, 0x69, 0x9f, 0x2e, 0x55, 0x8a, 0x2f, 0x81, 0x28, 0xd5,
	0xc5, 0x59, 0xda, 0x67, 0x97, 0x71, 0x8b, 0x50, 0x34, 0x3c, 0x0a, 0xcb, 0x10, 0xde, 0xb7, 0x18,
	0xc0, 0x7f, 0x7f, 0x13, 0x0e, 0x2a, 0xdb, 0x0e, 0x38, 0x39, 0x57, 0x78, 0xaa, 0x1a, 0x73, 0x59,
	0x79, 0xad, 0xe5, 0x9f, 0xf6, 0x80, 0xcc, 0x6d, 0x85, 0x31, 0xc4, 0xc1, 0x07, 0x41, 0x39, 0x76,
	0x4c, 0x8d, 0x3a, 0x68, 0x75, 0x4d, 0xcf, 0x7a, 0x01, 0xc3, 0x60, 0xa6, 0x2d, 0xac, 0x85, 0x27,
	0x7c, 0x2f, 0xb0, 0x08, 0x7f, 0x00, 0x9d, 0xe4, 0xcd, 0xba, 0xca, 0x60, 0x6c, 0xcf, 0x22, 0xbc,
	0x77, 0xab, 0x9c, 0xa9, 0xdf, 0x60, 0xb1, 0x5a, 0xe9, 0xa3, 0xfd, 0x8a, 0x9f, 0xc4, 0x30, 0xca,
	0xaa, 0x08, 0x7c, 0xe5, 0xce, 0x68, 0x30, 0x08, 0xf3, 0xb3, 0x29, 0x3f, 0xe5, 0x86, 0x58, 0x18,
	0xa5, 0x81, 0x0c, 0x23, 0x7b, 0x49, 0xee, 0x05, 0x1c, 0x65, 0xac, 0x83, 0xad, 0xf7, 0x73, 0x2f,
	0x60, 0x18, 0x75, 0xbe, 0x63, 0xba, 0x9a, 0x82, 0x32, 0xe4, 0x6b, 0xd0, 0x1f, 0xe9, 0x1c, 0xd4,
	0x4e, 0xc7, 0xbc, 0x0f, 0xab, 0x33, 0xf6, 0x42, 0xd3, 0xe7, 0xd6, 0xbf, 0xc5, 0xf2, 0xe1, 0x35,
	0xdd, 0x3a, 0x1f, 0x4e, 0xff, 0xff, 0xc1, 0xbc, 0xac, 0xaa, 0x91, 0xb5, 0x15, 0x3a, 0x3f, 0x4d,
	0xac, 0xb5, 0x36, 0x5e, 0xe7, 0x76, 0xd9, 0x75, 0x4e, 0x4f, 0xa9, 0x3a, 0x39, 0x77, 0x98, 0x30,
	0xdc, 0x22, 0xd4, 0xda, 0xde, 0x01, 0xfb, 0x86, 0x0d, 0x6d, 0xea, 0x69, 0x60, 0x35, 0x3e, 0x81,
	0xec, 0xcb, 0xf8, 0x04, 0x9e, 0xe2, 0x31, 0xc2, 0x30, 0xe8, 0xd3, 0x63, 0xac, 0x25, 0x66, 0xb4,
	0x4f, 0x8f, 0xb1, 0x96, 0xb8, 0x22, 0x7a, 0x10, 0xeb, 0x04, 0xce, 0x90, 0xc5, 0x00, 0x01, 0x1e,
	0xdf, 0x78, 0x0e, 0xf0, 0x3c, 0xbe, 0x31, 0x14, 0xd9, 0x8d, 0x87, 0x98, 0x2a, 0x6f, 0x31, 0xb0,
	0x08, 0x3c, 0x12, 0xa0, 0x20, 0x3c, 0x17, 0xf0, 0x9c, 0xa3, 0xd4, 0xb7, 0xa0, 0x83, 0xd3, 0x46,
	0xa4, 0x65, 0x8e, 0x1a, 0x56, 0x6f, 0x7d, 0x50, 0x1e, 0xc1, 0x87, 0x2c, 0x22, 0xaf, 0x46, 0xa0,
	0x7a, 0x2b, 0xfc, 0x65, 0x67, 0x85, 0x45, 0xa8, 0xb7, 0x02, 0x40, 0x67, 0xf4, 0x05, 0x0c, 0xf6,
	0xc5, 0x50, 0xea, 0x2b, 0xef, 0x6f, 0xaf, 0x6e, 0x44, 0x70, 0x56, 0x74, 0x03, 0x04, 0xd4, 0xb1,
	0x4e, 0x6a, 0x99, 0x4b, 0xd0, 0x51, 0x82, 0x14, 0x9e, 0x54, 0x84, 0x97, 0x11, 0x4f, 0xea, 0xcb,
	0xab, 0x62, 0x06, 0xf5, 0x71, 0x40, 0xf2, 0x17, 0x03, 0x82, 0xd4, 0x8c, 0x7e, 0x24, 0x87, 0x25,
	0x10, 0xf8, 0xb9, 0x00, 0xfe, 0xab, 0xb2, 0xe4, 0x9f, 0x7e, 0x05, 0xa3, 0xc7, 0x91, 0x77, 0x3a,
	0x68, 0x08, 0x07, 0xd9, 0x89, 0x8c, 0x80, 0x52, 0xcf, 0x05, 0x1a, 0xc4, 0x59, 0xce, 0x71, 0x1e,
	0x91, 0x06, 0x1b, 0x58, 0xcd, 0xa2, 0xba, 0x7d, 0x6c, 0x87, 0xfd, 0xe3, 0x0d, 0x24, 0xc4, 0xbd,
	0x80, 0x61, 0xd4, 0x73, 0xb5, 0xe0, 0x76, 0x30, 0x1f, 0xde, 0x32, 0x3e, 0xb7, 0x18, 0x45, 0x49,
	0x37, 0x0a, 0x1b, 0x75, 0x44, 0xd5, 0x5c, 0xfe, 0x04, 0x26, 0x04, 0xa9, 0xe2, 0xc1, 0x46, 0x97,
	0xc2, 0x91, 0x5c, 0x43, 0x1d, 0x26, 0x81, 0xea, 0xe0, 0xc3, 0x11, 0xa2, 0xf7, 0x7c, 0x12, 0x0f,
	0x3e, 0x8e, 0xf3, 0xbf, 0x17, 0x5d, 0x56, 0xf0, 0xfa, 0x1e, 0xa6, 0xc7, 0xde, 0x1b, 0x15, 0x91,
	0xe7, 0x85, 0xaa, 0x25, 0xb7, 0x29, 0x0a, 0x39, 0xb6, 0xac, 0x3c, 0xf4, 0x15, 0xd1, 0x4d, 0x6c,
	0x8e, 0xeb, 0x73, 0x2f, 0xed, 0x50, 0xd8, 0xff, 0x00, 0x5e, 0x7f, 0x57, 0x96, 0x41, 0x96, 0xc8,
	0xa0, 0x28, 0xbd, 0x97, 0x44, 0x2f, 0xcf, 0x6c, 0x82, 0x90, 0x5a, 0xa0, 0x1f, 0x9d, 0x35, 0x33,
	0xc0, 0x62, 0xfe, 0x3f, 0x6f, 0x71, 0xe7, 0x66, 0x98, 0x5f, 0x93, 0x1e, 0x20, 0xb1, 0x1a, 0xc9,
	0x04, 0xf9, 0xe9, 0x51, 0x41, 0x6b, 0x12, 0xf9, 0x42, 0x03, 0x33, 0x33, 0xa2, 0x8e, 0x63, 0x46,
	0x54, 0x31, 0x40, 0xea, 0xd6, 0x0d, 0x90, 0xae, 0x89, 0x39, 0x04, 0x89, 0x2b, 0x9c, 0x0f, 0x0c,
	0xdc, 0x64, 0x64, 0x34, 0xd3, 0x68, 0x64, 0xd4, 0xe0, 0x04, 0xed, 0x8b, 0xc5, 0x41, 0xd8, 0x27,
	0x9b, 0x84, 0x0d, 0x0c, 0x0f, 0xdf, 0x09, 0x1c, 0x9c, 0xff, 0x43, 0x6d, 0x16, 0xd8, 0x81, 0x3e,
	0x7e, 0x33, 0x3b, 0x24, 0x62, 0xfe, 0x9e, 0x98, 0xc3, 0x9c, 0x9c, 0x24, 0x43, 0x1e, 0xef, 0x4a,
	0x6c, 0x87, 0x2d, 0x30, 0x55, 0xc0, 0x9a, 0x51, 0x1e, 0x98, 0x18, 0xc6, 0x53, 0xd4, 0xc5, 0xf2,
	0xe0, 0x2a, 0x54, 0xd1, 0x14, 0x5a, 0x04, 0x26, 0x88, 0x1b, 0x90, 0x6f, 0x41, 0x2f, 0x40, 0x40,
	0x61, 0xe3, 0x42, 0x27, 0x1b, 0x9d, 0x0b, 0x10, 0xc0, 0x48, 0xd5, 0x5b, 0xa3, 0xa4, 0x8c, 0xc9,
	0x6b, 0x5c, 0x83, 0x74, 0xc9, 0x99, 0xd5, 0x0a, 0x57, 0xff, 0x8b, 0x78, 0x5d, 0xab, 0x0c, 0x84,
	0xf7, 0xb6, 0xe8, 0x26, 0xd9, 0xe1, 0xd8, 0x93, 0xa3, 0x79, 0xe0, 0x02, 0xa8, 0xa3, 0x93, 0x11,
	0xd3, 0x68, 0xdf, 0x2e, 0x8f, 0x57, 0x29, 0x27, 0x61, 0x2e, 0xc3, 0xe8, 0xcc, 0x26, 0xd2, 0x30,
	0x30, 0xd8, 0xcb, 0x8d, 0xf2, 0x87, 0xe1, 0x89, 0x34, 0x51, 0xdd, 0x11, 0x54, 0x93, 0x99, 0xca,
	0xd3, 0x52, 0xfd, 0x67, 0xd7, 0x5e, 0x07, 0x87, 0x91, 0x61, 0x65, 0xb4, 0x1d, 0x16, 0x85, 0xbe,
	0xad, 0x6b, 0x58, 0xb5, 0x3c, 0x0c, 0x8b, 0xe2, 0xfe, 0x68, 0xa0, 0x4d, 0x99, 0x09, 0x24, 0x21,
	0xd3, 0x4e, 0x19, 0x96, 0x3a, 0xc2, 0x8f, 0x81, 0x4d, 0x50, 0x46, 0x3d, 0x50, 0x04, 0xe9, 0xad,
	0x31, 0x67, 0xb7, 0x86, 0xab, 0x7b, 0x9f, 0x6f, 0xd2, 0xbd, 0xe7, 0x61, 0x92, 0x9c, 0xd1, 0x6d,
	0x0b, 0x63, 0xfd, 0x70, 0x94, 0x2a, 0x31, 0xc8, 0xd2, 0xe2, 0xc1, 0xc1, 0x01, 0x73, 0xb9, 0xe6,
	0x28, 0xff, 0x0e, 0xdc, 0x58, 0xef, 0xee, 0xdc, 0xda, 0xdc, 0x79, 0xb4, 0x37, 0x8c, 0xc2, 0x52,
	0xc2, 0x9e, 0x97, 0x5f, 0xf3, 0x5e, 0x14, 0x5d, 0xb5, 0x99, 0x69, 0x91, 0x8e, 0xdf, 0xf2, 0x50,
	0xca, 0xff, 0x87, 0x6d, 0x08, 0xf5, 0xa7, 0xb1, 0x3a, 0x56, 0x6c, 0xcb, 0xc6, 0x8a, 0x7d, 0x56,
	0xcc, 0x53, 0x10, 0x9a, 0x0d, 0x1d, 0xd8, 0xce, 0x22, 0xd4, 0xd3, 0xd5, 0x41, 0xe4, 0x38, 0xbd,
	0x5a, 0x04, 0x5a, 0xd9, 0x84, 0xf6, 0xec, 0x06, 0x2b, 0x1b, 0x84, 0x55, 0x4d, 0xfc, 0xbf, 0x97,
	0x27, 0x5a, 0x66, 0x62, 0x10, 0xd5, 0xcb, 0xe5, 0x4c, 0xfd, 0x72, 0x59, 0xbb, 0xe4, 0xcd, 0x36,
	0x5d, 0xf2, 0x9e, 0x17, 0x4b, 0x9b, 0x61, 0x51, 0xda, 0xdc, 0xd5, 0x74, 0x15, 0x74, 0x90, 0x60,
	0xd8, 0x6c, 0x13, 0xf1, 0xd3, 0x8c, 0x59, 0x8c, 0x1a, 0x15, 0x75, 0x07, 0xc0, 0x9b, 0xa0, 0xfa,
	0x5b, 0xb9, 0x1c, 0x7c, 0xb2, 0x7a, 0x39, 0xf0, 0xbf, 0x52, 0x89, 0x4f, 0xa8, 0x6d, 0x1c, 0x3f,
	0x4f, 0x74, 0xbd, 0xd5, 0x2c, 0x9b, 0x72, 0x62, 0x63, 0x21, 0x55, 0x57, 0x2f, 0xef, 0x43, 0xf0,
	0x47, 0xc5, 0xeb, 0xaa, 0xbf, 0xfe, 0xe7, 0x20, 0xe0, 0x10, 0x64, 0xc7, 0xeb, 0x1f, 0x85, 0x65,
	0x9e, 0x65, 0x03, 0xb0, 0x30, 0xce, 0xb2, 0x81, 0x31, 0x9c, 0x20, 0xc8, 0x7f, 0x1e, 0x18, 0x32,
	0x28, 0x1b, 0xab, 0x09, 0x56, 0x14, 0x23, 0x3b, 0x96, 0x29, 0x79, 0x38, 0x23, 0xe0, 0xff, 0x02,
	0x5a, 0x62, 0x40, 0xb1, 0xfb, 0xb2, 0x94, 0x61, 0x21, 0x03, 0x09, 0xb2, 0x9c, 0xbe, 0x35, 0xe7,
	0x81, 0xff, 0xde, 0x5b, 0x60, 0x44, 0x0c, 0x2f, 0x1d, 0xe7, 0x3e, 0xe8, 0xf4, 0x2c, 0x30, 0xc5,
	0xbd, 0x6f, 0x17, 0x5d, 0xd5, 0x07, 0x32, 0xf7, 0xf9, 0x44, 0x63, 0xb5, 0x18, 0xd6, 0x66, 0x4c,
	0x6b, 0xb1, 0x24, 0x03, 0xab, 0xf9, 0x40, 0xfd, 0x85, 0x7b, 0x89, 0x2c, 0xfa, 0x3a, 0xdf, 0x86,
	0xfa, 0xef, 0xff, 0xc7, 0x5d, 0x9b, 0xfe, 0xfa, 0x40, 0xe6, 0x64, 0x34, 0xf4, 0xaf, 0x9e, 0xb6,
	0x16, 0x0c, 0x6d, 0xb6, 0x42, 0x45, 0x5e, 0x75, 0x4a, 0x34, 0x0d, 0x7b, 0x6b, 0x62, 0x69, 0x88,
	0x2a, 0x51, 0x62, 0xed, 0x30, 0xcd, 0xf3, 0xf5, 0xba, 0x6d, 0x2d, 0x14, 0x7a, 0x44, 0xd6, 0x5f,
	0x6e, 0x25, 0x6f, 0x4b, 0x5c, 0x1a, 0xe6, 0x59, 0x5f, 0x16, 0x45, 0x9c, 0x1e, 0x52, 0x43, 0x63,
	0x72, 0x65, 0x6d, 0x9b, 0x72, 0xba, 0xad, 0x5a, 0x55, 0xd5, 0x5c, 0x2e, 0xfb, 0xd9, 0x89, 0xcc,
	0x6d, 0x73, 0x0b, 0xcd, 0xcd, 0x05, 0xa6, 0x9c, 0x69, 0xae, 0x5a, 0x55, 0xdd, 0xaf, 0x1f, 0x43,
	0x82, 0xf4, 0xa3, 0xb0, 0xd4, 0x69, 0xc8, 0x23, 0x92, 0xbb, 0x34, 0x3c, 0xd1, 0x69, 0x49, 0xf5,
	0x27, 0x93, 0x1c, 0x4c, 0x13, 0xc1, 0x4a, 0x78, 0x35, 0xcc, 0x78, 0xbe, 0x1b, 0x16, 0xc7, 0x36,
	0x40, 0x7f, 0x37, 0x70, 0x70, 0x15, 0x57, 0x4e, 0x0a, 0x25, 0xca, 0x5c, 0x39, 0xcd, 0xa9, 0x4c,
	0xae, 0xac, 0x78, 0x2a, 0x7f, 0xbb, 0x0e, 0xad, 0xd8, 0x6b, 0xd6, 0xb0, 0xbb, 0x01, 0x15, 0xfd,
	0x9f, 0x6e, 0xc1, 0x39, 0xea, 0x4e, 0x94, 0xb7, 0xca, 0x34, 0xf5, 0xad, 0x66, 0xb1, 0x63, 0x75,
	0x7f, 0xd4, 0x34, 0xf7, 0xde, 0xba, 0xd6, 0x9d, 0xa1, 0xab, 0xf6, 0x18, 0xa7, 0xa9, 0x86, 0xf1,
	0x0a, 0x78, 0x3d, 0xff, 0x87, 0x90, 0x87, 0xac, 0xad, 0x80, 0x6a, 0xfb, 0xad, 0x6f, 0xac, 0x7d,
	0xb5, 0x23, 0x62, 0xc6, 0xb5, 0x6b, 0xab, 0xc2, 0xa5, 0xa0, 0x8a, 0xf6, 0x5f, 0x84, 0x8e, 0xd4,
	0xd6, 0x8e, 0x9d, 0x88, 0x16, 0x9b, 0x08, 0x3f, 0x02, 0x71, 0xf2, 0x98, 0x61, 0x7a, 0x72, 0xbb,
	0x2b, 0xfb, 0x96, 0x0e, 0x7f, 0xcb, 0xaf, 0xb4, 0x69, 0x74, 0xf0, 0x2b, 0x15, 0xa7, 0x67, 0xd6,
	0x5c, 0x3d, 0xe8, 0x6f, 0x11, 0x6b, 0xfb, 0x75, 0x58, 0x85, 0x9c, 0xe7, 0xee, 0x8c, 0xe5, 0xb9,
	0xbb, 0x93, 0x78, 0xee, 0xde, 0x64, 0x9e, 0x7b, 0xe6, 0x7c, 0x9e, 0x7b, 0xb6, 0x99, 0xe7, 0x6e,
	0xb6, 0x42, 0x70, 0xf7, 0xc4, 0x7c, 0x6d, 0x4f, 0x78, 0xa2, 0xab, 0xae, 0x3c, 0x74, 0xb2, 0xc2,
	0x7f, 0x93, 0x5c, 0xc3, 0x04, 0xeb, 0xd3, 0xc9, 0x35, 0xc0, 0xce, 0xe3, 0xdf, 0x6f, 0x3b, 0xdb,
	0xd6, 0x44, 0xa7, 0xc3, 0x21, 0xac, 0x5c, 0x52, 0xde, 0x11, 0x33, 0x07, 0x49, 0x78, 0xb8, 0xa1,
	0xfd, 0x7e, 0xa7, 0x8a, 0xea, 0x4c, 0x55, 0xf4, 0xf8, 0x77, 0xec, 0xf8, 0x3b, 0x01, 0x91, 0xba,
	0xd5, 0x80, 0x48, 0x0d, 0x63, 0xd5, 0x3b, 0x67, 0xac, 0x66, 0xc6, 0x8f, 0xd5, 0xec, 0xd8, 0xb1,
	0x9a, 0x1b, 0x37, 0x56, 0xf3, 0xd5, 0xb1, 0xfa, 0xc1, 0x2e, 0x53, 0x0f, 0xea, 0x95, 0xfd, 0x87,
	0xfd, 0x7c, 0x34, 0x8a, 0x42, 0x88, 0xc6, 0x8d, 0x23, 0xc4, 0x30, 0x53, 0x1a, 0xc5, 0x34, 0x9c,
	0x9b, 0x73, 0xcd, 0xe7, 0xa6, 0x99, 0x8c, 0x79, 0x66, 0x5a, 0xeb, 0xbd, 0x2b, 0x44, 0x24, 0xc3,
	0xf2, 0x68, 0x2f, 0x8d, 0xcb, 0x82, 0x4e, 0xb9, 0xc9, 0x86, 0xe5, 0xac, 0x3c, 0xc5, 0x3e, 0x90,
	0xdb, 0xda, 0x83, 0x6c, 0xc1, 0xc4, 0x3e, 0x30, 0x38, 0x1b, 0x04, 0x7f, 0x71, 0x92, 0x9a, 0xf2,
	0x95, 0x5a, 0x10, 0x7c, 0x1b, 0xe8, 0x6d, 0xa9, 0x1a, 0xe8, 0xed, 0xaa, 0x98, 0xa1, 0xd5, 0x83,
	0x8a, 0x03, 0x82, 0xfc, 0x5f, 0x68, 0x8b, 0x4f, 0x29, 0xfe, 0x0a, 0xbd, 0x65, 0x2a, 0x0b, 0x01,
	0xb6, 0x4e, 0x8d, 0x41, 0x68, 0x7d, 0x23, 0x0c, 0xc2, 0x7b, 0x48, 0x9f, 0x20, 0x2a, 0x71, 0x7b,
	0x1c, 0x63, 0x50, 0x21, 0x7c, 0x81, 0xa9, 0x62, 0xe3, 0xb0, 0x6f, 0x58, 0x26, 0x71, 0xec, 0xf9,
	0xc0, 0x36, 0x7e, 0xc0, 0xaa, 0x35, 0x32, 0x29, 0xdd, 0x6f, 0x98, 0x49, 0xf1, 0x7f, 0xaa, 0x25,
	0xfc, 0xb1, 0x43, 0x07, 0x1f, 0x41, 0x72, 0x9e, 0x5e, 0xcc, 0x4e, 0xb5, 0x29, 0x3e, 0x1b, 0xcb,
	0x7b, 0x1f, 0x10, 0x49, 0x79, 0xb2, 0x31, 0xb3, 0x75, 0xfc, 0x9f, 0x69, 0x89, 0xe7, 0xc7, 0x76,
	0x90, 0x06, 0x09, 0xba, 0xf8, 0x96, 0xdb, 0xc5, 0xa9, 0x06, 0x96, 0x3a, 0xb9, 0x2e, 0x16, 0x58,
	0x0c, 0xed, 0x71, 0xb4, 0xb4, 0xa9, 0x01, 0x5e, 0xcf, 0x4f, 0x50, 0x3b, 0x92, 0x25, 0x89, 0xec,
	0x97, 0x3a, 0xda, 0x9f, 0x95, 0x95, 0xef, 0x8f, 0xe2, 0x24, 0x8a, 0xd3, 0x43, 0x6b, 0xaf, 0x6e,
	0x31, 0xde, 0xcb, 0xa2, 0xdb, 0x0f, 0x8b, 0x23, 0x7a, 0x77, 0x6d, 0x27, 0xae, 0x86, 0xc5, 0x91,
	0xd9, 0x89, 0x50, 0xd2, 0xff, 0x0e, 0x0c, 0xc6, 0xe5, 0xbe, 0xad, 0xf0, 0x56, 0x21, 0x8d, 0x04,
	0x02, 0xe3, 0x5c, 0xcc, 0x1a, 0xbb, 0x18, 0xd8, 0x7a, 0xfe, 0x3d, 0xb4, 0xc9, 0xce, 0xf2, 0x92,
	0xcc, 0xf5, 0x3f, 0x92, 0x67, 0xfa, 0xdc, 0xf9, 0x48, 0xc2, 0xd9, 0x6f, 0x15, 0x36, 0xdd, 0x00,
	0x01, 0x93, 0x2d, 0xb0, 0x63, 0xb3, 0x05, 0xfa, 0x3b, 0xd0, 0x92, 0xb6, 0x90, 0x7c, 0x4d, 0xcc,
	0x6f, 0x85, 0x43, 0xd5, 0x2e, 0x10, 0xe5, 0x66, 0x93, 0x4b, 0x7c, 0x6b, 0x60, 0x4b, 0x92, 0xdb,
	0x53, 0x5b, 0xbb, 0x3d, 0xad, 0xf4, 0xee, 0x75, 0xbe, 0xde, 0xfa, 0xd7, 0xf6, 0x67, 0xa0, 0xe6,
	0x2b, 0xff, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0x95, 0x5c, 0x5e, 0x9e, 0x66, 0x01, 0x00,
}
